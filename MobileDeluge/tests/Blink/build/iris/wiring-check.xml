<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="61:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x405d3ec0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404be2c8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404be2c8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404bfa28"/></to>
    </wire>
    <wire loc="62:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x405c1c08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405d2df0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x405d2df0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405f7010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405d3298"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404b84d8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404b84d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405d1bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4198ce00"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411e9c70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x418cba80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41803040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417ddd40"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fd7558"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41703070"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40ce9b18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4168a728"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b45570"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4163d708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4160bcb8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4087e8b0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405f4890"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x404bfdc0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4042a528"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4042a528"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x404993f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x405b7400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40d78030"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x405b7400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40ce94b8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x405b7400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404c0800"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404c0800"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404c5d58"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405b7808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404ca9c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412c3010"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404ca9c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41087dc8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404ca9c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e79a78"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x404ca268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x405a4010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x404c8620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405a5bf8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x404c8218"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405e5f28"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x404c8218"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404c4628"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404c4628"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404ce598"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404c49f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404ca9c8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x404d2ad0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x404d7dc8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x404d7dc8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40521170"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404cb588"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404c49f8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404f5210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x405750b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x404e7750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4053c090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4053c090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413fd010"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404eace8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40548d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40548d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4144e228"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404efea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4054b7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4054b7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414a6c08"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x404fc750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4057f880"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404d52f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405294f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405294f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4138a0b0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x404f0a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4054c4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4054c4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414a97f8"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404de750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405253d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405253d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413a4de8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x404e2ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4052f170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4052f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413eed70"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404e4670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4053ad68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4053ad68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4143d010"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x404f2c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40546ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40546ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414490b0"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x404cdf20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40523410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40523410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41393d70"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404dc670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4052d030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4052d030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4139cc08"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x404e0ce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40538e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40538e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413e9c08"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404ec4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40542ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40542ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41438010"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404f7ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405494f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405494f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414a1a88"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404f32f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40584880"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x404eb8e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4053ea80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4053ea80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41452de0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40521170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4138ec08"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x404da590"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4052cc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4052cc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41396a88"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x404f5e08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4057e880"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x404e3a08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40531dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40531dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413f1938"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404e5210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4053c9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4053c9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413fc9e8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404e9750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40547790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40547790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4144dc08"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404ee8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4054a170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4054a170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414a46c0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x404d5ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40529e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40529e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41389a88"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404dd210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40525d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40525d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4139f7f8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x404e18e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4052fac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4052fac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413ec7f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404ed0a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40539790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40539790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4143c9e8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x404f1670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405444f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405444f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41448a88"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x404d8930"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40523d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40523d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413917f8"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404db0a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4052d988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4052d988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413996c0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x404df750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405377d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405377d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413e76c0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x404f6750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40549e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40549e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4149f538"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x404e8c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4053d6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4053d6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413ff538"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404ea2f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40548410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40548410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414507f8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404ef4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4054ce48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4054ce48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414a7228"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x404f3ce8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x405810b0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x404d6830"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40521ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40521ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4138c6c0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404e3010"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4052b6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4052b6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413d8538"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404f00a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4054db00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4054db00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41467de8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x404e24b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40530790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40530790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413ef3b0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x404e5c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4053a410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4053a410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4143f538"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404f2210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40546170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40546170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4144b6c0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404f72f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4054aac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4054aac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414a20b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404cd528"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40524a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40524a28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413943b0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x404ddc08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4052e6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4052e6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4139d228"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x404e02f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405384f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405384f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413ea228"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x404eda98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40542170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40542170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4143a538"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x404f4830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4057b0b0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404ecea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4053e128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4053e128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41453418"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x404e8210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40536170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40536170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413e50b0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x404d73d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40522790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40522790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4138f228"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404dbb18"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4052c330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4052c330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413970b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40499c28"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x404988a8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40488470"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x404adf10"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4065daf8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405e5f28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405d1890"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x405ce940"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x405e6110"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x405e6110"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x404d8930"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x405db3c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x405e6b18"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x405e6b18"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x404cdf20"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x405dbda8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x405e55a0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x405e55a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x404cd528"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405f1100"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x405f1100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406bb210"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405f4890"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405fa7f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x405fb0d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406f1bc8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405fa7f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4069b088"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x406d85a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40696270"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406af5b8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x406051c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x406051c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4069b4c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406e5588"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40609dc8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40609dc8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4069af28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x4069af28"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41508738"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x4069b088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4150b888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4069b4c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4150bcc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x415078f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4065c340"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4065c340"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40662190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41504b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4065a600"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4065a600"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4065f510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x41503580"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40659138"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40659138"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4065e078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x41501010"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40657c60"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40657c60"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4066c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x406ad010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x406e8798"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4079b6f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404b84d8"/></to>
    </wire>
    <wire loc="21:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><function-ref name="stop" scoped="" ref="0x40768138"/></from>
      <to><function-ref name="stop" scoped="" ref="0x411fb390"/></to>
    </wire>
    <wire loc="22:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40703528"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404be2c8"/></to>
    </wire>
    <wire loc="23:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40703870"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404b84d8"/></to>
    </wire>
    <wire loc="26:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x40703100"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x411b2e70"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x411b2e70"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4112a478"/></to>
    </wire>
    <wire loc="30:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="ChangeChannel" scoped="" ref="0x406ff8b8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40904be8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40904be8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4090c8d0"/></to>
    </wire>
    <wire loc="38:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4076c830"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40909b38"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40909b38"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4090db38"/></to>
    </wire>
    <wire loc="40:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4076a920"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40bc1948"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40bc1948"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40bbe5d0"/></to>
    </wire>
    <wire loc="45:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="InitDelayTimer" scoped="" ref="0x4074a698"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x412748b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x412748b8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405f7010"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="ResetTimer" scoped="" ref="0x40763aa8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41270688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41270688"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405f7010"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="RetxTimer" scoped="" ref="0x40760ea8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4126c9a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4126c9a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405f7010"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40741520"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41269bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x41269bd8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408f5010"/>
      <arguments>
        <value cst="I:153">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="ReplySend" scoped="" ref="0x40750b00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x412a6428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x412a6428"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4195ce50"/></to>
    </wire>
    <wire loc="56:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="ReplyPacket" scoped="" ref="0x4074bef0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x412a6ac0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x412a6ac0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41959510"/></to>
    </wire>
    <wire loc="57:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="ReplyAck" scoped="" ref="0x4075bb98"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409095b0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409095b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4090d5b0"/></to>
    </wire>
    <wire loc="59:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40764880"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090e880"/></to>
    </wire>
    <wire loc="66:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="Voltage" scoped="" ref="0x407673d8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x412a1778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x412a1778"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41994168"/></to>
    </wire>
    <wire loc="71:../../Reprogrammer/ReprogrammerNodeC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40779908"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40a2d428"/></to>
    </wire>
    <wire loc="96:../../Reprogrammer/ReprogrammerNodeP.nc">
      <from><interface-ref name="sendReplyMessage" scoped="" ref="0x40776010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x407bee70"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f1c250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40f1c250"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f453c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x407bee70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x410f4e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x410f4e30"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f453c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x407bee70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x410ee9d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x410ee9d8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f453c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x407cd480"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410eb958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410eb958"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f45dd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x407cd480"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410e56a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410e56a0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f45dd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x407cd480"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410e3330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410e3330"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f45dd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407cdc28"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4079b6f0"/></to>
    </wire>
    <wire loc="78:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x411b0e38"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404be2c8"/></to>
    </wire>
    <wire loc="79:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x412001c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4079b6f0"/></to>
    </wire>
    <wire loc="81:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x411ff010"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x41117d98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x41117d98"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x4187c030"/></to>
    </wire>
    <wire loc="83:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationStdControl" scoped="" ref="0x411ffef0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x411b2e70"/></to>
    </wire>
    <wire loc="84:../../Deluge/DelugeC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x411fe390"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x407b4230"/></to>
    </wire>
    <wire loc="55:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x407b4230"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x407c72d8"/></to>
    </wire>
    <wire loc="85:../../Deluge/DelugeC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x411fd0b8"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x411e4a10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x411e4a10"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x411e9848"/></to>
    </wire>
    <wire loc="86:../../Deluge/DelugeC.nc">
      <from><interface-ref name="RadioSplitControl" scoped="" ref="0x411fea98"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408f3d30"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408f3d30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40912010"/></to>
    </wire>
    <wire loc="87:../../Deluge/DelugeC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x411fd838"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x40f413d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x40f413d0"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x40f40ae8"/></to>
    </wire>
    <wire loc="88:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x411faeb8"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x4125b9c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x4125b9c8"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x41219480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../Deluge/DelugeC.nc">
      <from><function-ref name="storageReady" scoped="" ref="0x41219b08"/></from>
      <to><function-ref name="storageReady" scoped="" ref="0x411fb010"/></to>
    </wire>
    <wire loc="90:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x411f71c0"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4127aa48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4127aa48"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41255ba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x411f7610"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41257818"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41257818"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40819950"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x407bee70"/></to>
    </wire>
    <wire loc="57:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40818370"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x407cd480"/></to>
    </wire>
    <wire loc="58:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x407d3b38"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x407cbcd8"/></to>
    </wire>
    <wire loc="58:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x407cbcd8"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x40814848"/></to>
    </wire>
    <wire loc="59:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x407cf150"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x4089d898"/></to>
    </wire>
    <wire loc="68:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendAdvMsg" scoped="" ref="0x407cf610"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408b0ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x408b0ed8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41558448"/></to>
    </wire>
    <wire loc="69:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x407cfd98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f032c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f032c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408f5010"/>
      <arguments>
        <value cst="I:80">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x40817b58"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40eff778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40eff778"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4176a698"/></to>
    </wire>
    <wire loc="71:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40817010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f2d748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f2d748"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408f5010"/>
      <arguments>
        <value cst="I:81">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x408173f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f2bc30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f2bc30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x417972f0"/></to>
    </wire>
    <wire loc="73:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40818be0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f28ba0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f28ba0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408f5010"/>
      <arguments>
        <value cst="I:82">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40816288"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f2a9a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f2a9a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41796040"/></to>
    </wire>
    <wire loc="75:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40815518"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407cdc28"/></to>
    </wire>
    <wire loc="77:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x407d24c8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x407cd480"/></to>
    </wire>
    <wire loc="80:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x407c45a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4087cc40"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4087cc40"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4087a6e0"/></to>
    </wire>
    <wire loc="81:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407c4b00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f24a38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f24a38"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405f7010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:../../Deluge/ObjectTransferP.nc">
      <from><interface-ref name="signalObjRecvDone" scoped="" ref="0x407de7b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x408101c0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40819950"/></to>
    </wire>
    <wire loc="60:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40810bd0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40818370"/></to>
    </wire>
    <wire loc="62:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x408244e8"/></from>
      <to><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40818be0"/></to>
    </wire>
    <wire loc="63:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x408248f0"/></from>
      <to><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40817010"/></to>
    </wire>
    <wire loc="64:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x40824cd8"/></from>
      <to><interface-ref name="SendDataMsg" scoped="" ref="0x408173f8"/></to>
    </wire>
    <wire loc="65:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x408204b8"/></from>
      <to><interface-ref name="SendReqMsg" scoped="" ref="0x40817b58"/></to>
    </wire>
    <wire loc="67:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40820ba8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40816288"/></to>
    </wire>
    <wire loc="68:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4081f930"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40815010"/></to>
    </wire>
    <wire loc="71:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4081b260"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4087cc40"/></to>
    </wire>
    <wire loc="72:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4081d010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40880ad8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40880ad8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405f7010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BitVecUtils" scoped="" ref="0x40821930"/></from>
      <to><interface-ref name="BitVecUtils" scoped="" ref="0x408815b8"/></to>
    </wire>
    <wire loc="75:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4081b688"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40815518"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x4087c380"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x4087edd0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4087f010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4087e8b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41558448"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4154ec18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x408af580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41558ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41558ae0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x415516a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x408afc18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41557230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41557230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41551d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f06870"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41557e28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41557e28"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4154f950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x415516a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41551d40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4154f950"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409095b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x4154d360"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41551010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41551010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415460c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x4154da18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40909b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4154c010"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40bc1948"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4090b190"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090e190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41546790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408bf4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41546e28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408bf4c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408fd3d8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408fdb48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408f6630"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408f6630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x409128e8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408fc230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408fce08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x408fb510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x408fb948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40912010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40932f20"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x4090add0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40910010"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40910010"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4092cf08"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4090e190"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x4092add0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x409128e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4092e810"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408f56a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40911960"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40911960"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4092c890"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4090db38"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4093cb38"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408f5010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409112c8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409112c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4092c1f8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4090d5b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4093c5b0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x409044d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4090c1b8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4090c1b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x409391b8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4090e880"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4092a0b8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4090c8d0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x409398d0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x408ff7c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4091d8f0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4091d8f0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40948ac8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409011a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409192e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409192e8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409455b0"/></to>
    </wire>
    <wire loc="215:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40932f20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40bdbbd0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40920798"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x4094a798"/></to>
    </wire>
    <wire loc="305:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x4094a798"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40cd1510"/></to>
    </wire>
    <wire loc="270:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409455b0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c8a428"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x4092cf08"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40a3d108"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x4092add0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a3fa80"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4092e810"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40a3e1e8"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4092c890"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40a3ed08"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x409213e8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x4094c3e8"/></to>
    </wire>
    <wire loc="303:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4094c3e8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40cd3190"/></to>
    </wire>
    <wire loc="216:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4093cb38"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40bcf230"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4092c1f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a3e928"/></to>
    </wire>
    <wire loc="269:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40948ac8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40cabbd0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4091bd40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40949ee0"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40949ee0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ccc508"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40925010"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4094d010"/></to>
    </wire>
    <wire loc="304:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4094d010"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40ccfd60"/></to>
    </wire>
    <wire loc="248:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4093c5b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c47e00"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40910710"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x4092b618"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x4092b618"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40a3d4e8"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x409391b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40b6ec80"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4092a0b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a41e90"/></to>
    </wire>
    <wire loc="224:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x409398d0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40beedf8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4091b848"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409499e8"/></to>
    </wire>
    <wire loc="306:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409499e8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ccc010"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40910df0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x4092bcf8"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x4092bcf8"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40a3d8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40bdbbd0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41678b40"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40cd1510"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40ce4240"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x40928288"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40a90808"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x4093ac00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a498c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a498c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41607010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40a3d108"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x41595868"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40a3e1e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41596960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Snoop" scoped="" ref="0x40a3ed08"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x415954a8"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x409331f8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40b244f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40b244f0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x4161b6b0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40933d58"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a916d8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40cd3190"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40ce7ec0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40bcf230"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x41672150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40a3fa80"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41596230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40a3e928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x415950c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40cabbd0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x416df8f8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ccc508"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d7db48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40ccfd60"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40ce1aa0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x4093d690"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40a91d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40a3d4e8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x41595c48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketLink" scoped="" ref="0x40b6ec80"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40b66190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40beedf8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x41689328"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40a41e90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x415975f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c8a428"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x416e0108"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x4093de20"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40a904f0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ccc010"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ce0d10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40a3d8c8"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x41594068"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40985c00"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40b26a58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40b26a58"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x41622bc0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40980220"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x409b4010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x4097ce68"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40cabbd0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x4097c420"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40cd47d0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40cd47d0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40ce7520"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x409b48c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40cca010"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40cca010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40d7e030"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a3cc40"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4095f428"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a3c410"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40a37948"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a3c908"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x40ad1b78"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a3dc40"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x40ad1eb0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a36370"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a498c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a37e70"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x40ad1680"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40a90b50"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40b26a58"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a94d68"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40aae668"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ab3330"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40aaeb60"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a945d0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40aaee98"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ad06b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b1f8a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40b1f8a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41640d90"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ad0ba8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b6e968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40b6e968"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b67170"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40ad0ee0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40b24f08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40b24f08"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4161a150"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40b236e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40b683f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40b683f0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40b674a8"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b4eb90"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x4095a010"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b4e280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b6e470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40b6e470"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b68bb8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b67c20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c47e00"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b68bb8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bd0250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40bd0250"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41673170"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b67170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bd0748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40bd0748"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41673668"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40b674a8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40bd0a60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40bd0a60"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41673980"/></to>
    </wire>
    <wire loc="202:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40bcee00"/></from>
      <to><interface-ref name="LowPowerListeningConfig" scoped="" ref="0x4095ded0"/></to>
    </wire>
    <wire loc="206:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bcd310"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c47e00"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40bcf838"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40bee010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40bee010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4168a150"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bcfe10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bee5e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40bee5e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4168aa60"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bce330"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40beeae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40beeae0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41689010"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40bce668"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40ca8270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40ca8270"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x416dc010"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40c23ab8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40c20898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40c20898"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x416b91e8"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40c22010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b1fd78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40b1fd78"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4163d310"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40c23340"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40cb7be0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40cb7be0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40cb3a80"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b4e778"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40c20d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40c20d70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x416b96c0"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40c4a250"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40968e28"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c1f280"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40c47530"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c1f778"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40c47a08"/></to>
    </wire>
    <wire loc="240:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40c1fb70"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x409b4010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x40c54c88"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40ca4718"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40c46c50"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x409b4010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40c54330"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x409538d8"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c46360"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40c6c7e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40c6c7e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c686a0"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c46858"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40c6ccc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40c6ccc0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c68b98"/></to>
    </wire>
    <wire loc="259:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40c67bc0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x4095e3a0"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c686a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40cb63f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40cb63f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40cdb330"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c68b98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40cb68c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40cb68c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40cdb828"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40c67010"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40cd4368"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40cd4368"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40ce70b8"/></to>
    </wire>
    <wire loc="267:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ca8ac8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ccc508"/></to>
    </wire>
    <wire loc="268:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40ca7358"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40ca4ce0"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40ca7af0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40ca4718"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40ca3520"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40cd47d0"/></to>
    </wire>
    <wire loc="286:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40cda828"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x4095e3a0"/></to>
    </wire>
    <wire loc="287:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40cdb330"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40cd59b0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40cd59b0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40ce86c0"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40cdb828"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40cd5f08"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40cd5f08"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40ce8c18"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40cb3a80"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40cd51d8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40cd51d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40ce9e98"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40cc9ac8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x40958518"/></to>
    </wire>
    <wire loc="302:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40cc8480"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40cabbd0"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40cc7ca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40ca4718"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40cef3f0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40ca4718"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40cefab0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40ca4718"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40cee0e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x409b4010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409b4010"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x415a7250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x415a7a48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x409b48c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tasklet" scoped="" ref="0x415a4498"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x409d6a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x415e9ca0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40a2d428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x415943e0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a3dc40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x41594b78"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a3c410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x415e9090"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a3c908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x415e93c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a3cc40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40a93030"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41607750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a93438"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41607b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41606030"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40a938e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41606458"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41609010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41606a50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4161a8f8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40a2d428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x4161aed0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40b236e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Neighborhood" scoped="" ref="0x4163c9c0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40b48980"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40b48980"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40b45908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4163a070"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x416394c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x416394c0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b42348"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x4163da70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b4e280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x4163c010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b4e778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x4163c408"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40b4eb90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40b66868"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b67c20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubControl" scoped="" ref="0x41672758"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40bcf838"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x41672d30"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bcfe10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x41671250"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bce330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x41671588"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40bce668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x41670250"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40bcee00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41671d00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bcd310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x416707b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4166ab88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4166ab88"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405f7010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4166d9f0"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40bc1948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x4166c040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bbdb80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="transition" scoped="" ref="0x4166cc58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x41689830"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40c23340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tasklet" scoped="" ref="0x41688010"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x409d6a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x416885c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40c23ab8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x41688aa0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40c22010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="sendTask" scoped="" ref="0x41687320"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x41687758"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="deliverTask" scoped="" ref="0x41688ed8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x416b9b08"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c1f280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x416b8ed8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40c4a250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x416b8030"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c1f778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x416b8428"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40c1fb70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x416b8ac0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4087cc40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x416b64e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c762b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40c69060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40c6b150"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40c67010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40c6c070"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40c69e68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c6b548"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40c67428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40c6bce0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40c67bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x40c76d40"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40c69b30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x40c76868"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40c69638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x416da030"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40ca7358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x416dce40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ca8ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x416db798"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40cac0d0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40cac0d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x405fb0d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x416dc7d8"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x40ca7af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40cb8df0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40cb4c50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40cb6cc0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40cdbc40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40cb4150"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40cda090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40cb48e8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40cda828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x40cb78c8"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40cb3748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x40cb73f0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40cb3250"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40d7e030"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e82e38"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40cd08e8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40ce3628"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d7db48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40eb0770"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40cff448"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40cc9ac8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40cffc18"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40cc7ca0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40cfd310"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40cef3f0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40cfd9d0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40cefab0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40cfc1f8"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40cc8480"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40d02ac8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d7db48"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40cf9010"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40cee0e0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40cde140"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40d84b28"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40d84b28"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404de750"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40cdebe0"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40d815b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40d815b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d8dc50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40d032b8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40d81cc0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40d81cc0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40d94e48"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40d03930"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40d803d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40d803d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x404e3010"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40cdc3c0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40d80db8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40d80db8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x404d52f0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40d004d0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40d7f820"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40d7f820"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40d7b978"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40cfb9c8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x409d6a50"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40d02010"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40ee3450"/></to>
    </wire>
    <wire loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x40d4fae8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40e82e38"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4173f678"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40d94e48"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40d8b520"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40eb0770"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40eb6440"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40d76420"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x404eda98"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40d76e20"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x404e4670"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40d73660"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40e1af08"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40e1af08"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40e106c8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40d8d500"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40d8bb38"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40d94aa0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40d8b198"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40d7ad90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d92d78"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d8dc50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d8a2a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40d88100"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40dfd198"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40dfd198"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x417023d8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40d88808"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40dfdce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40dfdce0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41702f20"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40da53d0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40dd1070"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40dd1070"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40dcd3a8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40d88c88"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x404ad148"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40dbd420"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40df6a60"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x404ad148"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40dcb218"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404de750"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40dcbbf0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x404dd210"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40dca660"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x404ddc08"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40df6060"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x404dc670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40dfd8d8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41702b18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x417013f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40dfc208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41701820"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x417033a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41701e18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40e1a218"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40e11920"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40df8828"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e14640"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e19120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40e0e6c8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e19120"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40e39340"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e19120"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40e38f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x4173c0a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40df8828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x4173a308"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40e19120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e79e60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40df8828"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40eb6dd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ec9320"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40ec85f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ead860"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ead860"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ea7030"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ea6208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40df8828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f035d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f03c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4176a698"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41760e88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40effe10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4176ad30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4176ad30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41763898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f2f4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x417693f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x417693f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41762010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f2e170"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41768010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41768010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41762c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41763898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41762010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41762c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409095b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x4175f580"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41763200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41763200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41758420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x4175fc38"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40909b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4175e230"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40bc1948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41758ae8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408bf4c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41757230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f2da60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f2c150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x417972f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4178d710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f2a310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41797988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41797988"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4178f230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41796040"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4178f8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f295d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41796c38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41796c38"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4178e4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4178f230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4178f8c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4178e4f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409095b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x4178ddf8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41793af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41793af8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41788b78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x4178c4f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40909b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4178caa8"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40bc1948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41785260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408bf4c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x417858f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f28eb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f27580"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40f1c8e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x417c4948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x417c4948"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x417c6df0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40f453c8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f42aa8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40f45dd0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f402c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f71e88"/></from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40f40ef8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f6ded8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40f6ded8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f67920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40f40ef8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x410cab38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x410cab38"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f67920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40f40ef8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x410c77f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x410c77f8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f67920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40f40ef8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x410c54d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x410c54d0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f67920"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40f71668"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f6d760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40f6d760"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f6ade0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40f71668"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410ca3c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410ca3c0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f6ade0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40f71668"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410c7080"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410c7080"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f6ade0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40f71668"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410c6d10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410c6d10"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f6ade0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40f70298"/></from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40f68ac0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40f97298"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40f68ac0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40f979f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fd9b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:/opt/tinyos-2.1.2/tos/chips/at45db/WireBlockStorageP.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x40f8ddd8"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x40fdc680"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x40fdc680"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x40fd78b0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fd3250"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410d4470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410d4470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x417d9dd8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40fd9b50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41094908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41094908"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x417d9290"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40fd3958"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x410d4b08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x410d4b08"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x417d84d0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x40ff9c30"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x4104c460"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x4104c460"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x4104a118"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40fcf1f8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40ee3450"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskSuccess" scoped="" ref="0x40feddc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskFail" scoped="" ref="0x40fece10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41054500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4108a450"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4108a450"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410a1010"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x41054bb8"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x4108aba8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x4108aba8"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x41084210"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x41054ed0"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x41087010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x41087010"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x410845b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Select" scoped="" ref="0x41084d48"/></from>
      <to><interface-ref name="PortA3" scoped="" ref="0x404d73d0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Clk" scoped="" ref="0x41083738"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x404ed0a0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="In" scoped="" ref="0x41082bc0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x404e5210"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Out" scoped="" ref="0x410821f0"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x404e5c08"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x410817c0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40ee3450"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <from><interface-ref name="avail" scoped="" ref="0x4106f298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="granted" scoped="" ref="0x410a1b00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x410d4068"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x417d99d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x417d8990"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x410d3010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x417d8db8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x417db090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x417d6030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40f97298"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40f68ac0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40f979f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fd9b50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40f97298"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40f68ac0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40f979f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fd9b50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40f97298"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40f68ac0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40f979f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fd9b50"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x410f6d40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f24e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410f24e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41802370"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x410f3460"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x410f1070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x410f1070"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41802eb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x410f2c28"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41802ab0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x418013a8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x410f1520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x418017d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41803378"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41801dc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410ef510"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41841e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41841e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41841320"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410ed150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4183b358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4183b358"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x4183c828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410ea150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41836820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41836820"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41837c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410e5e18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41830d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41830d30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41830220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410e3aa8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4182a270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4182a270"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x4182b748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x41157bd8"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x4187ce50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x4112ac50"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x4187a810"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x41126af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4187db60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x41126020"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41159b78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41879010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404b84d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="changedTask" scoped="" ref="0x41879c28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4112a478"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41125680"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x41125e58"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x4112ac50"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x41120968"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41126020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x4111f498"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x41126af0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4111f8d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41121330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41121330"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4186aad8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4111e010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41163798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x41163798"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408f5010"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x4111e3f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x411601f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x411601f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41898600"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x4111eb78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4115d6c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x4115d6c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408f5010"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4111eec0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bbdb80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4186aad8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4185c230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x411219c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41866230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41866230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41860cb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41165078"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x418668c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x418668c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4185f3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41165c70"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x418654f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x418654f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4185e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41860cb0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4185f3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4185e010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409095b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x4185c918"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41860618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41860618"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41855690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x4185b010"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40909b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4185b5c8"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40bc1948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41855d58"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408bf4c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x418544d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41163ab0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41162158"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41898600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4188ee88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41160890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41898c98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41898c98"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41891898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41160f28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x418973f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x418973f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4188f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4115fb30"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41896010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41896010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4188fc08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41891898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4188f010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4188fc08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409095b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x4188d580"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41891200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41891200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41886420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x4188dc38"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40909b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4188c230"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40bc1948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41886ae8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408bf4c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41885230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4115d9d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4115c150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x41159b78"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x411b5bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x411b5bb8"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x418cbe30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x418ca5d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x418c3508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x418c3508"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405f7010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x418c6aa8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4087cc40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Changed" scoped="" ref="0x418c6170"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x418bed30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pending" scoped="" ref="0x418c77b8"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x418bf520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x418c6ea0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404b84d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="timerTask" scoped="" ref="0x418c5b00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="IFlash" scoped="" ref="0x411cd0c0"/></from>
      <to><interface-ref name="InternalFlash" scoped="" ref="0x411d3788"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x411cd4d8"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x4089d898"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x411cd900"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404b84d8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><function-ref name="setAmAddress" scoped="" ref="0x411cc9b8"/></from>
      <to><function-ref name="setAmAddress" scoped="" ref="0x40a2b270"/></to>
    </wire>
    <wire loc="97:../../Deluge/DelugeP.nc">
      <from><interface-ref name="taskRequest" scoped="" ref="0x411f2010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x412013b8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405f7010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x41219480"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x412132f0"/></to>
    </wire>
    <wire loc="49:../../Deluge/DelugeMetadataC.nc">
      <from><function-ref name="storageReady" scoped="" ref="0x41211908"/></from>
      <to><function-ref name="storageReady" scoped="" ref="0x41219b08"/></to>
    </wire>
    <wire loc="50:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x41213748"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404be2c8"/></to>
    </wire>
    <wire loc="57:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x41213de0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41217bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41217bd8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f453c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x41213de0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x4122d7f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x4122d7f8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f453c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x41213de0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x4122a360"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x4122a360"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f453c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x41213de0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41267010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41267010"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f453c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41212858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41265b30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41265b30"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f45dd0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41212858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x412637f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x412637f8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f45dd0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41212858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41261520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41261520"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f45dd0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41212858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x4125f250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4125f250"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f45dd0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41216310"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x418e0358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x418e0358"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x418e1828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4122de90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x418db820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x418db820"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x418dcc68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4122a9f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4192fcf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4192fcf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x4192f1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x412676a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x419291b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x419291b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x4192a690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41264310"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x419236d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x419236d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41925ab8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41262010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4191ebf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4191ebf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x4191e0e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41261c98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x419181b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x419181b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41919690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4125f9c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x419126d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x419126d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41914ba0"/></to>
    </wire>
    <wire loc="46:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41255ba8"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41252948"/></to>
    </wire>
    <wire loc="52:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4124f120"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41251448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41251448"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f45dd0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4124f120"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x412801f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x412801f8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f45dd0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4124f120"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x4127fe68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4127fe68"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f45dd0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4124fc10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41251bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41251bc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41909cf8"/></to>
    </wire>
    <wire loc="57:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4124fc10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41280970"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41280970"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4196f168"/></to>
    </wire>
    <wire loc="58:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4124fc10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x4127d5f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4127d5f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41969538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41909cf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x419091e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4196f168"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41970640"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41969538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410f6d40"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x4196aa08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41269ef0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x412685a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4195ce50"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4194f478"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41959510"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41954ee0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x412a5230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41959ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41959ba8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x419515a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x412a5e28"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41958870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41958870"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41950250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41954ee0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x419515a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41950250"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409095b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x4194fb60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41954848"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41954848"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4194a8d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x4194e250"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40909b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4194e808"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40bc1948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41946010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408bf4c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x419466a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x41994168"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41296260"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41994cf0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4136ac80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x412946c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41994cf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41294f00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41293eb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4128c2d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41993230"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x41296260"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x413119d8"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x41291678"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x4130e178"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4132b390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41294f00"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4130d6b0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x412946c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x41339710"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x413101b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4130ede8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x41289908"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x41289908"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x412c3850"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x4130dd98"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40ee3450"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x412c6ac8"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x412c3dd8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41293eb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41326600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41326600"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x419882e8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41325ca0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4128c2d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x412b9818"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x412c59f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x412c59f8"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x412db728"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x412c1ce8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404ca268"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x413239f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x412c33c0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41322150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41325158"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41325158"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41988e30"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x412d8b40"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x404ad148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x41326d40"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41988a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x413257f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41987510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x419879d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41325ca0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41987df8"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x41989170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41985030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x419c79b8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x413239f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x419c7db0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x41323de8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x419c6150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41322150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x419c67e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x413227e8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x413459b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkC" loc="52:BlinkC.nc">
      <documentation loc="41:BlinkC.nc">
        <short>&#10; Implementation for Blink application.</short>
        <long>&#10; Implementation for Blink application.  Toggle the red LED when a&#10; Timer fires.&#10;&#10; @author tinyos-help@millennium.berkeley.edu&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4060b940"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ReprogrammerNodeP" loc="22:../../Reprogrammer/ReprogrammerNodeP.nc">
      <module/>
    </component>
    <component qname="DelugeC" loc="40:../../Deluge/DelugeC.nc">
      <configuration/>
    </component>
    <component qname="ObjectTransferC" loc="40:../../Deluge/ObjectTransferC.nc">
      <configuration/>
    </component>
    <component qname="ObjectTransferP" loc="45:../../Deluge/ObjectTransferP.nc">
      <module/>
    </component>
    <component qname="DelugePageTransferC" loc="37:../../Deluge/DelugePageTransferC.nc">
      <documentation loc="32:../../Deluge/DelugePageTransferC.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugePageTransferP" loc="45:../../Deluge/DelugePageTransferP.nc">
      <documentation loc="33:../../Deluge/BitVecUtils.h">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BitVecUtilsC" loc="41:../../Deluge/BitVecUtilsC.nc">
      <documentation loc="33:../../Deluge/BitVecUtils.h">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugePageTransferC.Timer" loc="44(DelugePageTransferC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CrcC" loc="45:/opt/tinyos-2.1.2/tos/system/CrcC.nc">
      <module/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg" loc="47(ObjectTransferC.SendAdvMsg):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC" loc="3(ObjectTransferC.SendAdvMsg.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="0">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC" loc="47(ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP" loc="39(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/types/Lpl.h">
        <short>&#10; The LPL defaults to stay-on.</short>
        <long>&#10; The LPL defaults to stay-on.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LowPowerListeningLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.TimerMilliC" loc="44(RF230RadioC.LowPowerListeningLayerC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningC" loc="1:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningC.nc">
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningP" loc="3:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningP.nc">
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TOne" ref="0x404958b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TOne" ref="0x404958b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TMicro" ref="0x4046d778"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TMicro" ref="0x4046d778"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TMicro" ref="0x4046d778"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP" loc="1(ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="0">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveAdvMsg" loc="43(ObjectTransferC.ReceiveAdvMsg):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg" loc="47(ObjectTransferC.SendReqMsg):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:81">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC" loc="3(ObjectTransferC.SendReqMsg.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="1">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC" loc="47(ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP" loc="1(ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="1">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveReqMsg" loc="43(ObjectTransferC.ReceiveReqMsg):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:81">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg" loc="47(ObjectTransferC.SendDataMsg):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:82">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC" loc="3(ObjectTransferC.SendDataMsg.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="2">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC" loc="47(ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP" loc="1(ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="2">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveDataMsg" loc="43(ObjectTransferC.ReceiveDataMsg):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:82">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.Timer" loc="44(ObjectTransferC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1" loc="40(DelugeC.BlockReaderDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageManagerC" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageManagerP" loc="37(BlockStorageManagerC.BlockStorageManagerP):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageManagerP"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_Golden" loc="23(BlockStorageManagerC.BlockStorageC_Golden):/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageP" loc="53:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc" safe="">
      <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
        <short>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.</short>
        <long>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.&#10;&#10; @author: Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="At45dbC" loc="22:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. Access to the HAL&#10; is controlled by a parameterised Resource interface - client ids are &#10; obtained with unique(UQ_AT45DB).&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="At45dbP" loc="53:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc" safe="">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
        <short>&#10; Private componenent for the Atmel's AT45DB HAL.</short>
        <long>&#10; Private componenent for the Atmel's AT45DB HAL.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAt45dbC" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
        <short>&#10; AT45DB flash chip HPL for mica family.</short>
        <long>&#10; AT45DB flash chip HPL for mica family. Each family member must provide&#10; and HplAt45dbIOC component implementing the SPIByte and HplAt45dbByte&#10; interfaces required by HplAt45dbByteC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbC.HplAt45dbByteC" loc="25(HplAt45dbC.HplAt45dbByteC):/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAt45dbByteC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbIOC" loc="52:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
        <short>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.</short>
        <long>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbIOP" loc="90:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <documentation loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
        <short>&#10; Low level hardware access to the onboard AT45DB flash chip.</short>
        <long>&#10; Low level hardware access to the onboard AT45DB flash chip.&#10; &#60;p>&#10; Note: This component includes optimised bit-banging SPI code with the&#10; pins hardwired.  Don't copy it to some other platform without&#10; understanding it (see txByte).&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAt45dbIOC.NoArbiterC" loc="20(HplAt45dbIOC.NoArbiterC):/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoArbiterC"/>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter" loc="89(At45dbC.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:at45db.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="At45dbC.Arbiter.Queue" loc="42(At45dbC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter.Arbiter" loc="52(At45dbC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbStorageManagerC" loc="17:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbStorageManagerC.nc" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbStorageManagerC.nc">
        <short>&#10; HAL component providing information on the flash volumes.</short>
        <long>&#10; HAL component providing information on the flash volumes.&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_1" loc="23(BlockStorageManagerC.BlockStorageC_1):/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_2" loc="23(BlockStorageManagerC.BlockStorageC_2):/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_3" loc="23(BlockStorageManagerC.BlockStorageC_3):/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC.Arbiter" loc="83(BlockStorageLockC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:BlockStorageLock.client">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC.Arbiter.Queue" loc="42(BlockStorageLockC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageLockC.Arbiter.Arbiter" loc="49(BlockStorageLockC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2" loc="40(DelugeC.BlockReaderDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3" loc="40(DelugeC.BlockReaderDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1" loc="40(DelugeC.BlockWriterDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2" loc="40(DelugeC.BlockWriterDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3" loc="40(DelugeC.BlockWriterDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC" loc="49(DelugeC.DisseminatorC):/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x4079e8b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x4079d188"/></typename>
          </type-tag>
          <value cst="I:56832">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC.DisseminatorP" loc="45(DelugeC.DisseminatorC.DisseminatorP):/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411155d0"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="3(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="3">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP" loc="1(DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="3">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="3(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="4">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP" loc="1(DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="4">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NetProgC" loc="46:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <configuration/>
    </component>
    <component qname="InternalFlashC" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <documentation loc="519:/usr/lib/gcc/avr/4.1.2/../../../../avr/include/avr/eeprom.h">
        <short> \def __EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM.</short>
        <long> \def __EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM. Compatibility define for IAR C.&#9;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="NetProgM" loc="45:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeP" loc="37:../../Deluge/DelugeP.nc">
      <documentation loc="32:../../Deluge/DelugeP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC.Timer" loc="44(DelugeC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC" loc="37:../../Deluge/DelugeMetadataC.nc">
      <documentation loc="32:../../Deluge/DelugeMetadataC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeMetadataP" loc="39:../../Deluge/DelugeMetadataP.nc">
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage" loc="40(DelugeMetadataC.BlockReaderGoldenImage):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1" loc="40(DelugeMetadataC.BlockReaderDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2" loc="40(DelugeMetadataC.BlockReaderDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3" loc="40(DelugeMetadataC.BlockReaderDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage" loc="40(DelugeMetadataC.BlockWriterGoldenImage):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1" loc="40(DelugeMetadataC.BlockWriterDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2" loc="40(DelugeMetadataC.BlockWriterDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3" loc="40(DelugeMetadataC.BlockWriterDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeMetadataClientC" loc="37(DelugeC.DelugeMetadataClientC):../../Deluge/DelugeMetadataClientC.nc">
      <documentation loc="32:../../Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeMetadataClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeVolumeManagerClientC" loc="37(DelugeC.DelugeVolumeManagerClientC):../../Deluge/DelugeVolumeManagerClientC.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeVolumeManagerClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC" loc="37:../../Deluge/DelugeVolumeManagerC.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerP" loc="37:../../Deluge/DelugeVolumeManagerP.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1" loc="40(DelugeVolumeManagerC.BlockWriterDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2" loc="40(DelugeVolumeManagerC.BlockWriterDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3" loc="40(DelugeVolumeManagerC.BlockWriterDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockStorageLockClientC" loc="37(DelugeC.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerNodeC.InitDelayTimerC" loc="44(ReprogrammerNodeC.InitDelayTimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerNodeC.ResetTimerC" loc="44(ReprogrammerNodeC.ResetTimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerNodeC.RetxTimerC" loc="44(ReprogrammerNodeC.RetxTimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerNodeC.RadioReceiverC" loc="43(ReprogrammerNodeC.RadioReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:153">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerNodeC.ReplySenderC" loc="47(ReprogrammerNodeC.ReplySenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:152">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerNodeC.ReplySenderC.SenderC" loc="3(ReprogrammerNodeC.ReplySenderC.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="5">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerNodeC.ReplySenderC.SenderC.DirectAMSenderC" loc="47(ReprogrammerNodeC.ReplySenderC.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerNodeC.ReplySenderC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(ReprogrammerNodeC.ReplySenderC.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ReprogrammerNodeC.ReplySenderC.SenderC.LplAMSenderP" loc="1(ReprogrammerNodeC.ReplySenderC.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="5">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="ReprogrammerNodeC.VoltageC" loc="39(ReprogrammerNodeC.VoltageC):/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerNodeC.VoltageC.AdcReadClientC" loc="21(ReprogrammerNodeC.VoltageC.AdcReadClientC):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404f95d8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404f97f0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404f9a08" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x405059e0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40505c08" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40505e30" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40502030" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4055a088" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4055a2b0" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4055a4d8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4055a6c8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x4060b940" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4060b940"/></type-var>
        </typedef>
        <constant name="divider" ref="0x4060bb00" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40610c48" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40610c48"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40610e08" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405f9e60" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405f9e60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406ba3a8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406ba3a8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x406ba588" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406e6b30" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406e6b30"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40895530" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LplAMSenderC" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc" abstract="">
      <parameters>
        <constant name="AMId" ref="0x408ade88" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
          <component-ref qname="LplAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x408a8970" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x408bb490" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x408d79c8" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40a4b710" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40a60570" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc" abstract="">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/types/Lpl.h">
        <short>&#10; The LPL defaults to stay-on.</short>
        <long>&#10; The LPL defaults to stay-on.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40e77230" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40e77230"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40e77450" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40e7cf10" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40e7cf10"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40e6d378" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40e6d378"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40e6d538" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40ea86c8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40ea86c8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40ea8b10" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40ea8b10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40eab888" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40eab888"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40eabce8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40eabce8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40ec7010" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40ec7010"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40ec7480" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40ec7480"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40ec76e8" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40ec7b70" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40ec7b70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="LplAMSenderP" loc="1:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40f05bc0" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockReaderC" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40f1ea18" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
          <component-ref qname="BlockReaderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VolumeIdC" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40f1a778" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
          <component-ref qname="VolumeIdC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageManagerP" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="clients" ref="0x40f43bd8" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
          <component-ref qname="BlockStorageManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageC" loc="23:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc" abstract="">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="volid" ref="0x40f6c0c0" loc="23:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
          <component-ref qname="BlockStorageC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAt45dbByteC" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="sectorSizeLog2" ref="0x41048030" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
          <component-ref qname="HplAt45dbByteC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoArbiterC" loc="20:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4104dce0" loc="89:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x4108fa70" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageLockClientC" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockWriterC" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x410ec3c8" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
          <component-ref qname="BlockWriterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x411155d0" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411155d0"/></type-var>
        </typedef>
        <constant name="key" ref="0x411157c0" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4110e770" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4110e770"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x41156d40" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x4118e010" loc="52:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x4118e1f0" loc="53:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x4118e3f8" loc="54:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x4118d8e8" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x4118daf8" loc="52:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x4118dcd8" loc="53:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x4118dee0" loc="54:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x4118a128" loc="55:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x411cb658" loc="44:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DelugeMetadataClientC" loc="37:../../Deluge/DelugeMetadataClientC.nc" abstract="">
      <documentation loc="32:../../Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerClientC" loc="37:../../Deluge/DelugeVolumeManagerClientC.nc" abstract="">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="39:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x412dd850" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x412f9b18" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x41312dd8" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x41312dd8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x404beef0" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404beef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c00e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404be2c8" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404be2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404be4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404ca9c8" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404ca9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404caba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404c0800" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404c0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c09d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404ca268" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404ca268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404ca440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404ca520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404ca600"/>
        <function-ref name="actualMicro" scoped="" ref="0x404ca6e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404ca7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x404c8218" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x404c8218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c83f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404c5d58" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404c5d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x404c8620" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x404c8620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c87f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404c49f8" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404c49f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404c4628" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404c4628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c4800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404cb588" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404cb588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404cb760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x404d2ad0" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x404d2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d2ca8"/>
        <function-ref name="isInput" scoped="" ref="0x404d2d88"/>
        <function-ref name="toggle" scoped="" ref="0x404d2e68"/>
        <function-ref name="isOutput" scoped="" ref="0x404cb010"/>
        <function-ref name="get" scoped="" ref="0x404cb0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cb1d0"/>
        <function-ref name="set" scoped="" ref="0x404cb2b0"/>
        <function-ref name="clr" scoped="" ref="0x404cb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404ce598" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404ce598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ce770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404f5210" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404f5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f55e8"/>
        <function-ref name="isInput" scoped="" ref="0x404f56c8"/>
        <function-ref name="toggle" scoped="" ref="0x404f57a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f5888"/>
        <function-ref name="get" scoped="" ref="0x404f5968"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f5a48"/>
        <function-ref name="set" scoped="" ref="0x404f5b28"/>
        <function-ref name="clr" scoped="" ref="0x404f5c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x404e7750" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x404e7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e7928"/>
        <function-ref name="isInput" scoped="" ref="0x404e7a08"/>
        <function-ref name="toggle" scoped="" ref="0x404e7ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e7bc8"/>
        <function-ref name="get" scoped="" ref="0x404e7ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e7d88"/>
        <function-ref name="set" scoped="" ref="0x404e7e68"/>
        <function-ref name="clr" scoped="" ref="0x404e5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404eace8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404eace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eaec0"/>
        <function-ref name="isInput" scoped="" ref="0x404e9010"/>
        <function-ref name="toggle" scoped="" ref="0x404e90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e91d0"/>
        <function-ref name="get" scoped="" ref="0x404e92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9390"/>
        <function-ref name="set" scoped="" ref="0x404e9470"/>
        <function-ref name="clr" scoped="" ref="0x404e9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404efea8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404efea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ee0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404ee1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404ee280"/>
        <function-ref name="isOutput" scoped="" ref="0x404ee360"/>
        <function-ref name="get" scoped="" ref="0x404ee440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ee520"/>
        <function-ref name="set" scoped="" ref="0x404ee600"/>
        <function-ref name="clr" scoped="" ref="0x404ee6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x404fc750" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x404fc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fc928"/>
        <function-ref name="isInput" scoped="" ref="0x404fca08"/>
        <function-ref name="toggle" scoped="" ref="0x404fcae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404fcbc8"/>
        <function-ref name="get" scoped="" ref="0x404fcca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fcd88"/>
        <function-ref name="set" scoped="" ref="0x404fce68"/>
        <function-ref name="clr" scoped="" ref="0x404fb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404d52f0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404d52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d54c8"/>
        <function-ref name="isInput" scoped="" ref="0x404d55a8"/>
        <function-ref name="toggle" scoped="" ref="0x404d5688"/>
        <function-ref name="isOutput" scoped="" ref="0x404d5768"/>
        <function-ref name="get" scoped="" ref="0x404d5848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5928"/>
        <function-ref name="set" scoped="" ref="0x404d5a08"/>
        <function-ref name="clr" scoped="" ref="0x404d5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x404f0a98" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x404f0a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f0c70"/>
        <function-ref name="isInput" scoped="" ref="0x404f0d50"/>
        <function-ref name="toggle" scoped="" ref="0x404f0e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404f0f10"/>
        <function-ref name="get" scoped="" ref="0x404ef010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ef0f0"/>
        <function-ref name="set" scoped="" ref="0x404ef1d0"/>
        <function-ref name="clr" scoped="" ref="0x404ef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404de750" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404de750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404de928"/>
        <function-ref name="isInput" scoped="" ref="0x404dea08"/>
        <function-ref name="toggle" scoped="" ref="0x404deae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404debc8"/>
        <function-ref name="get" scoped="" ref="0x404deca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ded88"/>
        <function-ref name="set" scoped="" ref="0x404dee68"/>
        <function-ref name="clr" scoped="" ref="0x404dd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x404e2ea8" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x404e2ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e10c0"/>
        <function-ref name="isInput" scoped="" ref="0x404e11a0"/>
        <function-ref name="toggle" scoped="" ref="0x404e1280"/>
        <function-ref name="isOutput" scoped="" ref="0x404e1360"/>
        <function-ref name="get" scoped="" ref="0x404e1440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e1520"/>
        <function-ref name="set" scoped="" ref="0x404e1600"/>
        <function-ref name="clr" scoped="" ref="0x404e16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404e4670" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404e4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e4848"/>
        <function-ref name="isInput" scoped="" ref="0x404e4928"/>
        <function-ref name="toggle" scoped="" ref="0x404e4a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404e4ae8"/>
        <function-ref name="get" scoped="" ref="0x404e4bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e4ca8"/>
        <function-ref name="set" scoped="" ref="0x404e4d88"/>
        <function-ref name="clr" scoped="" ref="0x404e4e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x404f2c08" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x404f2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f2de0"/>
        <function-ref name="isInput" scoped="" ref="0x404f2ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404f1010"/>
        <function-ref name="isOutput" scoped="" ref="0x404f10f0"/>
        <function-ref name="get" scoped="" ref="0x404f11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f12b0"/>
        <function-ref name="set" scoped="" ref="0x404f1390"/>
        <function-ref name="clr" scoped="" ref="0x404f1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x404cdf20" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x404cdf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d8110"/>
        <function-ref name="isInput" scoped="" ref="0x404d81f0"/>
        <function-ref name="toggle" scoped="" ref="0x404d82d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d83b0"/>
        <function-ref name="get" scoped="" ref="0x404d8490"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d8570"/>
        <function-ref name="set" scoped="" ref="0x404d8650"/>
        <function-ref name="clr" scoped="" ref="0x404d8730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404dc670" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dc848"/>
        <function-ref name="isInput" scoped="" ref="0x404dc928"/>
        <function-ref name="toggle" scoped="" ref="0x404dca08"/>
        <function-ref name="isOutput" scoped="" ref="0x404dcae8"/>
        <function-ref name="get" scoped="" ref="0x404dcbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dcca8"/>
        <function-ref name="set" scoped="" ref="0x404dcd88"/>
        <function-ref name="clr" scoped="" ref="0x404dce68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x404e0ce8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x404e0ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e0ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404df010"/>
        <function-ref name="toggle" scoped="" ref="0x404df0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404df1d0"/>
        <function-ref name="get" scoped="" ref="0x404df2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404df390"/>
        <function-ref name="set" scoped="" ref="0x404df470"/>
        <function-ref name="clr" scoped="" ref="0x404df550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404ec4b0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404ec4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ec688"/>
        <function-ref name="isInput" scoped="" ref="0x404ec768"/>
        <function-ref name="toggle" scoped="" ref="0x404ec848"/>
        <function-ref name="isOutput" scoped="" ref="0x404ec928"/>
        <function-ref name="get" scoped="" ref="0x404eca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ecae8"/>
        <function-ref name="set" scoped="" ref="0x404ecbc8"/>
        <function-ref name="clr" scoped="" ref="0x404ecca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404f7ce8" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404f7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f7ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404f6010"/>
        <function-ref name="toggle" scoped="" ref="0x404f60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f61d0"/>
        <function-ref name="get" scoped="" ref="0x404f62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f6390"/>
        <function-ref name="set" scoped="" ref="0x404f6470"/>
        <function-ref name="clr" scoped="" ref="0x404f6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404f32f0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404f32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f34c8"/>
        <function-ref name="isInput" scoped="" ref="0x404f35a8"/>
        <function-ref name="toggle" scoped="" ref="0x404f3688"/>
        <function-ref name="isOutput" scoped="" ref="0x404f3768"/>
        <function-ref name="get" scoped="" ref="0x404f3848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f3928"/>
        <function-ref name="set" scoped="" ref="0x404f3a08"/>
        <function-ref name="clr" scoped="" ref="0x404f3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x404eb8e0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x404eb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ebab8"/>
        <function-ref name="isInput" scoped="" ref="0x404ebb98"/>
        <function-ref name="toggle" scoped="" ref="0x404ebc78"/>
        <function-ref name="isOutput" scoped="" ref="0x404ebd58"/>
        <function-ref name="get" scoped="" ref="0x404ebe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ebf18"/>
        <function-ref name="set" scoped="" ref="0x404ea010"/>
        <function-ref name="clr" scoped="" ref="0x404ea0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x404d7dc8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x404d7dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d6010"/>
        <function-ref name="isInput" scoped="" ref="0x404d60f0"/>
        <function-ref name="toggle" scoped="" ref="0x404d61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d62b0"/>
        <function-ref name="get" scoped="" ref="0x404d6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d6470"/>
        <function-ref name="set" scoped="" ref="0x404d6550"/>
        <function-ref name="clr" scoped="" ref="0x404d6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x404da590" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x404da590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404da768"/>
        <function-ref name="isInput" scoped="" ref="0x404da848"/>
        <function-ref name="toggle" scoped="" ref="0x404da928"/>
        <function-ref name="isOutput" scoped="" ref="0x404daa08"/>
        <function-ref name="get" scoped="" ref="0x404daae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dabc8"/>
        <function-ref name="set" scoped="" ref="0x404daca8"/>
        <function-ref name="clr" scoped="" ref="0x404dad88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x404f5e08" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x404f5e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f4010"/>
        <function-ref name="isInput" scoped="" ref="0x404f40f0"/>
        <function-ref name="toggle" scoped="" ref="0x404f41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f42b0"/>
        <function-ref name="get" scoped="" ref="0x404f4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f4470"/>
        <function-ref name="set" scoped="" ref="0x404f4550"/>
        <function-ref name="clr" scoped="" ref="0x404f4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x404e3a08" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x404e3a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e3be0"/>
        <function-ref name="isInput" scoped="" ref="0x404e3cc0"/>
        <function-ref name="toggle" scoped="" ref="0x404e3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e3e80"/>
        <function-ref name="get" scoped="" ref="0x404e2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e20f0"/>
        <function-ref name="set" scoped="" ref="0x404e21d0"/>
        <function-ref name="clr" scoped="" ref="0x404e22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404e5210" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404e5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e53e8"/>
        <function-ref name="isInput" scoped="" ref="0x404e54c8"/>
        <function-ref name="toggle" scoped="" ref="0x404e55a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e5688"/>
        <function-ref name="get" scoped="" ref="0x404e5768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e5848"/>
        <function-ref name="set" scoped="" ref="0x404e5928"/>
        <function-ref name="clr" scoped="" ref="0x404e5a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404e9750" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404e9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e9928"/>
        <function-ref name="isInput" scoped="" ref="0x404e9a08"/>
        <function-ref name="toggle" scoped="" ref="0x404e9ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e9bc8"/>
        <function-ref name="get" scoped="" ref="0x404e9ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9d88"/>
        <function-ref name="set" scoped="" ref="0x404e9e68"/>
        <function-ref name="clr" scoped="" ref="0x404f2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404ee8e0" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404ee8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eeab8"/>
        <function-ref name="isInput" scoped="" ref="0x404eeb98"/>
        <function-ref name="toggle" scoped="" ref="0x404eec78"/>
        <function-ref name="isOutput" scoped="" ref="0x404eed58"/>
        <function-ref name="get" scoped="" ref="0x404eee38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eef18"/>
        <function-ref name="set" scoped="" ref="0x404f7010"/>
        <function-ref name="clr" scoped="" ref="0x404f70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x404d5ce8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x404d5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d5ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404de010"/>
        <function-ref name="toggle" scoped="" ref="0x404de0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404de1d0"/>
        <function-ref name="get" scoped="" ref="0x404de2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404de390"/>
        <function-ref name="set" scoped="" ref="0x404de470"/>
        <function-ref name="clr" scoped="" ref="0x404de550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404dd210" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404dd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dd3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404dd4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404dd5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404dd688"/>
        <function-ref name="get" scoped="" ref="0x404dd768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dd848"/>
        <function-ref name="set" scoped="" ref="0x404dd928"/>
        <function-ref name="clr" scoped="" ref="0x404dda08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x404e18e0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x404e18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e1ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404e1b98"/>
        <function-ref name="toggle" scoped="" ref="0x404e1c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404e1d58"/>
        <function-ref name="get" scoped="" ref="0x404e1e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e1f18"/>
        <function-ref name="set" scoped="" ref="0x404e0010"/>
        <function-ref name="clr" scoped="" ref="0x404e00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404ed0a0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404ed0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ed278"/>
        <function-ref name="isInput" scoped="" ref="0x404ed358"/>
        <function-ref name="toggle" scoped="" ref="0x404ed438"/>
        <function-ref name="isOutput" scoped="" ref="0x404ed518"/>
        <function-ref name="get" scoped="" ref="0x404ed5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ed6d8"/>
        <function-ref name="set" scoped="" ref="0x404ed7b8"/>
        <function-ref name="clr" scoped="" ref="0x404ed898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x404f1670" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x404f1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f1848"/>
        <function-ref name="isInput" scoped="" ref="0x404f1928"/>
        <function-ref name="toggle" scoped="" ref="0x404f1a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404f1ae8"/>
        <function-ref name="get" scoped="" ref="0x404f1bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f1ca8"/>
        <function-ref name="set" scoped="" ref="0x404f1d88"/>
        <function-ref name="clr" scoped="" ref="0x404f1e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x404d8930" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x404d8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d8b08"/>
        <function-ref name="isInput" scoped="" ref="0x404d8be8"/>
        <function-ref name="toggle" scoped="" ref="0x404d8cc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d8da8"/>
        <function-ref name="get" scoped="" ref="0x404d8e88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d7010"/>
        <function-ref name="set" scoped="" ref="0x404d70f0"/>
        <function-ref name="clr" scoped="" ref="0x404d71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404db0a0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404db0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404db2f8"/>
        <function-ref name="isInput" scoped="" ref="0x404db3d8"/>
        <function-ref name="toggle" scoped="" ref="0x404db4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x404db598"/>
        <function-ref name="get" scoped="" ref="0x404db678"/>
        <function-ref name="makeOutput" scoped="" ref="0x404db758"/>
        <function-ref name="set" scoped="" ref="0x404db838"/>
        <function-ref name="clr" scoped="" ref="0x404db918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x404df750" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x404df750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404df928"/>
        <function-ref name="isInput" scoped="" ref="0x404dfa08"/>
        <function-ref name="toggle" scoped="" ref="0x404dfae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404dfbc8"/>
        <function-ref name="get" scoped="" ref="0x404dfca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dfd88"/>
        <function-ref name="set" scoped="" ref="0x404dfe68"/>
        <function-ref name="clr" scoped="" ref="0x404e8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x404f6750" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x404f6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f6928"/>
        <function-ref name="isInput" scoped="" ref="0x404f6a08"/>
        <function-ref name="toggle" scoped="" ref="0x404f6ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f6bc8"/>
        <function-ref name="get" scoped="" ref="0x404f6ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f6d88"/>
        <function-ref name="set" scoped="" ref="0x404f6e68"/>
        <function-ref name="clr" scoped="" ref="0x404f5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x404e8c08" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x404e8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e8ee0"/>
        <function-ref name="isInput" scoped="" ref="0x404e7010"/>
        <function-ref name="toggle" scoped="" ref="0x404e70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e71d0"/>
        <function-ref name="get" scoped="" ref="0x404e72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e7390"/>
        <function-ref name="set" scoped="" ref="0x404e7470"/>
        <function-ref name="clr" scoped="" ref="0x404e7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404ea2f0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404ea2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ea4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ea5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ea688"/>
        <function-ref name="isOutput" scoped="" ref="0x404ea768"/>
        <function-ref name="get" scoped="" ref="0x404ea848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ea928"/>
        <function-ref name="set" scoped="" ref="0x404eaa08"/>
        <function-ref name="clr" scoped="" ref="0x404eaae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404ef4b0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404ef4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ef688"/>
        <function-ref name="isInput" scoped="" ref="0x404ef768"/>
        <function-ref name="toggle" scoped="" ref="0x404ef848"/>
        <function-ref name="isOutput" scoped="" ref="0x404ef928"/>
        <function-ref name="get" scoped="" ref="0x404efa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404efae8"/>
        <function-ref name="set" scoped="" ref="0x404efbc8"/>
        <function-ref name="clr" scoped="" ref="0x404efca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x404f3ce8" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x404f3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f3ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404fc010"/>
        <function-ref name="toggle" scoped="" ref="0x404fc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404fc1d0"/>
        <function-ref name="get" scoped="" ref="0x404fc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fc390"/>
        <function-ref name="set" scoped="" ref="0x404fc470"/>
        <function-ref name="clr" scoped="" ref="0x404fc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x404d6830" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x404d6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d6a08"/>
        <function-ref name="isInput" scoped="" ref="0x404d6ae8"/>
        <function-ref name="toggle" scoped="" ref="0x404d6bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d6ca8"/>
        <function-ref name="get" scoped="" ref="0x404d6d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d6e68"/>
        <function-ref name="set" scoped="" ref="0x404d5010"/>
        <function-ref name="clr" scoped="" ref="0x404d50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404e3010" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404e3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e31e8"/>
        <function-ref name="isInput" scoped="" ref="0x404e32c8"/>
        <function-ref name="toggle" scoped="" ref="0x404e33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e3488"/>
        <function-ref name="get" scoped="" ref="0x404e3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e3648"/>
        <function-ref name="set" scoped="" ref="0x404e3728"/>
        <function-ref name="clr" scoped="" ref="0x404e3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404f00a0" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404f00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f0278"/>
        <function-ref name="isInput" scoped="" ref="0x404f0358"/>
        <function-ref name="toggle" scoped="" ref="0x404f0438"/>
        <function-ref name="isOutput" scoped="" ref="0x404f0518"/>
        <function-ref name="get" scoped="" ref="0x404f05f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f06d8"/>
        <function-ref name="set" scoped="" ref="0x404f07b8"/>
        <function-ref name="clr" scoped="" ref="0x404f0898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x404e24b0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x404e24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e2688"/>
        <function-ref name="isInput" scoped="" ref="0x404e2768"/>
        <function-ref name="toggle" scoped="" ref="0x404e2848"/>
        <function-ref name="isOutput" scoped="" ref="0x404e2928"/>
        <function-ref name="get" scoped="" ref="0x404e2a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e2ae8"/>
        <function-ref name="set" scoped="" ref="0x404e2bc8"/>
        <function-ref name="clr" scoped="" ref="0x404e2ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x404e5c08" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x404e5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e5de0"/>
        <function-ref name="isInput" scoped="" ref="0x404e5ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404e4010"/>
        <function-ref name="isOutput" scoped="" ref="0x404e40f0"/>
        <function-ref name="get" scoped="" ref="0x404e41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e42b0"/>
        <function-ref name="set" scoped="" ref="0x404e4390"/>
        <function-ref name="clr" scoped="" ref="0x404e4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404f2210" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404f2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f23e8"/>
        <function-ref name="isInput" scoped="" ref="0x404f24c8"/>
        <function-ref name="toggle" scoped="" ref="0x404f25a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f2688"/>
        <function-ref name="get" scoped="" ref="0x404f2768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f2848"/>
        <function-ref name="set" scoped="" ref="0x404f2928"/>
        <function-ref name="clr" scoped="" ref="0x404f2a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404f72f0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404f72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f74c8"/>
        <function-ref name="isInput" scoped="" ref="0x404f75a8"/>
        <function-ref name="toggle" scoped="" ref="0x404f7688"/>
        <function-ref name="isOutput" scoped="" ref="0x404f7768"/>
        <function-ref name="get" scoped="" ref="0x404f7848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f7928"/>
        <function-ref name="set" scoped="" ref="0x404f7a08"/>
        <function-ref name="clr" scoped="" ref="0x404f7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404cd528" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404cd528"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cd700"/>
        <function-ref name="isInput" scoped="" ref="0x404cd7e0"/>
        <function-ref name="toggle" scoped="" ref="0x404cd8c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404cd9a0"/>
        <function-ref name="get" scoped="" ref="0x404cda80"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cdb60"/>
        <function-ref name="set" scoped="" ref="0x404cdc40"/>
        <function-ref name="clr" scoped="" ref="0x404cdd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x404ddc08" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x404ddc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ddde0"/>
        <function-ref name="isInput" scoped="" ref="0x404ddec0"/>
        <function-ref name="toggle" scoped="" ref="0x404dc010"/>
        <function-ref name="isOutput" scoped="" ref="0x404dc0f0"/>
        <function-ref name="get" scoped="" ref="0x404dc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dc2b0"/>
        <function-ref name="set" scoped="" ref="0x404dc390"/>
        <function-ref name="clr" scoped="" ref="0x404dc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x404e02f0" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x404e02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e04c8"/>
        <function-ref name="isInput" scoped="" ref="0x404e05a8"/>
        <function-ref name="toggle" scoped="" ref="0x404e0688"/>
        <function-ref name="isOutput" scoped="" ref="0x404e0768"/>
        <function-ref name="get" scoped="" ref="0x404e0848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e0928"/>
        <function-ref name="set" scoped="" ref="0x404e0a08"/>
        <function-ref name="clr" scoped="" ref="0x404e0ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x404eda98" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x404eda98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404edc70"/>
        <function-ref name="isInput" scoped="" ref="0x404edd50"/>
        <function-ref name="toggle" scoped="" ref="0x404ede30"/>
        <function-ref name="isOutput" scoped="" ref="0x404edf10"/>
        <function-ref name="get" scoped="" ref="0x404ec010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ec0f0"/>
        <function-ref name="set" scoped="" ref="0x404ec1d0"/>
        <function-ref name="clr" scoped="" ref="0x404ec2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x404f4830" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x404f4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f4a08"/>
        <function-ref name="isInput" scoped="" ref="0x404f4ae8"/>
        <function-ref name="toggle" scoped="" ref="0x404f4bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f4ca8"/>
        <function-ref name="get" scoped="" ref="0x404f4d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f4e68"/>
        <function-ref name="set" scoped="" ref="0x404f3010"/>
        <function-ref name="clr" scoped="" ref="0x404f30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404ecea8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404ecea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eb0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404eb1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404eb280"/>
        <function-ref name="isOutput" scoped="" ref="0x404eb360"/>
        <function-ref name="get" scoped="" ref="0x404eb440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eb520"/>
        <function-ref name="set" scoped="" ref="0x404eb600"/>
        <function-ref name="clr" scoped="" ref="0x404eb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x404e8210" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x404e8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e83e8"/>
        <function-ref name="isInput" scoped="" ref="0x404e84c8"/>
        <function-ref name="toggle" scoped="" ref="0x404e85a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e8688"/>
        <function-ref name="get" scoped="" ref="0x404e8768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8848"/>
        <function-ref name="set" scoped="" ref="0x404e8928"/>
        <function-ref name="clr" scoped="" ref="0x404e8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x404d73d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x404d73d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d75a8"/>
        <function-ref name="isInput" scoped="" ref="0x404d7688"/>
        <function-ref name="toggle" scoped="" ref="0x404d7768"/>
        <function-ref name="isOutput" scoped="" ref="0x404d7848"/>
        <function-ref name="get" scoped="" ref="0x404d7928"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d7a08"/>
        <function-ref name="set" scoped="" ref="0x404d7ae8"/>
        <function-ref name="clr" scoped="" ref="0x404d7bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404dbb18" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404dbb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dbcf0"/>
        <function-ref name="isInput" scoped="" ref="0x404dbdd0"/>
        <function-ref name="toggle" scoped="" ref="0x404dbeb0"/>
        <function-ref name="isOutput" scoped="" ref="0x404da010"/>
        <function-ref name="get" scoped="" ref="0x404da0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404da1d0"/>
        <function-ref name="set" scoped="" ref="0x404da2b0"/>
        <function-ref name="clr" scoped="" ref="0x404da390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40523d68" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40523d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40522010"/>
        <function-ref name="isInput" scoped="" ref="0x405220f0"/>
        <function-ref name="toggle" scoped="" ref="0x405221d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405222b0"/>
        <function-ref name="get" scoped="" ref="0x40522390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40522470"/>
        <function-ref name="set" scoped="" ref="0x40522550"/>
        <function-ref name="clr" scoped="" ref="0x40522630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40521ac8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40521ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40521ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40521d80"/>
        <function-ref name="toggle" scoped="" ref="0x40521e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40529010"/>
        <function-ref name="get" scoped="" ref="0x405290f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405291d0"/>
        <function-ref name="set" scoped="" ref="0x405292b0"/>
        <function-ref name="clr" scoped="" ref="0x40529390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40524a28" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40524a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40524c00"/>
        <function-ref name="isInput" scoped="" ref="0x40524ce0"/>
        <function-ref name="toggle" scoped="" ref="0x40524dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40524ea0"/>
        <function-ref name="get" scoped="" ref="0x40523010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405230f0"/>
        <function-ref name="set" scoped="" ref="0x405231d0"/>
        <function-ref name="clr" scoped="" ref="0x405232b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40522790" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40522790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40522968"/>
        <function-ref name="isInput" scoped="" ref="0x40522a48"/>
        <function-ref name="toggle" scoped="" ref="0x40522b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40522c08"/>
        <function-ref name="get" scoped="" ref="0x40522ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40522dc8"/>
        <function-ref name="set" scoped="" ref="0x40522ea8"/>
        <function-ref name="clr" scoped="" ref="0x40521010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405294f0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405294f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405296c8"/>
        <function-ref name="isInput" scoped="" ref="0x405297a8"/>
        <function-ref name="toggle" scoped="" ref="0x40529888"/>
        <function-ref name="isOutput" scoped="" ref="0x40529968"/>
        <function-ref name="get" scoped="" ref="0x40529a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40529b28"/>
        <function-ref name="set" scoped="" ref="0x40529c08"/>
        <function-ref name="clr" scoped="" ref="0x40529ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40523410" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40523410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405235e8"/>
        <function-ref name="isInput" scoped="" ref="0x405236c8"/>
        <function-ref name="toggle" scoped="" ref="0x405237a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40523888"/>
        <function-ref name="get" scoped="" ref="0x40523968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40523a48"/>
        <function-ref name="set" scoped="" ref="0x40523b28"/>
        <function-ref name="clr" scoped="" ref="0x40523c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40521170" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40521170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40521348"/>
        <function-ref name="isInput" scoped="" ref="0x40521428"/>
        <function-ref name="toggle" scoped="" ref="0x40521508"/>
        <function-ref name="isOutput" scoped="" ref="0x405215e8"/>
        <function-ref name="get" scoped="" ref="0x405216c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405217a8"/>
        <function-ref name="set" scoped="" ref="0x40521888"/>
        <function-ref name="clr" scoped="" ref="0x40521968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40529e48" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40529e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40528050"/>
        <function-ref name="isInput" scoped="" ref="0x40528130"/>
        <function-ref name="toggle" scoped="" ref="0x40528210"/>
        <function-ref name="isOutput" scoped="" ref="0x405282f0"/>
        <function-ref name="get" scoped="" ref="0x405283d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405284b0"/>
        <function-ref name="set" scoped="" ref="0x40528590"/>
        <function-ref name="clr" scoped="" ref="0x40528670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413943b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413943b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41394588"/>
        <function-ref name="isInput" scoped="" ref="0x41394668"/>
        <function-ref name="toggle" scoped="" ref="0x41394748"/>
        <function-ref name="isOutput" scoped="" ref="0x41394828"/>
        <function-ref name="get" scoped="" ref="0x41394908"/>
        <function-ref name="makeOutput" scoped="" ref="0x413949e8"/>
        <function-ref name="set" scoped="" ref="0x41394ac8"/>
        <function-ref name="clr" scoped="" ref="0x41394ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41393d70" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41393d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41392010"/>
        <function-ref name="isInput" scoped="" ref="0x413920f0"/>
        <function-ref name="toggle" scoped="" ref="0x413921d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413922b0"/>
        <function-ref name="get" scoped="" ref="0x41392390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41392470"/>
        <function-ref name="set" scoped="" ref="0x41392550"/>
        <function-ref name="clr" scoped="" ref="0x41392630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413917f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413917f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413919d0"/>
        <function-ref name="isInput" scoped="" ref="0x41391ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41391b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41391c70"/>
        <function-ref name="get" scoped="" ref="0x41391d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41391e30"/>
        <function-ref name="set" scoped="" ref="0x41391f10"/>
        <function-ref name="clr" scoped="" ref="0x41390010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4138f228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4138f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4138f400"/>
        <function-ref name="isInput" scoped="" ref="0x4138f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4138f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4138f6a0"/>
        <function-ref name="get" scoped="" ref="0x4138f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4138f860"/>
        <function-ref name="set" scoped="" ref="0x4138f940"/>
        <function-ref name="clr" scoped="" ref="0x4138fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4138ec08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4138ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4138ede0"/>
        <function-ref name="isInput" scoped="" ref="0x4138eec0"/>
        <function-ref name="toggle" scoped="" ref="0x4138d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4138d0f0"/>
        <function-ref name="get" scoped="" ref="0x4138d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4138d2b0"/>
        <function-ref name="set" scoped="" ref="0x4138d390"/>
        <function-ref name="clr" scoped="" ref="0x4138d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4138c6c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4138c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4138c898"/>
        <function-ref name="isInput" scoped="" ref="0x4138c978"/>
        <function-ref name="toggle" scoped="" ref="0x4138ca58"/>
        <function-ref name="isOutput" scoped="" ref="0x4138cb38"/>
        <function-ref name="get" scoped="" ref="0x4138cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4138ccf8"/>
        <function-ref name="set" scoped="" ref="0x4138cdd8"/>
        <function-ref name="clr" scoped="" ref="0x4138ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4138a0b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4138a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4138a288"/>
        <function-ref name="isInput" scoped="" ref="0x4138a368"/>
        <function-ref name="toggle" scoped="" ref="0x4138a448"/>
        <function-ref name="isOutput" scoped="" ref="0x4138a528"/>
        <function-ref name="get" scoped="" ref="0x4138a608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4138a6e8"/>
        <function-ref name="set" scoped="" ref="0x4138a7c8"/>
        <function-ref name="clr" scoped="" ref="0x4138a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41389a88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41389a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41389c60"/>
        <function-ref name="isInput" scoped="" ref="0x41389d40"/>
        <function-ref name="toggle" scoped="" ref="0x41389e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41389f00"/>
        <function-ref name="get" scoped="" ref="0x41388010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413880f0"/>
        <function-ref name="set" scoped="" ref="0x413881d0"/>
        <function-ref name="clr" scoped="" ref="0x413882b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4052e6b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4052e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052e888"/>
        <function-ref name="isInput" scoped="" ref="0x4052e968"/>
        <function-ref name="toggle" scoped="" ref="0x4052ea48"/>
        <function-ref name="isOutput" scoped="" ref="0x4052eb28"/>
        <function-ref name="get" scoped="" ref="0x4052ec08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052ece8"/>
        <function-ref name="set" scoped="" ref="0x4052edc8"/>
        <function-ref name="clr" scoped="" ref="0x4052eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4052c330" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4052c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052c508"/>
        <function-ref name="isInput" scoped="" ref="0x4052c5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4052c6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4052c7a8"/>
        <function-ref name="get" scoped="" ref="0x4052c888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052c968"/>
        <function-ref name="set" scoped="" ref="0x4052ca48"/>
        <function-ref name="clr" scoped="" ref="0x4052cb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405253d8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405253d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405255b0"/>
        <function-ref name="isInput" scoped="" ref="0x40525690"/>
        <function-ref name="toggle" scoped="" ref="0x40525770"/>
        <function-ref name="isOutput" scoped="" ref="0x40525850"/>
        <function-ref name="get" scoped="" ref="0x40525930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40525a10"/>
        <function-ref name="set" scoped="" ref="0x40525af0"/>
        <function-ref name="clr" scoped="" ref="0x40525bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4052d030" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4052d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052d208"/>
        <function-ref name="isInput" scoped="" ref="0x4052d2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4052d3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4052d4a8"/>
        <function-ref name="get" scoped="" ref="0x4052d588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052d668"/>
        <function-ref name="set" scoped="" ref="0x4052d748"/>
        <function-ref name="clr" scoped="" ref="0x4052d828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4052cc88" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4052cc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052ce60"/>
        <function-ref name="isInput" scoped="" ref="0x4052b010"/>
        <function-ref name="toggle" scoped="" ref="0x4052b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4052b1d0"/>
        <function-ref name="get" scoped="" ref="0x4052b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052b390"/>
        <function-ref name="set" scoped="" ref="0x4052b470"/>
        <function-ref name="clr" scoped="" ref="0x4052b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40525d30" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40525d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40525f08"/>
        <function-ref name="isInput" scoped="" ref="0x4052e010"/>
        <function-ref name="toggle" scoped="" ref="0x4052e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4052e1d0"/>
        <function-ref name="get" scoped="" ref="0x4052e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052e390"/>
        <function-ref name="set" scoped="" ref="0x4052e470"/>
        <function-ref name="clr" scoped="" ref="0x4052e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4052d988" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4052d988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052db60"/>
        <function-ref name="isInput" scoped="" ref="0x4052dc40"/>
        <function-ref name="toggle" scoped="" ref="0x4052dd20"/>
        <function-ref name="isOutput" scoped="" ref="0x4052de00"/>
        <function-ref name="get" scoped="" ref="0x4052dee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052c010"/>
        <function-ref name="set" scoped="" ref="0x4052c0f0"/>
        <function-ref name="clr" scoped="" ref="0x4052c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4052b6b0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4052b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052b888"/>
        <function-ref name="isInput" scoped="" ref="0x4052b968"/>
        <function-ref name="toggle" scoped="" ref="0x4052ba48"/>
        <function-ref name="isOutput" scoped="" ref="0x4052bb28"/>
        <function-ref name="get" scoped="" ref="0x4052bc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052bce8"/>
        <function-ref name="set" scoped="" ref="0x4052bdc8"/>
        <function-ref name="clr" scoped="" ref="0x4052bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413a4de8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413a4de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413a0010"/>
        <function-ref name="isInput" scoped="" ref="0x413a00f0"/>
        <function-ref name="toggle" scoped="" ref="0x413a01d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413a02b0"/>
        <function-ref name="get" scoped="" ref="0x413a0390"/>
        <function-ref name="makeOutput" scoped="" ref="0x413a0470"/>
        <function-ref name="set" scoped="" ref="0x413a0550"/>
        <function-ref name="clr" scoped="" ref="0x413a0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4139f7f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4139f7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4139f9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4139fab0"/>
        <function-ref name="toggle" scoped="" ref="0x4139fb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4139fc70"/>
        <function-ref name="get" scoped="" ref="0x4139fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4139fe30"/>
        <function-ref name="set" scoped="" ref="0x4139ff10"/>
        <function-ref name="clr" scoped="" ref="0x4139e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4139d228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4139d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4139d400"/>
        <function-ref name="isInput" scoped="" ref="0x4139d4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4139d5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4139d6a0"/>
        <function-ref name="get" scoped="" ref="0x4139d780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4139d860"/>
        <function-ref name="set" scoped="" ref="0x4139d940"/>
        <function-ref name="clr" scoped="" ref="0x4139da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4139cc08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4139cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4139cde0"/>
        <function-ref name="isInput" scoped="" ref="0x4139cec0"/>
        <function-ref name="toggle" scoped="" ref="0x4139a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4139a0f0"/>
        <function-ref name="get" scoped="" ref="0x4139a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4139a2b0"/>
        <function-ref name="set" scoped="" ref="0x4139a390"/>
        <function-ref name="clr" scoped="" ref="0x4139a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413996c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413996c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41399898"/>
        <function-ref name="isInput" scoped="" ref="0x41399978"/>
        <function-ref name="toggle" scoped="" ref="0x41399a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41399b38"/>
        <function-ref name="get" scoped="" ref="0x41399c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41399cf8"/>
        <function-ref name="set" scoped="" ref="0x41399dd8"/>
        <function-ref name="clr" scoped="" ref="0x41399eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413970b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413970b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41397288"/>
        <function-ref name="isInput" scoped="" ref="0x41397368"/>
        <function-ref name="toggle" scoped="" ref="0x41397448"/>
        <function-ref name="isOutput" scoped="" ref="0x41397528"/>
        <function-ref name="get" scoped="" ref="0x41397608"/>
        <function-ref name="makeOutput" scoped="" ref="0x413976e8"/>
        <function-ref name="set" scoped="" ref="0x413977c8"/>
        <function-ref name="clr" scoped="" ref="0x413978a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41396a88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41396a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41396c60"/>
        <function-ref name="isInput" scoped="" ref="0x41396d40"/>
        <function-ref name="toggle" scoped="" ref="0x41396e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41396f00"/>
        <function-ref name="get" scoped="" ref="0x41395010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413950f0"/>
        <function-ref name="set" scoped="" ref="0x413951d0"/>
        <function-ref name="clr" scoped="" ref="0x413952b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413d8538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413d8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413d8710"/>
        <function-ref name="isInput" scoped="" ref="0x413d87f0"/>
        <function-ref name="toggle" scoped="" ref="0x413d88d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413d89b0"/>
        <function-ref name="get" scoped="" ref="0x413d8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x413d8b70"/>
        <function-ref name="set" scoped="" ref="0x413d8c50"/>
        <function-ref name="clr" scoped="" ref="0x413d8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4052f170" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4052f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052f348"/>
        <function-ref name="isInput" scoped="" ref="0x4052f428"/>
        <function-ref name="toggle" scoped="" ref="0x4052f508"/>
        <function-ref name="isOutput" scoped="" ref="0x4052f5e8"/>
        <function-ref name="get" scoped="" ref="0x4052f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052f7a8"/>
        <function-ref name="set" scoped="" ref="0x4052f888"/>
        <function-ref name="clr" scoped="" ref="0x4052f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40538e48" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40538e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40537050"/>
        <function-ref name="isInput" scoped="" ref="0x40537130"/>
        <function-ref name="toggle" scoped="" ref="0x40537210"/>
        <function-ref name="isOutput" scoped="" ref="0x405372f0"/>
        <function-ref name="get" scoped="" ref="0x405373d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405374b0"/>
        <function-ref name="set" scoped="" ref="0x40537590"/>
        <function-ref name="clr" scoped="" ref="0x40537670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40531dc8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40531dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40530010"/>
        <function-ref name="isInput" scoped="" ref="0x405300f0"/>
        <function-ref name="toggle" scoped="" ref="0x405301d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405302b0"/>
        <function-ref name="get" scoped="" ref="0x40530390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40530470"/>
        <function-ref name="set" scoped="" ref="0x40530550"/>
        <function-ref name="clr" scoped="" ref="0x40530630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4052fac8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4052fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052fca0"/>
        <function-ref name="isInput" scoped="" ref="0x4052fd80"/>
        <function-ref name="toggle" scoped="" ref="0x4052fe60"/>
        <function-ref name="isOutput" scoped="" ref="0x40538010"/>
        <function-ref name="get" scoped="" ref="0x405380f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405381d0"/>
        <function-ref name="set" scoped="" ref="0x405382b0"/>
        <function-ref name="clr" scoped="" ref="0x40538390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405377d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405377d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405379a8"/>
        <function-ref name="isInput" scoped="" ref="0x40537a88"/>
        <function-ref name="toggle" scoped="" ref="0x40537b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40537c48"/>
        <function-ref name="get" scoped="" ref="0x40537d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40537e08"/>
        <function-ref name="set" scoped="" ref="0x40537ee8"/>
        <function-ref name="clr" scoped="" ref="0x40536010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40530790" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40530790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40530968"/>
        <function-ref name="isInput" scoped="" ref="0x40530a48"/>
        <function-ref name="toggle" scoped="" ref="0x40530b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40530c08"/>
        <function-ref name="get" scoped="" ref="0x40530ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40530dc8"/>
        <function-ref name="set" scoped="" ref="0x40530ea8"/>
        <function-ref name="clr" scoped="" ref="0x4052f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405384f0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405384f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405386c8"/>
        <function-ref name="isInput" scoped="" ref="0x405387a8"/>
        <function-ref name="toggle" scoped="" ref="0x40538888"/>
        <function-ref name="isOutput" scoped="" ref="0x40538968"/>
        <function-ref name="get" scoped="" ref="0x40538a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40538b28"/>
        <function-ref name="set" scoped="" ref="0x40538c08"/>
        <function-ref name="clr" scoped="" ref="0x40538ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40536170" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40536170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40536348"/>
        <function-ref name="isInput" scoped="" ref="0x40536428"/>
        <function-ref name="toggle" scoped="" ref="0x40536508"/>
        <function-ref name="isOutput" scoped="" ref="0x405365e8"/>
        <function-ref name="get" scoped="" ref="0x405366c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405367a8"/>
        <function-ref name="set" scoped="" ref="0x40536888"/>
        <function-ref name="clr" scoped="" ref="0x40536968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413f1938" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413f1938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413f1b10"/>
        <function-ref name="isInput" scoped="" ref="0x413f1bf0"/>
        <function-ref name="toggle" scoped="" ref="0x413f1cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x413f1db0"/>
        <function-ref name="get" scoped="" ref="0x413f1e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x413f0010"/>
        <function-ref name="set" scoped="" ref="0x413f00f0"/>
        <function-ref name="clr" scoped="" ref="0x413f01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413ef3b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413ef3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ef588"/>
        <function-ref name="isInput" scoped="" ref="0x413ef668"/>
        <function-ref name="toggle" scoped="" ref="0x413ef748"/>
        <function-ref name="isOutput" scoped="" ref="0x413ef828"/>
        <function-ref name="get" scoped="" ref="0x413ef908"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ef9e8"/>
        <function-ref name="set" scoped="" ref="0x413efac8"/>
        <function-ref name="clr" scoped="" ref="0x413efba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413eed70" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413eed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ed010"/>
        <function-ref name="isInput" scoped="" ref="0x413ed0f0"/>
        <function-ref name="toggle" scoped="" ref="0x413ed1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413ed2b0"/>
        <function-ref name="get" scoped="" ref="0x413ed390"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ed470"/>
        <function-ref name="set" scoped="" ref="0x413ed550"/>
        <function-ref name="clr" scoped="" ref="0x413ed630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413ec7f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413ec7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ec9d0"/>
        <function-ref name="isInput" scoped="" ref="0x413ecab0"/>
        <function-ref name="toggle" scoped="" ref="0x413ecb90"/>
        <function-ref name="isOutput" scoped="" ref="0x413ecc70"/>
        <function-ref name="get" scoped="" ref="0x413ecd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ece30"/>
        <function-ref name="set" scoped="" ref="0x413ecf10"/>
        <function-ref name="clr" scoped="" ref="0x413eb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413ea228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413ea228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ea400"/>
        <function-ref name="isInput" scoped="" ref="0x413ea4e0"/>
        <function-ref name="toggle" scoped="" ref="0x413ea5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x413ea6a0"/>
        <function-ref name="get" scoped="" ref="0x413ea780"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ea860"/>
        <function-ref name="set" scoped="" ref="0x413ea940"/>
        <function-ref name="clr" scoped="" ref="0x413eaa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413e9c08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413e9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413e9de0"/>
        <function-ref name="isInput" scoped="" ref="0x413e9ec0"/>
        <function-ref name="toggle" scoped="" ref="0x413e8010"/>
        <function-ref name="isOutput" scoped="" ref="0x413e80f0"/>
        <function-ref name="get" scoped="" ref="0x413e81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x413e82b0"/>
        <function-ref name="set" scoped="" ref="0x413e8390"/>
        <function-ref name="clr" scoped="" ref="0x413e8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413e76c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413e76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413e7898"/>
        <function-ref name="isInput" scoped="" ref="0x413e7978"/>
        <function-ref name="toggle" scoped="" ref="0x413e7a58"/>
        <function-ref name="isOutput" scoped="" ref="0x413e7b38"/>
        <function-ref name="get" scoped="" ref="0x413e7c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x413e7cf8"/>
        <function-ref name="set" scoped="" ref="0x413e7dd8"/>
        <function-ref name="clr" scoped="" ref="0x413e7eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413e50b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413e50b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413e5288"/>
        <function-ref name="isInput" scoped="" ref="0x413e5368"/>
        <function-ref name="toggle" scoped="" ref="0x413e5448"/>
        <function-ref name="isOutput" scoped="" ref="0x413e5528"/>
        <function-ref name="get" scoped="" ref="0x413e5608"/>
        <function-ref name="makeOutput" scoped="" ref="0x413e56e8"/>
        <function-ref name="set" scoped="" ref="0x413e57c8"/>
        <function-ref name="clr" scoped="" ref="0x413e58a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4053c9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4053c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053cbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4053cca0"/>
        <function-ref name="toggle" scoped="" ref="0x4053cd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4053ce60"/>
        <function-ref name="get" scoped="" ref="0x4053a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053a0f0"/>
        <function-ref name="set" scoped="" ref="0x4053a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4053a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40539790" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40539790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40539968"/>
        <function-ref name="isInput" scoped="" ref="0x40539a48"/>
        <function-ref name="toggle" scoped="" ref="0x40539b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40539c08"/>
        <function-ref name="get" scoped="" ref="0x40539ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40539dc8"/>
        <function-ref name="set" scoped="" ref="0x40539ea8"/>
        <function-ref name="clr" scoped="" ref="0x40542010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4053d6f8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4053d6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053d8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4053d9b0"/>
        <function-ref name="toggle" scoped="" ref="0x4053da90"/>
        <function-ref name="isOutput" scoped="" ref="0x4053db70"/>
        <function-ref name="get" scoped="" ref="0x4053dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053dd30"/>
        <function-ref name="set" scoped="" ref="0x4053de10"/>
        <function-ref name="clr" scoped="" ref="0x4053def0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4053a410" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4053a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053a5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4053a6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4053a7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4053a888"/>
        <function-ref name="get" scoped="" ref="0x4053a968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053aa48"/>
        <function-ref name="set" scoped="" ref="0x4053ab28"/>
        <function-ref name="clr" scoped="" ref="0x4053ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40542170" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40542170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40542348"/>
        <function-ref name="isInput" scoped="" ref="0x40542428"/>
        <function-ref name="toggle" scoped="" ref="0x40542508"/>
        <function-ref name="isOutput" scoped="" ref="0x405425e8"/>
        <function-ref name="get" scoped="" ref="0x405426c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405427a8"/>
        <function-ref name="set" scoped="" ref="0x40542888"/>
        <function-ref name="clr" scoped="" ref="0x40542968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4053c090" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4053c090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053c268"/>
        <function-ref name="isInput" scoped="" ref="0x4053c348"/>
        <function-ref name="toggle" scoped="" ref="0x4053c428"/>
        <function-ref name="isOutput" scoped="" ref="0x4053c508"/>
        <function-ref name="get" scoped="" ref="0x4053c5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053c6c8"/>
        <function-ref name="set" scoped="" ref="0x4053c7a8"/>
        <function-ref name="clr" scoped="" ref="0x4053c888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4053ad68" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4053ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40539010"/>
        <function-ref name="isInput" scoped="" ref="0x405390f0"/>
        <function-ref name="toggle" scoped="" ref="0x405391d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405392b0"/>
        <function-ref name="get" scoped="" ref="0x40539390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40539470"/>
        <function-ref name="set" scoped="" ref="0x40539550"/>
        <function-ref name="clr" scoped="" ref="0x40539630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40542ac8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40542ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40542ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40542d80"/>
        <function-ref name="toggle" scoped="" ref="0x40542e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40541010"/>
        <function-ref name="get" scoped="" ref="0x405410f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405411d0"/>
        <function-ref name="set" scoped="" ref="0x405412b0"/>
        <function-ref name="clr" scoped="" ref="0x40541390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413ff538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413ff538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ff710"/>
        <function-ref name="isInput" scoped="" ref="0x413ff7f0"/>
        <function-ref name="toggle" scoped="" ref="0x413ff8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413ff9b0"/>
        <function-ref name="get" scoped="" ref="0x413ffa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ffb70"/>
        <function-ref name="set" scoped="" ref="0x413ffc50"/>
        <function-ref name="clr" scoped="" ref="0x413ffd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413fd010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413fd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413fd1e8"/>
        <function-ref name="isInput" scoped="" ref="0x413fd2c8"/>
        <function-ref name="toggle" scoped="" ref="0x413fd3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x413fd488"/>
        <function-ref name="get" scoped="" ref="0x413fd568"/>
        <function-ref name="makeOutput" scoped="" ref="0x413fd648"/>
        <function-ref name="set" scoped="" ref="0x413fd728"/>
        <function-ref name="clr" scoped="" ref="0x413fd808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413fc9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413fc9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413fcbc0"/>
        <function-ref name="isInput" scoped="" ref="0x413fcca0"/>
        <function-ref name="toggle" scoped="" ref="0x413fcd80"/>
        <function-ref name="isOutput" scoped="" ref="0x413fce60"/>
        <function-ref name="get" scoped="" ref="0x41440010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414400f0"/>
        <function-ref name="set" scoped="" ref="0x414401d0"/>
        <function-ref name="clr" scoped="" ref="0x414402b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4143f538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4143f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4143f710"/>
        <function-ref name="isInput" scoped="" ref="0x4143f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4143f8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4143f9b0"/>
        <function-ref name="get" scoped="" ref="0x4143fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4143fb70"/>
        <function-ref name="set" scoped="" ref="0x4143fc50"/>
        <function-ref name="clr" scoped="" ref="0x4143fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4143d010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4143d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4143d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4143d2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4143d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4143d488"/>
        <function-ref name="get" scoped="" ref="0x4143d568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4143d648"/>
        <function-ref name="set" scoped="" ref="0x4143d728"/>
        <function-ref name="clr" scoped="" ref="0x4143d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4143c9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4143c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4143cbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4143cca0"/>
        <function-ref name="toggle" scoped="" ref="0x4143cd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4143ce60"/>
        <function-ref name="get" scoped="" ref="0x4143b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4143b0f0"/>
        <function-ref name="set" scoped="" ref="0x4143b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4143b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4143a538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4143a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4143a710"/>
        <function-ref name="isInput" scoped="" ref="0x4143a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4143a8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4143a9b0"/>
        <function-ref name="get" scoped="" ref="0x4143aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4143ab70"/>
        <function-ref name="set" scoped="" ref="0x4143ac50"/>
        <function-ref name="clr" scoped="" ref="0x4143ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41438010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41438010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414381e8"/>
        <function-ref name="isInput" scoped="" ref="0x414382c8"/>
        <function-ref name="toggle" scoped="" ref="0x414383a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41438488"/>
        <function-ref name="get" scoped="" ref="0x41438568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41438648"/>
        <function-ref name="set" scoped="" ref="0x41438728"/>
        <function-ref name="clr" scoped="" ref="0x41438808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40548410" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40548410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405485e8"/>
        <function-ref name="isInput" scoped="" ref="0x405486c8"/>
        <function-ref name="toggle" scoped="" ref="0x405487a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40548888"/>
        <function-ref name="get" scoped="" ref="0x40548968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40548a48"/>
        <function-ref name="set" scoped="" ref="0x40548b28"/>
        <function-ref name="clr" scoped="" ref="0x40548c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40546170" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40546170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40546348"/>
        <function-ref name="isInput" scoped="" ref="0x40546428"/>
        <function-ref name="toggle" scoped="" ref="0x40546508"/>
        <function-ref name="isOutput" scoped="" ref="0x405465e8"/>
        <function-ref name="get" scoped="" ref="0x405466c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405467a8"/>
        <function-ref name="set" scoped="" ref="0x40546888"/>
        <function-ref name="clr" scoped="" ref="0x40546968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4053e128" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4053e128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053e300"/>
        <function-ref name="isInput" scoped="" ref="0x4053e3e0"/>
        <function-ref name="toggle" scoped="" ref="0x4053e4c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4053e5a0"/>
        <function-ref name="get" scoped="" ref="0x4053e680"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053e760"/>
        <function-ref name="set" scoped="" ref="0x4053e840"/>
        <function-ref name="clr" scoped="" ref="0x4053e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40548d68" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40548d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40547010"/>
        <function-ref name="isInput" scoped="" ref="0x405470f0"/>
        <function-ref name="toggle" scoped="" ref="0x405471d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405472b0"/>
        <function-ref name="get" scoped="" ref="0x40547390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40547470"/>
        <function-ref name="set" scoped="" ref="0x40547550"/>
        <function-ref name="clr" scoped="" ref="0x40547630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40546ac8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40546ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40546ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40546d80"/>
        <function-ref name="toggle" scoped="" ref="0x40546e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40544010"/>
        <function-ref name="get" scoped="" ref="0x405440f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405441d0"/>
        <function-ref name="set" scoped="" ref="0x405442b0"/>
        <function-ref name="clr" scoped="" ref="0x40544390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4053ea80" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4053ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053ec58"/>
        <function-ref name="isInput" scoped="" ref="0x4053ed38"/>
        <function-ref name="toggle" scoped="" ref="0x4053ee18"/>
        <function-ref name="isOutput" scoped="" ref="0x4053eef8"/>
        <function-ref name="get" scoped="" ref="0x40548010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405480f0"/>
        <function-ref name="set" scoped="" ref="0x405481d0"/>
        <function-ref name="clr" scoped="" ref="0x405482b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40547790" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40547790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40547968"/>
        <function-ref name="isInput" scoped="" ref="0x40547a48"/>
        <function-ref name="toggle" scoped="" ref="0x40547b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40547c08"/>
        <function-ref name="get" scoped="" ref="0x40547ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40547dc8"/>
        <function-ref name="set" scoped="" ref="0x40547ea8"/>
        <function-ref name="clr" scoped="" ref="0x40546010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405444f0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405444f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405446c8"/>
        <function-ref name="isInput" scoped="" ref="0x405447a8"/>
        <function-ref name="toggle" scoped="" ref="0x40544888"/>
        <function-ref name="isOutput" scoped="" ref="0x40544968"/>
        <function-ref name="get" scoped="" ref="0x40544a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40544b28"/>
        <function-ref name="set" scoped="" ref="0x40544c08"/>
        <function-ref name="clr" scoped="" ref="0x40544ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41453418" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41453418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414535f0"/>
        <function-ref name="isInput" scoped="" ref="0x414536d0"/>
        <function-ref name="toggle" scoped="" ref="0x414537b0"/>
        <function-ref name="isOutput" scoped="" ref="0x41453890"/>
        <function-ref name="get" scoped="" ref="0x41453970"/>
        <function-ref name="makeOutput" scoped="" ref="0x41453a50"/>
        <function-ref name="set" scoped="" ref="0x41453b30"/>
        <function-ref name="clr" scoped="" ref="0x41453c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41452de0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41452de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41451010"/>
        <function-ref name="isInput" scoped="" ref="0x414510f0"/>
        <function-ref name="toggle" scoped="" ref="0x414511d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414512b0"/>
        <function-ref name="get" scoped="" ref="0x41451390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41451470"/>
        <function-ref name="set" scoped="" ref="0x41451550"/>
        <function-ref name="clr" scoped="" ref="0x41451630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414507f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414507f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414509d0"/>
        <function-ref name="isInput" scoped="" ref="0x41450ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41450b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41450c70"/>
        <function-ref name="get" scoped="" ref="0x41450d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41450e30"/>
        <function-ref name="set" scoped="" ref="0x41450f10"/>
        <function-ref name="clr" scoped="" ref="0x4144f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4144e228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4144e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4144e400"/>
        <function-ref name="isInput" scoped="" ref="0x4144e4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4144e5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4144e6a0"/>
        <function-ref name="get" scoped="" ref="0x4144e780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4144e860"/>
        <function-ref name="set" scoped="" ref="0x4144e940"/>
        <function-ref name="clr" scoped="" ref="0x4144ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4144dc08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4144dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4144dde0"/>
        <function-ref name="isInput" scoped="" ref="0x4144dec0"/>
        <function-ref name="toggle" scoped="" ref="0x4144c010"/>
        <function-ref name="isOutput" scoped="" ref="0x4144c0f0"/>
        <function-ref name="get" scoped="" ref="0x4144c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4144c2b0"/>
        <function-ref name="set" scoped="" ref="0x4144c390"/>
        <function-ref name="clr" scoped="" ref="0x4144c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4144b6c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4144b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4144b898"/>
        <function-ref name="isInput" scoped="" ref="0x4144b978"/>
        <function-ref name="toggle" scoped="" ref="0x4144ba58"/>
        <function-ref name="isOutput" scoped="" ref="0x4144bb38"/>
        <function-ref name="get" scoped="" ref="0x4144bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4144bcf8"/>
        <function-ref name="set" scoped="" ref="0x4144bdd8"/>
        <function-ref name="clr" scoped="" ref="0x4144beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414490b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414490b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41449288"/>
        <function-ref name="isInput" scoped="" ref="0x41449368"/>
        <function-ref name="toggle" scoped="" ref="0x41449448"/>
        <function-ref name="isOutput" scoped="" ref="0x41449528"/>
        <function-ref name="get" scoped="" ref="0x41449608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414496e8"/>
        <function-ref name="set" scoped="" ref="0x414497c8"/>
        <function-ref name="clr" scoped="" ref="0x414498a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41448a88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41448a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41448c60"/>
        <function-ref name="isInput" scoped="" ref="0x41448d40"/>
        <function-ref name="toggle" scoped="" ref="0x41448e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41448f00"/>
        <function-ref name="get" scoped="" ref="0x41447010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414470f0"/>
        <function-ref name="set" scoped="" ref="0x414471d0"/>
        <function-ref name="clr" scoped="" ref="0x414472b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4054ce48" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4054ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054b050"/>
        <function-ref name="isInput" scoped="" ref="0x4054b130"/>
        <function-ref name="toggle" scoped="" ref="0x4054b210"/>
        <function-ref name="isOutput" scoped="" ref="0x4054b2f0"/>
        <function-ref name="get" scoped="" ref="0x4054b3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054b4b0"/>
        <function-ref name="set" scoped="" ref="0x4054b590"/>
        <function-ref name="clr" scoped="" ref="0x4054b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4054aac8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4054aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054aca0"/>
        <function-ref name="isInput" scoped="" ref="0x4054ad80"/>
        <function-ref name="toggle" scoped="" ref="0x4054ae60"/>
        <function-ref name="isOutput" scoped="" ref="0x40549010"/>
        <function-ref name="get" scoped="" ref="0x405490f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405491d0"/>
        <function-ref name="set" scoped="" ref="0x405492b0"/>
        <function-ref name="clr" scoped="" ref="0x40549390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4054db00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4054db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054dcd8"/>
        <function-ref name="isInput" scoped="" ref="0x4054ddb8"/>
        <function-ref name="toggle" scoped="" ref="0x4054de98"/>
        <function-ref name="isOutput" scoped="" ref="0x4054c010"/>
        <function-ref name="get" scoped="" ref="0x4054c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054c1d0"/>
        <function-ref name="set" scoped="" ref="0x4054c2b0"/>
        <function-ref name="clr" scoped="" ref="0x4054c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4054b7d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4054b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4054ba88"/>
        <function-ref name="toggle" scoped="" ref="0x4054bb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4054bc48"/>
        <function-ref name="get" scoped="" ref="0x4054bd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054be08"/>
        <function-ref name="set" scoped="" ref="0x4054bee8"/>
        <function-ref name="clr" scoped="" ref="0x4054a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405494f0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405494f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405496c8"/>
        <function-ref name="isInput" scoped="" ref="0x405497a8"/>
        <function-ref name="toggle" scoped="" ref="0x40549888"/>
        <function-ref name="isOutput" scoped="" ref="0x40549968"/>
        <function-ref name="get" scoped="" ref="0x40549a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40549b28"/>
        <function-ref name="set" scoped="" ref="0x40549c08"/>
        <function-ref name="clr" scoped="" ref="0x40549ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4054c4f0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4054c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054c6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4054c7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4054c888"/>
        <function-ref name="isOutput" scoped="" ref="0x4054c968"/>
        <function-ref name="get" scoped="" ref="0x4054ca48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054cb28"/>
        <function-ref name="set" scoped="" ref="0x4054cc08"/>
        <function-ref name="clr" scoped="" ref="0x4054cce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4054a170" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4054a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054a348"/>
        <function-ref name="isInput" scoped="" ref="0x4054a428"/>
        <function-ref name="toggle" scoped="" ref="0x4054a508"/>
        <function-ref name="isOutput" scoped="" ref="0x4054a5e8"/>
        <function-ref name="get" scoped="" ref="0x4054a6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054a7a8"/>
        <function-ref name="set" scoped="" ref="0x4054a888"/>
        <function-ref name="clr" scoped="" ref="0x4054a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40549e48" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40549e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40554050"/>
        <function-ref name="isInput" scoped="" ref="0x40554130"/>
        <function-ref name="toggle" scoped="" ref="0x40554210"/>
        <function-ref name="isOutput" scoped="" ref="0x405542f0"/>
        <function-ref name="get" scoped="" ref="0x405543d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405544b0"/>
        <function-ref name="set" scoped="" ref="0x40554590"/>
        <function-ref name="clr" scoped="" ref="0x40554670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41467de8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41467de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414aa010"/>
        <function-ref name="isInput" scoped="" ref="0x414aa0f0"/>
        <function-ref name="toggle" scoped="" ref="0x414aa1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414aa2b0"/>
        <function-ref name="get" scoped="" ref="0x414aa390"/>
        <function-ref name="makeOutput" scoped="" ref="0x414aa470"/>
        <function-ref name="set" scoped="" ref="0x414aa550"/>
        <function-ref name="clr" scoped="" ref="0x414aa630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414a97f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414a97f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414a99d0"/>
        <function-ref name="isInput" scoped="" ref="0x414a9ab0"/>
        <function-ref name="toggle" scoped="" ref="0x414a9b90"/>
        <function-ref name="isOutput" scoped="" ref="0x414a9c70"/>
        <function-ref name="get" scoped="" ref="0x414a9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x414a9e30"/>
        <function-ref name="set" scoped="" ref="0x414a9f10"/>
        <function-ref name="clr" scoped="" ref="0x414a8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414a7228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414a7228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414a7400"/>
        <function-ref name="isInput" scoped="" ref="0x414a74e0"/>
        <function-ref name="toggle" scoped="" ref="0x414a75c0"/>
        <function-ref name="isOutput" scoped="" ref="0x414a76a0"/>
        <function-ref name="get" scoped="" ref="0x414a7780"/>
        <function-ref name="makeOutput" scoped="" ref="0x414a7860"/>
        <function-ref name="set" scoped="" ref="0x414a7940"/>
        <function-ref name="clr" scoped="" ref="0x414a7a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414a6c08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414a6c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414a6de0"/>
        <function-ref name="isInput" scoped="" ref="0x414a6ec0"/>
        <function-ref name="toggle" scoped="" ref="0x414a5010"/>
        <function-ref name="isOutput" scoped="" ref="0x414a50f0"/>
        <function-ref name="get" scoped="" ref="0x414a51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x414a52b0"/>
        <function-ref name="set" scoped="" ref="0x414a5390"/>
        <function-ref name="clr" scoped="" ref="0x414a5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414a46c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414a46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414a4898"/>
        <function-ref name="isInput" scoped="" ref="0x414a4978"/>
        <function-ref name="toggle" scoped="" ref="0x414a4a58"/>
        <function-ref name="isOutput" scoped="" ref="0x414a4b38"/>
        <function-ref name="get" scoped="" ref="0x414a4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x414a4cf8"/>
        <function-ref name="set" scoped="" ref="0x414a4dd8"/>
        <function-ref name="clr" scoped="" ref="0x414a4eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414a20b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414a20b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414a2288"/>
        <function-ref name="isInput" scoped="" ref="0x414a2368"/>
        <function-ref name="toggle" scoped="" ref="0x414a2448"/>
        <function-ref name="isOutput" scoped="" ref="0x414a2528"/>
        <function-ref name="get" scoped="" ref="0x414a2608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414a26e8"/>
        <function-ref name="set" scoped="" ref="0x414a27c8"/>
        <function-ref name="clr" scoped="" ref="0x414a28a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414a1a88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414a1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414a1c60"/>
        <function-ref name="isInput" scoped="" ref="0x414a1d40"/>
        <function-ref name="toggle" scoped="" ref="0x414a1e20"/>
        <function-ref name="isOutput" scoped="" ref="0x414a1f00"/>
        <function-ref name="get" scoped="" ref="0x414a0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414a00f0"/>
        <function-ref name="set" scoped="" ref="0x414a01d0"/>
        <function-ref name="clr" scoped="" ref="0x414a02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4149f538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4149f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4149f710"/>
        <function-ref name="isInput" scoped="" ref="0x4149f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4149f8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4149f9b0"/>
        <function-ref name="get" scoped="" ref="0x4149fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4149fb70"/>
        <function-ref name="set" scoped="" ref="0x4149fc50"/>
        <function-ref name="clr" scoped="" ref="0x4149fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4054f010" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4054f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4054f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4054f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4054f488"/>
        <function-ref name="get" scoped="" ref="0x4054f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054f648"/>
        <function-ref name="set" scoped="" ref="0x4054f728"/>
        <function-ref name="clr" scoped="" ref="0x4054f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405657b8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405657b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40565990"/>
        <function-ref name="isInput" scoped="" ref="0x40565a70"/>
        <function-ref name="toggle" scoped="" ref="0x40565b50"/>
        <function-ref name="isOutput" scoped="" ref="0x40565c30"/>
        <function-ref name="get" scoped="" ref="0x40565d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40565df0"/>
        <function-ref name="set" scoped="" ref="0x40565ed0"/>
        <function-ref name="clr" scoped="" ref="0x40564010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40562010" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40562010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405621e8"/>
        <function-ref name="isInput" scoped="" ref="0x405622c8"/>
        <function-ref name="toggle" scoped="" ref="0x405623a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40562488"/>
        <function-ref name="get" scoped="" ref="0x40562568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40562648"/>
        <function-ref name="set" scoped="" ref="0x40562728"/>
        <function-ref name="clr" scoped="" ref="0x40562808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4056b7b8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4056b7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056b990"/>
        <function-ref name="isInput" scoped="" ref="0x4056ba70"/>
        <function-ref name="toggle" scoped="" ref="0x4056bb50"/>
        <function-ref name="isOutput" scoped="" ref="0x4056bc30"/>
        <function-ref name="get" scoped="" ref="0x4056bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056bdf0"/>
        <function-ref name="set" scoped="" ref="0x4056bed0"/>
        <function-ref name="clr" scoped="" ref="0x4056a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40568010" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40568010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405681e8"/>
        <function-ref name="isInput" scoped="" ref="0x405682c8"/>
        <function-ref name="toggle" scoped="" ref="0x405683a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40568488"/>
        <function-ref name="get" scoped="" ref="0x40568568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40568648"/>
        <function-ref name="set" scoped="" ref="0x40568728"/>
        <function-ref name="clr" scoped="" ref="0x40568808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405727b8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405727b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40572990"/>
        <function-ref name="isInput" scoped="" ref="0x40572a70"/>
        <function-ref name="toggle" scoped="" ref="0x40572b50"/>
        <function-ref name="isOutput" scoped="" ref="0x40572c30"/>
        <function-ref name="get" scoped="" ref="0x40572d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40572df0"/>
        <function-ref name="set" scoped="" ref="0x40572ed0"/>
        <function-ref name="clr" scoped="" ref="0x40571010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4056e080" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4056e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056e258"/>
        <function-ref name="isInput" scoped="" ref="0x4056e338"/>
        <function-ref name="toggle" scoped="" ref="0x4056e418"/>
        <function-ref name="isOutput" scoped="" ref="0x4056e4f8"/>
        <function-ref name="get" scoped="" ref="0x4056e5d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056e6b8"/>
        <function-ref name="set" scoped="" ref="0x4056e798"/>
        <function-ref name="clr" scoped="" ref="0x4056e878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40578840" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40578840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40578a18"/>
        <function-ref name="isInput" scoped="" ref="0x40578af8"/>
        <function-ref name="toggle" scoped="" ref="0x40578bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x40578cb8"/>
        <function-ref name="get" scoped="" ref="0x40578d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40578e78"/>
        <function-ref name="set" scoped="" ref="0x40577010"/>
        <function-ref name="clr" scoped="" ref="0x405770f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405750b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405750b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40575288"/>
        <function-ref name="isInput" scoped="" ref="0x40575368"/>
        <function-ref name="toggle" scoped="" ref="0x40575448"/>
        <function-ref name="isOutput" scoped="" ref="0x40575528"/>
        <function-ref name="get" scoped="" ref="0x40575608"/>
        <function-ref name="makeOutput" scoped="" ref="0x405756e8"/>
        <function-ref name="set" scoped="" ref="0x405757c8"/>
        <function-ref name="clr" scoped="" ref="0x405758a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4057e880" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4057e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057ea58"/>
        <function-ref name="isInput" scoped="" ref="0x4057eb38"/>
        <function-ref name="toggle" scoped="" ref="0x4057ec18"/>
        <function-ref name="isOutput" scoped="" ref="0x4057ecf8"/>
        <function-ref name="get" scoped="" ref="0x4057edd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057eeb8"/>
        <function-ref name="set" scoped="" ref="0x4057d010"/>
        <function-ref name="clr" scoped="" ref="0x4057d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4057b0b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4057b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057b288"/>
        <function-ref name="isInput" scoped="" ref="0x4057b368"/>
        <function-ref name="toggle" scoped="" ref="0x4057b448"/>
        <function-ref name="isOutput" scoped="" ref="0x4057b528"/>
        <function-ref name="get" scoped="" ref="0x4057b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057b6e8"/>
        <function-ref name="set" scoped="" ref="0x4057b7c8"/>
        <function-ref name="clr" scoped="" ref="0x4057b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40584880" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40584880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40584a58"/>
        <function-ref name="isInput" scoped="" ref="0x40584b38"/>
        <function-ref name="toggle" scoped="" ref="0x40584c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40584cf8"/>
        <function-ref name="get" scoped="" ref="0x40584dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40584eb8"/>
        <function-ref name="set" scoped="" ref="0x40583010"/>
        <function-ref name="clr" scoped="" ref="0x405830f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405810b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405810b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40581288"/>
        <function-ref name="isInput" scoped="" ref="0x40581368"/>
        <function-ref name="toggle" scoped="" ref="0x40581448"/>
        <function-ref name="isOutput" scoped="" ref="0x40581528"/>
        <function-ref name="get" scoped="" ref="0x40581608"/>
        <function-ref name="makeOutput" scoped="" ref="0x405816e8"/>
        <function-ref name="set" scoped="" ref="0x405817c8"/>
        <function-ref name="clr" scoped="" ref="0x405818a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4057f880" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4057f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057fa58"/>
        <function-ref name="isInput" scoped="" ref="0x4057fb38"/>
        <function-ref name="toggle" scoped="" ref="0x4057fc18"/>
        <function-ref name="isOutput" scoped="" ref="0x4057fcf8"/>
        <function-ref name="get" scoped="" ref="0x4057fdd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057feb8"/>
        <function-ref name="set" scoped="" ref="0x4058a010"/>
        <function-ref name="clr" scoped="" ref="0x4058a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405a5bf8" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405a5bf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x404137d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x404137d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405a5dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x405a4010" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x405a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x405a41e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x405a42c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x405a43a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x405a4488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x405a4568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x405b7808" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x405b7808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405b79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404bfa28" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404bfa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404bfc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x405b7400" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x405b7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405b75d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x404bfdc0" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x404bfdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405b7010"/>
        <function-ref name="taskLoop" scoped="" ref="0x405b70f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x405b71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4042cc30" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4042cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4042ce08"/>
        <function-ref name="runTask" scoped="" ref="0x4042cee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4042a528" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4042a528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042a700"/>
        <function-ref name="taskLoop" scoped="" ref="0x4042a7e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x4042a8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40499c28" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40499c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40499e00"/>
        <function-ref name="runTask" scoped="" ref="0x40499ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x404988a8" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x404988a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40498a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x404993f0" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x404993f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404995c8"/>
        <function-ref name="taskLoop" scoped="" ref="0x404996a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x40499788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x404adf10" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x404adf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x404a7108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40488470" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40488470"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40488648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x404ad148" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x404ad148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x404ad320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x405c1c08" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x405c1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405c0730"/>
        <function-ref name="fired" scoped="" ref="0x405ba9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405c00f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x405bae60"/>
        <function-ref name="getdt" scoped="" ref="0x405c0be0"/>
        <function-ref name="gett0" scoped="" ref="0x405c0988"/>
        <function-ref name="isRunning" scoped="" ref="0x405bac08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405ba258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405c0410"/>
        <function-ref name="startOneShot" scoped="" ref="0x405ba4d8"/>
        <function-ref name="stop" scoped="" ref="0x405ba758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x405d3ec0" loc="56:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x405d3ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405cd0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405d3298" loc="55:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405d3298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405d3470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405d3550"/>
        <function-ref name="led1On" scoped="" ref="0x405d3630"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405d3710"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405d37f0"/>
        <function-ref name="get" scoped="" ref="0x405d38d0"/>
        <function-ref name="led1Off" scoped="" ref="0x405d39b0"/>
        <function-ref name="led2Off" scoped="" ref="0x405d3d30"/>
        <function-ref name="set" scoped="" ref="0x405d3a90"/>
        <function-ref name="led0On" scoped="" ref="0x405d3b70"/>
        <function-ref name="led2On" scoped="" ref="0x405d3c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x404b84d8" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404b84d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404b86b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404b8790"/>
        <function-ref name="led1On" scoped="" ref="0x404b8870"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404b8950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404b8a30"/>
        <function-ref name="get" scoped="" ref="0x404b8b10"/>
        <function-ref name="led1Off" scoped="" ref="0x404b8bf0"/>
        <function-ref name="led2Off" scoped="" ref="0x405d1010"/>
        <function-ref name="set" scoped="" ref="0x404b8cd0"/>
        <function-ref name="led0On" scoped="" ref="0x404b8db0"/>
        <function-ref name="led2On" scoped="" ref="0x404b8e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x405ce940" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x405ce940"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ceb18"/>
        <function-ref name="isInput" scoped="" ref="0x405cebf8"/>
        <function-ref name="toggle" scoped="" ref="0x405cecd8"/>
        <function-ref name="isOutput" scoped="" ref="0x405cedb8"/>
        <function-ref name="get" scoped="" ref="0x405cee98"/>
        <function-ref name="makeOutput" scoped="" ref="0x405db010"/>
        <function-ref name="set" scoped="" ref="0x405db0f0"/>
        <function-ref name="clr" scoped="" ref="0x405db1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405d1890" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405d1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405d1a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x405db3c0" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x405db3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405db598"/>
        <function-ref name="isInput" scoped="" ref="0x405db678"/>
        <function-ref name="toggle" scoped="" ref="0x405db758"/>
        <function-ref name="isOutput" scoped="" ref="0x405db838"/>
        <function-ref name="get" scoped="" ref="0x405db918"/>
        <function-ref name="makeOutput" scoped="" ref="0x405db9f8"/>
        <function-ref name="set" scoped="" ref="0x405dbad8"/>
        <function-ref name="clr" scoped="" ref="0x405dbbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x405d1bd8" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405d1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405d1db0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405d1e90"/>
        <function-ref name="led1On" scoped="" ref="0x405ce010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405ce0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405ce1d0"/>
        <function-ref name="get" scoped="" ref="0x405ce2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x405ce390"/>
        <function-ref name="led2Off" scoped="" ref="0x405ce710"/>
        <function-ref name="set" scoped="" ref="0x405ce470"/>
        <function-ref name="led0On" scoped="" ref="0x405ce550"/>
        <function-ref name="led2On" scoped="" ref="0x405ce630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x405dbda8" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x405dbda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d9010"/>
        <function-ref name="isInput" scoped="" ref="0x405d90f0"/>
        <function-ref name="toggle" scoped="" ref="0x405d91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405d92b0"/>
        <function-ref name="get" scoped="" ref="0x405d9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d9470"/>
        <function-ref name="set" scoped="" ref="0x405d9550"/>
        <function-ref name="clr" scoped="" ref="0x405d9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x405e6110" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x405e6110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e62e8"/>
        <function-ref name="isInput" scoped="" ref="0x405e63c8"/>
        <function-ref name="toggle" scoped="" ref="0x405e64a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405e6588"/>
        <function-ref name="get" scoped="" ref="0x405e6668"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e6748"/>
        <function-ref name="set" scoped="" ref="0x405e6828"/>
        <function-ref name="clr" scoped="" ref="0x405e6908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x405e6b18" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x405e6b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e6cf0"/>
        <function-ref name="isInput" scoped="" ref="0x405e6dd0"/>
        <function-ref name="toggle" scoped="" ref="0x405e6eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x405e5010"/>
        <function-ref name="get" scoped="" ref="0x405e50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e51d0"/>
        <function-ref name="set" scoped="" ref="0x405e52b0"/>
        <function-ref name="clr" scoped="" ref="0x405e5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x405e5f28" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405e5f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405e4110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x405e55a0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x405e55a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e5778"/>
        <function-ref name="isInput" scoped="" ref="0x405e5858"/>
        <function-ref name="toggle" scoped="" ref="0x405e5938"/>
        <function-ref name="isOutput" scoped="" ref="0x405e5a18"/>
        <function-ref name="get" scoped="" ref="0x405e5af8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e5bd8"/>
        <function-ref name="set" scoped="" ref="0x405e5cb8"/>
        <function-ref name="clr" scoped="" ref="0x405e5d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405d2df0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405d2df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406ef900"/>
        <function-ref name="fired" scoped="" ref="0x405f0ba0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406ef2c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x406ef068"/>
        <function-ref name="getdt" scoped="" ref="0x406efdb0"/>
        <function-ref name="gett0" scoped="" ref="0x406efb58"/>
        <function-ref name="isRunning" scoped="" ref="0x405f0df8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405f0448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406ef5e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x405f06c8"/>
        <function-ref name="stop" scoped="" ref="0x405f0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x405f7010" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x405f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405f6b00"/>
        <function-ref name="fired" scoped="" ref="0x405f7d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405f64c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x405f6268"/>
        <function-ref name="getdt" scoped="" ref="0x405f4010"/>
        <function-ref name="gett0" scoped="" ref="0x405f6d58"/>
        <function-ref name="isRunning" scoped="" ref="0x405f6010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405f7638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405f67e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x405f78b8"/>
        <function-ref name="stop" scoped="" ref="0x405f7b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x405f1100" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x405f1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405febe0"/>
        <function-ref name="fired" scoped="" ref="0x405f1e80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405fe5a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x405fe348"/>
        <function-ref name="getdt" scoped="" ref="0x405fc0b8"/>
        <function-ref name="gett0" scoped="" ref="0x405fee38"/>
        <function-ref name="isRunning" scoped="" ref="0x405fe0f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405f1728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405fe8c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x405f19a8"/>
        <function-ref name="stop" scoped="" ref="0x405f1c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x405fb0d0" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x405fb0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405fb718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405f4890" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405f4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405f4a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40609dc8" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40609dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4060c530"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4060ca20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4060c7a8"/>
        <function-ref name="overflow" scoped="" ref="0x4060cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405fa7f8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405fa7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405fa9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x406051c8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x406051c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40604690"/>
        <function-ref name="fired" scoped="" ref="0x40605e30"/>
        <function-ref name="startAt" scoped="" ref="0x40604350"/>
        <function-ref name="isRunning" scoped="" ref="0x406040d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40604908"/>
        <function-ref name="start" scoped="" ref="0x40605918"/>
        <function-ref name="stop" scoped="" ref="0x40605bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4069b4c0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4069b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4069a980"/>
        <function-ref name="fired" scoped="" ref="0x4069a150"/>
        <function-ref name="startAt" scoped="" ref="0x4069a640"/>
        <function-ref name="isRunning" scoped="" ref="0x4069a3c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x4069abf8"/>
        <function-ref name="start" scoped="" ref="0x4069bc10"/>
        <function-ref name="stop" scoped="" ref="0x4069beb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4069b088" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4069b088"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x404135d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x404135d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4069b260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4069af28" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4069af28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40698688"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40698b78"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40698900"/>
        <function-ref name="overflow" scoped="" ref="0x40698df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x41504b60" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41504b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41504d38"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41504e18"/>
        <function-ref name="getControlA" scoped="" ref="0x41504ef8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x41503010"/>
        <function-ref name="setControlB" scoped="" ref="0x415030f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x415031d0"/>
        <function-ref name="getControlB" scoped="" ref="0x415032b0"/>
        <function-ref name="setControlA" scoped="" ref="0x41503390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4150bcc0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4150bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41508190"/>
        <function-ref name="fired" scoped="" ref="0x4150a938"/>
        <function-ref name="startAt" scoped="" ref="0x4150ae28"/>
        <function-ref name="isRunning" scoped="" ref="0x4150abb0"/>
        <function-ref name="getAlarm" scoped="" ref="0x41508408"/>
        <function-ref name="start" scoped="" ref="0x4150a420"/>
        <function-ref name="stop" scoped="" ref="0x4150a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4150b888" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4150b888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4150ba60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41508738" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41508738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41508e88"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41507388"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41507110"/>
        <function-ref name="overflow" scoped="" ref="0x41507600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x41501010" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x41501010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x415011e8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x415012c8"/>
        <function-ref name="controlABusy" scoped="" ref="0x415013a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x41501488"/>
        <function-ref name="countBusy" scoped="" ref="0x41501568"/>
        <function-ref name="compareABusy" scoped="" ref="0x41501648"/>
        <function-ref name="getAssr" scoped="" ref="0x41501728"/>
        <function-ref name="setAssr" scoped="" ref="0x41501808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x41503580" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x41503580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41502ad8"/>
        <function-ref name="fired" scoped="" ref="0x415020f8"/>
        <function-ref name="get" scoped="" ref="0x41503bc8"/>
        <function-ref name="reset" scoped="" ref="0x41502370"/>
        <function-ref name="isOn" scoped="" ref="0x41502d50"/>
        <function-ref name="set" scoped="" ref="0x41503e40"/>
        <function-ref name="start" scoped="" ref="0x415025e8"/>
        <function-ref name="stop" scoped="" ref="0x41502860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x415078f0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x415078f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41504418"/>
        <function-ref name="test" scoped="" ref="0x41506f08"/>
        <function-ref name="get" scoped="" ref="0x41506010"/>
        <function-ref name="setScale" scoped="" ref="0x41504690"/>
        <function-ref name="getScale" scoped="" ref="0x41504930"/>
        <function-ref name="reset" scoped="" ref="0x415067a0"/>
        <function-ref name="overflow" scoped="" ref="0x41506528"/>
        <function-ref name="isOn" scoped="" ref="0x415041a0"/>
        <function-ref name="set" scoped="" ref="0x41506288"/>
        <function-ref name="start" scoped="" ref="0x41506a18"/>
        <function-ref name="stop" scoped="" ref="0x41506c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4065a600" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4065a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4065a7d8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4065a8b8"/>
        <function-ref name="getControlA" scoped="" ref="0x4065a998"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4065aa78"/>
        <function-ref name="setControlB" scoped="" ref="0x4065ab58"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4065ac38"/>
        <function-ref name="getControlB" scoped="" ref="0x4065ad18"/>
        <function-ref name="setControlA" scoped="" ref="0x4065adf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40657c60" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40657c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40657e38"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x40657f18"/>
        <function-ref name="controlABusy" scoped="" ref="0x40656010"/>
        <function-ref name="controlBBusy" scoped="" ref="0x406560f0"/>
        <function-ref name="countBusy" scoped="" ref="0x406561d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x406562b0"/>
        <function-ref name="getAssr" scoped="" ref="0x40656390"/>
        <function-ref name="setAssr" scoped="" ref="0x40656470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40659138" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40659138"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40657690"/>
        <function-ref name="fired" scoped="" ref="0x40659c98"/>
        <function-ref name="get" scoped="" ref="0x40659780"/>
        <function-ref name="reset" scoped="" ref="0x40659f10"/>
        <function-ref name="isOn" scoped="" ref="0x40657908"/>
        <function-ref name="set" scoped="" ref="0x406599f8"/>
        <function-ref name="start" scoped="" ref="0x406571a0"/>
        <function-ref name="stop" scoped="" ref="0x40657418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4065c340" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4065c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4065bd88"/>
        <function-ref name="test" scoped="" ref="0x4065b898"/>
        <function-ref name="get" scoped="" ref="0x4065c988"/>
        <function-ref name="setScale" scoped="" ref="0x4065a010"/>
        <function-ref name="getScale" scoped="" ref="0x4065a2b0"/>
        <function-ref name="reset" scoped="" ref="0x4065b130"/>
        <function-ref name="overflow" scoped="" ref="0x4065cea0"/>
        <function-ref name="isOn" scoped="" ref="0x4065bb10"/>
        <function-ref name="set" scoped="" ref="0x4065cc00"/>
        <function-ref name="start" scoped="" ref="0x4065b3a8"/>
        <function-ref name="stop" scoped="" ref="0x4065b620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4065f510" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4065f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4065f6e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4065f7c8"/>
        <function-ref name="getControlA" scoped="" ref="0x4065f8a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4065f988"/>
        <function-ref name="setControlB" scoped="" ref="0x4065fa68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4065fb48"/>
        <function-ref name="getControlB" scoped="" ref="0x4065fc28"/>
        <function-ref name="setControlA" scoped="" ref="0x4065fd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4065daf8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4065daf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4065dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4066c010" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4066c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4066c1e8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4066c2c8"/>
        <function-ref name="controlABusy" scoped="" ref="0x4066c3a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4066c488"/>
        <function-ref name="countBusy" scoped="" ref="0x4066c568"/>
        <function-ref name="compareABusy" scoped="" ref="0x4066c648"/>
        <function-ref name="getAssr" scoped="" ref="0x4066c728"/>
        <function-ref name="setAssr" scoped="" ref="0x4066c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4065e078" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4065e078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4065d5c8"/>
        <function-ref name="fired" scoped="" ref="0x4065ebd8"/>
        <function-ref name="get" scoped="" ref="0x4065e6c0"/>
        <function-ref name="reset" scoped="" ref="0x4065ee50"/>
        <function-ref name="isOn" scoped="" ref="0x4065d840"/>
        <function-ref name="set" scoped="" ref="0x4065e938"/>
        <function-ref name="start" scoped="" ref="0x4065d0d8"/>
        <function-ref name="stop" scoped="" ref="0x4065d350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40662190" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40662190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40661c68"/>
        <function-ref name="test" scoped="" ref="0x40661778"/>
        <function-ref name="get" scoped="" ref="0x406627d8"/>
        <function-ref name="setScale" scoped="" ref="0x40661ee0"/>
        <function-ref name="getScale" scoped="" ref="0x4065f1c0"/>
        <function-ref name="reset" scoped="" ref="0x40661010"/>
        <function-ref name="overflow" scoped="" ref="0x40662cf0"/>
        <function-ref name="isOn" scoped="" ref="0x406619f0"/>
        <function-ref name="set" scoped="" ref="0x40662a50"/>
        <function-ref name="start" scoped="" ref="0x40661288"/>
        <function-ref name="stop" scoped="" ref="0x40661500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x406ad010" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x406ad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406ad1e8"/>
        <function-ref name="runTask" scoped="" ref="0x406ad2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x406af5b8" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406af5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406aeab8"/>
        <function-ref name="fired" scoped="" ref="0x406ae288"/>
        <function-ref name="startAt" scoped="" ref="0x406ae778"/>
        <function-ref name="isRunning" scoped="" ref="0x406ae500"/>
        <function-ref name="getAlarm" scoped="" ref="0x406aed30"/>
        <function-ref name="start" scoped="" ref="0x406afd08"/>
        <function-ref name="stop" scoped="" ref="0x406ae010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40696270" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40696270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406b1d58"/>
        <function-ref name="fired" scoped="" ref="0x406b1010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406b1718"/>
        <function-ref name="isOneShot" scoped="" ref="0x406b14c0"/>
        <function-ref name="getdt" scoped="" ref="0x406af268"/>
        <function-ref name="gett0" scoped="" ref="0x406af010"/>
        <function-ref name="isRunning" scoped="" ref="0x406b1268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40696898"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406b1a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40696b18"/>
        <function-ref name="stop" scoped="" ref="0x40696d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x406e8798" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x406e8798"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406e8970"/>
        <function-ref name="runTask" scoped="" ref="0x406e8a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x406d85a0" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x406d85a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406e8098"/>
        <function-ref name="fired" scoped="" ref="0x406d7330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406d7a38"/>
        <function-ref name="isOneShot" scoped="" ref="0x406d77e0"/>
        <function-ref name="getdt" scoped="" ref="0x406e8548"/>
        <function-ref name="gett0" scoped="" ref="0x406e82f0"/>
        <function-ref name="isRunning" scoped="" ref="0x406d7588"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406d8bc8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406d7d58"/>
        <function-ref name="startOneShot" scoped="" ref="0x406d8e48"/>
        <function-ref name="stop" scoped="" ref="0x406d70d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406bb210" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406bb210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406dada8"/>
        <function-ref name="fired" scoped="" ref="0x406da010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406da748"/>
        <function-ref name="isOneShot" scoped="" ref="0x406da4e0"/>
        <function-ref name="getdt" scoped="" ref="0x406d82b0"/>
        <function-ref name="gett0" scoped="" ref="0x406d8048"/>
        <function-ref name="isRunning" scoped="" ref="0x406da278"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406bb848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406daa78"/>
        <function-ref name="startOneShot" scoped="" ref="0x406bbad8"/>
        <function-ref name="stop" scoped="" ref="0x406bbd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406f1bc8" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x406f1bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406e5238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406e5588" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406e5588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406e5cd8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406e4288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406e4010"/>
        <function-ref name="overflow" scoped="" ref="0x406e4500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40703528" loc="25:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40703528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40703700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReplyPacket" ref="0x4074bef0" loc="41:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReplyPacket" scoped="" ref="0x4074bef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407000e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x407001c0"/>
        <function-ref name="getPayload" scoped="" ref="0x407002a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40700380"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40700460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x4076a920" loc="58:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4076a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x4076aaf8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x4076abd8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x4076acb8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x4076ad98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x40703100" loc="24:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationControl" scoped="" ref="0x40703100"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x407032d8"/>
        <function-ref name="stop" scoped="" ref="0x407033b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x4076c830" loc="57:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4076c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4076ca88"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4076cb68"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4076cc48"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4076cd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40741520" loc="39:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40741520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407416f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40779908" loc="62:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40779908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40779ae0"/>
        <function-ref name="changed" scoped="" ref="0x40779bc0"/>
        <function-ref name="amGroup" scoped="" ref="0x40779ca0"/>
        <function-ref name="setAddress" scoped="" ref="0x40779d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChangeChannel" ref="0x406ff8b8" loc="31:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChangeChannel" scoped="" ref="0x406ff8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x406ffa90"/>
        <function-ref name="setChannel" scoped="" ref="0x406ffb70"/>
        <function-ref name="getChannel" scoped="" ref="0x406ffc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReplyAck" ref="0x4075bb98" loc="42:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReplyAck" scoped="" ref="0x4075bb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4075bd70"/>
        <function-ref name="noAck" scoped="" ref="0x4075be50"/>
        <function-ref name="wasAcked" scoped="" ref="0x4074f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxTimer" ref="0x40760ea8" loc="51:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxTimer" scoped="" ref="0x40760ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4075e9a8"/>
        <function-ref name="fired" scoped="" ref="0x4075fc40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4075e368"/>
        <function-ref name="isOneShot" scoped="" ref="0x4075e110"/>
        <function-ref name="getdt" scoped="" ref="0x4075ee58"/>
        <function-ref name="gett0" scoped="" ref="0x4075ec00"/>
        <function-ref name="isRunning" scoped="" ref="0x4075fe98"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4075f4e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4075e688"/>
        <function-ref name="startOneShot" scoped="" ref="0x4075f768"/>
        <function-ref name="stop" scoped="" ref="0x4075f9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Voltage" ref="0x407673d8" loc="60:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Voltage" scoped="" ref="0x407673d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40767a00"/>
        <function-ref name="readDone" scoped="" ref="0x40767c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InitDelayTimer" ref="0x4074a698" loc="48:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InitDelayTimer" scoped="" ref="0x4074a698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40763248"/>
        <function-ref name="fired" scoped="" ref="0x4075a4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4075abf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4075a998"/>
        <function-ref name="getdt" scoped="" ref="0x407636f8"/>
        <function-ref name="gett0" scoped="" ref="0x407634a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4075a740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4074acc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4075af10"/>
        <function-ref name="startOneShot" scoped="" ref="0x4075a010"/>
        <function-ref name="stop" scoped="" ref="0x4075a290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResetTimer" ref="0x40763aa8" loc="49:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResetTimer" scoped="" ref="0x40763aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40760650"/>
        <function-ref name="fired" scoped="" ref="0x40762858"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40760010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40762d08"/>
        <function-ref name="getdt" scoped="" ref="0x40760b00"/>
        <function-ref name="gett0" scoped="" ref="0x407608a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40762ab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40762100"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40760330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40762380"/>
        <function-ref name="stop" scoped="" ref="0x40762600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40703870" loc="26:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40703870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40703a48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40703b28"/>
        <function-ref name="led1On" scoped="" ref="0x40703c08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40703ce8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40703dc8"/>
        <function-ref name="get" scoped="" ref="0x40703ea8"/>
        <function-ref name="led1Off" scoped="" ref="0x40702010"/>
        <function-ref name="led2Off" scoped="" ref="0x40702390"/>
        <function-ref name="set" scoped="" ref="0x407020f0"/>
        <function-ref name="led0On" scoped="" ref="0x407021d0"/>
        <function-ref name="led2On" scoped="" ref="0x407022b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendReplyMessage" ref="0x40776010" loc="96:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendReplyMessage" scoped="" ref="0x40776010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407761e8"/>
        <function-ref name="runTask" scoped="" ref="0x407762c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReplySend" ref="0x40750b00" loc="40:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReplySend" scoped="" ref="0x40750b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40750cd8"/>
        <function-ref name="getPayload" scoped="" ref="0x40750db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40750e98"/>
        <function-ref name="cancel" scoped="" ref="0x40701010"/>
        <function-ref name="sendDone" scoped="" ref="0x407010f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40764880" loc="45:../../Reprogrammer/ReprogrammerNodeP.nc">
      <component-ref qname="ReprogrammerNodeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40764880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40764a58"/>
        <function-ref name="source" scoped="" ref="0x40764b38"/>
        <function-ref name="address" scoped="" ref="0x40764c18"/>
        <function-ref name="destination" scoped="" ref="0x40764cf8"/>
        <function-ref name="setSource" scoped="" ref="0x40764dd8"/>
        <function-ref name="setDestination" scoped="" ref="0x40764eb8"/>
        <function-ref name="type" scoped="" ref="0x4074a010"/>
        <function-ref name="setType" scoped="" ref="0x4074a0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x4074a1d0"/>
        <function-ref name="setGroup" scoped="" ref="0x4074a2b0"/>
        <function-ref name="localGroup" scoped="" ref="0x4074a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4079b6f0" loc="41:../../Deluge/DelugeC.nc">
      <component-ref qname="DelugeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4079b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4079b8c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4079b9a8"/>
        <function-ref name="led1On" scoped="" ref="0x4079ba88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4079bb68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4079bc48"/>
        <function-ref name="get" scoped="" ref="0x4079bd28"/>
        <function-ref name="led1Off" scoped="" ref="0x4079be08"/>
        <function-ref name="led2Off" scoped="" ref="0x4079a1d0"/>
        <function-ref name="set" scoped="" ref="0x4079bee8"/>
        <function-ref name="led0On" scoped="" ref="0x4079a010"/>
        <function-ref name="led2On" scoped="" ref="0x4079a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x407bee70" loc="44:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x407bee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407b7070"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x407b7150"/>
        <function-ref name="computeCrc" scoped="" ref="0x407b7230"/>
        <function-ref name="getSize" scoped="" ref="0x407b7310"/>
        <function-ref name="readDone" scoped="" ref="0x407b73f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x407cd480" loc="45:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x407cd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x407cd658"/>
        <function-ref name="writeDone" scoped="" ref="0x407cd738"/>
        <function-ref name="erase" scoped="" ref="0x407cd818"/>
        <function-ref name="eraseDone" scoped="" ref="0x407cd8f8"/>
        <function-ref name="write" scoped="" ref="0x407cd9d8"/>
        <function-ref name="sync" scoped="" ref="0x407cdab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407cdc28" loc="46:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407cdc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407cde00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407cdee0"/>
        <function-ref name="led1On" scoped="" ref="0x407bc010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407bc0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407bc1d0"/>
        <function-ref name="get" scoped="" ref="0x407bc2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x407bc390"/>
        <function-ref name="led2Off" scoped="" ref="0x407bc710"/>
        <function-ref name="set" scoped="" ref="0x407bc470"/>
        <function-ref name="led0On" scoped="" ref="0x407bc550"/>
        <function-ref name="led2On" scoped="" ref="0x407bc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x407b4230" loc="42:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x407b4230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407b4408"/>
        <function-ref name="receiveDone" scoped="" ref="0x407b44e8"/>
        <function-ref name="publish" scoped="" ref="0x407b45c8"/>
        <function-ref name="stop" scoped="" ref="0x407b46a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407c4b00" loc="50:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407c4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407c56a8"/>
        <function-ref name="fired" scoped="" ref="0x407c6938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407c5068"/>
        <function-ref name="isOneShot" scoped="" ref="0x407c6de8"/>
        <function-ref name="getdt" scoped="" ref="0x407c5b58"/>
        <function-ref name="gett0" scoped="" ref="0x407c5900"/>
        <function-ref name="isRunning" scoped="" ref="0x407c6b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407c61e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407c5388"/>
        <function-ref name="startOneShot" scoped="" ref="0x407c6460"/>
        <function-ref name="stop" scoped="" ref="0x407c66e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendAdvMsg" ref="0x407cf610" loc="54:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendAdvMsg" scoped="" ref="0x407cf610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407cf7e8"/>
        <function-ref name="getPayload" scoped="" ref="0x407cf8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407cf9a8"/>
        <function-ref name="cancel" scoped="" ref="0x407cfa88"/>
        <function-ref name="sendDone" scoped="" ref="0x407cfb68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x407c45a8" loc="49:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x407c45a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x407c4780"/>
        <function-ref name="rand32" scoped="" ref="0x407c4860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveAdvMsg" ref="0x407cfd98" loc="55:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x407cfd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x407d24c8" loc="57:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x407d24c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x407d26a0"/>
        <function-ref name="writeDone" scoped="" ref="0x407d2780"/>
        <function-ref name="erase" scoped="" ref="0x407d2860"/>
        <function-ref name="eraseDone" scoped="" ref="0x407d2940"/>
        <function-ref name="write" scoped="" ref="0x407d2a20"/>
        <function-ref name="sync" scoped="" ref="0x407d2b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalObjRecvDone" ref="0x407de7b8" loc="111:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalObjRecvDone" scoped="" ref="0x407de7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407de990"/>
        <function-ref name="runTask" scoped="" ref="0x407dea70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407d2c70" loc="59:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407d2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407d2e48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407d2f28"/>
        <function-ref name="led1On" scoped="" ref="0x407d1018"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407d10f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407d11d8"/>
        <function-ref name="get" scoped="" ref="0x407d12b8"/>
        <function-ref name="led1Off" scoped="" ref="0x407d1398"/>
        <function-ref name="led2Off" scoped="" ref="0x407d1718"/>
        <function-ref name="set" scoped="" ref="0x407d1478"/>
        <function-ref name="led0On" scoped="" ref="0x407d1558"/>
        <function-ref name="led2On" scoped="" ref="0x407d1638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugePageTransfer" ref="0x407d3b38" loc="51:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x407d3b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x407d82b0"/>
        <function-ref name="dataAvailable" scoped="" ref="0x407d3df0"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x407d3ed0"/>
        <function-ref name="receivedPage" scoped="" ref="0x407d8010"/>
        <function-ref name="setImgNum" scoped="" ref="0x407d80f0"/>
        <function-ref name="isTransferring" scoped="" ref="0x407d81d0"/>
        <function-ref name="stop" scoped="" ref="0x407d3d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x407cf150" loc="52:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x407cf150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x407cf328"/>
        <function-ref name="crc16" scoped="" ref="0x407cf408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x407c72d8" loc="47:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x407c72d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407c74b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x407c7590"/>
        <function-ref name="publish" scoped="" ref="0x407c7670"/>
        <function-ref name="stop" scoped="" ref="0x407c7750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x40817b58" loc="47:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x40817b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40817d30"/>
        <function-ref name="getPayload" scoped="" ref="0x40817e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40817ef0"/>
        <function-ref name="cancel" scoped="" ref="0x40816010"/>
        <function-ref name="sendDone" scoped="" ref="0x408160f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x40819950" loc="41:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40819950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40819b28"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40819c08"/>
        <function-ref name="computeCrc" scoped="" ref="0x40819ce8"/>
        <function-ref name="getSize" scoped="" ref="0x40819dc8"/>
        <function-ref name="readDone" scoped="" ref="0x40819ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40818370" loc="42:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40818370"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40818548"/>
        <function-ref name="writeDone" scoped="" ref="0x40818628"/>
        <function-ref name="erase" scoped="" ref="0x40818708"/>
        <function-ref name="eraseDone" scoped="" ref="0x408187e8"/>
        <function-ref name="write" scoped="" ref="0x408188c8"/>
        <function-ref name="sync" scoped="" ref="0x408189a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x40818be0" loc="44:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40818be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40818db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x40817010" loc="45:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40817010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408171e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x408173f8" loc="46:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x408173f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408175d0"/>
        <function-ref name="getPayload" scoped="" ref="0x408176b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40817790"/>
        <function-ref name="cancel" scoped="" ref="0x40817870"/>
        <function-ref name="sendDone" scoped="" ref="0x40817950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x407cbcd8" loc="39:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x407cbcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x40819470"/>
        <function-ref name="dataAvailable" scoped="" ref="0x40819010"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x408190f0"/>
        <function-ref name="receivedPage" scoped="" ref="0x408191d0"/>
        <function-ref name="setImgNum" scoped="" ref="0x408192b0"/>
        <function-ref name="isTransferring" scoped="" ref="0x40819390"/>
        <function-ref name="stop" scoped="" ref="0x407cbeb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40815010" loc="49:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40815010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408151e8"/>
        <function-ref name="noAck" scoped="" ref="0x408152c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x408153a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40815518" loc="50:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40815518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408156f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408157d0"/>
        <function-ref name="led1On" scoped="" ref="0x408158b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40815990"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40815a70"/>
        <function-ref name="get" scoped="" ref="0x40815b50"/>
        <function-ref name="led1Off" scoped="" ref="0x40815c30"/>
        <function-ref name="led2Off" scoped="" ref="0x40814010"/>
        <function-ref name="set" scoped="" ref="0x40815d10"/>
        <function-ref name="led0On" scoped="" ref="0x40815df0"/>
        <function-ref name="led2On" scoped="" ref="0x40815ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40816288" loc="48:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40816288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40816460"/>
        <function-ref name="source" scoped="" ref="0x40816540"/>
        <function-ref name="address" scoped="" ref="0x40816620"/>
        <function-ref name="destination" scoped="" ref="0x40816700"/>
        <function-ref name="setSource" scoped="" ref="0x408167e0"/>
        <function-ref name="setDestination" scoped="" ref="0x408168c0"/>
        <function-ref name="type" scoped="" ref="0x408169a0"/>
        <function-ref name="setType" scoped="" ref="0x40816a80"/>
        <function-ref name="isForMe" scoped="" ref="0x40816b60"/>
        <function-ref name="setGroup" scoped="" ref="0x40816c40"/>
        <function-ref name="localGroup" scoped="" ref="0x40816d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4081b260" loc="60:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4081b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4081b438"/>
        <function-ref name="rand32" scoped="" ref="0x4081b518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x408204b8" loc="56:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x408204b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40820690"/>
        <function-ref name="getPayload" scoped="" ref="0x40820770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40820850"/>
        <function-ref name="cancel" scoped="" ref="0x40820930"/>
        <function-ref name="sendDone" scoped="" ref="0x40820a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x408101c0" loc="50:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x408101c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40810398"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40810478"/>
        <function-ref name="computeCrc" scoped="" ref="0x40810558"/>
        <function-ref name="getSize" scoped="" ref="0x40810638"/>
        <function-ref name="readDone" scoped="" ref="0x40810718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitVecUtils" ref="0x40821930" loc="49:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x40821930"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x40821b08"/>
        <function-ref name="printBitVec" scoped="" ref="0x40821be8"/>
        <function-ref name="countOnes" scoped="" ref="0x40821cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40810bd0" loc="51:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40810bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40810da8"/>
        <function-ref name="writeDone" scoped="" ref="0x40810e88"/>
        <function-ref name="erase" scoped="" ref="0x40824010"/>
        <function-ref name="eraseDone" scoped="" ref="0x408240f0"/>
        <function-ref name="write" scoped="" ref="0x408241d0"/>
        <function-ref name="sync" scoped="" ref="0x408242b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x408244e8" loc="53:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x408244e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408246c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x408248f0" loc="54:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x408248f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40824ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x40824cd8" loc="55:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x40824cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40824eb0"/>
        <function-ref name="getPayload" scoped="" ref="0x40820010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408200f0"/>
        <function-ref name="cancel" scoped="" ref="0x408201d0"/>
        <function-ref name="sendDone" scoped="" ref="0x408202b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4081b688" loc="62:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4081b688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4081b8e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4081b9c0"/>
        <function-ref name="led1On" scoped="" ref="0x4081baa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4081bb80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4081bc60"/>
        <function-ref name="get" scoped="" ref="0x4081bd40"/>
        <function-ref name="led1Off" scoped="" ref="0x4081be20"/>
        <function-ref name="led2Off" scoped="" ref="0x408301d0"/>
        <function-ref name="set" scoped="" ref="0x4081bf00"/>
        <function-ref name="led0On" scoped="" ref="0x40830010"/>
        <function-ref name="led2On" scoped="" ref="0x408300f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x40814848" loc="47:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x40814848"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x40811010"/>
        <function-ref name="dataAvailable" scoped="" ref="0x40814b00"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x40814be0"/>
        <function-ref name="receivedPage" scoped="" ref="0x40814cc0"/>
        <function-ref name="setImgNum" scoped="" ref="0x40814da0"/>
        <function-ref name="isTransferring" scoped="" ref="0x40814e80"/>
        <function-ref name="stop" scoped="" ref="0x40814a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x4081f930" loc="58:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4081f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4081fb08"/>
        <function-ref name="noAck" scoped="" ref="0x4081fbe8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4081fcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40820ba8" loc="57:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40820ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40820d80"/>
        <function-ref name="source" scoped="" ref="0x40820e60"/>
        <function-ref name="address" scoped="" ref="0x4081f010"/>
        <function-ref name="destination" scoped="" ref="0x4081f0f0"/>
        <function-ref name="setSource" scoped="" ref="0x4081f1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x4081f2b0"/>
        <function-ref name="type" scoped="" ref="0x4081f390"/>
        <function-ref name="setType" scoped="" ref="0x4081f470"/>
        <function-ref name="isForMe" scoped="" ref="0x4081f550"/>
        <function-ref name="setGroup" scoped="" ref="0x4081f630"/>
        <function-ref name="localGroup" scoped="" ref="0x4081f710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4081d010" loc="59:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4081d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4081cb00"/>
        <function-ref name="fired" scoped="" ref="0x4081dd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4081c4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4081c268"/>
        <function-ref name="getdt" scoped="" ref="0x4081b010"/>
        <function-ref name="gett0" scoped="" ref="0x4081cd58"/>
        <function-ref name="isRunning" scoped="" ref="0x4081c010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4081d638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4081c7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4081d8b8"/>
        <function-ref name="stop" scoped="" ref="0x4081db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4087cc40" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4087cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4087ce18"/>
        <function-ref name="rand32" scoped="" ref="0x4087cef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4087c380" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4087c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4087c9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4087f010" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4087f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4087f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4087a6e0" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4087a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4087a8b8"/>
        <function-ref name="rand32" scoped="" ref="0x4087a998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4087edd0" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4087edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4087a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4087e8b0" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4087e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4087ea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVecUtils" ref="0x408815b8" loc="42:../../Deluge/BitVecUtilsC.nc">
      <component-ref qname="BitVecUtilsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x408815b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x40881790"/>
        <function-ref name="printBitVec" scoped="" ref="0x40881870"/>
        <function-ref name="countOnes" scoped="" ref="0x40881950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40880ad8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugePageTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40880ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4089a6a8"/>
        <function-ref name="fired" scoped="" ref="0x4087b938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4089a068"/>
        <function-ref name="isOneShot" scoped="" ref="0x4087bde8"/>
        <function-ref name="getdt" scoped="" ref="0x4089ab58"/>
        <function-ref name="gett0" scoped="" ref="0x4089a900"/>
        <function-ref name="isRunning" scoped="" ref="0x4087bb90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4087b1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4089a388"/>
        <function-ref name="startOneShot" scoped="" ref="0x4087b460"/>
        <function-ref name="stop" scoped="" ref="0x4087b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Crc" ref="0x4089d898" loc="46:/opt/tinyos-2.1.2/tos/system/CrcC.nc">
      <component-ref qname="CrcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x4089d898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x4089da70"/>
        <function-ref name="crc16" scoped="" ref="0x4089db50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408b0ed8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408b0ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408af0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x408af1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408af280"/>
        <function-ref name="cancel" scoped="" ref="0x408af360"/>
        <function-ref name="sendDone" scoped="" ref="0x408af440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408af580" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408af580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408af758"/>
        <function-ref name="payloadLength" scoped="" ref="0x408af838"/>
        <function-ref name="getPayload" scoped="" ref="0x408af918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408af9f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408afad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408afc18" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408afc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408afdf0"/>
        <function-ref name="source" scoped="" ref="0x408afed0"/>
        <function-ref name="address" scoped="" ref="0x40f06010"/>
        <function-ref name="destination" scoped="" ref="0x40f060f0"/>
        <function-ref name="setSource" scoped="" ref="0x40f061d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40f062b0"/>
        <function-ref name="type" scoped="" ref="0x40f06390"/>
        <function-ref name="setType" scoped="" ref="0x40f06470"/>
        <function-ref name="isForMe" scoped="" ref="0x40f06550"/>
        <function-ref name="setGroup" scoped="" ref="0x40f06630"/>
        <function-ref name="localGroup" scoped="" ref="0x40f06710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f06870" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f06870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f06a48"/>
        <function-ref name="noAck" scoped="" ref="0x40f06b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f06c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41558448" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41558448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41558620"/>
        <function-ref name="getPayload" scoped="" ref="0x41558700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415587e0"/>
        <function-ref name="cancel" scoped="" ref="0x415588c0"/>
        <function-ref name="sendDone" scoped="" ref="0x415589a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41558ae0" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41558ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41558cb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41558d98"/>
        <function-ref name="getPayload" scoped="" ref="0x41558e78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41557010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x415570f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41557230" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41557230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41557408"/>
        <function-ref name="source" scoped="" ref="0x415574e8"/>
        <function-ref name="address" scoped="" ref="0x415575c8"/>
        <function-ref name="destination" scoped="" ref="0x415576a8"/>
        <function-ref name="setSource" scoped="" ref="0x41557788"/>
        <function-ref name="setDestination" scoped="" ref="0x41557868"/>
        <function-ref name="type" scoped="" ref="0x41557948"/>
        <function-ref name="setType" scoped="" ref="0x41557a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41557b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41557be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41557cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41557e28" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41557e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41556050"/>
        <function-ref name="noAck" scoped="" ref="0x41556130"/>
        <function-ref name="wasAcked" scoped="" ref="0x41556210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41551010" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41551010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415511e8"/>
        <function-ref name="getPayload" scoped="" ref="0x415512c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415513a8"/>
        <function-ref name="cancel" scoped="" ref="0x41551488"/>
        <function-ref name="sendDone" scoped="" ref="0x41551568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x415516a8" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x415516a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41551880"/>
        <function-ref name="payloadLength" scoped="" ref="0x41551960"/>
        <function-ref name="getPayload" scoped="" ref="0x41551a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41551b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41551c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41551d40" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41551d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41551f18"/>
        <function-ref name="source" scoped="" ref="0x4154f010"/>
        <function-ref name="address" scoped="" ref="0x4154f0f0"/>
        <function-ref name="destination" scoped="" ref="0x4154f1d0"/>
        <function-ref name="setSource" scoped="" ref="0x4154f2b0"/>
        <function-ref name="setDestination" scoped="" ref="0x4154f390"/>
        <function-ref name="type" scoped="" ref="0x4154f470"/>
        <function-ref name="setType" scoped="" ref="0x4154f550"/>
        <function-ref name="isForMe" scoped="" ref="0x4154f630"/>
        <function-ref name="setGroup" scoped="" ref="0x4154f710"/>
        <function-ref name="localGroup" scoped="" ref="0x4154f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4154f950" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4154f950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4154fb28"/>
        <function-ref name="noAck" scoped="" ref="0x4154fc08"/>
        <function-ref name="wasAcked" scoped="" ref="0x4154fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415460c8" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415460c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415462a0"/>
        <function-ref name="getPayload" scoped="" ref="0x41546380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41546460"/>
        <function-ref name="cancel" scoped="" ref="0x41546540"/>
        <function-ref name="sendDone" scoped="" ref="0x41546620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41546790" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41546790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41546968"/>
        <function-ref name="getPayload" scoped="" ref="0x41546a48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41546b28"/>
        <function-ref name="cancel" scoped="" ref="0x41546c08"/>
        <function-ref name="sendDone" scoped="" ref="0x41546ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41546e28" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41546e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41591050"/>
        <function-ref name="source" scoped="" ref="0x41591130"/>
        <function-ref name="address" scoped="" ref="0x41591210"/>
        <function-ref name="destination" scoped="" ref="0x415912f0"/>
        <function-ref name="setSource" scoped="" ref="0x415913d0"/>
        <function-ref name="setDestination" scoped="" ref="0x415914b0"/>
        <function-ref name="type" scoped="" ref="0x41591590"/>
        <function-ref name="setType" scoped="" ref="0x41591670"/>
        <function-ref name="isForMe" scoped="" ref="0x41591750"/>
        <function-ref name="setGroup" scoped="" ref="0x41591830"/>
        <function-ref name="localGroup" scoped="" ref="0x41591910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408bf4c0" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408bf4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408bf698"/>
        <function-ref name="getPayload" scoped="" ref="0x408bf778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408bf858"/>
        <function-ref name="cancel" scoped="" ref="0x408bf938"/>
        <function-ref name="sendDone" scoped="" ref="0x408bfa18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x408fdb48" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408fdb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408fdd30"/>
        <function-ref name="getPayload" scoped="" ref="0x408fde10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408fdef0"/>
        <function-ref name="cancel" scoped="" ref="0x408fc010"/>
        <function-ref name="sendDone" scoped="" ref="0x408fc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408fd3d8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408fd3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408fd5c0"/>
        <function-ref name="getPayload" scoped="" ref="0x408fd6a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408fd780"/>
        <function-ref name="cancel" scoped="" ref="0x408fd860"/>
        <function-ref name="sendDone" scoped="" ref="0x408fd940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x408fce08" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408fce08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408fb010"/>
        <function-ref name="payloadLength" scoped="" ref="0x408fb0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x408fb1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408fb2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408fb390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x408fb510" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x408fb510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408fb6e8"/>
        <function-ref name="runTask" scoped="" ref="0x408fb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x408fb948" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x408fb948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408fbb20"/>
        <function-ref name="runTask" scoped="" ref="0x408fbc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x408fc230" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408fc230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408fc408"/>
        <function-ref name="source" scoped="" ref="0x408fc4e8"/>
        <function-ref name="address" scoped="" ref="0x408fc5c8"/>
        <function-ref name="destination" scoped="" ref="0x408fc6a8"/>
        <function-ref name="setSource" scoped="" ref="0x408fc788"/>
        <function-ref name="setDestination" scoped="" ref="0x408fc868"/>
        <function-ref name="type" scoped="" ref="0x408fc948"/>
        <function-ref name="setType" scoped="" ref="0x408fca28"/>
        <function-ref name="isForMe" scoped="" ref="0x408fcb08"/>
        <function-ref name="setGroup" scoped="" ref="0x408fcbe8"/>
        <function-ref name="localGroup" scoped="" ref="0x408fccc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408f3d30" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408f3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408f3f08"/>
        <function-ref name="stopDone" scoped="" ref="0x408f6010"/>
        <function-ref name="start" scoped="" ref="0x408f60f0"/>
        <function-ref name="stop" scoped="" ref="0x408f61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4090add0" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4090add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4090b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4090b190" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4090b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4090b368"/>
        <function-ref name="payloadLength" scoped="" ref="0x4090b448"/>
        <function-ref name="getPayload" scoped="" ref="0x4090b528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090b608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4090b6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408f6630" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408f6630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408f6808"/>
        <function-ref name="getPayload" scoped="" ref="0x408f68e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f69c8"/>
        <function-ref name="cancel" scoped="" ref="0x408f6aa8"/>
        <function-ref name="sendDone" scoped="" ref="0x408f6b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408f56a8" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408f56a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40909b38" loc="52:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40909b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40909d10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40909df0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40909ed0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40908010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408f5010" loc="44:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408f5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x409095b0" loc="51:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409095b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40909788"/>
        <function-ref name="noAck" scoped="" ref="0x40909868"/>
        <function-ref name="wasAcked" scoped="" ref="0x40909948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x409044d0" loc="53:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x409044d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x409046a8"/>
        <function-ref name="setRetries" scoped="" ref="0x40904788"/>
        <function-ref name="getRetries" scoped="" ref="0x40904868"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40904948"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40904a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4090b880" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4090b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4090ba58"/>
        <function-ref name="source" scoped="" ref="0x4090bb38"/>
        <function-ref name="address" scoped="" ref="0x4090bc18"/>
        <function-ref name="destination" scoped="" ref="0x4090bcf8"/>
        <function-ref name="setSource" scoped="" ref="0x4090bdd8"/>
        <function-ref name="setDestination" scoped="" ref="0x4090beb8"/>
        <function-ref name="type" scoped="" ref="0x40909010"/>
        <function-ref name="setType" scoped="" ref="0x409090f0"/>
        <function-ref name="isForMe" scoped="" ref="0x409091d0"/>
        <function-ref name="setGroup" scoped="" ref="0x409092b0"/>
        <function-ref name="localGroup" scoped="" ref="0x40909390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40904be8" loc="54:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40904be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40904dc0"/>
        <function-ref name="setChannel" scoped="" ref="0x40904ea0"/>
        <function-ref name="getChannel" scoped="" ref="0x40907010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x408ff7c0" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x408ff7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TMicro" ref="0x4046d778"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409062d8"/>
        <function-ref name="clear" scoped="" ref="0x40906688"/>
        <function-ref name="isValid" scoped="" ref="0x408fff10"/>
        <function-ref name="set" scoped="" ref="0x40906a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x409011a0" loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409011a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40901d20"/>
        <function-ref name="clear" scoped="" ref="0x40915108"/>
        <function-ref name="isValid" scoped="" ref="0x40901970"/>
        <function-ref name="set" scoped="" ref="0x409154b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40912010" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40912010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409121e8"/>
        <function-ref name="stopDone" scoped="" ref="0x409122c8"/>
        <function-ref name="start" scoped="" ref="0x409123a8"/>
        <function-ref name="stop" scoped="" ref="0x40912488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40920798" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40920798"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4091e378"/>
        <function-ref name="get" scoped="" ref="0x4091e0b8"/>
        <function-ref name="isSet" scoped="" ref="0x40920de0"/>
        <function-ref name="set" scoped="" ref="0x4091e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x409192e8" loc="71:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409192e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40919de8"/>
        <function-ref name="clear" scoped="" ref="0x409321b8"/>
        <function-ref name="isValid" scoped="" ref="0x40919a38"/>
        <function-ref name="set" scoped="" ref="0x40932568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40910010" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40910010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x409101e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4090e190" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4090e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4090e368"/>
        <function-ref name="payloadLength" scoped="" ref="0x4090e448"/>
        <function-ref name="getPayload" scoped="" ref="0x4090e528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090e608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4090e6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x409128e8" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x409128e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40912ac0"/>
        <function-ref name="getPayload" scoped="" ref="0x40912ba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40912c80"/>
        <function-ref name="cancel" scoped="" ref="0x40912d60"/>
        <function-ref name="sendDone" scoped="" ref="0x40912e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40911960" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40911960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40911b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409213e8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409213e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40920010"/>
        <function-ref name="get" scoped="" ref="0x40921cf0"/>
        <function-ref name="isSet" scoped="" ref="0x40921a30"/>
        <function-ref name="set" scoped="" ref="0x409202d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4090db38" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4090db38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4090dd10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4090ddf0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4090ded0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4090c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409112c8" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409112c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409114a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4091d8f0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4091d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4091c418"/>
        <function-ref name="clear" scoped="" ref="0x4091c7c8"/>
        <function-ref name="isValid" scoped="" ref="0x4091c068"/>
        <function-ref name="set" scoped="" ref="0x4091cb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x4091bd40" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4091bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4091d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40925010" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40925010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40925bd8"/>
        <function-ref name="get" scoped="" ref="0x40925918"/>
        <function-ref name="isSet" scoped="" ref="0x40925658"/>
        <function-ref name="set" scoped="" ref="0x40925e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4090d5b0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4090d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4090d788"/>
        <function-ref name="noAck" scoped="" ref="0x4090d868"/>
        <function-ref name="wasAcked" scoped="" ref="0x4090d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40910710" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40910710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409108e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4090c1b8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4090c1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4090c390"/>
        <function-ref name="setRetries" scoped="" ref="0x4090c470"/>
        <function-ref name="getRetries" scoped="" ref="0x4090c550"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4090c630"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4090c710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4090e880" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4090e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4090ea58"/>
        <function-ref name="source" scoped="" ref="0x4090eb38"/>
        <function-ref name="address" scoped="" ref="0x4090ec18"/>
        <function-ref name="destination" scoped="" ref="0x4090ecf8"/>
        <function-ref name="setSource" scoped="" ref="0x4090edd8"/>
        <function-ref name="setDestination" scoped="" ref="0x4090eeb8"/>
        <function-ref name="type" scoped="" ref="0x4090d010"/>
        <function-ref name="setType" scoped="" ref="0x4090d0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x4090d1d0"/>
        <function-ref name="setGroup" scoped="" ref="0x4090d2b0"/>
        <function-ref name="localGroup" scoped="" ref="0x4090d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4090c8d0" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4090c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4090cb28"/>
        <function-ref name="setChannel" scoped="" ref="0x4090cc08"/>
        <function-ref name="getChannel" scoped="" ref="0x4090cce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x4091b848" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4091b848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x4091ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40910df0" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40910df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40932f20" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40932f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4092e110"/>
        <function-ref name="stopDone" scoped="" ref="0x4092e1f0"/>
        <function-ref name="start" scoped="" ref="0x4092e2d0"/>
        <function-ref name="stop" scoped="" ref="0x4092e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4094a798" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4094a798"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40949378"/>
        <function-ref name="get" scoped="" ref="0x409490b8"/>
        <function-ref name="isSet" scoped="" ref="0x4094ade0"/>
        <function-ref name="set" scoped="" ref="0x40949638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x40928288" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x40928288"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40928460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x4093ac00" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x4093ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4093ae58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40927010"/>
        <function-ref name="request" scoped="" ref="0x409270f0"/>
        <function-ref name="granted" scoped="" ref="0x409271d0"/>
        <function-ref name="isOwner" scoped="" ref="0x409272b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4092cf08" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4092cf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4092b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4092e810" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4092e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4092e9e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4092eac8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4092eba8"/>
        <function-ref name="cancel" scoped="" ref="0x4092ec88"/>
        <function-ref name="sendDone" scoped="" ref="0x4092ed68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4092c890" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4092c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4092ca68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x409331f8" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x409331f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x409333d0"/>
        <function-ref name="address" scoped="" ref="0x409334b0"/>
        <function-ref name="destination" scoped="" ref="0x40933590"/>
        <function-ref name="setSource" scoped="" ref="0x40933670"/>
        <function-ref name="setDestination" scoped="" ref="0x40933750"/>
        <function-ref name="pan" scoped="" ref="0x40933830"/>
        <function-ref name="setPan" scoped="" ref="0x40933910"/>
        <function-ref name="isForMe" scoped="" ref="0x409339f0"/>
        <function-ref name="localPan" scoped="" ref="0x40933ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x40933d58" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40933d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4093c010"/>
        <function-ref name="payloadLength" scoped="" ref="0x4093c0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x4093c1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4093c2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4093c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4094c3e8" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4094c3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4094a010"/>
        <function-ref name="get" scoped="" ref="0x4094ccf0"/>
        <function-ref name="isSet" scoped="" ref="0x4094ca30"/>
        <function-ref name="set" scoped="" ref="0x4094a2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4093cb38" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4093cb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4093cd10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4093cdf0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4093ced0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40939010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x4092add0" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x4092add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40929010"/>
        <function-ref name="payloadLength" scoped="" ref="0x409290f0"/>
        <function-ref name="getPayload" scoped="" ref="0x409291d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409292b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40929390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4092c1f8" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4092c1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4092c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40948ac8" loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40948ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409466f0"/>
        <function-ref name="clear" scoped="" ref="0x40946aa0"/>
        <function-ref name="isValid" scoped="" ref="0x40946340"/>
        <function-ref name="set" scoped="" ref="0x40946e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40949ee0" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40949ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40948578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4094d010" loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4094d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4094dbd8"/>
        <function-ref name="get" scoped="" ref="0x4094d918"/>
        <function-ref name="isSet" scoped="" ref="0x4094d658"/>
        <function-ref name="set" scoped="" ref="0x4094de98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4093c5b0" loc="68:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4093c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4093c788"/>
        <function-ref name="noAck" scoped="" ref="0x4093c868"/>
        <function-ref name="wasAcked" scoped="" ref="0x4093c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x4093d690" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x4093d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4093d868"/>
        <function-ref name="getPayload" scoped="" ref="0x4093d948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4093da28"/>
        <function-ref name="cancel" scoped="" ref="0x4093db08"/>
        <function-ref name="sendDone" scoped="" ref="0x4093dbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x4092b618" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x4092b618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4092b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x409391b8" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x409391b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40939390"/>
        <function-ref name="setRetries" scoped="" ref="0x40939470"/>
        <function-ref name="getRetries" scoped="" ref="0x40939550"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40939630"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40939710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x409398d0" loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x409398d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40939aa8"/>
        <function-ref name="setChannel" scoped="" ref="0x40939b88"/>
        <function-ref name="getChannel" scoped="" ref="0x40939c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4092a0b8" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4092a0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4092a290"/>
        <function-ref name="source" scoped="" ref="0x4092a370"/>
        <function-ref name="address" scoped="" ref="0x4092a450"/>
        <function-ref name="destination" scoped="" ref="0x4092a530"/>
        <function-ref name="setSource" scoped="" ref="0x4092a610"/>
        <function-ref name="setDestination" scoped="" ref="0x4092a6f0"/>
        <function-ref name="type" scoped="" ref="0x4092a7d0"/>
        <function-ref name="setType" scoped="" ref="0x4092a8b0"/>
        <function-ref name="isForMe" scoped="" ref="0x4092a990"/>
        <function-ref name="setGroup" scoped="" ref="0x4092aa70"/>
        <function-ref name="localGroup" scoped="" ref="0x4092ab50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x409455b0" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409455b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409440d8"/>
        <function-ref name="clear" scoped="" ref="0x40944488"/>
        <function-ref name="isValid" scoped="" ref="0x40945d00"/>
        <function-ref name="set" scoped="" ref="0x40944838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x4093de20" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x4093de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40928010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x409499e8" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409499e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40949bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x4092bcf8" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x4092bcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4092bed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x4095e3a0" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x4095e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4095e578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x40952d28" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40952d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x40952f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x4095f428" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4095f428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4095f600"/>
        <function-ref name="checkFrame" scoped="" ref="0x4095f6e0"/>
        <function-ref name="source" scoped="" ref="0x4095f7c0"/>
        <function-ref name="destination" scoped="" ref="0x4095f8a0"/>
        <function-ref name="setSource" scoped="" ref="0x4095f980"/>
        <function-ref name="setDestination" scoped="" ref="0x4095fa60"/>
        <function-ref name="setGroup" scoped="" ref="0x4095fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x409649b0" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x409649b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x40964b88"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x40964c68"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x40964d48"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x40964e28"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x40964f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40980220" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40980220"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409803f8"/>
        <function-ref name="wait" scoped="" ref="0x409804d8"/>
        <function-ref name="cancel" scoped="" ref="0x409805b8"/>
        <function-ref name="isFree" scoped="" ref="0x40980698"/>
        <function-ref name="getNow" scoped="" ref="0x40980778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x4097c420" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x4097c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4097c678"/>
        <function-ref name="payloadLength" scoped="" ref="0x4097c758"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4097c838"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4097c918"/>
        <function-ref name="headerLength" scoped="" ref="0x4097c9f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4097cad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x4097ce68" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x4097ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40984990"/>
        <function-ref name="clear" scoped="" ref="0x40984d40"/>
        <function-ref name="isValid" scoped="" ref="0x409845e0"/>
        <function-ref name="set" scoped="" ref="0x4097b108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x40958518" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x40958518"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409586f0"/>
        <function-ref name="headerLength" scoped="" ref="0x409587d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409588b0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40958990"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40958a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x40952010" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x40952010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x409521e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x409538d8" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x409538d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40953ab0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40953b90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40953c70"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40953d50"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40953e30"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40953f10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4095b010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4095b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40985c00" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40985c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40985dd8"/>
        <function-ref name="getDSN" scoped="" ref="0x40985eb8"/>
        <function-ref name="setFCF" scoped="" ref="0x40963010"/>
        <function-ref name="isAckFrame" scoped="" ref="0x409630f0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x409631d0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x409632b0"/>
        <function-ref name="setDSN" scoped="" ref="0x40963390"/>
        <function-ref name="createAckReply" scoped="" ref="0x40963470"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40963550"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40963630"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40963710"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x409637f0"/>
        <function-ref name="localAddr" scoped="" ref="0x409638d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40963a30"/>
        <function-ref name="localPan" scoped="" ref="0x40963b10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40963bf0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40963cd0"/>
        <function-ref name="setFramePending" scoped="" ref="0x40963db0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40963e90"/>
        <function-ref name="isForMe" scoped="" ref="0x40977010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x409770f0"/>
        <function-ref name="getFCF" scoped="" ref="0x409771d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x409772b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40977390"/>
        <function-ref name="getFramePending" scoped="" ref="0x40977470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x4095a010" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x4095a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4095a1e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x4095a2c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4095a3a8"/>
        <function-ref name="getSender" scoped="" ref="0x4095a488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListeningConfig" ref="0x4095ded0" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListeningConfig" scoped="" ref="0x4095ded0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getListenLength" scoped="" ref="0x409660c0"/>
        <function-ref name="ackRequested" scoped="" ref="0x409661a0"/>
        <function-ref name="needsAutoAckRequest" scoped="" ref="0x40966280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x40968e28" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40968e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4094e050"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4094e130"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4094e210"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4094e2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x409b4010" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409b4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409b41f8"/>
        <function-ref name="wait" scoped="" ref="0x409b42d8"/>
        <function-ref name="cancel" scoped="" ref="0x409b43b8"/>
        <function-ref name="isFree" scoped="" ref="0x409b4498"/>
        <function-ref name="getNow" scoped="" ref="0x409b4578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x409b48c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x409b48c8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x404137d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x404137d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40727ce8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409d5d90"/>
        <function-ref name="fired" scoped="" ref="0x409d5560"/>
        <function-ref name="startAt" scoped="" ref="0x409d5a50"/>
        <function-ref name="isRunning" scoped="" ref="0x409d57d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x409d4048"/>
        <function-ref name="start" scoped="" ref="0x409d5048"/>
        <function-ref name="stop" scoped="" ref="0x409d52e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x415a7250" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x415a7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x415a7438"/>
        <function-ref name="wait" scoped="" ref="0x415a7518"/>
        <function-ref name="cancel" scoped="" ref="0x415a75f8"/>
        <function-ref name="isFree" scoped="" ref="0x415a76d8"/>
        <function-ref name="getNow" scoped="" ref="0x415a77b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x415a7a48" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x415a7a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40727ce8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415a4010"/>
        <function-ref name="fired" scoped="" ref="0x415a6718"/>
        <function-ref name="startAt" scoped="" ref="0x415a6c08"/>
        <function-ref name="isRunning" scoped="" ref="0x415a6990"/>
        <function-ref name="getAlarm" scoped="" ref="0x415a4288"/>
        <function-ref name="start" scoped="" ref="0x415a6200"/>
        <function-ref name="stop" scoped="" ref="0x415a64a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x415a4498" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x415a4498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x415a4670"/>
        <function-ref name="suspend" scoped="" ref="0x415a4750"/>
        <function-ref name="resume" scoped="" ref="0x415a4830"/>
        <function-ref name="run" scoped="" ref="0x415a4910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x409d6a50" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x409d6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x409d6c28"/>
        <function-ref name="suspend" scoped="" ref="0x409d6d08"/>
        <function-ref name="resume" scoped="" ref="0x409d6de8"/>
        <function-ref name="run" scoped="" ref="0x409d6ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a3c410" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a3c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a3c5e8"/>
        <function-ref name="cancel" scoped="" ref="0x40a3c6c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a3c7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a3c908" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a3c908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a3cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40a3d108" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40a3d108"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40a3d2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40a3fa80" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40a3fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3fc58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a3fd38"/>
        <function-ref name="getPayload" scoped="" ref="0x40a3fe18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a3fef8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a3e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40a3e1e8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40a3e1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a3e3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x40a3e4b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a3e590"/>
        <function-ref name="cancel" scoped="" ref="0x40a3e670"/>
        <function-ref name="sendDone" scoped="" ref="0x40a3e750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40a3ed08" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40a3ed08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a3eef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a3dc40" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a3dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3de18"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a3def8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a3c010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a3c0f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a3c1d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a3c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a3cc40" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a3cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40a3ce18"/>
        <function-ref name="checkFrame" scoped="" ref="0x40a3cef8"/>
        <function-ref name="source" scoped="" ref="0x40a3b010"/>
        <function-ref name="destination" scoped="" ref="0x40a3b0f0"/>
        <function-ref name="setSource" scoped="" ref="0x40a3b1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40a3b2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40a3b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a3e928" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a3e928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a3eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40a3d4e8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40a3d4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a3d6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40a41e90" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40a41e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40a3f080"/>
        <function-ref name="source" scoped="" ref="0x40a3f160"/>
        <function-ref name="address" scoped="" ref="0x40a3f240"/>
        <function-ref name="destination" scoped="" ref="0x40a3f320"/>
        <function-ref name="setSource" scoped="" ref="0x40a3f400"/>
        <function-ref name="setDestination" scoped="" ref="0x40a3f4e0"/>
        <function-ref name="type" scoped="" ref="0x40a3f5c0"/>
        <function-ref name="setType" scoped="" ref="0x40a3f6a0"/>
        <function-ref name="isForMe" scoped="" ref="0x40a3f780"/>
        <function-ref name="setGroup" scoped="" ref="0x40a3f860"/>
        <function-ref name="localGroup" scoped="" ref="0x40a3f940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40a3d8c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40a3d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a3dab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x415e9090" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x415e9090"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x415e9268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41594b78" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41594b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41594d50"/>
        <function-ref name="cancel" scoped="" ref="0x41594e30"/>
        <function-ref name="sendDone" scoped="" ref="0x41594f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x41595868" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x41595868"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x41595a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41596230" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41596230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41596408"/>
        <function-ref name="payloadLength" scoped="" ref="0x415964e8"/>
        <function-ref name="getPayload" scoped="" ref="0x415965c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415966a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41596788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41596960" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41596960"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41596b48"/>
        <function-ref name="getPayload" scoped="" ref="0x41596c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41596d08"/>
        <function-ref name="cancel" scoped="" ref="0x41596de8"/>
        <function-ref name="sendDone" scoped="" ref="0x41596ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x415954a8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x415954a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41595690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4159ee60" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4159ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41597050"/>
        <function-ref name="payloadLength" scoped="" ref="0x41597130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41597210"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x415972f0"/>
        <function-ref name="headerLength" scoped="" ref="0x415973d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x415974b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x415e93c8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x415e93c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415e9620"/>
        <function-ref name="checkFrame" scoped="" ref="0x415e9700"/>
        <function-ref name="source" scoped="" ref="0x415e97e0"/>
        <function-ref name="destination" scoped="" ref="0x415e98c0"/>
        <function-ref name="setSource" scoped="" ref="0x415e99a0"/>
        <function-ref name="setDestination" scoped="" ref="0x415e9a80"/>
        <function-ref name="setGroup" scoped="" ref="0x415e9b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x415e9ca0" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x415e9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x415e9e78"/>
        <function-ref name="changed" scoped="" ref="0x415e8010"/>
        <function-ref name="amGroup" scoped="" ref="0x415e80f0"/>
        <function-ref name="setAddress" scoped="" ref="0x415e81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x415943e0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x415943e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x415945b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41594698"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41594778"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41594858"/>
        <function-ref name="headerLength" scoped="" ref="0x41594938"/>
        <function-ref name="metadataLength" scoped="" ref="0x41594a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x415950c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x415950c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x415952b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x41595c48" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x41595c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41595e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x415975f0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415975f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415977c8"/>
        <function-ref name="source" scoped="" ref="0x415978a8"/>
        <function-ref name="address" scoped="" ref="0x41597988"/>
        <function-ref name="destination" scoped="" ref="0x41597a68"/>
        <function-ref name="setSource" scoped="" ref="0x41597b48"/>
        <function-ref name="setDestination" scoped="" ref="0x41597c28"/>
        <function-ref name="type" scoped="" ref="0x41597d08"/>
        <function-ref name="setType" scoped="" ref="0x41597de8"/>
        <function-ref name="isForMe" scoped="" ref="0x41597ec8"/>
        <function-ref name="setGroup" scoped="" ref="0x41596010"/>
        <function-ref name="localGroup" scoped="" ref="0x415960f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x41594068" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x41594068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41594250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40a2d428" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40a2d428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40a2d600"/>
        <function-ref name="changed" scoped="" ref="0x40a2d6e0"/>
        <function-ref name="amGroup" scoped="" ref="0x40a2d7c0"/>
        <function-ref name="setAddress" scoped="" ref="0x40a2d8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a37e70" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a37e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a36070"/>
        <function-ref name="cancel" scoped="" ref="0x40a36150"/>
        <function-ref name="sendDone" scoped="" ref="0x40a36230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40a36370" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a36370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a36548"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a36628"/>
        <function-ref name="request" scoped="" ref="0x40a36708"/>
        <function-ref name="granted" scoped="" ref="0x40a367e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40a368c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40a37948" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40a37948"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a37b20"/>
        <function-ref name="cancel" scoped="" ref="0x40a37c00"/>
        <function-ref name="sendDone" scoped="" ref="0x40a37ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40a93030" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40a93030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40a93218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40a932f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40a938e8" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40a938e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40a93ad0"/>
        <function-ref name="configure" scoped="" ref="0x40a93bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a498c0" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a498c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a49aa8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a49b88"/>
        <function-ref name="request" scoped="" ref="0x40a49c68"/>
        <function-ref name="granted" scoped="" ref="0x40a49d48"/>
        <function-ref name="isOwner" scoped="" ref="0x40a49e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40a93438" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a93438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a93610"/>
        <function-ref name="userId" scoped="" ref="0x40a936f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4160bcb8" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4160bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4160be90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41609010" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41609010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x416091e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x416092c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x416093a8"/>
        <function-ref name="dequeue" scoped="" ref="0x41609488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41607750" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41607750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41607938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41607a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41606030" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41606030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41606218"/>
        <function-ref name="configure" scoped="" ref="0x416062f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41606458" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41606458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41606630"/>
        <function-ref name="isEmpty" scoped="" ref="0x41606710"/>
        <function-ref name="isEnqueued" scoped="" ref="0x416067f0"/>
        <function-ref name="dequeue" scoped="" ref="0x416068d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41607010" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41607010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x416071f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x416072d8"/>
        <function-ref name="request" scoped="" ref="0x416073b8"/>
        <function-ref name="granted" scoped="" ref="0x41607498"/>
        <function-ref name="isOwner" scoped="" ref="0x41607578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41607b58" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41607b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41607d30"/>
        <function-ref name="userId" scoped="" ref="0x41607e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41606a50" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41606a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41606c28"/>
        <function-ref name="runTask" scoped="" ref="0x41606d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a94d68" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a94d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab3010"/>
        <function-ref name="cancel" scoped="" ref="0x40ab30f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ab31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ab3330" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ab3330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ab3508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40a90808" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40a90808"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40a909e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40a916d8" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40a916d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a918b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a91990"/>
        <function-ref name="getPayload" scoped="" ref="0x40a91a70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a91b50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a91c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x40a945d0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a945d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a947a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a94888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a94968"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a94a48"/>
        <function-ref name="headerLength" scoped="" ref="0x40a94b28"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a94c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40a90b50" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40a90b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40a90d28"/>
        <function-ref name="getDSN" scoped="" ref="0x40a90e08"/>
        <function-ref name="setFCF" scoped="" ref="0x40a90ee8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40a95010"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40a950f0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40a951d0"/>
        <function-ref name="setDSN" scoped="" ref="0x40a952b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x40a95390"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40a95470"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40a95550"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40a95630"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40a95710"/>
        <function-ref name="localAddr" scoped="" ref="0x40a957f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40a95950"/>
        <function-ref name="localPan" scoped="" ref="0x40a95a30"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40a95b10"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40a95bf0"/>
        <function-ref name="setFramePending" scoped="" ref="0x40a95cd0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40a95db0"/>
        <function-ref name="isForMe" scoped="" ref="0x40a95e90"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40a94010"/>
        <function-ref name="getFCF" scoped="" ref="0x40a940f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40a941d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40a942b0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40a94390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40a91d70" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40a91d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a90010"/>
        <function-ref name="getPayload" scoped="" ref="0x40a900f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a901d0"/>
        <function-ref name="cancel" scoped="" ref="0x40a902b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a90390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40a904f0" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40a904f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a906c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ad06b0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ad06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ad0888"/>
        <function-ref name="cancel" scoped="" ref="0x40ad0968"/>
        <function-ref name="sendDone" scoped="" ref="0x40ad0a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ad0ba8" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ad0ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ad0d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40aaee98" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40aaee98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ad10c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ad11a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ad1280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ad1360"/>
        <function-ref name="headerLength" scoped="" ref="0x40ad1440"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ad1520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x40ad1b78" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x40ad1b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ad1d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40ad0ee0" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40ad0ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40acf0e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40acf1c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40acf2a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40acf380"/>
        <function-ref name="headerLength" scoped="" ref="0x40acf460"/>
        <function-ref name="metadataLength" scoped="" ref="0x40acf540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x40ad1680" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x40ad1680"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ad1858"/>
        <function-ref name="cancel" scoped="" ref="0x40ad1938"/>
        <function-ref name="sendDone" scoped="" ref="0x40ad1a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40aae668" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40aae668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aae840"/>
        <function-ref name="cancel" scoped="" ref="0x40aae920"/>
        <function-ref name="sendDone" scoped="" ref="0x40aaea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40aaeb60" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40aaeb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40aaed38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x40ad1eb0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x40ad1eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ad00c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ad01a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ad0280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ad0360"/>
        <function-ref name="headerLength" scoped="" ref="0x40ad0440"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ad0520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40b244f0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40b244f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40b246c8"/>
        <function-ref name="address" scoped="" ref="0x40b247a8"/>
        <function-ref name="destination" scoped="" ref="0x40b24888"/>
        <function-ref name="setSource" scoped="" ref="0x40b24968"/>
        <function-ref name="setDestination" scoped="" ref="0x40b24a48"/>
        <function-ref name="pan" scoped="" ref="0x40b24b28"/>
        <function-ref name="setPan" scoped="" ref="0x40b24c08"/>
        <function-ref name="isForMe" scoped="" ref="0x40b24ce8"/>
        <function-ref name="localPan" scoped="" ref="0x40b24dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40b24f08" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40b24f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b230f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b231d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b232b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b23390"/>
        <function-ref name="headerLength" scoped="" ref="0x40b23470"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b23550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40b26a58" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40b26a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40b26c30"/>
        <function-ref name="getDSN" scoped="" ref="0x40b26d10"/>
        <function-ref name="setFCF" scoped="" ref="0x40b26df0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40b26ed0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40b25010"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40b250f0"/>
        <function-ref name="setDSN" scoped="" ref="0x40b251d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x40b252b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40b25390"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40b25470"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40b25550"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40b25630"/>
        <function-ref name="localAddr" scoped="" ref="0x40b25710"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40b25870"/>
        <function-ref name="localPan" scoped="" ref="0x40b25950"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40b25a30"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40b25b10"/>
        <function-ref name="setFramePending" scoped="" ref="0x40b25bf0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40b25cd0"/>
        <function-ref name="isForMe" scoped="" ref="0x40b25db0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40b25e90"/>
        <function-ref name="getFCF" scoped="" ref="0x40b24010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40b240f0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40b241d0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40b242b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40b236e0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40b236e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b238b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b23998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b23a78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b23b58"/>
        <function-ref name="headerLength" scoped="" ref="0x40b23c38"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b23d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x4161b6b0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x4161b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x4161b888"/>
        <function-ref name="address" scoped="" ref="0x4161b968"/>
        <function-ref name="destination" scoped="" ref="0x4161ba48"/>
        <function-ref name="setSource" scoped="" ref="0x4161bb28"/>
        <function-ref name="setDestination" scoped="" ref="0x4161bc08"/>
        <function-ref name="pan" scoped="" ref="0x4161bce8"/>
        <function-ref name="setPan" scoped="" ref="0x4161bdc8"/>
        <function-ref name="isForMe" scoped="" ref="0x4161bea8"/>
        <function-ref name="localPan" scoped="" ref="0x4161a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4161a150" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4161a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4161a328"/>
        <function-ref name="payloadLength" scoped="" ref="0x4161a408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4161a4e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4161a5c8"/>
        <function-ref name="headerLength" scoped="" ref="0x4161a6a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4161a788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x41622bc0" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x41622bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x41622d98"/>
        <function-ref name="getDSN" scoped="" ref="0x41622e78"/>
        <function-ref name="setFCF" scoped="" ref="0x4161c010"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4161c0f0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4161c1d0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4161c2b0"/>
        <function-ref name="setDSN" scoped="" ref="0x4161c390"/>
        <function-ref name="createAckReply" scoped="" ref="0x4161c470"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4161c550"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4161c630"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4161c710"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4161c7f0"/>
        <function-ref name="localAddr" scoped="" ref="0x4161c8d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4161ca30"/>
        <function-ref name="localPan" scoped="" ref="0x4161cb10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4161cbf0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4161ccd0"/>
        <function-ref name="setFramePending" scoped="" ref="0x4161cdb0"/>
        <function-ref name="setDestPan" scoped="" ref="0x4161ce90"/>
        <function-ref name="isForMe" scoped="" ref="0x4161b010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4161b0f0"/>
        <function-ref name="getFCF" scoped="" ref="0x4161b1d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4161b2b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4161b390"/>
        <function-ref name="getFramePending" scoped="" ref="0x4161b470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4161a8f8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4161a8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4161aad0"/>
        <function-ref name="changed" scoped="" ref="0x4161abb0"/>
        <function-ref name="amGroup" scoped="" ref="0x4161ac90"/>
        <function-ref name="setAddress" scoped="" ref="0x4161ad70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4161aed0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4161aed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416190c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x416191a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41619280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41619360"/>
        <function-ref name="headerLength" scoped="" ref="0x41619440"/>
        <function-ref name="metadataLength" scoped="" ref="0x41619520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b4e280" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b4e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b4e458"/>
        <function-ref name="cancel" scoped="" ref="0x40b4e538"/>
        <function-ref name="sendDone" scoped="" ref="0x40b4e618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b4e778" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b4e778"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b4e950"/>
        <function-ref name="header" scoped="" ref="0x40b4ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b1f8a0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b1f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b1fa78"/>
        <function-ref name="cancel" scoped="" ref="0x40b1fb58"/>
        <function-ref name="sendDone" scoped="" ref="0x40b1fc38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b4eb90" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b4eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40b4ed68"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40b4ee48"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40b4ef28"/>
        <function-ref name="getSender" scoped="" ref="0x40b4c018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b1fd78" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b1fd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b4e010"/>
        <function-ref name="header" scoped="" ref="0x40b4e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4163da70" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4163da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4163dc48"/>
        <function-ref name="cancel" scoped="" ref="0x4163dd28"/>
        <function-ref name="sendDone" scoped="" ref="0x4163de08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4163c010" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4163c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4163c1e8"/>
        <function-ref name="header" scoped="" ref="0x4163c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x4163a070" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4163a070"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4163a248"/>
        <function-ref name="clearAll" scoped="" ref="0x4163a328"/>
        <function-ref name="get" scoped="" ref="0x4163a408"/>
        <function-ref name="set" scoped="" ref="0x4163a4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41640d90" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41640d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4163d010"/>
        <function-ref name="cancel" scoped="" ref="0x4163d0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4163d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x4163c9c0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4163c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4163cb98"/>
        <function-ref name="insertNode" scoped="" ref="0x4163cc78"/>
        <function-ref name="getNode" scoped="" ref="0x4163cd58"/>
        <function-ref name="evicted" scoped="" ref="0x4163ce38"/>
        <function-ref name="getIndex" scoped="" ref="0x4163cf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4163d310" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4163d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4163d4e8"/>
        <function-ref name="header" scoped="" ref="0x4163d5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4163d708" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4163d708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4163d8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x4163c408" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x4163c408"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4163c5e0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x4163c6c0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4163c7a0"/>
        <function-ref name="getSender" scoped="" ref="0x4163c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40b48980" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40b48980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40b48b58"/>
        <function-ref name="insertNode" scoped="" ref="0x40b48c38"/>
        <function-ref name="getNode" scoped="" ref="0x40b48d18"/>
        <function-ref name="evicted" scoped="" ref="0x40b48df8"/>
        <function-ref name="getIndex" scoped="" ref="0x40b48ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40b42348" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b42348"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b42520"/>
        <function-ref name="clearAll" scoped="" ref="0x40b42600"/>
        <function-ref name="get" scoped="" ref="0x40b426e0"/>
        <function-ref name="set" scoped="" ref="0x40b427c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40b45908" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40b45908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40b45ae0"/>
        <function-ref name="insertNode" scoped="" ref="0x40b45bc0"/>
        <function-ref name="getNode" scoped="" ref="0x40b45ca0"/>
        <function-ref name="evicted" scoped="" ref="0x40b45d80"/>
        <function-ref name="getIndex" scoped="" ref="0x40b45e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b45570" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b45570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b45748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x416394c0" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x416394c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41639698"/>
        <function-ref name="clearAll" scoped="" ref="0x41639778"/>
        <function-ref name="get" scoped="" ref="0x41639858"/>
        <function-ref name="set" scoped="" ref="0x41639938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b68bb8" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b68bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b68d90"/>
        <function-ref name="cancel" scoped="" ref="0x40b68e70"/>
        <function-ref name="sendDone" scoped="" ref="0x40b67010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b67170" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b67170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b67348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x40b66868" loc="93:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40b66868"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40b66a40"/>
        <function-ref name="noAck" scoped="" ref="0x40b66b20"/>
        <function-ref name="wasAcked" scoped="" ref="0x40b66c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b6e470" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b6e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b6e648"/>
        <function-ref name="cancel" scoped="" ref="0x40b6e728"/>
        <function-ref name="sendDone" scoped="" ref="0x40b6e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40b683f0" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40b683f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b685c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b686a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b68788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b68868"/>
        <function-ref name="headerLength" scoped="" ref="0x40b68948"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b68a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40b674a8" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40b674a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b67680"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b67760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b67840"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b67920"/>
        <function-ref name="headerLength" scoped="" ref="0x40b67a00"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b67ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x40b66190" loc="92:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40b66190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40b66368"/>
        <function-ref name="setRetries" scoped="" ref="0x40b66448"/>
        <function-ref name="getRetries" scoped="" ref="0x40b66528"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40b66608"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40b666e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b6e968" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b6e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b6eb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40b67c20" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b67c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40b67df8"/>
        <function-ref name="noAck" scoped="" ref="0x40b67ed8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40b66010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40b6ec80" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40b6ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40b6ee58"/>
        <function-ref name="setRetries" scoped="" ref="0x40b68010"/>
        <function-ref name="getRetries" scoped="" ref="0x40b680f0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40b681d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40b682b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40bdbbd0" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40bdbbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bdbda8"/>
        <function-ref name="stopDone" scoped="" ref="0x40bdbe88"/>
        <function-ref name="start" scoped="" ref="0x40bd0010"/>
        <function-ref name="stop" scoped="" ref="0x40bd00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bcfe10" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bcfe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bce010"/>
        <function-ref name="cancel" scoped="" ref="0x40bce0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bce1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bce330" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bce330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bce508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bd0250" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bd0250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bd0428"/>
        <function-ref name="cancel" scoped="" ref="0x40bd0508"/>
        <function-ref name="sendDone" scoped="" ref="0x40bd05e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40bd0a60" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40bd0a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bd0c38"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bd0d18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bd0df8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bd0ed8"/>
        <function-ref name="headerLength" scoped="" ref="0x40bcf010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40bcf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40bcf230" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40bcf230"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40bcf408"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40bcf4e8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40bcf5c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40bcf6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40bcf838" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40bcf838"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bcfa10"/>
        <function-ref name="stopDone" scoped="" ref="0x40bcfaf0"/>
        <function-ref name="start" scoped="" ref="0x40bcfbd0"/>
        <function-ref name="stop" scoped="" ref="0x40bcfcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bd0748" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bd0748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bd0920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40bce668" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40bce668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bce840"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bce920"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bcea00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bceae0"/>
        <function-ref name="headerLength" scoped="" ref="0x40bcebc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40bceca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40bcee00" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40bcee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getListenLength" scoped="" ref="0x40bcd010"/>
        <function-ref name="ackRequested" scoped="" ref="0x40bcd0f0"/>
        <function-ref name="needsAutoAckRequest" scoped="" ref="0x40bcd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40bcd310" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bcd310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40bcd4e8"/>
        <function-ref name="noAck" scoped="" ref="0x40bcd5c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40bcd6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41678b40" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41678b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41678d18"/>
        <function-ref name="stopDone" scoped="" ref="0x41678df8"/>
        <function-ref name="start" scoped="" ref="0x41678ed8"/>
        <function-ref name="stop" scoped="" ref="0x41673010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41672d30" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41672d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41672f08"/>
        <function-ref name="cancel" scoped="" ref="0x41671010"/>
        <function-ref name="sendDone" scoped="" ref="0x416710f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41671250" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41671250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41671428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x4166d9f0" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4166d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x4166dc48"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x4166dd28"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x4166de08"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x4166dee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41673170" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41673170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41673348"/>
        <function-ref name="cancel" scoped="" ref="0x41673428"/>
        <function-ref name="sendDone" scoped="" ref="0x41673508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41673980" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41673980"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41673b58"/>
        <function-ref name="payloadLength" scoped="" ref="0x41673c38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41673d18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41673df8"/>
        <function-ref name="headerLength" scoped="" ref="0x41673ed8"/>
        <function-ref name="metadataLength" scoped="" ref="0x41672010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x41672150" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x41672150"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41672328"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41672408"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x416724e8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x416725c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x41670250" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x41670250"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getListenLength" scoped="" ref="0x41670428"/>
        <function-ref name="ackRequested" scoped="" ref="0x41670508"/>
        <function-ref name="needsAutoAckRequest" scoped="" ref="0x416705e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41671588" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41671588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41671760"/>
        <function-ref name="payloadLength" scoped="" ref="0x41671840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41671920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41671a00"/>
        <function-ref name="headerLength" scoped="" ref="0x41671ae0"/>
        <function-ref name="metadataLength" scoped="" ref="0x41671bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x41672758" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x41672758"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41672930"/>
        <function-ref name="stopDone" scoped="" ref="0x41672a10"/>
        <function-ref name="start" scoped="" ref="0x41672af0"/>
        <function-ref name="stop" scoped="" ref="0x41672bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="transition" ref="0x4166cc58" loc="111:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="transition" scoped="" ref="0x4166cc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4166ce30"/>
        <function-ref name="runTask" scoped="" ref="0x4166cf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41673668" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41673668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41673840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4166c040" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4166c040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4166c218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4166c2f8"/>
        <function-ref name="led1On" scoped="" ref="0x4166c3d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4166c4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4166c598"/>
        <function-ref name="get" scoped="" ref="0x4166c678"/>
        <function-ref name="led1Off" scoped="" ref="0x4166c758"/>
        <function-ref name="led0On" scoped="" ref="0x4166cad8"/>
        <function-ref name="set" scoped="" ref="0x4166c918"/>
        <function-ref name="led2On" scoped="" ref="0x4166c838"/>
        <function-ref name="led2Off" scoped="" ref="0x4166c9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x41671d00" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41671d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41671ed8"/>
        <function-ref name="noAck" scoped="" ref="0x41670010"/>
        <function-ref name="wasAcked" scoped="" ref="0x416700f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x416707b8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x416707b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4166d330"/>
        <function-ref name="fired" scoped="" ref="0x4166f560"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4166fc68"/>
        <function-ref name="isOneShot" scoped="" ref="0x4166fa10"/>
        <function-ref name="getdt" scoped="" ref="0x4166d7e0"/>
        <function-ref name="gett0" scoped="" ref="0x4166d588"/>
        <function-ref name="isRunning" scoped="" ref="0x4166f7b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41670de0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4166d010"/>
        <function-ref name="startOneShot" scoped="" ref="0x4166f088"/>
        <function-ref name="stop" scoped="" ref="0x4166f308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4166ab88" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4166ab88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x416686a8"/>
        <function-ref name="fired" scoped="" ref="0x41669938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41668068"/>
        <function-ref name="isOneShot" scoped="" ref="0x41669de8"/>
        <function-ref name="getdt" scoped="" ref="0x41668b58"/>
        <function-ref name="gett0" scoped="" ref="0x41668900"/>
        <function-ref name="isRunning" scoped="" ref="0x41669b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x416691e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41668388"/>
        <function-ref name="startOneShot" scoped="" ref="0x41669460"/>
        <function-ref name="stop" scoped="" ref="0x416696e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x40bc1948" loc="3:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningC.nc">
      <component-ref qname="SystemLowPowerListeningC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40bc1948"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x40bc1b20"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x40bc1c00"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x40bc1ce0"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x40bc1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x40bbe5d0" loc="5:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningP.nc">
      <component-ref qname="SystemLowPowerListeningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40bbe5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x40bbe7a8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x40bbe888"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x40bbe968"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x40bbea48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bbd818" loc="46:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bbd818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bbd9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40bbdb80" loc="47:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bbdb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bbdd58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bbde38"/>
        <function-ref name="led1On" scoped="" ref="0x40bbdf18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bda010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bda0f0"/>
        <function-ref name="get" scoped="" ref="0x40bda1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40bda2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40bda630"/>
        <function-ref name="set" scoped="" ref="0x40bda390"/>
        <function-ref name="led0On" scoped="" ref="0x40bda470"/>
        <function-ref name="led2On" scoped="" ref="0x40bda550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40bee010" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40bee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bee1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40bee2c8"/>
        <function-ref name="start" scoped="" ref="0x40bee3a8"/>
        <function-ref name="stop" scoped="" ref="0x40bee488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40c23340" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40c23340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40c23518"/>
        <function-ref name="turnOn" scoped="" ref="0x40c235f8"/>
        <function-ref name="setChannel" scoped="" ref="0x40c236d8"/>
        <function-ref name="done" scoped="" ref="0x40c237b8"/>
        <function-ref name="standby" scoped="" ref="0x40c23898"/>
        <function-ref name="getChannel" scoped="" ref="0x40c23978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bee5e8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bee5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bee7c0"/>
        <function-ref name="cancel" scoped="" ref="0x40bee8a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bee980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40c22010" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40c22010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c221e8"/>
        <function-ref name="header" scoped="" ref="0x40c222c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40beeae0" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40beeae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40beecb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40c23ab8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40c23ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c23c90"/>
        <function-ref name="ready" scoped="" ref="0x40c23d70"/>
        <function-ref name="sendDone" scoped="" ref="0x40c23e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40beedf8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40beedf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40c23010"/>
        <function-ref name="setChannel" scoped="" ref="0x40c230f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40c231d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4168a150" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4168a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4168a328"/>
        <function-ref name="stopDone" scoped="" ref="0x4168a408"/>
        <function-ref name="start" scoped="" ref="0x4168a4e8"/>
        <function-ref name="stop" scoped="" ref="0x4168a5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x4168a728" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4168a728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4168a900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x41689830" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x41689830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x41689a08"/>
        <function-ref name="turnOn" scoped="" ref="0x41689ae8"/>
        <function-ref name="setChannel" scoped="" ref="0x41689bc8"/>
        <function-ref name="done" scoped="" ref="0x41689ca8"/>
        <function-ref name="standby" scoped="" ref="0x41689d88"/>
        <function-ref name="getChannel" scoped="" ref="0x41689e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4168aa60" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4168aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4168ac38"/>
        <function-ref name="cancel" scoped="" ref="0x4168ad18"/>
        <function-ref name="sendDone" scoped="" ref="0x4168adf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x41687320" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x41687320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x416874f8"/>
        <function-ref name="runTask" scoped="" ref="0x416875d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x41688aa0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41688aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41688c78"/>
        <function-ref name="header" scoped="" ref="0x41688d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x41687758" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x41687758"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41687930"/>
        <function-ref name="runTask" scoped="" ref="0x41687a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41689010" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41689010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x416891e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x41688ed8" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x41688ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x416870c0"/>
        <function-ref name="runTask" scoped="" ref="0x416871a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x416885c8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x416885c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416887a0"/>
        <function-ref name="ready" scoped="" ref="0x41688880"/>
        <function-ref name="sendDone" scoped="" ref="0x41688960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x41689328" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x41689328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x41689500"/>
        <function-ref name="setChannel" scoped="" ref="0x416895e0"/>
        <function-ref name="getChannel" scoped="" ref="0x416896c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41688010" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41688010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x416881e8"/>
        <function-ref name="suspend" scoped="" ref="0x416882c8"/>
        <function-ref name="resume" scoped="" ref="0x416883a8"/>
        <function-ref name="run" scoped="" ref="0x41688488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c1f280" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c1f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c1f458"/>
        <function-ref name="ready" scoped="" ref="0x40c1f538"/>
        <function-ref name="sendDone" scoped="" ref="0x40c1f618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c1f778" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c1f778"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c1f950"/>
        <function-ref name="header" scoped="" ref="0x40c1fa30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40c1fb70" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40c1fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40c1fd48"/>
        <function-ref name="wait" scoped="" ref="0x40c1fe28"/>
        <function-ref name="cancel" scoped="" ref="0x40c1ff08"/>
        <function-ref name="isFree" scoped="" ref="0x40c4a010"/>
        <function-ref name="getNow" scoped="" ref="0x40c4a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c4a250" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c4a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40c4a428"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40c4a508"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40c4a5e8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40c4a6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40c20d70" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40c20d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c1f010"/>
        <function-ref name="header" scoped="" ref="0x40c1f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40c20898" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40c20898"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c20a70"/>
        <function-ref name="ready" scoped="" ref="0x40c20b50"/>
        <function-ref name="sendDone" scoped="" ref="0x40c20c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x416b9b08" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x416b9b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416b9ce0"/>
        <function-ref name="ready" scoped="" ref="0x416b9dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x416b9ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x416b8030" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x416b8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x416b8208"/>
        <function-ref name="header" scoped="" ref="0x416b82e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x416b8428" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x416b8428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x416b8600"/>
        <function-ref name="wait" scoped="" ref="0x416b86e0"/>
        <function-ref name="cancel" scoped="" ref="0x416b87c0"/>
        <function-ref name="isFree" scoped="" ref="0x416b88a0"/>
        <function-ref name="getNow" scoped="" ref="0x416b8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x416b8ac0" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x416b8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x416b8c98"/>
        <function-ref name="rand32" scoped="" ref="0x416b8d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x416b8ed8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x416b8ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x416b60c0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x416b61a0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x416b6280"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x416b6360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x416b96c0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x416b96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x416b9898"/>
        <function-ref name="header" scoped="" ref="0x416b9978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x416b91e8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x416b91e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416b93c0"/>
        <function-ref name="ready" scoped="" ref="0x416b94a0"/>
        <function-ref name="sendDone" scoped="" ref="0x416b9580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x416b64e0" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x416b64e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x416b66b8"/>
        <function-ref name="runTask" scoped="" ref="0x416b6798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c46360" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c46360"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c46538"/>
        <function-ref name="ready" scoped="" ref="0x40c46618"/>
        <function-ref name="sendDone" scoped="" ref="0x40c466f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c46858" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c46858"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c46a30"/>
        <function-ref name="header" scoped="" ref="0x40c46b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40c46c50" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40c46c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40c46e28"/>
        <function-ref name="wait" scoped="" ref="0x40c46f08"/>
        <function-ref name="cancel" scoped="" ref="0x40c54010"/>
        <function-ref name="isFree" scoped="" ref="0x40c540f0"/>
        <function-ref name="getNow" scoped="" ref="0x40c541d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x40c54c88" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x40c54c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c54e60"/>
        <function-ref name="get" scoped="" ref="0x40c53010"/>
        <function-ref name="setValue" scoped="" ref="0x40c530f0"/>
        <function-ref name="set" scoped="" ref="0x40c531d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c54330" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c54330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40c54508"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40c545e8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40c546c8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40c547a8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40c54888"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40c54968"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40c54a48"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40c54b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40c47a08" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40c47a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c47be0"/>
        <function-ref name="header" scoped="" ref="0x40c47cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40c47530" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40c47530"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c47708"/>
        <function-ref name="ready" scoped="" ref="0x40c477e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c478c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40c47e00" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c47e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c46010"/>
        <function-ref name="noAck" scoped="" ref="0x40c460f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c461d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c762b0" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c762b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c76488"/>
        <function-ref name="stopDone" scoped="" ref="0x40c76568"/>
        <function-ref name="start" scoped="" ref="0x40c76648"/>
        <function-ref name="stop" scoped="" ref="0x40c76728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40c6b150" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40c6b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40c6b328"/>
        <function-ref name="request" scoped="" ref="0x40c6b408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c686a0" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c686a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c68878"/>
        <function-ref name="ready" scoped="" ref="0x40c68958"/>
        <function-ref name="sendDone" scoped="" ref="0x40c68a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c68b98" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c68b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c68d70"/>
        <function-ref name="header" scoped="" ref="0x40c68e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40c6c070" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40c6c070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40c6c248"/>
        <function-ref name="turnOn" scoped="" ref="0x40c6c328"/>
        <function-ref name="setChannel" scoped="" ref="0x40c6c408"/>
        <function-ref name="done" scoped="" ref="0x40c6c4e8"/>
        <function-ref name="standby" scoped="" ref="0x40c6c5c8"/>
        <function-ref name="getChannel" scoped="" ref="0x40c6c6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c6b548" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c6b548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c6b720"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c6b800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c6b8e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c6b9c0"/>
        <function-ref name="headerLength" scoped="" ref="0x40c6baa0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c6bb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40c69e68" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40c69e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40c680e0"/>
        <function-ref name="turnOn" scoped="" ref="0x40c681c0"/>
        <function-ref name="setChannel" scoped="" ref="0x40c682a0"/>
        <function-ref name="done" scoped="" ref="0x40c68380"/>
        <function-ref name="standby" scoped="" ref="0x40c68460"/>
        <function-ref name="getChannel" scoped="" ref="0x40c68540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40c6bce0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40c6bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40c6beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40c6ccc0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40c6ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c6ce98"/>
        <function-ref name="header" scoped="" ref="0x40c6b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40c69b30" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40c69b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c69d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40c69060" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40c69060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c69238"/>
        <function-ref name="stopDone" scoped="" ref="0x40c69318"/>
        <function-ref name="start" scoped="" ref="0x40c693f8"/>
        <function-ref name="stop" scoped="" ref="0x40c694d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c67428" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c67428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c67600"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c676e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c677c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c678a0"/>
        <function-ref name="headerLength" scoped="" ref="0x40c67980"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c67a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40c76d40" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40c76d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c76f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c67bc0" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c67bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40c67d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40c69638" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40c69638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c69810"/>
        <function-ref name="cancel" scoped="" ref="0x40c698f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c699d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40c6c7e8" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40c6c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c6c9c0"/>
        <function-ref name="ready" scoped="" ref="0x40c6caa0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c6cb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40c67010" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40c67010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40c671e8"/>
        <function-ref name="request" scoped="" ref="0x40c672c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40c76868" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40c76868"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c76a40"/>
        <function-ref name="cancel" scoped="" ref="0x40c76b20"/>
        <function-ref name="sendDone" scoped="" ref="0x40c76c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40ca7af0" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40ca7af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ca7cc8"/>
        <function-ref name="get" scoped="" ref="0x40ca7da8"/>
        <function-ref name="setValue" scoped="" ref="0x40ca7e88"/>
        <function-ref name="set" scoped="" ref="0x40ca6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40ca8270" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40ca8270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ca8448"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ca8528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ca8608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ca86e8"/>
        <function-ref name="headerLength" scoped="" ref="0x40ca87c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ca88a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40ca7358" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40ca7358"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ca7530"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ca7610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ca76f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ca77d0"/>
        <function-ref name="headerLength" scoped="" ref="0x40ca78b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ca7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40cabbd0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40cabbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40caa6f0"/>
        <function-ref name="clear" scoped="" ref="0x40caaaa0"/>
        <function-ref name="isValid" scoped="" ref="0x40caa340"/>
        <function-ref name="set" scoped="" ref="0x40caae50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40ca8ac8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ca8ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ca7128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40c8a428" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c8a428"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c8af28"/>
        <function-ref name="clear" scoped="" ref="0x40cab2e8"/>
        <function-ref name="isValid" scoped="" ref="0x40c8ab78"/>
        <function-ref name="set" scoped="" ref="0x40cab698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x416dc7d8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x416dc7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416dc9b0"/>
        <function-ref name="get" scoped="" ref="0x416dca90"/>
        <function-ref name="setValue" scoped="" ref="0x416dcb70"/>
        <function-ref name="set" scoped="" ref="0x416dcc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x416dc010" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x416dc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416dc1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x416dc2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416dc3a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x416dc488"/>
        <function-ref name="headerLength" scoped="" ref="0x416dc568"/>
        <function-ref name="metadataLength" scoped="" ref="0x416dc648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x416da030" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x416da030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416da208"/>
        <function-ref name="payloadLength" scoped="" ref="0x416da2e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416da3c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x416da4a8"/>
        <function-ref name="headerLength" scoped="" ref="0x416da588"/>
        <function-ref name="metadataLength" scoped="" ref="0x416da668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x416df8f8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x416df8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x416dd418"/>
        <function-ref name="clear" scoped="" ref="0x416dd7c8"/>
        <function-ref name="isValid" scoped="" ref="0x416dd068"/>
        <function-ref name="set" scoped="" ref="0x416ddb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x416dce40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x416dce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416db4d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x416db798" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x416db798"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416dbde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x416e0108" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x416e0108"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x416e0c08"/>
        <function-ref name="clear" scoped="" ref="0x416df010"/>
        <function-ref name="isValid" scoped="" ref="0x416e0858"/>
        <function-ref name="set" scoped="" ref="0x416df3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40cac0d0" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40cac0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cac718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40ca4ce0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40ca4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ca4eb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ca3010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ca30f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ca31d0"/>
        <function-ref name="headerLength" scoped="" ref="0x40ca32b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ca3390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40ca3520" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40ca3520"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ca36f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ca37d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ca38b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ca3998"/>
        <function-ref name="headerLength" scoped="" ref="0x40ca3a78"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ca3b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40ca4718" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40ca4718"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ca4900"/>
        <function-ref name="get" scoped="" ref="0x40ca49e0"/>
        <function-ref name="setValue" scoped="" ref="0x40ca4ac0"/>
        <function-ref name="set" scoped="" ref="0x40ca4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40cb8df0" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40cb8df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cb7010"/>
        <function-ref name="stopDone" scoped="" ref="0x40cb70f0"/>
        <function-ref name="start" scoped="" ref="0x40cb71d0"/>
        <function-ref name="stop" scoped="" ref="0x40cb72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40cb6cc0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40cb6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40cb6e98"/>
        <function-ref name="request" scoped="" ref="0x40cb4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40cdb330" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40cdb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cdb508"/>
        <function-ref name="ready" scoped="" ref="0x40cdb5e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40cdb6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40cdb828" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40cdb828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cdba00"/>
        <function-ref name="header" scoped="" ref="0x40cdbae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40cb7be0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40cb7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40cb7db8"/>
        <function-ref name="turnOn" scoped="" ref="0x40cb7e98"/>
        <function-ref name="setChannel" scoped="" ref="0x40cb6010"/>
        <function-ref name="done" scoped="" ref="0x40cb60f0"/>
        <function-ref name="standby" scoped="" ref="0x40cb61d0"/>
        <function-ref name="getChannel" scoped="" ref="0x40cb62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40cb4150" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40cb4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cb4328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cb4408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cb44e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cb45c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40cb46a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cb4788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40cb3a80" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40cb3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40cb3cd8"/>
        <function-ref name="turnOn" scoped="" ref="0x40cb3db8"/>
        <function-ref name="setChannel" scoped="" ref="0x40cb3e98"/>
        <function-ref name="done" scoped="" ref="0x40cdb010"/>
        <function-ref name="standby" scoped="" ref="0x40cdb0f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40cdb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40cb48e8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40cb48e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40cb4ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40cb68c8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40cb68c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cb6aa0"/>
        <function-ref name="header" scoped="" ref="0x40cb6b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40cb3748" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40cb3748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cb3920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40cb4c50" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40cb4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cb4e28"/>
        <function-ref name="stopDone" scoped="" ref="0x40cb4f08"/>
        <function-ref name="start" scoped="" ref="0x40cb3010"/>
        <function-ref name="stop" scoped="" ref="0x40cb30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40cda090" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40cda090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cda268"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cda348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cda428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cda508"/>
        <function-ref name="headerLength" scoped="" ref="0x40cda5e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cda6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40cb78c8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40cb78c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cb7aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40cda828" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40cda828"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40cdaa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40cb3250" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40cb3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cb3428"/>
        <function-ref name="cancel" scoped="" ref="0x40cb3508"/>
        <function-ref name="sendDone" scoped="" ref="0x40cb35e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40cb63f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40cb63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cb65c8"/>
        <function-ref name="ready" scoped="" ref="0x40cb66a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40cb6788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40cdbc40" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40cdbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40cdbe18"/>
        <function-ref name="request" scoped="" ref="0x40cdbef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40cb73f0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40cb73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cb75c8"/>
        <function-ref name="cancel" scoped="" ref="0x40cb76a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40cb7788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40cd4368" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40cd4368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40cd4540"/>
        <function-ref name="request" scoped="" ref="0x40cd4620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40cd1510" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40cd1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cd00f8"/>
        <function-ref name="get" scoped="" ref="0x40cd1e18"/>
        <function-ref name="isSet" scoped="" ref="0x40cd1b58"/>
        <function-ref name="set" scoped="" ref="0x40cd03b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40cef3f0" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40cef3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cef5c8"/>
        <function-ref name="get" scoped="" ref="0x40cef6a8"/>
        <function-ref name="setValue" scoped="" ref="0x40cef788"/>
        <function-ref name="set" scoped="" ref="0x40cef868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40cc8480" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40cc8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40cc7010"/>
        <function-ref name="clear" scoped="" ref="0x40cc73c0"/>
        <function-ref name="isValid" scoped="" ref="0x40cc8bd0"/>
        <function-ref name="set" scoped="" ref="0x40cc7770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40cd51d8" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40cd51d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40cd53b0"/>
        <function-ref name="turnOn" scoped="" ref="0x40cd5490"/>
        <function-ref name="setChannel" scoped="" ref="0x40cd5570"/>
        <function-ref name="done" scoped="" ref="0x40cd5650"/>
        <function-ref name="standby" scoped="" ref="0x40cd5730"/>
        <function-ref name="getChannel" scoped="" ref="0x40cd5810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40cee0e0" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40cee0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40cee2b8"/>
        <function-ref name="wait" scoped="" ref="0x40cee398"/>
        <function-ref name="cancel" scoped="" ref="0x40cee478"/>
        <function-ref name="isFree" scoped="" ref="0x40cee558"/>
        <function-ref name="getNow" scoped="" ref="0x40cee638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40cd3190" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40cd3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cd3d58"/>
        <function-ref name="get" scoped="" ref="0x40cd3a98"/>
        <function-ref name="isSet" scoped="" ref="0x40cd37d8"/>
        <function-ref name="set" scoped="" ref="0x40cd1048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40cd47d0" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40cd47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cd49a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cd4a88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cd4b68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cd4c48"/>
        <function-ref name="headerLength" scoped="" ref="0x40cd4d28"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cd4e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40cc9ac8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40cc9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cc9d20"/>
        <function-ref name="headerLength" scoped="" ref="0x40cc9e00"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cc9ee0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40cc8010"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40cc80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40cd5f08" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40cd5f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cd40f0"/>
        <function-ref name="header" scoped="" ref="0x40cd41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40cca010" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40cca010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40727ce8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cc94e0"/>
        <function-ref name="fired" scoped="" ref="0x40ccac78"/>
        <function-ref name="startAt" scoped="" ref="0x40cc91a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40ccaef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40cc9758"/>
        <function-ref name="start" scoped="" ref="0x40cca760"/>
        <function-ref name="stop" scoped="" ref="0x40ccaa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40cd08e8" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40cd08e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ccf590"/>
        <function-ref name="get" scoped="" ref="0x40ccf2d0"/>
        <function-ref name="isSet" scoped="" ref="0x40ccf010"/>
        <function-ref name="set" scoped="" ref="0x40ccf850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40ccc508" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ccc508"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cccb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40cd59b0" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40cd59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cd5b88"/>
        <function-ref name="ready" scoped="" ref="0x40cd5c68"/>
        <function-ref name="sendDone" scoped="" ref="0x40cd5d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40ccfd60" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40ccfd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ccd960"/>
        <function-ref name="get" scoped="" ref="0x40ccd6a0"/>
        <function-ref name="isSet" scoped="" ref="0x40ccd3e0"/>
        <function-ref name="set" scoped="" ref="0x40ccdc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40cefab0" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40cefab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cefc88"/>
        <function-ref name="get" scoped="" ref="0x40cefd68"/>
        <function-ref name="setValue" scoped="" ref="0x40cefe48"/>
        <function-ref name="set" scoped="" ref="0x40ceff28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40cc7ca0" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40cc7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cc7e78"/>
        <function-ref name="get" scoped="" ref="0x40cef010"/>
        <function-ref name="setValue" scoped="" ref="0x40cef0f0"/>
        <function-ref name="set" scoped="" ref="0x40cef1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40ccc010" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ccc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40ccc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40ce70b8" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40ce70b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40ce7290"/>
        <function-ref name="request" scoped="" ref="0x40ce7370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40d02010" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40d02010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TMicro" ref="0x4046d778"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40d02760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40ce4240" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40ce4240"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ce4e08"/>
        <function-ref name="get" scoped="" ref="0x40ce4b48"/>
        <function-ref name="isSet" scoped="" ref="0x40ce4888"/>
        <function-ref name="set" scoped="" ref="0x40ce30f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40cfd310" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40cfd310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cfd4e8"/>
        <function-ref name="get" scoped="" ref="0x40cfd5c8"/>
        <function-ref name="setValue" scoped="" ref="0x40cfd6a8"/>
        <function-ref name="set" scoped="" ref="0x40cfd788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40ce9b18" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40ce9b18"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x404137d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x404137d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ce9cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40cfc1f8" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40cfc1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40cfcdf8"/>
        <function-ref name="clear" scoped="" ref="0x40cfb1d8"/>
        <function-ref name="isValid" scoped="" ref="0x40cfca48"/>
        <function-ref name="set" scoped="" ref="0x40cfb588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40cdc3c0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40cdc3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cdc598"/>
        <function-ref name="isInput" scoped="" ref="0x40cdc678"/>
        <function-ref name="toggle" scoped="" ref="0x40cdc758"/>
        <function-ref name="isOutput" scoped="" ref="0x40cdc838"/>
        <function-ref name="get" scoped="" ref="0x40cdc918"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cdc9f8"/>
        <function-ref name="set" scoped="" ref="0x40cdcad8"/>
        <function-ref name="clr" scoped="" ref="0x40cdcbb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40cf9010" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40cf9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40cf91e8"/>
        <function-ref name="wait" scoped="" ref="0x40cf92c8"/>
        <function-ref name="cancel" scoped="" ref="0x40cf93a8"/>
        <function-ref name="isFree" scoped="" ref="0x40cf9488"/>
        <function-ref name="getNow" scoped="" ref="0x40cf9568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40ce9e98" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40ce9e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40ce80c0"/>
        <function-ref name="turnOn" scoped="" ref="0x40ce81a0"/>
        <function-ref name="setChannel" scoped="" ref="0x40ce8280"/>
        <function-ref name="done" scoped="" ref="0x40ce8360"/>
        <function-ref name="standby" scoped="" ref="0x40ce8440"/>
        <function-ref name="getChannel" scoped="" ref="0x40ce8520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40d02ac8" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40d02ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cff128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40ce7ec0" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40ce7ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ce6aa0"/>
        <function-ref name="get" scoped="" ref="0x40ce67e0"/>
        <function-ref name="isSet" scoped="" ref="0x40ce6520"/>
        <function-ref name="set" scoped="" ref="0x40ce6d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40ce7520" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40ce7520"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ce76f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ce77d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ce78b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ce7998"/>
        <function-ref name="headerLength" scoped="" ref="0x40ce7a78"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ce7b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x40d03930" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40d03930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d03b08"/>
        <function-ref name="isInput" scoped="" ref="0x40d03be8"/>
        <function-ref name="toggle" scoped="" ref="0x40d03cc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d03da8"/>
        <function-ref name="get" scoped="" ref="0x40d03e88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cdc010"/>
        <function-ref name="set" scoped="" ref="0x40cdc0f0"/>
        <function-ref name="clr" scoped="" ref="0x40cdc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40cff448" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40cff448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cff620"/>
        <function-ref name="headerLength" scoped="" ref="0x40cff700"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cff7e0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40cff8c0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40cff9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40ce8c18" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ce8c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ce8df0"/>
        <function-ref name="header" scoped="" ref="0x40ce8ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x40d4fae8" loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x40d4fae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d4fcc0"/>
        <function-ref name="runTask" scoped="" ref="0x40d4fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40ce3628" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40ce3628"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ce12d0"/>
        <function-ref name="get" scoped="" ref="0x40ce1010"/>
        <function-ref name="isSet" scoped="" ref="0x40ce3c70"/>
        <function-ref name="set" scoped="" ref="0x40ce1590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40ce94b8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40ce94b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x404137d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x404137d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ce9690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40cdebe0" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40cdebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cdedb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cdee98"/>
        <function-ref name="request" scoped="" ref="0x40cdd010"/>
        <function-ref name="granted" scoped="" ref="0x40cdd0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40cdd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x40cde140" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40cde140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cde398"/>
        <function-ref name="isInput" scoped="" ref="0x40cde478"/>
        <function-ref name="toggle" scoped="" ref="0x40cde558"/>
        <function-ref name="isOutput" scoped="" ref="0x40cde638"/>
        <function-ref name="get" scoped="" ref="0x40cde718"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cde7f8"/>
        <function-ref name="set" scoped="" ref="0x40cde8d8"/>
        <function-ref name="clr" scoped="" ref="0x40cde9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40ce1aa0" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40ce1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ce06a0"/>
        <function-ref name="get" scoped="" ref="0x40ce03e0"/>
        <function-ref name="isSet" scoped="" ref="0x40ce0120"/>
        <function-ref name="set" scoped="" ref="0x40ce0960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40ce86c0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40ce86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ce8898"/>
        <function-ref name="ready" scoped="" ref="0x40ce8978"/>
        <function-ref name="sendDone" scoped="" ref="0x40ce8a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x40d004d0" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40d004d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40d006a8"/>
        <function-ref name="disable" scoped="" ref="0x40d00788"/>
        <function-ref name="captured" scoped="" ref="0x40d00868"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40d00948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x40d032b8" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40d032b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40d03490"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40d03570"/>
        <function-ref name="splitRead" scoped="" ref="0x40d03650"/>
        <function-ref name="write" scoped="" ref="0x40d03730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40cfd9d0" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40cfd9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cfdba8"/>
        <function-ref name="get" scoped="" ref="0x40cfdc88"/>
        <function-ref name="setValue" scoped="" ref="0x40cfdd68"/>
        <function-ref name="set" scoped="" ref="0x40cfde48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40cffc18" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40cffc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cffdf0"/>
        <function-ref name="get" scoped="" ref="0x40cffed0"/>
        <function-ref name="setValue" scoped="" ref="0x40cfd010"/>
        <function-ref name="set" scoped="" ref="0x40cfd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40ce0d10" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ce0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40ce0ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40cfb9c8" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40cfb9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40cfbba0"/>
        <function-ref name="suspend" scoped="" ref="0x40cfbc80"/>
        <function-ref name="resume" scoped="" ref="0x40cfbd60"/>
        <function-ref name="run" scoped="" ref="0x40cfbe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40d80db8" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40d80db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d7f010"/>
        <function-ref name="isInput" scoped="" ref="0x40d7f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d7f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d7f2b0"/>
        <function-ref name="get" scoped="" ref="0x40d7f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d7f470"/>
        <function-ref name="set" scoped="" ref="0x40d7f550"/>
        <function-ref name="clr" scoped="" ref="0x40d7f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40d803d0" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40d803d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d805a8"/>
        <function-ref name="isInput" scoped="" ref="0x40d80688"/>
        <function-ref name="toggle" scoped="" ref="0x40d80768"/>
        <function-ref name="isOutput" scoped="" ref="0x40d80848"/>
        <function-ref name="get" scoped="" ref="0x40d80928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d80a08"/>
        <function-ref name="set" scoped="" ref="0x40d80ae8"/>
        <function-ref name="clr" scoped="" ref="0x40d80bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40d7e030" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40d7e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d7d4e0"/>
        <function-ref name="fired" scoped="" ref="0x40d7ec98"/>
        <function-ref name="startAt" scoped="" ref="0x40d7d1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40d7ef10"/>
        <function-ref name="getAlarm" scoped="" ref="0x40d7d758"/>
        <function-ref name="start" scoped="" ref="0x40d7e780"/>
        <function-ref name="stop" scoped="" ref="0x40d7ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40d815b8" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40d815b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d81790"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d81870"/>
        <function-ref name="request" scoped="" ref="0x40d81950"/>
        <function-ref name="granted" scoped="" ref="0x40d81a30"/>
        <function-ref name="isOwner" scoped="" ref="0x40d81b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40d84b28" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40d84b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d84d00"/>
        <function-ref name="isInput" scoped="" ref="0x40d84de0"/>
        <function-ref name="toggle" scoped="" ref="0x40d84ec0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d81010"/>
        <function-ref name="get" scoped="" ref="0x40d810f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d811d0"/>
        <function-ref name="set" scoped="" ref="0x40d812b0"/>
        <function-ref name="clr" scoped="" ref="0x40d81390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40d7f820" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40d7f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40d7f9f8"/>
        <function-ref name="disable" scoped="" ref="0x40d7fad8"/>
        <function-ref name="captured" scoped="" ref="0x40d7fbb8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40d7fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40d81cc0" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40d81cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40d81e98"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40d80010"/>
        <function-ref name="splitRead" scoped="" ref="0x40d800f0"/>
        <function-ref name="write" scoped="" ref="0x40d801d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40d7db48" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d7db48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TRadio" ref="0x40727a40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d7b200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40d76420" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40d76420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d765f8"/>
        <function-ref name="isInput" scoped="" ref="0x40d766d8"/>
        <function-ref name="toggle" scoped="" ref="0x40d767b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d76898"/>
        <function-ref name="get" scoped="" ref="0x40d76978"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d76a58"/>
        <function-ref name="set" scoped="" ref="0x40d76b38"/>
        <function-ref name="clr" scoped="" ref="0x40d76c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40d73660" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40d73660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40d76110"/>
        <function-ref name="test" scoped="" ref="0x40d77be0"/>
        <function-ref name="get" scoped="" ref="0x40d73ca8"/>
        <function-ref name="captured" scoped="" ref="0x40d771d8"/>
        <function-ref name="reset" scoped="" ref="0x40d77478"/>
        <function-ref name="isOn" scoped="" ref="0x40d77e58"/>
        <function-ref name="set" scoped="" ref="0x40d73f20"/>
        <function-ref name="start" scoped="" ref="0x40d776f0"/>
        <function-ref name="stop" scoped="" ref="0x40d77968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40d76e20" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40d76e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d71010"/>
        <function-ref name="isInput" scoped="" ref="0x40d710f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d711d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d712b0"/>
        <function-ref name="get" scoped="" ref="0x40d71390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d71470"/>
        <function-ref name="set" scoped="" ref="0x40d71550"/>
        <function-ref name="clr" scoped="" ref="0x40d71630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40d78030" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40d78030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d78208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40d7b978" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40d7b978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40d7bb50"/>
        <function-ref name="disable" scoped="" ref="0x40d7bc30"/>
        <function-ref name="captured" scoped="" ref="0x40d7bd10"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40d7bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40d8d500" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40d8d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d8d6d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d8d7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40d94aa0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40d94aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40d94c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d7ad90" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d7ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d94010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40d94e48" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40d94e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40d93050"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40d93130"/>
        <function-ref name="splitRead" scoped="" ref="0x40d93210"/>
        <function-ref name="write" scoped="" ref="0x40d932f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d8dc50" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d8dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d8de28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d8df08"/>
        <function-ref name="request" scoped="" ref="0x40d92010"/>
        <function-ref name="granted" scoped="" ref="0x40d920f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d921d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40dbd420" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40dbd420"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40dbd5f8"/>
        <function-ref name="runTask" scoped="" ref="0x40dbd6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40d8bb38" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40d8bb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d8bd10"/>
        <function-ref name="sendDone" scoped="" ref="0x40d8bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40d88100" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40d88100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d882d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d883b8"/>
        <function-ref name="request" scoped="" ref="0x40d88498"/>
        <function-ref name="granted" scoped="" ref="0x40d88578"/>
        <function-ref name="isOwner" scoped="" ref="0x40d88658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40d8b198" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40d8b198"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40d8b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d92d78" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d92d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d8b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40da53d0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40da53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40da55a8"/>
        <function-ref name="sleep" scoped="" ref="0x40d89a30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40da5768"/>
        <function-ref name="dataReady" scoped="" ref="0x40d89b10"/>
        <function-ref name="initMaster" scoped="" ref="0x40da5928"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40da5a08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40da5ae8"/>
        <function-ref name="read" scoped="" ref="0x40da5bc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40da5ca8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40da5d88"/>
        <function-ref name="setClock" scoped="" ref="0x40da5e68"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40d89010"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40d890f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40d89250"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40d89330"/>
        <function-ref name="write" scoped="" ref="0x40d89410"/>
        <function-ref name="enableSpi" scoped="" ref="0x40d894f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40d895d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40d896b0"/>
        <function-ref name="getClock" scoped="" ref="0x40d89790"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40d89870"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40da5688"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40da5848"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40d89950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40d8b520" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40d8b520"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40d8b6f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40d8b7d8"/>
        <function-ref name="splitRead" scoped="" ref="0x40d8b8b8"/>
        <function-ref name="write" scoped="" ref="0x40d8b998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d8a2a8" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d8a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d8a480"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d8a560"/>
        <function-ref name="request" scoped="" ref="0x40d8a640"/>
        <function-ref name="granted" scoped="" ref="0x40d8a720"/>
        <function-ref name="isOwner" scoped="" ref="0x40d8a800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40d88808" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40d88808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40d889e0"/>
        <function-ref name="userId" scoped="" ref="0x40d88ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40d88c88" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40d88c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40d88e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40dd1070" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40dd1070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40dd1248"/>
        <function-ref name="sleep" scoped="" ref="0x40dd0630"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40dd1408"/>
        <function-ref name="dataReady" scoped="" ref="0x40dd0710"/>
        <function-ref name="initMaster" scoped="" ref="0x40dd15c8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40dd16a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40dd1788"/>
        <function-ref name="read" scoped="" ref="0x40dd1868"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40dd1948"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40dd1a28"/>
        <function-ref name="setClock" scoped="" ref="0x40dd1b08"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40dd1be8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40dd1cc8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40dd1e28"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40dd1f08"/>
        <function-ref name="write" scoped="" ref="0x40dd0010"/>
        <function-ref name="enableSpi" scoped="" ref="0x40dd00f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40dd01d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40dd02b0"/>
        <function-ref name="getClock" scoped="" ref="0x40dd0390"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40dd0470"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40dd1328"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40dd14e8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40dd0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40df6060" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40df6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40df6238"/>
        <function-ref name="isInput" scoped="" ref="0x40df6318"/>
        <function-ref name="toggle" scoped="" ref="0x40df63f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40df64d8"/>
        <function-ref name="get" scoped="" ref="0x40df65b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40df6698"/>
        <function-ref name="set" scoped="" ref="0x40df6778"/>
        <function-ref name="clr" scoped="" ref="0x40df6858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40dcbbf0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40dcbbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dcbdc8"/>
        <function-ref name="isInput" scoped="" ref="0x40dcbea8"/>
        <function-ref name="toggle" scoped="" ref="0x40dca010"/>
        <function-ref name="isOutput" scoped="" ref="0x40dca0f0"/>
        <function-ref name="get" scoped="" ref="0x40dca1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dca2b0"/>
        <function-ref name="set" scoped="" ref="0x40dca390"/>
        <function-ref name="clr" scoped="" ref="0x40dca470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40dcb218" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40dcb218"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dcb3f0"/>
        <function-ref name="isInput" scoped="" ref="0x40dcb4d0"/>
        <function-ref name="toggle" scoped="" ref="0x40dcb5b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40dcb690"/>
        <function-ref name="get" scoped="" ref="0x40dcb770"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dcb850"/>
        <function-ref name="set" scoped="" ref="0x40dcb930"/>
        <function-ref name="clr" scoped="" ref="0x40dcba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40dc9cd0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40dc9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dc9ea8"/>
        <function-ref name="stop" scoped="" ref="0x40dcb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40df6a60" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40df6a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40df6c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40dcd3a8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40dcd3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40dcd580"/>
        <function-ref name="sleep" scoped="" ref="0x40dcc958"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40dcd740"/>
        <function-ref name="dataReady" scoped="" ref="0x40dcca38"/>
        <function-ref name="initMaster" scoped="" ref="0x40dcd900"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40dcd9e0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40dcdac0"/>
        <function-ref name="read" scoped="" ref="0x40dcdba0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40dcdc80"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40dcdd60"/>
        <function-ref name="setClock" scoped="" ref="0x40dcde40"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40dcdf20"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40dcc018"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40dcc178"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40dcc258"/>
        <function-ref name="write" scoped="" ref="0x40dcc338"/>
        <function-ref name="enableSpi" scoped="" ref="0x40dcc418"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40dcc4f8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40dcc5d8"/>
        <function-ref name="getClock" scoped="" ref="0x40dcc6b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40dcc798"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40dcd660"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40dcd820"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40dcc878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40dca660" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40dca660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dca838"/>
        <function-ref name="isInput" scoped="" ref="0x40dca918"/>
        <function-ref name="toggle" scoped="" ref="0x40dca9f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40dcaad8"/>
        <function-ref name="get" scoped="" ref="0x40dcabb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dcac98"/>
        <function-ref name="set" scoped="" ref="0x40dcad78"/>
        <function-ref name="clr" scoped="" ref="0x40dcae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40dfd8d8" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40dfd8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40dfdac0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40dfdba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40dfc208" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40dfc208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40dfc3f0"/>
        <function-ref name="configure" scoped="" ref="0x40dfc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40dfd198" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40dfd198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40dfd380"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40dfd460"/>
        <function-ref name="request" scoped="" ref="0x40dfd540"/>
        <function-ref name="granted" scoped="" ref="0x40dfd620"/>
        <function-ref name="isOwner" scoped="" ref="0x40dfd700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40dfdce0" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40dfdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40dfdeb8"/>
        <function-ref name="userId" scoped="" ref="0x40dfc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41703070" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41703070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41703248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x417033a8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x417033a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41703580"/>
        <function-ref name="isEmpty" scoped="" ref="0x41703660"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41703740"/>
        <function-ref name="dequeue" scoped="" ref="0x41703820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41702b18" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41702b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41702d00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41702de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x417013f8" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x417013f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x417015e0"/>
        <function-ref name="configure" scoped="" ref="0x417016c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41701820" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41701820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417019f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x41701ad8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41701bb8"/>
        <function-ref name="dequeue" scoped="" ref="0x41701c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x417023d8" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x417023d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x417025c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x417026a0"/>
        <function-ref name="request" scoped="" ref="0x41702780"/>
        <function-ref name="granted" scoped="" ref="0x41702860"/>
        <function-ref name="isOwner" scoped="" ref="0x41702940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41702f20" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41702f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41701110"/>
        <function-ref name="userId" scoped="" ref="0x417011f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41701e18" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41701e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41754010"/>
        <function-ref name="runTask" scoped="" ref="0x417540f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40e1a218" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e1a218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40e1a3f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e1a4d0"/>
        <function-ref name="getControlA" scoped="" ref="0x40e1a5b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e1a690"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e1a770"/>
        <function-ref name="setControlB" scoped="" ref="0x40e1a850"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e1a930"/>
        <function-ref name="getControlB" scoped="" ref="0x40e1aa10"/>
        <function-ref name="setControlC" scoped="" ref="0x40e1aaf0"/>
        <function-ref name="setControlA" scoped="" ref="0x40e1abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40e1af08" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40e1af08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e1f9f0"/>
        <function-ref name="test" scoped="" ref="0x40e1f500"/>
        <function-ref name="get" scoped="" ref="0x40e20578"/>
        <function-ref name="captured" scoped="" ref="0x40e20a90"/>
        <function-ref name="reset" scoped="" ref="0x40e20d30"/>
        <function-ref name="isOn" scoped="" ref="0x40e1f778"/>
        <function-ref name="set" scoped="" ref="0x40e207f0"/>
        <function-ref name="start" scoped="" ref="0x40e1f010"/>
        <function-ref name="stop" scoped="" ref="0x40e1f288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40e19120" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40e19120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e17690"/>
        <function-ref name="fired" scoped="" ref="0x40e19c80"/>
        <function-ref name="get" scoped="" ref="0x40e19768"/>
        <function-ref name="reset" scoped="" ref="0x40e19ef8"/>
        <function-ref name="isOn" scoped="" ref="0x40e17908"/>
        <function-ref name="set" scoped="" ref="0x40e199e0"/>
        <function-ref name="start" scoped="" ref="0x40e171a0"/>
        <function-ref name="stop" scoped="" ref="0x40e17418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40df8828" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40df8828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e212c0"/>
        <function-ref name="test" scoped="" ref="0x40e23d90"/>
        <function-ref name="get" scoped="" ref="0x40df8e70"/>
        <function-ref name="setScale" scoped="" ref="0x40e21538"/>
        <function-ref name="getScale" scoped="" ref="0x40e217d8"/>
        <function-ref name="reset" scoped="" ref="0x40e23628"/>
        <function-ref name="overflow" scoped="" ref="0x40e233b0"/>
        <function-ref name="isOn" scoped="" ref="0x40e21048"/>
        <function-ref name="set" scoped="" ref="0x40e23110"/>
        <function-ref name="start" scoped="" ref="0x40e238a0"/>
        <function-ref name="stop" scoped="" ref="0x40e23b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40e11920" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e11920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40e11af8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e11bd8"/>
        <function-ref name="getControlA" scoped="" ref="0x40e11cb8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e11d98"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e11e78"/>
        <function-ref name="setControlB" scoped="" ref="0x40e10010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e100f0"/>
        <function-ref name="getControlB" scoped="" ref="0x40e101d0"/>
        <function-ref name="setControlC" scoped="" ref="0x40e102b0"/>
        <function-ref name="setControlA" scoped="" ref="0x40e10390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40e0e6c8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40e0e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e3ac90"/>
        <function-ref name="fired" scoped="" ref="0x40e3a2b0"/>
        <function-ref name="get" scoped="" ref="0x40e0ed10"/>
        <function-ref name="reset" scoped="" ref="0x40e3a528"/>
        <function-ref name="isOn" scoped="" ref="0x40e3af08"/>
        <function-ref name="set" scoped="" ref="0x40e3a010"/>
        <function-ref name="start" scoped="" ref="0x40e3a7a0"/>
        <function-ref name="stop" scoped="" ref="0x40e3aa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40e106c8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40e106c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e0e288"/>
        <function-ref name="test" scoped="" ref="0x40e0fcb8"/>
        <function-ref name="get" scoped="" ref="0x40e10d10"/>
        <function-ref name="captured" scoped="" ref="0x40e0f2b0"/>
        <function-ref name="reset" scoped="" ref="0x40e0f550"/>
        <function-ref name="isOn" scoped="" ref="0x40e0e010"/>
        <function-ref name="set" scoped="" ref="0x40e0f010"/>
        <function-ref name="start" scoped="" ref="0x40e0f7c8"/>
        <function-ref name="stop" scoped="" ref="0x40e0fa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40e39340" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40e39340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e38898"/>
        <function-ref name="fired" scoped="" ref="0x40e39ea0"/>
        <function-ref name="get" scoped="" ref="0x40e39988"/>
        <function-ref name="reset" scoped="" ref="0x40e38130"/>
        <function-ref name="isOn" scoped="" ref="0x40e38b10"/>
        <function-ref name="set" scoped="" ref="0x40e39c00"/>
        <function-ref name="start" scoped="" ref="0x40e383a8"/>
        <function-ref name="stop" scoped="" ref="0x40e38620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40e38f28" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40e38f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e35500"/>
        <function-ref name="fired" scoped="" ref="0x40e36a98"/>
        <function-ref name="get" scoped="" ref="0x40e36580"/>
        <function-ref name="reset" scoped="" ref="0x40e36d10"/>
        <function-ref name="isOn" scoped="" ref="0x40e35778"/>
        <function-ref name="set" scoped="" ref="0x40e367f8"/>
        <function-ref name="start" scoped="" ref="0x40e35010"/>
        <function-ref name="stop" scoped="" ref="0x40e35288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e14640" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e14640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e110a8"/>
        <function-ref name="test" scoped="" ref="0x40e13ba0"/>
        <function-ref name="get" scoped="" ref="0x40e14c88"/>
        <function-ref name="setScale" scoped="" ref="0x40e11320"/>
        <function-ref name="getScale" scoped="" ref="0x40e115c0"/>
        <function-ref name="reset" scoped="" ref="0x40e13438"/>
        <function-ref name="overflow" scoped="" ref="0x40e131c0"/>
        <function-ref name="isOn" scoped="" ref="0x40e13e18"/>
        <function-ref name="set" scoped="" ref="0x40e14f00"/>
        <function-ref name="start" scoped="" ref="0x40e136b0"/>
        <function-ref name="stop" scoped="" ref="0x40e13928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e82e38" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e82e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TOne" ref="0x404958b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40eb1350"/>
        <function-ref name="fired" scoped="" ref="0x40e81ab8"/>
        <function-ref name="startAt" scoped="" ref="0x40eb1010"/>
        <function-ref name="isRunning" scoped="" ref="0x40e81d30"/>
        <function-ref name="getAlarm" scoped="" ref="0x40eb15c8"/>
        <function-ref name="start" scoped="" ref="0x40e815a0"/>
        <function-ref name="stop" scoped="" ref="0x40e81840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e79a78" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e79a78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x404135d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x404135d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e79c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e79e60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e79e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e708d8"/>
        <function-ref name="test" scoped="" ref="0x40e703e8"/>
        <function-ref name="get" scoped="" ref="0x40e714d8"/>
        <function-ref name="setScale" scoped="" ref="0x40e70b50"/>
        <function-ref name="getScale" scoped="" ref="0x40e70df0"/>
        <function-ref name="reset" scoped="" ref="0x40e71c68"/>
        <function-ref name="overflow" scoped="" ref="0x40e719f0"/>
        <function-ref name="isOn" scoped="" ref="0x40e70660"/>
        <function-ref name="set" scoped="" ref="0x40e71750"/>
        <function-ref name="start" scoped="" ref="0x40e71ee0"/>
        <function-ref name="stop" scoped="" ref="0x40e70170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4173f678" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4173f678"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x404133d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x404133d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TOne" ref="0x404958b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4173eb30"/>
        <function-ref name="fired" scoped="" ref="0x4173e300"/>
        <function-ref name="startAt" scoped="" ref="0x4173e7f0"/>
        <function-ref name="isRunning" scoped="" ref="0x4173e578"/>
        <function-ref name="getAlarm" scoped="" ref="0x4173eda8"/>
        <function-ref name="start" scoped="" ref="0x4173fdc8"/>
        <function-ref name="stop" scoped="" ref="0x4173e088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x4173a308" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x4173a308"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41738878"/>
        <function-ref name="fired" scoped="" ref="0x4173ae68"/>
        <function-ref name="get" scoped="" ref="0x4173a950"/>
        <function-ref name="reset" scoped="" ref="0x41738110"/>
        <function-ref name="isOn" scoped="" ref="0x41738af0"/>
        <function-ref name="set" scoped="" ref="0x4173abc8"/>
        <function-ref name="start" scoped="" ref="0x41738388"/>
        <function-ref name="stop" scoped="" ref="0x41738600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x4173c0a0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x4173c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4173baf0"/>
        <function-ref name="test" scoped="" ref="0x4173b600"/>
        <function-ref name="get" scoped="" ref="0x4173c6e8"/>
        <function-ref name="setScale" scoped="" ref="0x4173bd68"/>
        <function-ref name="getScale" scoped="" ref="0x4173a048"/>
        <function-ref name="reset" scoped="" ref="0x4173ce78"/>
        <function-ref name="overflow" scoped="" ref="0x4173cc00"/>
        <function-ref name="isOn" scoped="" ref="0x4173b878"/>
        <function-ref name="set" scoped="" ref="0x4173c960"/>
        <function-ref name="start" scoped="" ref="0x4173b110"/>
        <function-ref name="stop" scoped="" ref="0x4173b388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40eb0770" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40eb0770"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TMicro" ref="0x4046d778"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40eb0db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ead860" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ead860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TOne" ref="0x404958b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40eaa010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40eaa500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40eaa288"/>
        <function-ref name="overflow" scoped="" ref="0x40eaa778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ea7030" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ea7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TOne" ref="0x404958b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ea7780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ea7c70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ea79f8"/>
        <function-ref name="overflow" scoped="" ref="0x40ea7ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40ea6208" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ea6208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e9bc68"/>
        <function-ref name="test" scoped="" ref="0x40e9b778"/>
        <function-ref name="get" scoped="" ref="0x40ea6850"/>
        <function-ref name="setScale" scoped="" ref="0x40e9bee0"/>
        <function-ref name="getScale" scoped="" ref="0x40eca1c0"/>
        <function-ref name="reset" scoped="" ref="0x40e9b010"/>
        <function-ref name="overflow" scoped="" ref="0x40ea6d68"/>
        <function-ref name="isOn" scoped="" ref="0x40e9b9f0"/>
        <function-ref name="set" scoped="" ref="0x40ea6ac8"/>
        <function-ref name="start" scoped="" ref="0x40e9b288"/>
        <function-ref name="stop" scoped="" ref="0x40e9b500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40ec85f8" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40ec85f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TMicro" ref="0x4046d778"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ec8d48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40eb7288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40eb7010"/>
        <function-ref name="overflow" scoped="" ref="0x40eb7500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ec9320" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ec9320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TMicro" ref="0x4046d778"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ec9a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ec8010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ec9ce8"/>
        <function-ref name="overflow" scoped="" ref="0x40ec8288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40eb6440" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40eb6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TMicro" ref="0x4046d778"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40eb6a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40eb6dd8" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40eb6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TMicro" ref="0x4046d778"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40eb5570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40eb5a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40eb57e8"/>
        <function-ref name="overflow" scoped="" ref="0x40eb5cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40ee3450" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40ee3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TMicro" ref="0x4046d778"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40ee3ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x4154d360" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x4154d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4154d538"/>
        <function-ref name="getPayload" scoped="" ref="0x4154d618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4154d6f8"/>
        <function-ref name="cancel" scoped="" ref="0x4154d7d8"/>
        <function-ref name="sendDone" scoped="" ref="0x4154d8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x4154c010" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4154c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x4154c1e8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x4154c2c8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x4154c3a8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x4154c488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4154ec18" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4154ec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4154edf0"/>
        <function-ref name="getPayload" scoped="" ref="0x4154eed0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4154d010"/>
        <function-ref name="cancel" scoped="" ref="0x4154d0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4154d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x4154da18" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x4154da18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4154dbf0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4154dcd0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4154ddb0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4154de90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f035d8" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f035d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f037b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f03890"/>
        <function-ref name="getPayload" scoped="" ref="0x40f03970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f03a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f03b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f032c0" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f032c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f03498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f03c70" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f03c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f03e48"/>
        <function-ref name="source" scoped="" ref="0x40f03f28"/>
        <function-ref name="address" scoped="" ref="0x40f00018"/>
        <function-ref name="destination" scoped="" ref="0x40f000f8"/>
        <function-ref name="setSource" scoped="" ref="0x40f001d8"/>
        <function-ref name="setDestination" scoped="" ref="0x40f002b8"/>
        <function-ref name="type" scoped="" ref="0x40f00398"/>
        <function-ref name="setType" scoped="" ref="0x40f00478"/>
        <function-ref name="isForMe" scoped="" ref="0x40f00558"/>
        <function-ref name="setGroup" scoped="" ref="0x40f00638"/>
        <function-ref name="localGroup" scoped="" ref="0x40f00718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40eff778" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40eff778"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eff950"/>
        <function-ref name="getPayload" scoped="" ref="0x40effa30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40effb10"/>
        <function-ref name="cancel" scoped="" ref="0x40effbf0"/>
        <function-ref name="sendDone" scoped="" ref="0x40effcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40effe10" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40effe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f2f010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f2f0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f2f1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f2f2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f2f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f2f4d0" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f2f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f2f6a8"/>
        <function-ref name="source" scoped="" ref="0x40f2f788"/>
        <function-ref name="address" scoped="" ref="0x40f2f868"/>
        <function-ref name="destination" scoped="" ref="0x40f2f948"/>
        <function-ref name="setSource" scoped="" ref="0x40f2fa28"/>
        <function-ref name="setDestination" scoped="" ref="0x40f2fb08"/>
        <function-ref name="type" scoped="" ref="0x40f2fbe8"/>
        <function-ref name="setType" scoped="" ref="0x40f2fcc8"/>
        <function-ref name="isForMe" scoped="" ref="0x40f2fda8"/>
        <function-ref name="setGroup" scoped="" ref="0x40f2fe88"/>
        <function-ref name="localGroup" scoped="" ref="0x40f2e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f2e170" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f2e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f2e348"/>
        <function-ref name="noAck" scoped="" ref="0x40f2e428"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f2e508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4176a698" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4176a698"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4176a870"/>
        <function-ref name="getPayload" scoped="" ref="0x4176a950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4176aa30"/>
        <function-ref name="cancel" scoped="" ref="0x4176ab10"/>
        <function-ref name="sendDone" scoped="" ref="0x4176abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4176ad30" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4176ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4176af08"/>
        <function-ref name="payloadLength" scoped="" ref="0x41769010"/>
        <function-ref name="getPayload" scoped="" ref="0x417690f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417691d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x417692b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x417693f0" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417693f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417695c8"/>
        <function-ref name="source" scoped="" ref="0x417696a8"/>
        <function-ref name="address" scoped="" ref="0x41769788"/>
        <function-ref name="destination" scoped="" ref="0x41769868"/>
        <function-ref name="setSource" scoped="" ref="0x41769948"/>
        <function-ref name="setDestination" scoped="" ref="0x41769a28"/>
        <function-ref name="type" scoped="" ref="0x41769b08"/>
        <function-ref name="setType" scoped="" ref="0x41769be8"/>
        <function-ref name="isForMe" scoped="" ref="0x41769cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x41769da8"/>
        <function-ref name="localGroup" scoped="" ref="0x41769e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41768010" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41768010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x417681e8"/>
        <function-ref name="noAck" scoped="" ref="0x417682c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x417683a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41763200" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41763200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417633d8"/>
        <function-ref name="getPayload" scoped="" ref="0x417634b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41763598"/>
        <function-ref name="cancel" scoped="" ref="0x41763678"/>
        <function-ref name="sendDone" scoped="" ref="0x41763758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41763898" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41763898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41763a70"/>
        <function-ref name="payloadLength" scoped="" ref="0x41763b50"/>
        <function-ref name="getPayload" scoped="" ref="0x41763c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41763d10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41763df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41762010" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41762010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417621e8"/>
        <function-ref name="source" scoped="" ref="0x417622c8"/>
        <function-ref name="address" scoped="" ref="0x417623a8"/>
        <function-ref name="destination" scoped="" ref="0x41762488"/>
        <function-ref name="setSource" scoped="" ref="0x41762568"/>
        <function-ref name="setDestination" scoped="" ref="0x41762648"/>
        <function-ref name="type" scoped="" ref="0x41762728"/>
        <function-ref name="setType" scoped="" ref="0x41762808"/>
        <function-ref name="isForMe" scoped="" ref="0x417628e8"/>
        <function-ref name="setGroup" scoped="" ref="0x417629c8"/>
        <function-ref name="localGroup" scoped="" ref="0x41762aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41762c08" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41762c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41762de0"/>
        <function-ref name="noAck" scoped="" ref="0x41762ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x41760010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41758420" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41758420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417585f8"/>
        <function-ref name="getPayload" scoped="" ref="0x417586d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417587b8"/>
        <function-ref name="cancel" scoped="" ref="0x41758898"/>
        <function-ref name="sendDone" scoped="" ref="0x41758978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41758ae8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41758ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41758cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x41758da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41758e80"/>
        <function-ref name="cancel" scoped="" ref="0x41757010"/>
        <function-ref name="sendDone" scoped="" ref="0x417570f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41757230" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41757230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41757408"/>
        <function-ref name="source" scoped="" ref="0x417574e8"/>
        <function-ref name="address" scoped="" ref="0x417575c8"/>
        <function-ref name="destination" scoped="" ref="0x417576a8"/>
        <function-ref name="setSource" scoped="" ref="0x41757788"/>
        <function-ref name="setDestination" scoped="" ref="0x41757868"/>
        <function-ref name="type" scoped="" ref="0x41757948"/>
        <function-ref name="setType" scoped="" ref="0x41757a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41757b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41757be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41757cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x4175f580" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x4175f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4175f758"/>
        <function-ref name="getPayload" scoped="" ref="0x4175f838"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4175f918"/>
        <function-ref name="cancel" scoped="" ref="0x4175f9f8"/>
        <function-ref name="sendDone" scoped="" ref="0x4175fad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x4175e230" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4175e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x4175e408"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x4175e4e8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x4175e5c8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x4175e6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41760e88" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41760e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4175f070"/>
        <function-ref name="getPayload" scoped="" ref="0x4175f150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4175f230"/>
        <function-ref name="cancel" scoped="" ref="0x4175f310"/>
        <function-ref name="sendDone" scoped="" ref="0x4175f3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x4175fc38" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x4175fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4175fe10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4175fef0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4175e010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4175e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f2da60" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f2da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f2dc38"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f2dd18"/>
        <function-ref name="getPayload" scoped="" ref="0x40f2ddf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f2ded8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f2c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f2d748" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f2d748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f2d920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f2c150" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f2c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f2c328"/>
        <function-ref name="source" scoped="" ref="0x40f2c408"/>
        <function-ref name="address" scoped="" ref="0x40f2c4e8"/>
        <function-ref name="destination" scoped="" ref="0x40f2c5c8"/>
        <function-ref name="setSource" scoped="" ref="0x40f2c6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x40f2c788"/>
        <function-ref name="type" scoped="" ref="0x40f2c868"/>
        <function-ref name="setType" scoped="" ref="0x40f2c948"/>
        <function-ref name="isForMe" scoped="" ref="0x40f2ca28"/>
        <function-ref name="setGroup" scoped="" ref="0x40f2cb08"/>
        <function-ref name="localGroup" scoped="" ref="0x40f2cbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f2bc30" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f2bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f2be08"/>
        <function-ref name="getPayload" scoped="" ref="0x40f2bee8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f2a010"/>
        <function-ref name="cancel" scoped="" ref="0x40f2a0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f2a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f2a310" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f2a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f2a4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f2a5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f2a6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f2a788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f2a868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f2a9a8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f2a9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f2ab80"/>
        <function-ref name="source" scoped="" ref="0x40f2ac60"/>
        <function-ref name="address" scoped="" ref="0x40f2ad40"/>
        <function-ref name="destination" scoped="" ref="0x40f2ae20"/>
        <function-ref name="setSource" scoped="" ref="0x40f2af00"/>
        <function-ref name="setDestination" scoped="" ref="0x40f29010"/>
        <function-ref name="type" scoped="" ref="0x40f290f0"/>
        <function-ref name="setType" scoped="" ref="0x40f291d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f292b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f29390"/>
        <function-ref name="localGroup" scoped="" ref="0x40f29470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f295d0" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f295d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f297a8"/>
        <function-ref name="noAck" scoped="" ref="0x40f29888"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f29968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x417972f0" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x417972f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417974c8"/>
        <function-ref name="getPayload" scoped="" ref="0x417975a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41797688"/>
        <function-ref name="cancel" scoped="" ref="0x41797768"/>
        <function-ref name="sendDone" scoped="" ref="0x41797848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41797988" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41797988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41797b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x41797c40"/>
        <function-ref name="getPayload" scoped="" ref="0x41797d20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41797e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41797ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41796040" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41796040"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41796218"/>
        <function-ref name="source" scoped="" ref="0x417962f8"/>
        <function-ref name="address" scoped="" ref="0x417963d8"/>
        <function-ref name="destination" scoped="" ref="0x417964b8"/>
        <function-ref name="setSource" scoped="" ref="0x41796598"/>
        <function-ref name="setDestination" scoped="" ref="0x41796678"/>
        <function-ref name="type" scoped="" ref="0x41796758"/>
        <function-ref name="setType" scoped="" ref="0x41796838"/>
        <function-ref name="isForMe" scoped="" ref="0x41796918"/>
        <function-ref name="setGroup" scoped="" ref="0x417969f8"/>
        <function-ref name="localGroup" scoped="" ref="0x41796ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41796c38" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41796c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41796e10"/>
        <function-ref name="noAck" scoped="" ref="0x41796ef0"/>
        <function-ref name="wasAcked" scoped="" ref="0x41795010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41793af8" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41793af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41793cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x41793db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41793e90"/>
        <function-ref name="cancel" scoped="" ref="0x4178f010"/>
        <function-ref name="sendDone" scoped="" ref="0x4178f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4178f230" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4178f230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4178f408"/>
        <function-ref name="payloadLength" scoped="" ref="0x4178f4e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4178f5c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4178f6a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4178f788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4178f8c8" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4178f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4178faa0"/>
        <function-ref name="source" scoped="" ref="0x4178fb80"/>
        <function-ref name="address" scoped="" ref="0x4178fc60"/>
        <function-ref name="destination" scoped="" ref="0x4178fd40"/>
        <function-ref name="setSource" scoped="" ref="0x4178fe20"/>
        <function-ref name="setDestination" scoped="" ref="0x4178ff00"/>
        <function-ref name="type" scoped="" ref="0x4178e010"/>
        <function-ref name="setType" scoped="" ref="0x4178e0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x4178e1d0"/>
        <function-ref name="setGroup" scoped="" ref="0x4178e2b0"/>
        <function-ref name="localGroup" scoped="" ref="0x4178e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4178e4f0" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4178e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4178e6c8"/>
        <function-ref name="noAck" scoped="" ref="0x4178e7a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4178e888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41788b78" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41788b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41788d50"/>
        <function-ref name="getPayload" scoped="" ref="0x41788e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41788f10"/>
        <function-ref name="cancel" scoped="" ref="0x41785010"/>
        <function-ref name="sendDone" scoped="" ref="0x417850f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41785260" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41785260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41785438"/>
        <function-ref name="getPayload" scoped="" ref="0x41785518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417855f8"/>
        <function-ref name="cancel" scoped="" ref="0x417856d8"/>
        <function-ref name="sendDone" scoped="" ref="0x417857b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x417858f8" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417858f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41785ad0"/>
        <function-ref name="source" scoped="" ref="0x41785bb0"/>
        <function-ref name="address" scoped="" ref="0x41785c90"/>
        <function-ref name="destination" scoped="" ref="0x41785d70"/>
        <function-ref name="setSource" scoped="" ref="0x41785e50"/>
        <function-ref name="setDestination" scoped="" ref="0x41784010"/>
        <function-ref name="type" scoped="" ref="0x417840f0"/>
        <function-ref name="setType" scoped="" ref="0x417841d0"/>
        <function-ref name="isForMe" scoped="" ref="0x417842b0"/>
        <function-ref name="setGroup" scoped="" ref="0x41784390"/>
        <function-ref name="localGroup" scoped="" ref="0x41784470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x4178ddf8" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x4178ddf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4178c010"/>
        <function-ref name="getPayload" scoped="" ref="0x4178c0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4178c1d0"/>
        <function-ref name="cancel" scoped="" ref="0x4178c2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4178c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x4178caa8" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4178caa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x4178cc80"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x4178cd60"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x4178ce40"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x4178cf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4178d710" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4178d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4178d8e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4178d9c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4178daa8"/>
        <function-ref name="cancel" scoped="" ref="0x4178db88"/>
        <function-ref name="sendDone" scoped="" ref="0x4178dc68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x4178c4f0" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x4178c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4178c6c8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4178c7a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4178c888"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4178c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f28eb8" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f28eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f270c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f271a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f27280"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f27360"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f27440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f28ba0" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f28ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f28d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f27580" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f27580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f27758"/>
        <function-ref name="source" scoped="" ref="0x40f27838"/>
        <function-ref name="address" scoped="" ref="0x40f27918"/>
        <function-ref name="destination" scoped="" ref="0x40f279f8"/>
        <function-ref name="setSource" scoped="" ref="0x40f27ad8"/>
        <function-ref name="setDestination" scoped="" ref="0x40f27bb8"/>
        <function-ref name="type" scoped="" ref="0x40f27c98"/>
        <function-ref name="setType" scoped="" ref="0x40f27d78"/>
        <function-ref name="isForMe" scoped="" ref="0x40f27e58"/>
        <function-ref name="setGroup" scoped="" ref="0x40f26010"/>
        <function-ref name="localGroup" scoped="" ref="0x40f260f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f24a38" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="ObjectTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f24a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f21558"/>
        <function-ref name="fired" scoped="" ref="0x40f237e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f23ee8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f23c90"/>
        <function-ref name="getdt" scoped="" ref="0x40f21a08"/>
        <function-ref name="gett0" scoped="" ref="0x40f217b0"/>
        <function-ref name="isRunning" scoped="" ref="0x40f23a38"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f23088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f21238"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f23308"/>
        <function-ref name="stop" scoped="" ref="0x40f23588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40f1c250" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40f1c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f1c428"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f1c508"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f1c5e8"/>
        <function-ref name="getSize" scoped="" ref="0x40f1c6c8"/>
        <function-ref name="readDone" scoped="" ref="0x40f1c7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f1c8e8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f1c8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f1cac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f1cba0"/>
        <function-ref name="request" scoped="" ref="0x40f1cc80"/>
        <function-ref name="granted" scoped="" ref="0x40f1cd60"/>
        <function-ref name="isOwner" scoped="" ref="0x40f1ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x417c6df0" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x417c6df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x417c4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40f453c8" loc="42:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40f453c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f455a0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f45680"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f45760"/>
        <function-ref name="getSize" scoped="" ref="0x40f45840"/>
        <function-ref name="readDone" scoped="" ref="0x40f45920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40f45dd0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40f45dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f44010"/>
        <function-ref name="writeDone" scoped="" ref="0x40f440f0"/>
        <function-ref name="erase" scoped="" ref="0x40f441d0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f442b0"/>
        <function-ref name="write" scoped="" ref="0x40f44390"/>
        <function-ref name="sync" scoped="" ref="0x40f44470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeId" ref="0x40f41a78" loc="46:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x40f41a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f41c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StorageMap" ref="0x40f413d0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x40f413d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x40f415a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40f42aa8" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40f42aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f42c90"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f42d70"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f42e50"/>
        <function-ref name="getSize" scoped="" ref="0x40f40010"/>
        <function-ref name="readDone" scoped="" ref="0x40f400f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40f402c8" loc="41:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40f402c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f404b0"/>
        <function-ref name="writeDone" scoped="" ref="0x40f40590"/>
        <function-ref name="erase" scoped="" ref="0x40f40670"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f40750"/>
        <function-ref name="write" scoped="" ref="0x40f40830"/>
        <function-ref name="sync" scoped="" ref="0x40f40910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeId" ref="0x40f71e88" loc="47:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x40f71e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f700c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StorageMap" ref="0x40f40ae8" loc="42:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x40f40ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x40f40cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockRead" ref="0x40f40ef8" loc="45:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockRead" scoped="" ref="0x40f40ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f710f0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f711d0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f712b0"/>
        <function-ref name="getSize" scoped="" ref="0x40f71390"/>
        <function-ref name="readDone" scoped="" ref="0x40f71470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockWrite" ref="0x40f71668" loc="46:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockWrite" scoped="" ref="0x40f71668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f71850"/>
        <function-ref name="writeDone" scoped="" ref="0x40f71930"/>
        <function-ref name="erase" scoped="" ref="0x40f71a10"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f71af0"/>
        <function-ref name="write" scoped="" ref="0x40f71bd0"/>
        <function-ref name="sync" scoped="" ref="0x40f71cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x40f70298" loc="51:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x40f70298"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x40f70480"/>
        <function-ref name="remap" scoped="" ref="0x40f70560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40f6d760" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40f6d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f6d938"/>
        <function-ref name="writeDone" scoped="" ref="0x40f6da18"/>
        <function-ref name="erase" scoped="" ref="0x40f6daf8"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f6dbd8"/>
        <function-ref name="write" scoped="" ref="0x40f6dcb8"/>
        <function-ref name="sync" scoped="" ref="0x40f6dd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40f6ded8" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40f6ded8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410d00c0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410d01a0"/>
        <function-ref name="computeCrc" scoped="" ref="0x410d0280"/>
        <function-ref name="getSize" scoped="" ref="0x410d0360"/>
        <function-ref name="readDone" scoped="" ref="0x410d0440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45db" ref="0x40f8ddd8" loc="59:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x40f8ddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x40f65db0"/>
        <function-ref name="syncDone" scoped="" ref="0x40f650f0"/>
        <function-ref name="flushDone" scoped="" ref="0x40f651d0"/>
        <function-ref name="read" scoped="" ref="0x40f652b0"/>
        <function-ref name="writeDone" scoped="" ref="0x40f65390"/>
        <function-ref name="copyPage" scoped="" ref="0x40f65470"/>
        <function-ref name="erase" scoped="" ref="0x40f65550"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f65630"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f65710"/>
        <function-ref name="flush" scoped="" ref="0x40f657f0"/>
        <function-ref name="syncAll" scoped="" ref="0x40f658d0"/>
        <function-ref name="flushAll" scoped="" ref="0x40f659b0"/>
        <function-ref name="write" scoped="" ref="0x40f65a90"/>
        <function-ref name="sync" scoped="" ref="0x40f65bf0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f65cd0"/>
        <function-ref name="readDone" scoped="" ref="0x40f65010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40f6ade0" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40f6ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f67010"/>
        <function-ref name="writeDone" scoped="" ref="0x40f670f0"/>
        <function-ref name="erase" scoped="" ref="0x40f671d0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f672b0"/>
        <function-ref name="write" scoped="" ref="0x40f67390"/>
        <function-ref name="sync" scoped="" ref="0x40f67470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40f67920" loc="56:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40f67920"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f67af8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f67bd8"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f67cb8"/>
        <function-ref name="getSize" scoped="" ref="0x40f67d98"/>
        <function-ref name="readDone" scoped="" ref="0x40f67e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BConfig" ref="0x40f87910" loc="62:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BConfig" scoped="" ref="0x40f87910"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbBlockConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="npages" scoped="" ref="0x40f87ae8"/>
        <function-ref name="flipped" scoped="" ref="0x40f87bc8"/>
        <function-ref name="isConfig" scoped="" ref="0x40f87ca8"/>
        <function-ref name="writeHook" scoped="" ref="0x40f87d88"/>
        <function-ref name="remap" scoped="" ref="0x40f87e68"/>
        <function-ref name="writeContinue" scoped="" ref="0x40f8a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x40f97298" loc="60:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x40f97298"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x40f97470"/>
        <function-ref name="remap" scoped="" ref="0x40f97550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40f979f8" loc="61:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f979f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f97bd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f97cb0"/>
        <function-ref name="request" scoped="" ref="0x40f97d90"/>
        <function-ref name="granted" scoped="" ref="0x40f97e70"/>
        <function-ref name="isOwner" scoped="" ref="0x40f8b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x40fdc680" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x40fdc680"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x40fd96b0"/>
        <function-ref name="syncDone" scoped="" ref="0x40fdc938"/>
        <function-ref name="flushDone" scoped="" ref="0x40fdca18"/>
        <function-ref name="read" scoped="" ref="0x40fdcaf8"/>
        <function-ref name="writeDone" scoped="" ref="0x40fdcbd8"/>
        <function-ref name="copyPage" scoped="" ref="0x40fdccb8"/>
        <function-ref name="erase" scoped="" ref="0x40fdcd98"/>
        <function-ref name="eraseDone" scoped="" ref="0x40fdce78"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40fd9010"/>
        <function-ref name="flush" scoped="" ref="0x40fd90f0"/>
        <function-ref name="syncAll" scoped="" ref="0x40fd91d0"/>
        <function-ref name="flushAll" scoped="" ref="0x40fd92b0"/>
        <function-ref name="write" scoped="" ref="0x40fd9390"/>
        <function-ref name="sync" scoped="" ref="0x40fd94f0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40fd95d0"/>
        <function-ref name="readDone" scoped="" ref="0x40fdc858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40fd3250" loc="27:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fd3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fd3428"/>
        <function-ref name="requested" scoped="" ref="0x40fd3508"/>
        <function-ref name="granted" scoped="" ref="0x40fd35e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40fd36c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40fd37a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40fd9b50" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40fd9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fd9d28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fd9e08"/>
        <function-ref name="request" scoped="" ref="0x40fd9ee8"/>
        <function-ref name="granted" scoped="" ref="0x40fd8010"/>
        <function-ref name="isOwner" scoped="" ref="0x40fd80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40fd3958" loc="28:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40fd3958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40fd3b30"/>
        <function-ref name="userId" scoped="" ref="0x40fd3c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45db" ref="0x40ff9c30" loc="59:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x40ff9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x40fd0e90"/>
        <function-ref name="waitCompare" scoped="" ref="0x40ff9ee8"/>
        <function-ref name="crcDone" scoped="" ref="0x40fd0010"/>
        <function-ref name="flushDone" scoped="" ref="0x40fd00f0"/>
        <function-ref name="read" scoped="" ref="0x40fd01d0"/>
        <function-ref name="erase" scoped="" ref="0x40fd02b0"/>
        <function-ref name="writeDone" scoped="" ref="0x40fd0390"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x40fd0470"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x40fd0550"/>
        <function-ref name="eraseDone" scoped="" ref="0x40fd0630"/>
        <function-ref name="waitIdle" scoped="" ref="0x40fd0710"/>
        <function-ref name="flush" scoped="" ref="0x40fd07f0"/>
        <function-ref name="write" scoped="" ref="0x40fd08d0"/>
        <function-ref name="compareDone" scoped="" ref="0x40fd0a30"/>
        <function-ref name="compare" scoped="" ref="0x40fd0b10"/>
        <function-ref name="crc" scoped="" ref="0x40fd0bf0"/>
        <function-ref name="readBuffer" scoped="" ref="0x40fd0cd0"/>
        <function-ref name="fillDone" scoped="" ref="0x40fd0db0"/>
        <function-ref name="readDone" scoped="" ref="0x40ff9e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x40fd78b0" loc="56:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x40fd78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x40fd1870"/>
        <function-ref name="syncDone" scoped="" ref="0x40fd7b68"/>
        <function-ref name="flushDone" scoped="" ref="0x40fd7c48"/>
        <function-ref name="read" scoped="" ref="0x40fd7d28"/>
        <function-ref name="writeDone" scoped="" ref="0x40fd7e08"/>
        <function-ref name="copyPage" scoped="" ref="0x40fd7ee8"/>
        <function-ref name="erase" scoped="" ref="0x40fd1010"/>
        <function-ref name="eraseDone" scoped="" ref="0x40fd10f0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40fd11d0"/>
        <function-ref name="flush" scoped="" ref="0x40fd12b0"/>
        <function-ref name="syncAll" scoped="" ref="0x40fd1390"/>
        <function-ref name="flushAll" scoped="" ref="0x40fd1470"/>
        <function-ref name="write" scoped="" ref="0x40fd1550"/>
        <function-ref name="sync" scoped="" ref="0x40fd16b0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40fd1790"/>
        <function-ref name="readDone" scoped="" ref="0x40fd7a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40fcf1f8" loc="60:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40fcf1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TMicro" ref="0x4046d778"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40fcf948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskSuccess" ref="0x40feddc8" loc="145:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskSuccess" scoped="" ref="0x40feddc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fec010"/>
        <function-ref name="runTask" scoped="" ref="0x40fec0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskFail" ref="0x40fece10" loc="148:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskFail" scoped="" ref="0x40fece10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fea010"/>
        <function-ref name="runTask" scoped="" ref="0x40fea0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fd7558" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fd7558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fd7730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x4104c460" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <component-ref qname="HplAt45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x4104c460"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x404133d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x404133d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x4104b6b0"/>
        <function-ref name="waitCompare" scoped="" ref="0x4104c718"/>
        <function-ref name="crcDone" scoped="" ref="0x4104c7f8"/>
        <function-ref name="flushDone" scoped="" ref="0x4104c8d8"/>
        <function-ref name="read" scoped="" ref="0x4104c9b8"/>
        <function-ref name="erase" scoped="" ref="0x4104ca98"/>
        <function-ref name="writeDone" scoped="" ref="0x4104cb78"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x4104cc58"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x4104cd38"/>
        <function-ref name="eraseDone" scoped="" ref="0x4104ce18"/>
        <function-ref name="waitIdle" scoped="" ref="0x4104cef8"/>
        <function-ref name="flush" scoped="" ref="0x4104b010"/>
        <function-ref name="write" scoped="" ref="0x4104b0f0"/>
        <function-ref name="compareDone" scoped="" ref="0x4104b250"/>
        <function-ref name="compare" scoped="" ref="0x4104b330"/>
        <function-ref name="crc" scoped="" ref="0x4104b410"/>
        <function-ref name="readBuffer" scoped="" ref="0x4104b4f0"/>
        <function-ref name="fillDone" scoped="" ref="0x4104b5d0"/>
        <function-ref name="readDone" scoped="" ref="0x4104c638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x4104a118" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x4104a118"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0x41054390"/>
        <function-ref name="waitCompare" scoped="" ref="0x4104a3d0"/>
        <function-ref name="crcDone" scoped="" ref="0x4104a4b0"/>
        <function-ref name="flushDone" scoped="" ref="0x4104a590"/>
        <function-ref name="read" scoped="" ref="0x4104a670"/>
        <function-ref name="erase" scoped="" ref="0x4104a750"/>
        <function-ref name="writeDone" scoped="" ref="0x4104a830"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x4104a910"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x4104a9f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x4104aad0"/>
        <function-ref name="waitIdle" scoped="" ref="0x4104abb0"/>
        <function-ref name="flush" scoped="" ref="0x4104ac90"/>
        <function-ref name="write" scoped="" ref="0x4104ad70"/>
        <function-ref name="compareDone" scoped="" ref="0x4104aed0"/>
        <function-ref name="compare" scoped="" ref="0x41054010"/>
        <function-ref name="crc" scoped="" ref="0x410540f0"/>
        <function-ref name="readBuffer" scoped="" ref="0x410541d0"/>
        <function-ref name="fillDone" scoped="" ref="0x410542b0"/>
        <function-ref name="fill" scoped="" ref="0x4104a2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45dbByte" ref="0x41054ed0" loc="30:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x41054ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x410530c0"/>
        <function-ref name="waitIdle" scoped="" ref="0x410531a0"/>
        <function-ref name="idle" scoped="" ref="0x41053280"/>
        <function-ref name="select" scoped="" ref="0x41053360"/>
        <function-ref name="deselect" scoped="" ref="0x41053440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41054500" loc="28:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41054500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410546d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410547b8"/>
        <function-ref name="request" scoped="" ref="0x41054898"/>
        <function-ref name="granted" scoped="" ref="0x41054978"/>
        <function-ref name="isOwner" scoped="" ref="0x41054a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlashSpi" ref="0x41054bb8" loc="29:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x41054bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x41054d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x41087010" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x41087010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x410871e8"/>
        <function-ref name="waitIdle" scoped="" ref="0x410872c8"/>
        <function-ref name="idle" scoped="" ref="0x410873a8"/>
        <function-ref name="select" scoped="" ref="0x41087488"/>
        <function-ref name="deselect" scoped="" ref="0x41087568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4108a450" loc="54:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4108a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4108a628"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4108a708"/>
        <function-ref name="request" scoped="" ref="0x4108a7e8"/>
        <function-ref name="granted" scoped="" ref="0x4108a8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x4108a9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x4108aba8" loc="55:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x4108aba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x4108ad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="In" ref="0x41082bc0" loc="100:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="In" scoped="" ref="0x41082bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41082d98"/>
        <function-ref name="isInput" scoped="" ref="0x41082e78"/>
        <function-ref name="toggle" scoped="" ref="0x41081010"/>
        <function-ref name="isOutput" scoped="" ref="0x410810f0"/>
        <function-ref name="get" scoped="" ref="0x410811d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x410812b0"/>
        <function-ref name="set" scoped="" ref="0x41081390"/>
        <function-ref name="clr" scoped="" ref="0x41081470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x410817c0" loc="101:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x410817c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TMicro" ref="0x4046d778"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x41081f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Out" ref="0x410821f0" loc="99:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Out" scoped="" ref="0x410821f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410823c8"/>
        <function-ref name="isInput" scoped="" ref="0x410824a8"/>
        <function-ref name="toggle" scoped="" ref="0x41082588"/>
        <function-ref name="isOutput" scoped="" ref="0x41082668"/>
        <function-ref name="get" scoped="" ref="0x41082748"/>
        <function-ref name="makeOutput" scoped="" ref="0x41082828"/>
        <function-ref name="set" scoped="" ref="0x41082908"/>
        <function-ref name="clr" scoped="" ref="0x410829e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Select" ref="0x41084d48" loc="97:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Select" scoped="" ref="0x41084d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41084f20"/>
        <function-ref name="isInput" scoped="" ref="0x41083018"/>
        <function-ref name="toggle" scoped="" ref="0x410830f8"/>
        <function-ref name="isOutput" scoped="" ref="0x410831d8"/>
        <function-ref name="get" scoped="" ref="0x410832b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41083398"/>
        <function-ref name="set" scoped="" ref="0x41083478"/>
        <function-ref name="clr" scoped="" ref="0x41083558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x410845b0" loc="94:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x410845b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x41084788"/>
        <function-ref name="waitIdle" scoped="" ref="0x41084868"/>
        <function-ref name="idle" scoped="" ref="0x41084948"/>
        <function-ref name="select" scoped="" ref="0x41084a28"/>
        <function-ref name="deselect" scoped="" ref="0x41084b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Clk" ref="0x41083738" loc="98:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Clk" scoped="" ref="0x41083738"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41083910"/>
        <function-ref name="isInput" scoped="" ref="0x410839f0"/>
        <function-ref name="toggle" scoped="" ref="0x41083ad0"/>
        <function-ref name="isOutput" scoped="" ref="0x41083bb0"/>
        <function-ref name="get" scoped="" ref="0x41083c90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41083d70"/>
        <function-ref name="set" scoped="" ref="0x41083e50"/>
        <function-ref name="clr" scoped="" ref="0x41082010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="avail" ref="0x4106f298" loc="163:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="avail" scoped="" ref="0x4106f298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4106f470"/>
        <function-ref name="runTask" scoped="" ref="0x4106f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41087dc8" loc="92:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41087dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41084010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x41084210" loc="93:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x41084210"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x410843e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410a16c8" loc="22:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410a16c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410a18a0"/>
        <function-ref name="configure" scoped="" ref="0x410a1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410a1010" loc="21:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410a1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410a11e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410a12c8"/>
        <function-ref name="request" scoped="" ref="0x410a13a8"/>
        <function-ref name="granted" scoped="" ref="0x410a1488"/>
        <function-ref name="isOwner" scoped="" ref="0x410a1568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="granted" ref="0x410a1b00" loc="25:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="granted" scoped="" ref="0x410a1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410a1cd8"/>
        <function-ref name="runTask" scoped="" ref="0x410a1db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410d4068" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410d4068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x410d4250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410d4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410d3010" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410d3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410d31f8"/>
        <function-ref name="configure" scoped="" ref="0x410d32d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x410d4470" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410d4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410d4648"/>
        <function-ref name="requested" scoped="" ref="0x410d4728"/>
        <function-ref name="granted" scoped="" ref="0x410d4808"/>
        <function-ref name="isOwner" scoped="" ref="0x410d48e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410d49c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41094908" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41094908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41094af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41094bd0"/>
        <function-ref name="request" scoped="" ref="0x41094cb0"/>
        <function-ref name="granted" scoped="" ref="0x41094d90"/>
        <function-ref name="isOwner" scoped="" ref="0x41094e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x410d4b08" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410d4b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410d4ce0"/>
        <function-ref name="userId" scoped="" ref="0x410d4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417ddd40" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417ddd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417ddf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x417db090" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x417db090"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417db268"/>
        <function-ref name="isEmpty" scoped="" ref="0x417db348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417db428"/>
        <function-ref name="dequeue" scoped="" ref="0x417db508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x417d99d0" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x417d99d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x417d9bb8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417d9c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x417d8990" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x417d8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x417d8b78"/>
        <function-ref name="configure" scoped="" ref="0x417d8c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x417d8db8" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x417d8db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417d7010"/>
        <function-ref name="isEmpty" scoped="" ref="0x417d70f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417d71d0"/>
        <function-ref name="dequeue" scoped="" ref="0x417d72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x417d9dd8" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x417d9dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x417d8010"/>
        <function-ref name="requested" scoped="" ref="0x417d80f0"/>
        <function-ref name="granted" scoped="" ref="0x417d81d0"/>
        <function-ref name="isOwner" scoped="" ref="0x417d82b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417d8390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x417d73f0" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x417d73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x417d75c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x417d76a8"/>
        <function-ref name="led1On" scoped="" ref="0x417d7788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x417d7868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x417d7948"/>
        <function-ref name="get" scoped="" ref="0x417d7a28"/>
        <function-ref name="led1Off" scoped="" ref="0x417d7b08"/>
        <function-ref name="led0On" scoped="" ref="0x417d7e88"/>
        <function-ref name="set" scoped="" ref="0x417d7cc8"/>
        <function-ref name="led2On" scoped="" ref="0x417d7be8"/>
        <function-ref name="led2Off" scoped="" ref="0x417d7da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x417d9290" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x417d9290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x417d9478"/>
        <function-ref name="immediateRequest" scoped="" ref="0x417d9558"/>
        <function-ref name="request" scoped="" ref="0x417d9638"/>
        <function-ref name="granted" scoped="" ref="0x417d9718"/>
        <function-ref name="isOwner" scoped="" ref="0x417d97f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x417d84d0" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x417d84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x417d86a8"/>
        <function-ref name="userId" scoped="" ref="0x417d8788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x417d6030" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x417d6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x417d6208"/>
        <function-ref name="runTask" scoped="" ref="0x417d62e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbVolume" ref="0x40f68ac0" loc="18:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbStorageManagerC.nc">
      <component-ref qname="At45dbStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x40f68ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x40f68c98"/>
        <function-ref name="remap" scoped="" ref="0x40f68d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410ca3c0" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410ca3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410ca598"/>
        <function-ref name="writeDone" scoped="" ref="0x410ca678"/>
        <function-ref name="erase" scoped="" ref="0x410ca758"/>
        <function-ref name="eraseDone" scoped="" ref="0x410ca838"/>
        <function-ref name="write" scoped="" ref="0x410ca918"/>
        <function-ref name="sync" scoped="" ref="0x410ca9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x410cab38" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x410cab38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410cad10"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410cadf0"/>
        <function-ref name="computeCrc" scoped="" ref="0x410caed0"/>
        <function-ref name="getSize" scoped="" ref="0x410c8010"/>
        <function-ref name="readDone" scoped="" ref="0x410c80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410c7080" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410c7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410c7258"/>
        <function-ref name="writeDone" scoped="" ref="0x410c7338"/>
        <function-ref name="erase" scoped="" ref="0x410c7418"/>
        <function-ref name="eraseDone" scoped="" ref="0x410c74f8"/>
        <function-ref name="write" scoped="" ref="0x410c75d8"/>
        <function-ref name="sync" scoped="" ref="0x410c76b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x410c77f8" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x410c77f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410c79d0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410c7ab0"/>
        <function-ref name="computeCrc" scoped="" ref="0x410c7b90"/>
        <function-ref name="getSize" scoped="" ref="0x410c7c70"/>
        <function-ref name="readDone" scoped="" ref="0x410c7d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410c6d10" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410c6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410c6ee8"/>
        <function-ref name="writeDone" scoped="" ref="0x410c5010"/>
        <function-ref name="erase" scoped="" ref="0x410c50f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x410c51d0"/>
        <function-ref name="write" scoped="" ref="0x410c52b0"/>
        <function-ref name="sync" scoped="" ref="0x410c5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x410c54d0" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x410c54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410c56a8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410c5788"/>
        <function-ref name="computeCrc" scoped="" ref="0x410c5868"/>
        <function-ref name="getSize" scoped="" ref="0x410c5948"/>
        <function-ref name="readDone" scoped="" ref="0x410c5a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x417c4948" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x417c4948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x417c4b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x417c4c00"/>
        <function-ref name="request" scoped="" ref="0x417c4ce0"/>
        <function-ref name="granted" scoped="" ref="0x417c4dc0"/>
        <function-ref name="isOwner" scoped="" ref="0x417c4ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410f6d40" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <component-ref qname="BlockStorageLockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410f6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410f6f18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410f3010"/>
        <function-ref name="request" scoped="" ref="0x410f30f0"/>
        <function-ref name="granted" scoped="" ref="0x410f31d0"/>
        <function-ref name="isOwner" scoped="" ref="0x410f32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x410f3460" loc="41:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <component-ref qname="BlockStorageLockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410f3460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410f3638"/>
        <function-ref name="userId" scoped="" ref="0x410f3718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410f2c28" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410f2c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x410f2e10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410f2ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410f1520" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410f1520"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410f1708"/>
        <function-ref name="configure" scoped="" ref="0x410f17e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410f24e8" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410f24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410f26d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410f27b0"/>
        <function-ref name="request" scoped="" ref="0x410f2890"/>
        <function-ref name="granted" scoped="" ref="0x410f2970"/>
        <function-ref name="isOwner" scoped="" ref="0x410f2a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x410f1070" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410f1070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410f1248"/>
        <function-ref name="userId" scoped="" ref="0x410f1328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41803040" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41803040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41803218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41803378" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41803378"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41803550"/>
        <function-ref name="isEmpty" scoped="" ref="0x41803630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41803710"/>
        <function-ref name="dequeue" scoped="" ref="0x418037f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41802ab0" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41802ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41802c98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41802d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x418013a8" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x418013a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41801590"/>
        <function-ref name="configure" scoped="" ref="0x41801670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x418017d0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x418017d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x418019a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x41801a88"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41801b68"/>
        <function-ref name="dequeue" scoped="" ref="0x41801c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41802370" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41802370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41802558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41802638"/>
        <function-ref name="request" scoped="" ref="0x41802718"/>
        <function-ref name="granted" scoped="" ref="0x418027f8"/>
        <function-ref name="isOwner" scoped="" ref="0x418028d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41802eb8" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41802eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x418010c0"/>
        <function-ref name="userId" scoped="" ref="0x418011a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41801dc8" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41801dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41800010"/>
        <function-ref name="runTask" scoped="" ref="0x418000f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x410f4e30" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x410f4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410ef050"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410ef130"/>
        <function-ref name="computeCrc" scoped="" ref="0x410ef210"/>
        <function-ref name="getSize" scoped="" ref="0x410ef2f0"/>
        <function-ref name="readDone" scoped="" ref="0x410ef3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410ef510" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410ef510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410ef6e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410ef7c8"/>
        <function-ref name="request" scoped="" ref="0x410ef8a8"/>
        <function-ref name="granted" scoped="" ref="0x410ef988"/>
        <function-ref name="isOwner" scoped="" ref="0x410efa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41841320" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41841320"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x418414f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41841e30" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41841e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41840050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41840130"/>
        <function-ref name="request" scoped="" ref="0x41840210"/>
        <function-ref name="granted" scoped="" ref="0x418402f0"/>
        <function-ref name="isOwner" scoped="" ref="0x418403d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x410ee9d8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x410ee9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410eebb0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410eec90"/>
        <function-ref name="computeCrc" scoped="" ref="0x410eed70"/>
        <function-ref name="getSize" scoped="" ref="0x410eee50"/>
        <function-ref name="readDone" scoped="" ref="0x410ed010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410ed150" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410ed150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410ed328"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410ed408"/>
        <function-ref name="request" scoped="" ref="0x410ed4e8"/>
        <function-ref name="granted" scoped="" ref="0x410ed5c8"/>
        <function-ref name="isOwner" scoped="" ref="0x410ed6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x4183c828" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x4183c828"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4183ca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4183b358" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4183b358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4183b530"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4183b610"/>
        <function-ref name="request" scoped="" ref="0x4183b6f0"/>
        <function-ref name="granted" scoped="" ref="0x4183b7d0"/>
        <function-ref name="isOwner" scoped="" ref="0x4183b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410eb958" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410eb958"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410ebb30"/>
        <function-ref name="writeDone" scoped="" ref="0x410ebc10"/>
        <function-ref name="erase" scoped="" ref="0x410ebcf0"/>
        <function-ref name="eraseDone" scoped="" ref="0x410ebdd0"/>
        <function-ref name="write" scoped="" ref="0x410ebeb0"/>
        <function-ref name="sync" scoped="" ref="0x410ea010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410ea150" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410ea150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410ea328"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410ea408"/>
        <function-ref name="request" scoped="" ref="0x410ea4e8"/>
        <function-ref name="granted" scoped="" ref="0x410ea5c8"/>
        <function-ref name="isOwner" scoped="" ref="0x410ea6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41837c40" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41837c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41837e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41836820" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41836820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x418369f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41836ad8"/>
        <function-ref name="request" scoped="" ref="0x41836bb8"/>
        <function-ref name="granted" scoped="" ref="0x41836c98"/>
        <function-ref name="isOwner" scoped="" ref="0x41836d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410e56a0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410e56a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410e5878"/>
        <function-ref name="writeDone" scoped="" ref="0x410e5958"/>
        <function-ref name="erase" scoped="" ref="0x410e5a38"/>
        <function-ref name="eraseDone" scoped="" ref="0x410e5b18"/>
        <function-ref name="write" scoped="" ref="0x410e5bf8"/>
        <function-ref name="sync" scoped="" ref="0x410e5cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410e5e18" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410e5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410e4010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410e40f0"/>
        <function-ref name="request" scoped="" ref="0x410e41d0"/>
        <function-ref name="granted" scoped="" ref="0x410e42b0"/>
        <function-ref name="isOwner" scoped="" ref="0x410e4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41830220" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41830220"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x418303f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41830d30" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41830d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41830f08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4182f010"/>
        <function-ref name="request" scoped="" ref="0x4182f0f0"/>
        <function-ref name="granted" scoped="" ref="0x4182f1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x4182f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410e3330" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410e3330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410e3508"/>
        <function-ref name="writeDone" scoped="" ref="0x410e35e8"/>
        <function-ref name="erase" scoped="" ref="0x410e36c8"/>
        <function-ref name="eraseDone" scoped="" ref="0x410e37a8"/>
        <function-ref name="write" scoped="" ref="0x410e3888"/>
        <function-ref name="sync" scoped="" ref="0x410e3968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410e3aa8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410e3aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410e3c80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410e3d60"/>
        <function-ref name="request" scoped="" ref="0x410e3e40"/>
        <function-ref name="granted" scoped="" ref="0x410e3f20"/>
        <function-ref name="isOwner" scoped="" ref="0x410e1018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x4182b748" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x4182b748"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4182b920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4182a270" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4182a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4182a448"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4182a528"/>
        <function-ref name="request" scoped="" ref="0x4182a608"/>
        <function-ref name="granted" scoped="" ref="0x4182a6e8"/>
        <function-ref name="isOwner" scoped="" ref="0x4182a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x41157bd8" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x41157bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x4079e8b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x4079d188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x411b2218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x41117d98" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x41117d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x4079e8b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x4079d188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x41157918"/>
        <function-ref name="get" scoped="" ref="0x41157400"/>
        <function-ref name="set" scoped="" ref="0x41157678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x41879c28" loc="62:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x41879c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41879e00"/>
        <function-ref name="runTask" scoped="" ref="0x41879ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x4187a810" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x4187a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x4187aac8"/>
        <function-ref name="storeData" scoped="" ref="0x4187ae48"/>
        <function-ref name="newData" scoped="" ref="0x4187aba8"/>
        <function-ref name="start" scoped="" ref="0x4187ac88"/>
        <function-ref name="requestSeqno" scoped="" ref="0x4187ad68"/>
        <function-ref name="stop" scoped="" ref="0x4187a9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x4187ce50" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x4187ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x4079e8b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x4079d188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x4187a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41879010" loc="52:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41879010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x418791e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x418792c8"/>
        <function-ref name="led1On" scoped="" ref="0x418793a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41879488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41879568"/>
        <function-ref name="get" scoped="" ref="0x41879648"/>
        <function-ref name="led1Off" scoped="" ref="0x41879728"/>
        <function-ref name="led0On" scoped="" ref="0x41879aa8"/>
        <function-ref name="set" scoped="" ref="0x418798e8"/>
        <function-ref name="led2On" scoped="" ref="0x41879808"/>
        <function-ref name="led2Off" scoped="" ref="0x418799c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x4187c030" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x4187c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x4079e8b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x4079d188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x4187cb90"/>
        <function-ref name="get" scoped="" ref="0x4187c678"/>
        <function-ref name="set" scoped="" ref="0x4187c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4187db60" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4187db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4187dd38"/>
        <function-ref name="stop" scoped="" ref="0x4187de18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x41126020" loc="52:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41126020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411261f8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x411262d8"/>
        <function-ref name="reset" scoped="" ref="0x411263b8"/>
        <function-ref name="start" scoped="" ref="0x41126498"/>
        <function-ref name="stop" scoped="" ref="0x41126578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x4112ac50" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x4112ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x4112af08"/>
        <function-ref name="stop" scoped="" ref="0x411272b0"/>
        <function-ref name="newData" scoped="" ref="0x41127010"/>
        <function-ref name="start" scoped="" ref="0x411270f0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x411271d0"/>
        <function-ref name="requestData" scoped="" ref="0x4112ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4112a478" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4112a478"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4112a650"/>
        <function-ref name="stop" scoped="" ref="0x4112a730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x41126af0" loc="53:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x41126af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41126cc8"/>
        <function-ref name="stop" scoped="" ref="0x41126da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x4111eb78" loc="57:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x4111eb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4111ed50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x4111e3f8" loc="56:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x4111e3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4111e5d0"/>
        <function-ref name="getPayload" scoped="" ref="0x4111e6b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4111e790"/>
        <function-ref name="cancel" scoped="" ref="0x4111e870"/>
        <function-ref name="sendDone" scoped="" ref="0x4111e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x4111f8d0" loc="53:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4111f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4111faa8"/>
        <function-ref name="getPayload" scoped="" ref="0x4111fb88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4111fc68"/>
        <function-ref name="cancel" scoped="" ref="0x4111fd48"/>
        <function-ref name="sendDone" scoped="" ref="0x4111fe28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x41120968" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41120968"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41120b40"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41120c20"/>
        <function-ref name="reset" scoped="" ref="0x41120d00"/>
        <function-ref name="start" scoped="" ref="0x41120de0"/>
        <function-ref name="stop" scoped="" ref="0x41120ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x41125e58" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x41125e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x41120130"/>
        <function-ref name="stop" scoped="" ref="0x411204b0"/>
        <function-ref name="newData" scoped="" ref="0x41120210"/>
        <function-ref name="start" scoped="" ref="0x411202f0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x411203d0"/>
        <function-ref name="requestData" scoped="" ref="0x41120050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x4111e010" loc="54:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4111e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4111e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4111eec0" loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4111eec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4111d0c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4111d1a0"/>
        <function-ref name="led1On" scoped="" ref="0x4111d280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4111d360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4111d440"/>
        <function-ref name="get" scoped="" ref="0x4111d520"/>
        <function-ref name="led1Off" scoped="" ref="0x4111d600"/>
        <function-ref name="led2Off" scoped="" ref="0x4111d980"/>
        <function-ref name="set" scoped="" ref="0x4111d6e0"/>
        <function-ref name="led0On" scoped="" ref="0x4111d7c0"/>
        <function-ref name="led2On" scoped="" ref="0x4111d8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41125680" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41125680"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41125858"/>
        <function-ref name="stop" scoped="" ref="0x41125938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x4111f498" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x4111f498"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4111f670"/>
        <function-ref name="stop" scoped="" ref="0x4111f750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41121330" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41121330"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41121508"/>
        <function-ref name="getPayload" scoped="" ref="0x411215e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411216c8"/>
        <function-ref name="cancel" scoped="" ref="0x411217a8"/>
        <function-ref name="sendDone" scoped="" ref="0x41121888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411219c8" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411219c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41121ba0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41121c80"/>
        <function-ref name="getPayload" scoped="" ref="0x41121d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41121e40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41121f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41165078" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41165078"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41165250"/>
        <function-ref name="source" scoped="" ref="0x41165330"/>
        <function-ref name="address" scoped="" ref="0x41165410"/>
        <function-ref name="destination" scoped="" ref="0x411654f0"/>
        <function-ref name="setSource" scoped="" ref="0x411655d0"/>
        <function-ref name="setDestination" scoped="" ref="0x411656b0"/>
        <function-ref name="type" scoped="" ref="0x41165790"/>
        <function-ref name="setType" scoped="" ref="0x41165870"/>
        <function-ref name="isForMe" scoped="" ref="0x41165950"/>
        <function-ref name="setGroup" scoped="" ref="0x41165a30"/>
        <function-ref name="localGroup" scoped="" ref="0x41165b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41165c70" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41165c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41165e48"/>
        <function-ref name="noAck" scoped="" ref="0x41165f28"/>
        <function-ref name="wasAcked" scoped="" ref="0x41164018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4186aad8" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4186aad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4186acb0"/>
        <function-ref name="getPayload" scoped="" ref="0x4186ad90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4186ae70"/>
        <function-ref name="cancel" scoped="" ref="0x41866010"/>
        <function-ref name="sendDone" scoped="" ref="0x418660f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41866230" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41866230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41866408"/>
        <function-ref name="payloadLength" scoped="" ref="0x418664e8"/>
        <function-ref name="getPayload" scoped="" ref="0x418665c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418666a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41866788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x418668c8" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x418668c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41866aa0"/>
        <function-ref name="source" scoped="" ref="0x41866b80"/>
        <function-ref name="address" scoped="" ref="0x41866c60"/>
        <function-ref name="destination" scoped="" ref="0x41866d40"/>
        <function-ref name="setSource" scoped="" ref="0x41866e20"/>
        <function-ref name="setDestination" scoped="" ref="0x41866f00"/>
        <function-ref name="type" scoped="" ref="0x41865010"/>
        <function-ref name="setType" scoped="" ref="0x418650f0"/>
        <function-ref name="isForMe" scoped="" ref="0x418651d0"/>
        <function-ref name="setGroup" scoped="" ref="0x418652b0"/>
        <function-ref name="localGroup" scoped="" ref="0x41865390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x418654f0" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x418654f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x418656c8"/>
        <function-ref name="noAck" scoped="" ref="0x418657a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41865888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41860618" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41860618"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418607f0"/>
        <function-ref name="getPayload" scoped="" ref="0x418608d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418609b0"/>
        <function-ref name="cancel" scoped="" ref="0x41860a90"/>
        <function-ref name="sendDone" scoped="" ref="0x41860b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41860cb0" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41860cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41860e88"/>
        <function-ref name="payloadLength" scoped="" ref="0x4185f010"/>
        <function-ref name="getPayload" scoped="" ref="0x4185f0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4185f1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4185f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4185f3f0" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4185f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4185f5c8"/>
        <function-ref name="source" scoped="" ref="0x4185f6a8"/>
        <function-ref name="address" scoped="" ref="0x4185f788"/>
        <function-ref name="destination" scoped="" ref="0x4185f868"/>
        <function-ref name="setSource" scoped="" ref="0x4185f948"/>
        <function-ref name="setDestination" scoped="" ref="0x4185fa28"/>
        <function-ref name="type" scoped="" ref="0x4185fb08"/>
        <function-ref name="setType" scoped="" ref="0x4185fbe8"/>
        <function-ref name="isForMe" scoped="" ref="0x4185fcc8"/>
        <function-ref name="setGroup" scoped="" ref="0x4185fda8"/>
        <function-ref name="localGroup" scoped="" ref="0x4185fe88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4185e010" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4185e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4185e1e8"/>
        <function-ref name="noAck" scoped="" ref="0x4185e2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4185e3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41855690" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41855690"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41855868"/>
        <function-ref name="getPayload" scoped="" ref="0x41855948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41855a28"/>
        <function-ref name="cancel" scoped="" ref="0x41855b08"/>
        <function-ref name="sendDone" scoped="" ref="0x41855be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41855d58" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41855d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41854010"/>
        <function-ref name="getPayload" scoped="" ref="0x418540f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418541d0"/>
        <function-ref name="cancel" scoped="" ref="0x418542b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41854390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x418544d0" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x418544d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x418546a8"/>
        <function-ref name="source" scoped="" ref="0x41854788"/>
        <function-ref name="address" scoped="" ref="0x41854868"/>
        <function-ref name="destination" scoped="" ref="0x41854948"/>
        <function-ref name="setSource" scoped="" ref="0x41854a28"/>
        <function-ref name="setDestination" scoped="" ref="0x41854b08"/>
        <function-ref name="type" scoped="" ref="0x41854be8"/>
        <function-ref name="setType" scoped="" ref="0x41854cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x41854da8"/>
        <function-ref name="setGroup" scoped="" ref="0x41854e88"/>
        <function-ref name="localGroup" scoped="" ref="0x418ab010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x4185c918" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x4185c918"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4185caf0"/>
        <function-ref name="getPayload" scoped="" ref="0x4185cbd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4185ccb0"/>
        <function-ref name="cancel" scoped="" ref="0x4185cd90"/>
        <function-ref name="sendDone" scoped="" ref="0x4185ce70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x4185b5c8" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4185b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x4185b7a0"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x4185b880"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x4185b960"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x4185ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4185c230" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4185c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4185c408"/>
        <function-ref name="getPayload" scoped="" ref="0x4185c4e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4185c5c8"/>
        <function-ref name="cancel" scoped="" ref="0x4185c6a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4185c788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x4185b010" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x4185b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4185b1e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4185b2c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4185b3a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4185b488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41163ab0" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41163ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41163c88"/>
        <function-ref name="payloadLength" scoped="" ref="0x41163d68"/>
        <function-ref name="getPayload" scoped="" ref="0x41163e48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41163f28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41162018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41163798" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41163798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41163970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41162158" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41162158"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41162330"/>
        <function-ref name="source" scoped="" ref="0x41162410"/>
        <function-ref name="address" scoped="" ref="0x411624f0"/>
        <function-ref name="destination" scoped="" ref="0x411625d0"/>
        <function-ref name="setSource" scoped="" ref="0x411626b0"/>
        <function-ref name="setDestination" scoped="" ref="0x41162790"/>
        <function-ref name="type" scoped="" ref="0x41162870"/>
        <function-ref name="setType" scoped="" ref="0x41162950"/>
        <function-ref name="isForMe" scoped="" ref="0x41162a30"/>
        <function-ref name="setGroup" scoped="" ref="0x41162b10"/>
        <function-ref name="localGroup" scoped="" ref="0x41162bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x411601f8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x411601f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411603d0"/>
        <function-ref name="getPayload" scoped="" ref="0x411604b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41160590"/>
        <function-ref name="cancel" scoped="" ref="0x41160670"/>
        <function-ref name="sendDone" scoped="" ref="0x41160750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41160890" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41160890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41160a68"/>
        <function-ref name="payloadLength" scoped="" ref="0x41160b48"/>
        <function-ref name="getPayload" scoped="" ref="0x41160c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41160d08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41160de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41160f28" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41160f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4115f110"/>
        <function-ref name="source" scoped="" ref="0x4115f1f0"/>
        <function-ref name="address" scoped="" ref="0x4115f2d0"/>
        <function-ref name="destination" scoped="" ref="0x4115f3b0"/>
        <function-ref name="setSource" scoped="" ref="0x4115f490"/>
        <function-ref name="setDestination" scoped="" ref="0x4115f570"/>
        <function-ref name="type" scoped="" ref="0x4115f650"/>
        <function-ref name="setType" scoped="" ref="0x4115f730"/>
        <function-ref name="isForMe" scoped="" ref="0x4115f810"/>
        <function-ref name="setGroup" scoped="" ref="0x4115f8f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4115f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4115fb30" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4115fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4115fd08"/>
        <function-ref name="noAck" scoped="" ref="0x4115fde8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4115fec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41898600" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41898600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418987d8"/>
        <function-ref name="getPayload" scoped="" ref="0x418988b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41898998"/>
        <function-ref name="cancel" scoped="" ref="0x41898a78"/>
        <function-ref name="sendDone" scoped="" ref="0x41898b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41898c98" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41898c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41898e70"/>
        <function-ref name="payloadLength" scoped="" ref="0x41897010"/>
        <function-ref name="getPayload" scoped="" ref="0x418970f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418971d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x418972b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x418973f0" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x418973f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x418975c8"/>
        <function-ref name="source" scoped="" ref="0x418976a8"/>
        <function-ref name="address" scoped="" ref="0x41897788"/>
        <function-ref name="destination" scoped="" ref="0x41897868"/>
        <function-ref name="setSource" scoped="" ref="0x41897948"/>
        <function-ref name="setDestination" scoped="" ref="0x41897a28"/>
        <function-ref name="type" scoped="" ref="0x41897b08"/>
        <function-ref name="setType" scoped="" ref="0x41897be8"/>
        <function-ref name="isForMe" scoped="" ref="0x41897cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x41897da8"/>
        <function-ref name="localGroup" scoped="" ref="0x41897e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41896010" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41896010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x418961e8"/>
        <function-ref name="noAck" scoped="" ref="0x418962c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x418963a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41891200" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41891200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418913d8"/>
        <function-ref name="getPayload" scoped="" ref="0x418914b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41891598"/>
        <function-ref name="cancel" scoped="" ref="0x41891678"/>
        <function-ref name="sendDone" scoped="" ref="0x41891758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41891898" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41891898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41891a70"/>
        <function-ref name="payloadLength" scoped="" ref="0x41891b50"/>
        <function-ref name="getPayload" scoped="" ref="0x41891c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41891d10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41891df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4188f010" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4188f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4188f1e8"/>
        <function-ref name="source" scoped="" ref="0x4188f2c8"/>
        <function-ref name="address" scoped="" ref="0x4188f3a8"/>
        <function-ref name="destination" scoped="" ref="0x4188f488"/>
        <function-ref name="setSource" scoped="" ref="0x4188f568"/>
        <function-ref name="setDestination" scoped="" ref="0x4188f648"/>
        <function-ref name="type" scoped="" ref="0x4188f728"/>
        <function-ref name="setType" scoped="" ref="0x4188f808"/>
        <function-ref name="isForMe" scoped="" ref="0x4188f8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x4188f9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x4188faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4188fc08" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4188fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4188fde0"/>
        <function-ref name="noAck" scoped="" ref="0x4188fec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4188e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41886420" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41886420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418865f8"/>
        <function-ref name="getPayload" scoped="" ref="0x418866d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418867b8"/>
        <function-ref name="cancel" scoped="" ref="0x41886898"/>
        <function-ref name="sendDone" scoped="" ref="0x41886978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41886ae8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41886ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41886cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x41886da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41886e80"/>
        <function-ref name="cancel" scoped="" ref="0x41885010"/>
        <function-ref name="sendDone" scoped="" ref="0x418850f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41885230" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41885230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41885408"/>
        <function-ref name="source" scoped="" ref="0x418854e8"/>
        <function-ref name="address" scoped="" ref="0x418855c8"/>
        <function-ref name="destination" scoped="" ref="0x418856a8"/>
        <function-ref name="setSource" scoped="" ref="0x41885788"/>
        <function-ref name="setDestination" scoped="" ref="0x41885868"/>
        <function-ref name="type" scoped="" ref="0x41885948"/>
        <function-ref name="setType" scoped="" ref="0x41885a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41885b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41885be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41885cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x4188d580" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x4188d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4188d758"/>
        <function-ref name="getPayload" scoped="" ref="0x4188d838"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4188d918"/>
        <function-ref name="cancel" scoped="" ref="0x4188d9f8"/>
        <function-ref name="sendDone" scoped="" ref="0x4188dad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x4188c230" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4188c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x4188c408"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x4188c4e8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x4188c5c8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x4188c6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4188ee88" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4188ee88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4188d070"/>
        <function-ref name="getPayload" scoped="" ref="0x4188d150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4188d230"/>
        <function-ref name="cancel" scoped="" ref="0x4188d310"/>
        <function-ref name="sendDone" scoped="" ref="0x4188d3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x4188dc38" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x4188dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4188de10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4188def0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4188c010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4188c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4115d9d8" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4115d9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4115dbb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4115dc90"/>
        <function-ref name="getPayload" scoped="" ref="0x4115dd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4115de50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4115c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4115d6c0" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4115d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4115d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4115c150" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4115c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4115c328"/>
        <function-ref name="source" scoped="" ref="0x4115c408"/>
        <function-ref name="address" scoped="" ref="0x4115c4e8"/>
        <function-ref name="destination" scoped="" ref="0x4115c5c8"/>
        <function-ref name="setSource" scoped="" ref="0x4115c6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x4115c788"/>
        <function-ref name="type" scoped="" ref="0x4115c868"/>
        <function-ref name="setType" scoped="" ref="0x4115c948"/>
        <function-ref name="isForMe" scoped="" ref="0x4115ca28"/>
        <function-ref name="setGroup" scoped="" ref="0x4115cb08"/>
        <function-ref name="localGroup" scoped="" ref="0x4115cbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x41159b78" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41159b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41159d50"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41159e30"/>
        <function-ref name="reset" scoped="" ref="0x41159f10"/>
        <function-ref name="start" scoped="" ref="0x41156010"/>
        <function-ref name="stop" scoped="" ref="0x411560f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x411b5bb8" loc="55:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x411b5bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411b5da0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x411b5e80"/>
        <function-ref name="reset" scoped="" ref="0x411b4010"/>
        <function-ref name="start" scoped="" ref="0x411b40f0"/>
        <function-ref name="stop" scoped="" ref="0x411b41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x418c77b8" loc="62:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x418c77b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x418c7990"/>
        <function-ref name="clear" scoped="" ref="0x418c7a70"/>
        <function-ref name="toggle" scoped="" ref="0x418c7b50"/>
        <function-ref name="get" scoped="" ref="0x418c7c30"/>
        <function-ref name="assign" scoped="" ref="0x418c7d10"/>
        <function-ref name="setAll" scoped="" ref="0x418c7df0"/>
        <function-ref name="set" scoped="" ref="0x418c7ed0"/>
        <function-ref name="size" scoped="" ref="0x418c6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x418c6170" loc="63:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x418c6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x418c6348"/>
        <function-ref name="clear" scoped="" ref="0x418c6428"/>
        <function-ref name="toggle" scoped="" ref="0x418c6508"/>
        <function-ref name="get" scoped="" ref="0x418c65e8"/>
        <function-ref name="assign" scoped="" ref="0x418c66c8"/>
        <function-ref name="setAll" scoped="" ref="0x418c67a8"/>
        <function-ref name="set" scoped="" ref="0x418c6888"/>
        <function-ref name="size" scoped="" ref="0x418c6968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x418c6aa8" loc="64:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x418c6aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x418c6c80"/>
        <function-ref name="rand32" scoped="" ref="0x418c6d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x418cbe30" loc="58:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x418cbe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x418ca050"/>
        <function-ref name="incrementCounter" scoped="" ref="0x418ca130"/>
        <function-ref name="reset" scoped="" ref="0x418ca210"/>
        <function-ref name="start" scoped="" ref="0x418ca2f0"/>
        <function-ref name="stop" scoped="" ref="0x418ca3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x418cba80" loc="57:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x418cba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x418cbc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x418c5b00" loc="154:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x418c5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x418c5cd8"/>
        <function-ref name="runTask" scoped="" ref="0x418c5db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x418c6ea0" loc="65:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x418c6ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x418c50c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x418c51a0"/>
        <function-ref name="led1On" scoped="" ref="0x418c5280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x418c5360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x418c5440"/>
        <function-ref name="get" scoped="" ref="0x418c5520"/>
        <function-ref name="led1Off" scoped="" ref="0x418c5600"/>
        <function-ref name="led0On" scoped="" ref="0x418c5980"/>
        <function-ref name="set" scoped="" ref="0x418c57c0"/>
        <function-ref name="led2On" scoped="" ref="0x418c56e0"/>
        <function-ref name="led2Off" scoped="" ref="0x418c58a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x418ca5d0" loc="61:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x418ca5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x418c70d8"/>
        <function-ref name="fired" scoped="" ref="0x418c9368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x418c9a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x418c9818"/>
        <function-ref name="getdt" scoped="" ref="0x418c7588"/>
        <function-ref name="gett0" scoped="" ref="0x418c7330"/>
        <function-ref name="isRunning" scoped="" ref="0x418c95c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x418cabf8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x418c9d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x418cae78"/>
        <function-ref name="stop" scoped="" ref="0x418c9110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x418c3508" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x418c3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x418c0010"/>
        <function-ref name="fired" scoped="" ref="0x418c22a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x418c29a8"/>
        <function-ref name="isOneShot" scoped="" ref="0x418c2750"/>
        <function-ref name="getdt" scoped="" ref="0x418c04c0"/>
        <function-ref name="gett0" scoped="" ref="0x418c0268"/>
        <function-ref name="isRunning" scoped="" ref="0x418c24f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x418c3b30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x418c2cc8"/>
        <function-ref name="startOneShot" scoped="" ref="0x418c3db0"/>
        <function-ref name="stop" scoped="" ref="0x418c2048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x418bf1e8" loc="46:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x418bf1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x418bf3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x418bf520" loc="47:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x418bf520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x418bf6f8"/>
        <function-ref name="clear" scoped="" ref="0x418bf7d8"/>
        <function-ref name="toggle" scoped="" ref="0x418bf8b8"/>
        <function-ref name="get" scoped="" ref="0x418bf998"/>
        <function-ref name="assign" scoped="" ref="0x418bfa78"/>
        <function-ref name="setAll" scoped="" ref="0x418bfb58"/>
        <function-ref name="set" scoped="" ref="0x418bfc38"/>
        <function-ref name="size" scoped="" ref="0x418bfd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x418be9f8" loc="46:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x418be9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x418bebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x418bed30" loc="47:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x418bed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x418bef08"/>
        <function-ref name="clear" scoped="" ref="0x418bd010"/>
        <function-ref name="toggle" scoped="" ref="0x418bd0f0"/>
        <function-ref name="get" scoped="" ref="0x418bd1d0"/>
        <function-ref name="assign" scoped="" ref="0x418bd2b0"/>
        <function-ref name="setAll" scoped="" ref="0x418bd390"/>
        <function-ref name="set" scoped="" ref="0x418bd470"/>
        <function-ref name="size" scoped="" ref="0x418bd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x411b2e70" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x411b2e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411af070"/>
        <function-ref name="stop" scoped="" ref="0x411af150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x411e4a10" loc="48:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <component-ref qname="NetProgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x411e4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x411e4be8"/>
        <function-ref name="reboot" scoped="" ref="0x411e4cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InternalFlash" ref="0x411d3788" loc="45:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <component-ref qname="InternalFlashC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InternalFlash" scoped="" ref="0x411d3788"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411d3960"/>
        <function-ref name="write" scoped="" ref="0x411d3a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x411e9848" loc="47:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x411e9848"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x411e9a20"/>
        <function-ref name="reboot" scoped="" ref="0x411e9b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IFlash" ref="0x411cd0c0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IFlash" scoped="" ref="0x411cd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411cd298"/>
        <function-ref name="write" scoped="" ref="0x411cd378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411e9c70" loc="48:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411e9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411e9e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x411cd900" loc="53:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x411cd900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x411cdad8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411cdbb8"/>
        <function-ref name="led1On" scoped="" ref="0x411cdc98"/>
        <function-ref name="led1Toggle" scoped="" ref="0x411cdd78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x411cde58"/>
        <function-ref name="get" scoped="" ref="0x411cc010"/>
        <function-ref name="led1Off" scoped="" ref="0x411cc0f0"/>
        <function-ref name="led2Off" scoped="" ref="0x411cc470"/>
        <function-ref name="set" scoped="" ref="0x411cc1d0"/>
        <function-ref name="led0On" scoped="" ref="0x411cc2b0"/>
        <function-ref name="led2On" scoped="" ref="0x411cc390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x411cd4d8" loc="52:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x411cd4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x411cd6b0"/>
        <function-ref name="crc16" scoped="" ref="0x411cd790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskRequest" ref="0x411f2010" loc="97:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskRequest" scoped="" ref="0x411f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411f21e8"/>
        <function-ref name="runTask" scoped="" ref="0x411f22c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NetProg" ref="0x411fd0b8" loc="46:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x411fd0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x411fd290"/>
        <function-ref name="reboot" scoped="" ref="0x411fd370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSplitControl" ref="0x411fea98" loc="45:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSplitControl" scoped="" ref="0x411fea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411fec70"/>
        <function-ref name="stopDone" scoped="" ref="0x411fed50"/>
        <function-ref name="start" scoped="" ref="0x411fee30"/>
        <function-ref name="stop" scoped="" ref="0x411fef10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x411b0e38" loc="40:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x411b0e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x41200050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationStdControl" ref="0x411ffef0" loc="43:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationStdControl" scoped="" ref="0x411ffef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411fe0e0"/>
        <function-ref name="stop" scoped="" ref="0x411fe1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x411fd838" loc="47:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x411fd838"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x411fda10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeMetadata" ref="0x411faeb8" loc="48:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x411faeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411fc0c0"/>
        <function-ref name="readDone" scoped="" ref="0x411fc1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x412001c0" loc="41:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x412001c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41200398"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41200478"/>
        <function-ref name="led1On" scoped="" ref="0x41200558"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41200638"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41200718"/>
        <function-ref name="get" scoped="" ref="0x412007f8"/>
        <function-ref name="led1Off" scoped="" ref="0x412008d8"/>
        <function-ref name="led2Off" scoped="" ref="0x41200c58"/>
        <function-ref name="set" scoped="" ref="0x412009b8"/>
        <function-ref name="led0On" scoped="" ref="0x41200a98"/>
        <function-ref name="led2On" scoped="" ref="0x41200b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x411f7610" loc="50:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411f7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411f77e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411f78c8"/>
        <function-ref name="request" scoped="" ref="0x411f79a8"/>
        <function-ref name="granted" scoped="" ref="0x411f7a88"/>
        <function-ref name="isOwner" scoped="" ref="0x411f7b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationValue" ref="0x411ff010" loc="42:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x411ff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x4079e8b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x4079d188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x411ffb70"/>
        <function-ref name="get" scoped="" ref="0x411ff658"/>
        <function-ref name="set" scoped="" ref="0x411ff8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeVolumeManager" ref="0x411f71c0" loc="49:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x411f71c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x411f7398"/>
        <function-ref name="eraseDone" scoped="" ref="0x411f7478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ObjectTransfer" ref="0x411fe390" loc="44:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x411fe390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411fe568"/>
        <function-ref name="receiveDone" scoped="" ref="0x411fe648"/>
        <function-ref name="publish" scoped="" ref="0x411fe728"/>
        <function-ref name="stop" scoped="" ref="0x411fe808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x412013b8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x412013b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4121de98"/>
        <function-ref name="fired" scoped="" ref="0x4121d150"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4121d858"/>
        <function-ref name="isOneShot" scoped="" ref="0x4121d600"/>
        <function-ref name="getdt" scoped="" ref="0x4121c368"/>
        <function-ref name="gett0" scoped="" ref="0x4121c110"/>
        <function-ref name="isRunning" scoped="" ref="0x4121d3a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x412019e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4121db78"/>
        <function-ref name="startOneShot" scoped="" ref="0x41201c60"/>
        <function-ref name="stop" scoped="" ref="0x41201ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x41219480" loc="39:../../Deluge/DelugeMetadataC.nc">
      <component-ref qname="DelugeMetadataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x41219480"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41219658"/>
        <function-ref name="readDone" scoped="" ref="0x41219738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x41213748" loc="43:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x41213748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x41213920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x41213de0" loc="44:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41213de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41212010"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x412120f0"/>
        <function-ref name="computeCrc" scoped="" ref="0x412121d0"/>
        <function-ref name="getSize" scoped="" ref="0x412122b0"/>
        <function-ref name="readDone" scoped="" ref="0x41212390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x41212858" loc="45:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41212858"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41212a30"/>
        <function-ref name="writeDone" scoped="" ref="0x41212b10"/>
        <function-ref name="erase" scoped="" ref="0x41212bf0"/>
        <function-ref name="eraseDone" scoped="" ref="0x41212cd0"/>
        <function-ref name="write" scoped="" ref="0x41212db0"/>
        <function-ref name="sync" scoped="" ref="0x41212e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x412132f0" loc="41:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x412132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412134c8"/>
        <function-ref name="readDone" scoped="" ref="0x412135a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x41211380" loc="46:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x41211380"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x41211558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41217bd8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41217bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41217db0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41217e90"/>
        <function-ref name="computeCrc" scoped="" ref="0x41216010"/>
        <function-ref name="getSize" scoped="" ref="0x412160f0"/>
        <function-ref name="readDone" scoped="" ref="0x412161d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41216310" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41216310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412164e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412165c8"/>
        <function-ref name="request" scoped="" ref="0x412166a8"/>
        <function-ref name="granted" scoped="" ref="0x41216788"/>
        <function-ref name="isOwner" scoped="" ref="0x41216868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x418e1828" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x418e1828"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x418e1a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x418e0358" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x418e0358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x418e0530"/>
        <function-ref name="immediateRequest" scoped="" ref="0x418e0610"/>
        <function-ref name="request" scoped="" ref="0x418e06f0"/>
        <function-ref name="granted" scoped="" ref="0x418e07d0"/>
        <function-ref name="isOwner" scoped="" ref="0x418e08b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x4122d7f8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4122d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4122d9d0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4122dab0"/>
        <function-ref name="computeCrc" scoped="" ref="0x4122db90"/>
        <function-ref name="getSize" scoped="" ref="0x4122dc70"/>
        <function-ref name="readDone" scoped="" ref="0x4122dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4122de90" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4122de90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4122c080"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4122c160"/>
        <function-ref name="request" scoped="" ref="0x4122c240"/>
        <function-ref name="granted" scoped="" ref="0x4122c320"/>
        <function-ref name="isOwner" scoped="" ref="0x4122c400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x418dcc68" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x418dcc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x418dce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x418db820" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x418db820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x418db9f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x418dbad8"/>
        <function-ref name="request" scoped="" ref="0x418dbbb8"/>
        <function-ref name="granted" scoped="" ref="0x418dbc98"/>
        <function-ref name="isOwner" scoped="" ref="0x418dbd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x4122a360" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4122a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4122a538"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4122a618"/>
        <function-ref name="computeCrc" scoped="" ref="0x4122a6f8"/>
        <function-ref name="getSize" scoped="" ref="0x4122a7d8"/>
        <function-ref name="readDone" scoped="" ref="0x4122a8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4122a9f8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4122a9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4122abd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4122acb0"/>
        <function-ref name="request" scoped="" ref="0x4122ad90"/>
        <function-ref name="granted" scoped="" ref="0x4122ae70"/>
        <function-ref name="isOwner" scoped="" ref="0x41229010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x4192f1e8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x4192f1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4192f3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4192fcf8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4192fcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4192fed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4192e010"/>
        <function-ref name="request" scoped="" ref="0x4192e0f0"/>
        <function-ref name="granted" scoped="" ref="0x4192e1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x4192e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41267010" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41267010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412671e8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x412672c8"/>
        <function-ref name="computeCrc" scoped="" ref="0x412673a8"/>
        <function-ref name="getSize" scoped="" ref="0x41267488"/>
        <function-ref name="readDone" scoped="" ref="0x41267568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412676a8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412676a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41267880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41267960"/>
        <function-ref name="request" scoped="" ref="0x41267a40"/>
        <function-ref name="granted" scoped="" ref="0x41267b20"/>
        <function-ref name="isOwner" scoped="" ref="0x41267c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x4192a690" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x4192a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4192a868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x419291b8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x419291b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41929390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41929470"/>
        <function-ref name="request" scoped="" ref="0x41929550"/>
        <function-ref name="granted" scoped="" ref="0x41929630"/>
        <function-ref name="isOwner" scoped="" ref="0x41929710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41265b30" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41265b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41265d08"/>
        <function-ref name="writeDone" scoped="" ref="0x41265de8"/>
        <function-ref name="erase" scoped="" ref="0x41265ec8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41264010"/>
        <function-ref name="write" scoped="" ref="0x412640f0"/>
        <function-ref name="sync" scoped="" ref="0x412641d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41264310" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41264310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412644e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412645c8"/>
        <function-ref name="request" scoped="" ref="0x412646a8"/>
        <function-ref name="granted" scoped="" ref="0x41264788"/>
        <function-ref name="isOwner" scoped="" ref="0x41264868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41925ab8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41925ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41925c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x419236d8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x419236d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x419238b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41923990"/>
        <function-ref name="request" scoped="" ref="0x41923a70"/>
        <function-ref name="granted" scoped="" ref="0x41923b50"/>
        <function-ref name="isOwner" scoped="" ref="0x41923c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x412637f8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x412637f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x412639d0"/>
        <function-ref name="writeDone" scoped="" ref="0x41263ab0"/>
        <function-ref name="erase" scoped="" ref="0x41263b90"/>
        <function-ref name="eraseDone" scoped="" ref="0x41263c70"/>
        <function-ref name="write" scoped="" ref="0x41263d50"/>
        <function-ref name="sync" scoped="" ref="0x41263e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41262010" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41262010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412621e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412622c8"/>
        <function-ref name="request" scoped="" ref="0x412623a8"/>
        <function-ref name="granted" scoped="" ref="0x41262488"/>
        <function-ref name="isOwner" scoped="" ref="0x41262568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x4191e0e8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x4191e0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4191e2c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4191ebf8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4191ebf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4191edd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4191eeb0"/>
        <function-ref name="request" scoped="" ref="0x4191d010"/>
        <function-ref name="granted" scoped="" ref="0x4191d0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4191d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41261520" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41261520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x412616f8"/>
        <function-ref name="writeDone" scoped="" ref="0x412617d8"/>
        <function-ref name="erase" scoped="" ref="0x412618b8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41261998"/>
        <function-ref name="write" scoped="" ref="0x41261a78"/>
        <function-ref name="sync" scoped="" ref="0x41261b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41261c98" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41261c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41261e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41260010"/>
        <function-ref name="request" scoped="" ref="0x412600f0"/>
        <function-ref name="granted" scoped="" ref="0x412601d0"/>
        <function-ref name="isOwner" scoped="" ref="0x412602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41919690" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41919690"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41919868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x419181b8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x419181b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41918390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41918470"/>
        <function-ref name="request" scoped="" ref="0x41918550"/>
        <function-ref name="granted" scoped="" ref="0x41918630"/>
        <function-ref name="isOwner" scoped="" ref="0x41918710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x4125f250" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4125f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4125f428"/>
        <function-ref name="writeDone" scoped="" ref="0x4125f508"/>
        <function-ref name="erase" scoped="" ref="0x4125f5e8"/>
        <function-ref name="eraseDone" scoped="" ref="0x4125f6c8"/>
        <function-ref name="write" scoped="" ref="0x4125f7a8"/>
        <function-ref name="sync" scoped="" ref="0x4125f888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4125f9c8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4125f9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4125fba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4125fc80"/>
        <function-ref name="request" scoped="" ref="0x4125fd60"/>
        <function-ref name="granted" scoped="" ref="0x4125fe40"/>
        <function-ref name="isOwner" scoped="" ref="0x4125ff20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41914ba0" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41914ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41914d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x419126d8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x419126d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x419128b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41912990"/>
        <function-ref name="request" scoped="" ref="0x41912a70"/>
        <function-ref name="granted" scoped="" ref="0x41912b50"/>
        <function-ref name="isOwner" scoped="" ref="0x41912c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x4125b9c8" loc="39:../../Deluge/DelugeMetadataClientC.nc">
      <component-ref qname="DelugeC.DelugeMetadataClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x4125b9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4125bba0"/>
        <function-ref name="readDone" scoped="" ref="0x4125bc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x4127aa48" loc="39:../../Deluge/DelugeVolumeManagerClientC.nc">
      <component-ref qname="DelugeC.DelugeVolumeManagerClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4127aa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x4127ac20"/>
        <function-ref name="eraseDone" scoped="" ref="0x4127ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x41255ba8" loc="39:../../Deluge/DelugeVolumeManagerC.nc">
      <component-ref qname="DelugeVolumeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41255ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x41255d80"/>
        <function-ref name="eraseDone" scoped="" ref="0x41255e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x4124f120" loc="41:../../Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4124f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4124f2f8"/>
        <function-ref name="writeDone" scoped="" ref="0x4124f3d8"/>
        <function-ref name="erase" scoped="" ref="0x4124f4b8"/>
        <function-ref name="eraseDone" scoped="" ref="0x4124f598"/>
        <function-ref name="write" scoped="" ref="0x4124f678"/>
        <function-ref name="sync" scoped="" ref="0x4124f758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4124fc10" loc="42:../../Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4124fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4124fde8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4124fec8"/>
        <function-ref name="request" scoped="" ref="0x4124e010"/>
        <function-ref name="granted" scoped="" ref="0x4124e0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4124e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x41252948" loc="39:../../Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41252948"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x41252b20"/>
        <function-ref name="eraseDone" scoped="" ref="0x41252c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41251448" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41251448"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41251620"/>
        <function-ref name="writeDone" scoped="" ref="0x41251700"/>
        <function-ref name="erase" scoped="" ref="0x412517e0"/>
        <function-ref name="eraseDone" scoped="" ref="0x412518c0"/>
        <function-ref name="write" scoped="" ref="0x412519a0"/>
        <function-ref name="sync" scoped="" ref="0x41251a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41251bc0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41251bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41251d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41251e78"/>
        <function-ref name="request" scoped="" ref="0x41250010"/>
        <function-ref name="granted" scoped="" ref="0x412500f0"/>
        <function-ref name="isOwner" scoped="" ref="0x412501d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x419091e8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x419091e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x419093c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41909cf8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41909cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41909ed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41908010"/>
        <function-ref name="request" scoped="" ref="0x419080f0"/>
        <function-ref name="granted" scoped="" ref="0x419081d0"/>
        <function-ref name="isOwner" scoped="" ref="0x419082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x412801f8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x412801f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x412803d0"/>
        <function-ref name="writeDone" scoped="" ref="0x412804b0"/>
        <function-ref name="erase" scoped="" ref="0x41280590"/>
        <function-ref name="eraseDone" scoped="" ref="0x41280670"/>
        <function-ref name="write" scoped="" ref="0x41280750"/>
        <function-ref name="sync" scoped="" ref="0x41280830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41280970" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41280970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41280b48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41280c28"/>
        <function-ref name="request" scoped="" ref="0x41280d08"/>
        <function-ref name="granted" scoped="" ref="0x41280de8"/>
        <function-ref name="isOwner" scoped="" ref="0x41280ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41970640" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41970640"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41970818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4196f168" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4196f168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4196f340"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4196f420"/>
        <function-ref name="request" scoped="" ref="0x4196f500"/>
        <function-ref name="granted" scoped="" ref="0x4196f5e0"/>
        <function-ref name="isOwner" scoped="" ref="0x4196f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x4127fe68" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4127fe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4127d050"/>
        <function-ref name="writeDone" scoped="" ref="0x4127d130"/>
        <function-ref name="erase" scoped="" ref="0x4127d210"/>
        <function-ref name="eraseDone" scoped="" ref="0x4127d2f0"/>
        <function-ref name="write" scoped="" ref="0x4127d3d0"/>
        <function-ref name="sync" scoped="" ref="0x4127d4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4127d5f0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4127d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4127d7c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4127d8a8"/>
        <function-ref name="request" scoped="" ref="0x4127d988"/>
        <function-ref name="granted" scoped="" ref="0x4127da68"/>
        <function-ref name="isOwner" scoped="" ref="0x4127db48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x4196aa08" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x4196aa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4196abe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41969538" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41969538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41969710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x419697f0"/>
        <function-ref name="request" scoped="" ref="0x419698d0"/>
        <function-ref name="granted" scoped="" ref="0x419699b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41969a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41257818" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41257818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412579f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41257ad0"/>
        <function-ref name="request" scoped="" ref="0x41257bb0"/>
        <function-ref name="granted" scoped="" ref="0x41257c90"/>
        <function-ref name="isOwner" scoped="" ref="0x41257d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x412748b8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="ReprogrammerNodeC.InitDelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x412748b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x412713d8"/>
        <function-ref name="fired" scoped="" ref="0x41273678"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41273d80"/>
        <function-ref name="isOneShot" scoped="" ref="0x41273b28"/>
        <function-ref name="getdt" scoped="" ref="0x41271888"/>
        <function-ref name="gett0" scoped="" ref="0x41271630"/>
        <function-ref name="isRunning" scoped="" ref="0x412738d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41274ee0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x412710b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x412731a0"/>
        <function-ref name="stop" scoped="" ref="0x41273420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41270688" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="ReprogrammerNodeC.ResetTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41270688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4126e248"/>
        <function-ref name="fired" scoped="" ref="0x4126f4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4126fbf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4126f998"/>
        <function-ref name="getdt" scoped="" ref="0x4126e6f8"/>
        <function-ref name="gett0" scoped="" ref="0x4126e4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4126f740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41270cb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4126ff10"/>
        <function-ref name="startOneShot" scoped="" ref="0x4126f010"/>
        <function-ref name="stop" scoped="" ref="0x4126f290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4126c9a8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="ReprogrammerNodeC.RetxTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4126c9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404679e8"/>
            <typename><typedef-ref name="TMilli" ref="0x40467bb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4126a4c8"/>
        <function-ref name="fired" scoped="" ref="0x4126b768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4126be70"/>
        <function-ref name="isOneShot" scoped="" ref="0x4126bc18"/>
        <function-ref name="getdt" scoped="" ref="0x4126a978"/>
        <function-ref name="gett0" scoped="" ref="0x4126a720"/>
        <function-ref name="isRunning" scoped="" ref="0x4126b9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4126b010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4126a1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4126b290"/>
        <function-ref name="stop" scoped="" ref="0x4126b510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41269ef0" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ReprogrammerNodeC.RadioReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41269ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412680e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x412681c0"/>
        <function-ref name="getPayload" scoped="" ref="0x412682a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41268380"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41268460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41269bd8" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ReprogrammerNodeC.RadioReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41269bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41269db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x412685a0" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ReprogrammerNodeC.RadioReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412685a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41268778"/>
        <function-ref name="source" scoped="" ref="0x41268858"/>
        <function-ref name="address" scoped="" ref="0x41268938"/>
        <function-ref name="destination" scoped="" ref="0x41268a18"/>
        <function-ref name="setSource" scoped="" ref="0x41268af8"/>
        <function-ref name="setDestination" scoped="" ref="0x41268bd8"/>
        <function-ref name="type" scoped="" ref="0x41268cb8"/>
        <function-ref name="setType" scoped="" ref="0x41268d98"/>
        <function-ref name="isForMe" scoped="" ref="0x41268e78"/>
        <function-ref name="setGroup" scoped="" ref="0x412a7010"/>
        <function-ref name="localGroup" scoped="" ref="0x412a70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x412a6428" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x412a6428"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412a6600"/>
        <function-ref name="getPayload" scoped="" ref="0x412a66e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412a67c0"/>
        <function-ref name="cancel" scoped="" ref="0x412a68a0"/>
        <function-ref name="sendDone" scoped="" ref="0x412a6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x412a6ac0" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x412a6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412a6c98"/>
        <function-ref name="payloadLength" scoped="" ref="0x412a6d78"/>
        <function-ref name="getPayload" scoped="" ref="0x412a6e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412a5010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412a50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x412a5230" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412a5230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x412a5408"/>
        <function-ref name="source" scoped="" ref="0x412a54e8"/>
        <function-ref name="address" scoped="" ref="0x412a55c8"/>
        <function-ref name="destination" scoped="" ref="0x412a56a8"/>
        <function-ref name="setSource" scoped="" ref="0x412a5788"/>
        <function-ref name="setDestination" scoped="" ref="0x412a5868"/>
        <function-ref name="type" scoped="" ref="0x412a5948"/>
        <function-ref name="setType" scoped="" ref="0x412a5a28"/>
        <function-ref name="isForMe" scoped="" ref="0x412a5b08"/>
        <function-ref name="setGroup" scoped="" ref="0x412a5be8"/>
        <function-ref name="localGroup" scoped="" ref="0x412a5cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x412a5e28" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x412a5e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x412a3050"/>
        <function-ref name="noAck" scoped="" ref="0x412a3130"/>
        <function-ref name="wasAcked" scoped="" ref="0x412a3210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4195ce50" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4195ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41959050"/>
        <function-ref name="getPayload" scoped="" ref="0x41959130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41959210"/>
        <function-ref name="cancel" scoped="" ref="0x419592f0"/>
        <function-ref name="sendDone" scoped="" ref="0x419593d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41959510" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41959510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x419596e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x419597c8"/>
        <function-ref name="getPayload" scoped="" ref="0x419598a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41959988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41959a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41959ba8" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41959ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41959d80"/>
        <function-ref name="source" scoped="" ref="0x41959e60"/>
        <function-ref name="address" scoped="" ref="0x41958010"/>
        <function-ref name="destination" scoped="" ref="0x419580f0"/>
        <function-ref name="setSource" scoped="" ref="0x419581d0"/>
        <function-ref name="setDestination" scoped="" ref="0x419582b0"/>
        <function-ref name="type" scoped="" ref="0x41958390"/>
        <function-ref name="setType" scoped="" ref="0x41958470"/>
        <function-ref name="isForMe" scoped="" ref="0x41958550"/>
        <function-ref name="setGroup" scoped="" ref="0x41958630"/>
        <function-ref name="localGroup" scoped="" ref="0x41958710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41958870" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41958870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41958a48"/>
        <function-ref name="noAck" scoped="" ref="0x41958b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x41958c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41954848" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41954848"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41954a20"/>
        <function-ref name="getPayload" scoped="" ref="0x41954b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41954be0"/>
        <function-ref name="cancel" scoped="" ref="0x41954cc0"/>
        <function-ref name="sendDone" scoped="" ref="0x41954da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41954ee0" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41954ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x419510e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x419511c0"/>
        <function-ref name="getPayload" scoped="" ref="0x419512a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41951380"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41951460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x419515a0" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x419515a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41951778"/>
        <function-ref name="source" scoped="" ref="0x41951858"/>
        <function-ref name="address" scoped="" ref="0x41951938"/>
        <function-ref name="destination" scoped="" ref="0x41951a18"/>
        <function-ref name="setSource" scoped="" ref="0x41951af8"/>
        <function-ref name="setDestination" scoped="" ref="0x41951bd8"/>
        <function-ref name="type" scoped="" ref="0x41951cb8"/>
        <function-ref name="setType" scoped="" ref="0x41951d98"/>
        <function-ref name="isForMe" scoped="" ref="0x41951e78"/>
        <function-ref name="setGroup" scoped="" ref="0x41950010"/>
        <function-ref name="localGroup" scoped="" ref="0x419500f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41950250" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41950250"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41950428"/>
        <function-ref name="noAck" scoped="" ref="0x41950508"/>
        <function-ref name="wasAcked" scoped="" ref="0x419505e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4194a8d0" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4194a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4194aaa8"/>
        <function-ref name="getPayload" scoped="" ref="0x4194ab88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4194ac68"/>
        <function-ref name="cancel" scoped="" ref="0x4194ad48"/>
        <function-ref name="sendDone" scoped="" ref="0x4194ae28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41946010" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41946010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x419461e8"/>
        <function-ref name="getPayload" scoped="" ref="0x419462c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x419463a8"/>
        <function-ref name="cancel" scoped="" ref="0x41946488"/>
        <function-ref name="sendDone" scoped="" ref="0x41946568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x419466a8" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x419466a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41946880"/>
        <function-ref name="source" scoped="" ref="0x41946960"/>
        <function-ref name="address" scoped="" ref="0x41946a40"/>
        <function-ref name="destination" scoped="" ref="0x41946b20"/>
        <function-ref name="setSource" scoped="" ref="0x41946c00"/>
        <function-ref name="setDestination" scoped="" ref="0x41946ce0"/>
        <function-ref name="type" scoped="" ref="0x41946dc0"/>
        <function-ref name="setType" scoped="" ref="0x41946ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x41945010"/>
        <function-ref name="setGroup" scoped="" ref="0x419450f0"/>
        <function-ref name="localGroup" scoped="" ref="0x419451d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x4194fb60" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x4194fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4194fd38"/>
        <function-ref name="getPayload" scoped="" ref="0x4194fe18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4194fef8"/>
        <function-ref name="cancel" scoped="" ref="0x4194e010"/>
        <function-ref name="sendDone" scoped="" ref="0x4194e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x4194e808" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4194e808"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x4194e9e0"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x4194eac0"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x4194eba0"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x4194ec80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4194f478" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4194f478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4194f650"/>
        <function-ref name="getPayload" scoped="" ref="0x4194f730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4194f810"/>
        <function-ref name="cancel" scoped="" ref="0x4194f8f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4194f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x4194e250" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ReprogrammerNodeC.ReplySenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x4194e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4194e428"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4194e508"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4194e5e8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4194e6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x412a1778" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="ReprogrammerNodeC.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x412a1778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412a1da0"/>
        <function-ref name="readDone" scoped="" ref="0x412a0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41993230" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="ReprogrammerNodeC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41993230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41993408"/>
        <function-ref name="configure" scoped="" ref="0x419934e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41994168" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="ReprogrammerNodeC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41994168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41994790"/>
        <function-ref name="readDone" scoped="" ref="0x419949e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x41994cf0" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="ReprogrammerNodeC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41994cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x41994ec8"/>
        <function-ref name="getChannel" scoped="" ref="0x41993010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x419930f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41296260" loc="19:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41296260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41296888"/>
        <function-ref name="readDone" scoped="" ref="0x41296ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x41291678" loc="20:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x41291678"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41291cc0"/>
        <function-ref name="readDone" scoped="" ref="0x41294010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x412946c8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x412946c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x412948a0"/>
        <function-ref name="getChannel" scoped="" ref="0x41294980"/>
        <function-ref name="getPrescaler" scoped="" ref="0x41294a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41294f00" loc="24:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41294f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412930f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412931d0"/>
        <function-ref name="request" scoped="" ref="0x412932b0"/>
        <function-ref name="granted" scoped="" ref="0x41293390"/>
        <function-ref name="isOwner" scoped="" ref="0x41293470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4128c2d0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4128c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4128c4a8"/>
        <function-ref name="configure" scoped="" ref="0x4128c588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x412c6ac8" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x412c6ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x412c6ca0"/>
        <function-ref name="dataReady" scoped="" ref="0x412c6d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x41289908" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x41289908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x41289ae0"/>
        <function-ref name="cancel" scoped="" ref="0x41289bc0"/>
        <function-ref name="dataReady" scoped="" ref="0x41289ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41293eb8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41293eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4128e0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4128e1a0"/>
        <function-ref name="request" scoped="" ref="0x4128e280"/>
        <function-ref name="granted" scoped="" ref="0x4128e360"/>
        <function-ref name="isOwner" scoped="" ref="0x4128e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412c3010" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412c3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412c31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x412c3dd8" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x412c3dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x412c2010"/>
        <function-ref name="dataReady" scoped="" ref="0x412c20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x412c3850" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x412c3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x412c3a28"/>
        <function-ref name="cancel" scoped="" ref="0x412c3b08"/>
        <function-ref name="dataReady" scoped="" ref="0x412c3be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x412b9818" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x412b9818"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x412b99f0"/>
        <function-ref name="getAdmux" scoped="" ref="0x412b9ad0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x412b9bb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x412b9c90"/>
        <function-ref name="enableAdc" scoped="" ref="0x412b9d70"/>
        <function-ref name="setAdmux" scoped="" ref="0x412b9e50"/>
        <function-ref name="enableInterruption" scoped="" ref="0x412c1010"/>
        <function-ref name="isComplete" scoped="" ref="0x412c10f0"/>
        <function-ref name="cancel" scoped="" ref="0x412c11d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x412c12b0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x412c1390"/>
        <function-ref name="disableInterruption" scoped="" ref="0x412c1470"/>
        <function-ref name="startConversion" scoped="" ref="0x412c1550"/>
        <function-ref name="isStarted" scoped="" ref="0x412c16b0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x412c1790"/>
        <function-ref name="setContinuous" scoped="" ref="0x412c1870"/>
        <function-ref name="getAdcsra" scoped="" ref="0x412c1950"/>
        <function-ref name="getValue" scoped="" ref="0x412c1a30"/>
        <function-ref name="dataReady" scoped="" ref="0x412c1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x412c33c0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x412c33c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x412c3598"/>
        <function-ref name="stop" scoped="" ref="0x412c3678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x412c1ce8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x412c1ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x412c1ec0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x412c0010"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x412c00f0"/>
        <function-ref name="actualMicro" scoped="" ref="0x412c01d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x412c02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x412c59f8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x412c59f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x412c5bd0"/>
        <function-ref name="getAdmux" scoped="" ref="0x412c5cb0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x412c5d90"/>
        <function-ref name="isEnabled" scoped="" ref="0x412c5e70"/>
        <function-ref name="enableAdc" scoped="" ref="0x412dc010"/>
        <function-ref name="setAdmux" scoped="" ref="0x412dc0f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x412dc1d0"/>
        <function-ref name="isComplete" scoped="" ref="0x412dc2b0"/>
        <function-ref name="cancel" scoped="" ref="0x412dc390"/>
        <function-ref name="disableAdc" scoped="" ref="0x412dc470"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x412dc550"/>
        <function-ref name="disableInterruption" scoped="" ref="0x412dc630"/>
        <function-ref name="startConversion" scoped="" ref="0x412dc710"/>
        <function-ref name="isStarted" scoped="" ref="0x412dc870"/>
        <function-ref name="setAdcsra" scoped="" ref="0x412dc950"/>
        <function-ref name="setContinuous" scoped="" ref="0x412dca30"/>
        <function-ref name="getAdcsra" scoped="" ref="0x412dcb10"/>
        <function-ref name="getValue" scoped="" ref="0x412dcbf0"/>
        <function-ref name="dataReady" scoped="" ref="0x412dccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x412db728" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x412db728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x412db900"/>
        <function-ref name="getAdmux" scoped="" ref="0x412db9e0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x412dbac0"/>
        <function-ref name="isEnabled" scoped="" ref="0x412dbba0"/>
        <function-ref name="enableAdc" scoped="" ref="0x412dbc80"/>
        <function-ref name="setAdmux" scoped="" ref="0x412dbd60"/>
        <function-ref name="enableInterruption" scoped="" ref="0x412dbe40"/>
        <function-ref name="isComplete" scoped="" ref="0x412dbf20"/>
        <function-ref name="cancel" scoped="" ref="0x412d8018"/>
        <function-ref name="disableAdc" scoped="" ref="0x412d80f8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x412d81d8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x412d82b8"/>
        <function-ref name="startConversion" scoped="" ref="0x412d8398"/>
        <function-ref name="isStarted" scoped="" ref="0x412d84f8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x412d85d8"/>
        <function-ref name="setContinuous" scoped="" ref="0x412d86b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x412d8798"/>
        <function-ref name="getValue" scoped="" ref="0x412d8878"/>
        <function-ref name="dataReady" scoped="" ref="0x412d8958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x412d8b40" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x412d8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x412d8d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41326d40" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41326d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41326f28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41325018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41325ca0" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41325ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41325e88"/>
        <function-ref name="configure" scoped="" ref="0x41324010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41325158" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41325158"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41325330"/>
        <function-ref name="requested" scoped="" ref="0x41325410"/>
        <function-ref name="granted" scoped="" ref="0x413254f0"/>
        <function-ref name="isOwner" scoped="" ref="0x413255d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x413256b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41326600" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41326600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413267e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413268c8"/>
        <function-ref name="request" scoped="" ref="0x413269a8"/>
        <function-ref name="granted" scoped="" ref="0x41326a88"/>
        <function-ref name="isOwner" scoped="" ref="0x41326b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x413257f0" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x413257f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x413259c8"/>
        <function-ref name="userId" scoped="" ref="0x41325aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4198ce00" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4198ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41989010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x41989170" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x41989170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41989348"/>
        <function-ref name="isEmpty" scoped="" ref="0x41989428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41989508"/>
        <function-ref name="dequeue" scoped="" ref="0x419895e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41988a28" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41988a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41988c10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41988cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x419879d0" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x419879d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41987bb8"/>
        <function-ref name="configure" scoped="" ref="0x41987c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41987df8" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41987df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41986010"/>
        <function-ref name="isEmpty" scoped="" ref="0x419860f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x419861d0"/>
        <function-ref name="dequeue" scoped="" ref="0x419862b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41988e30" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41988e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41987050"/>
        <function-ref name="requested" scoped="" ref="0x41987130"/>
        <function-ref name="granted" scoped="" ref="0x41987210"/>
        <function-ref name="isOwner" scoped="" ref="0x419872f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x419873d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x419863f0" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x419863f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x419865c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x419866a8"/>
        <function-ref name="led1On" scoped="" ref="0x41986788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41986868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41986948"/>
        <function-ref name="get" scoped="" ref="0x41986a28"/>
        <function-ref name="led1Off" scoped="" ref="0x41986b08"/>
        <function-ref name="led0On" scoped="" ref="0x41986e88"/>
        <function-ref name="set" scoped="" ref="0x41986cc8"/>
        <function-ref name="led2On" scoped="" ref="0x41986be8"/>
        <function-ref name="led2Off" scoped="" ref="0x41986da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x419882e8" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x419882e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x419884d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x419885b0"/>
        <function-ref name="request" scoped="" ref="0x41988690"/>
        <function-ref name="granted" scoped="" ref="0x41988770"/>
        <function-ref name="isOwner" scoped="" ref="0x41988850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41987510" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41987510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x419876e8"/>
        <function-ref name="userId" scoped="" ref="0x419877c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41985030" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41985030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41985208"/>
        <function-ref name="runTask" scoped="" ref="0x419852e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41323de8" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41323de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41322010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41322150" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41322150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41322328"/>
        <function-ref name="requested" scoped="" ref="0x41322408"/>
        <function-ref name="granted" scoped="" ref="0x413224e8"/>
        <function-ref name="isOwner" scoped="" ref="0x413225c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x413226a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x413239f0" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x413239f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41323bc8"/>
        <function-ref name="stop" scoped="" ref="0x41323ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x413227e8" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x413227e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x413229c0"/>
        <function-ref name="userId" scoped="" ref="0x41322aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x419c7db0" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x419c7db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x419c6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x419c6150" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x419c6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x419c6328"/>
        <function-ref name="requested" scoped="" ref="0x419c6408"/>
        <function-ref name="granted" scoped="" ref="0x419c64e8"/>
        <function-ref name="isOwner" scoped="" ref="0x419c65c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x419c66a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x419c79b8" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x419c79b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x419c7b90"/>
        <function-ref name="stop" scoped="" ref="0x419c7c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x419c67e8" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x419c67e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x419c69c0"/>
        <function-ref name="userId" scoped="" ref="0x419c6aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x4130dd98" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x4130dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046d5b0"/>
            <typename><typedef-ref name="TMicro" ref="0x4046d778"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x4130c508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x413101b8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x413101b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413107e0"/>
        <function-ref name="readDone" scoped="" ref="0x41310a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x4130e178" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x4130e178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4130e7c0"/>
        <function-ref name="readDone" scoped="" ref="0x4130ea38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4130d6b0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4130d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4130d888"/>
        <function-ref name="getChannel" scoped="" ref="0x4130d968"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4130da48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x4130ede8" loc="52:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4130ede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4130d010"/>
        <function-ref name="cancel" scoped="" ref="0x4130d0f0"/>
        <function-ref name="dataReady" scoped="" ref="0x4130d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x413459b0" loc="104:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x413459b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41345b88"/>
        <function-ref name="runTask" scoped="" ref="0x41345c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x413119d8" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x413119d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41339048"/>
        <function-ref name="readDone" scoped="" ref="0x413392b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x41339710" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x41339710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41339d48"/>
        <function-ref name="readDone" scoped="" ref="0x4132b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4132b390" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4132b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4132b578"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4132b658"/>
        <function-ref name="request" scoped="" ref="0x4132b738"/>
        <function-ref name="granted" scoped="" ref="0x4132b818"/>
        <function-ref name="isOwner" scoped="" ref="0x4132b8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x4136ac80" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4136ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4136ae58"/>
        <function-ref name="getChannel" scoped="" ref="0x41367010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x413670f0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x404beba8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x404be038" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404ca010" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x404c1dd8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404c35c0" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x404c3bf8" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404c3aa0" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404c12d8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404c1180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x404c1830" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x404d3ce8" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x404d20f8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x404d3558" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x404d28c8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404d3918" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404d24d0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404cee08" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x404d31a8" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4011b9c0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4042a2e8" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x4011be00" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4042c1a8" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4042c6c0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x404986d0" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x404adbb0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40454d78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40488ea8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405bb5a0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405bb5a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x405c2f00" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405c5b48" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x405c3cc0" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405c3978" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x405c3b60" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x405c34d0" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x405c1888" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x405c1358" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405c3010" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x405bbbf8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405bbaa0" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x405c28e0" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405c2598" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x405c2780" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x405c52b0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405c5158" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405c5780" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x405c9460" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x405c98a8" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x405c9d28" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x405c85b0" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x405d42b8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405d4760" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x405c8168" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405d4ea0" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x405d4d48" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x405c9038" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x405c8a30" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x405c8e58" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405fc8d8" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405fc8d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405fcdb8" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4060a3c8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4060a3c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4060a530" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4060a530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4060aa18" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4060a530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40609510" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40609010" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40609938" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406033b8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406033b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40603520" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40603520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40600810" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40603520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406014d0" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x406001c8" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40603520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40603520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40601e48" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40603520"/></type-var>
          </variable>
          <variable name="dt" ref="0x40600068" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40603520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40601940" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40600ca0" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40603520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40603b50" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40603520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x406039f8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40603520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40601070" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40626a40" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40626010" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40614ba8" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406265d0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40626478" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40628b00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406289a8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40625020" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40626eb0" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40628010" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40628588" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40628430" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x4062a6b8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x4062c3d8" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x4062c800" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x4062cce0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x4062ab78" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x4062a1d8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x4061b8e0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4047d2c8"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x4047d4f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x4061bed8" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4047d2c8"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x4047d4f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x4061bd80" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4047d2c8"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x4047d4f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40624010" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40624010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40623f20" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40624ed0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40624508" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40624010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406232f8" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4062f398" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40624a90" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40624010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40624938" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40624010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40623700" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40623af8" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40617c70" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40617c70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x4061f4f0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40620c38" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406211a8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40617c70"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x4061fa80" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x4061f928" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x4061ff10" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40620010" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40621b50" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4061f0c8" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40621720" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40617c70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406215c8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40617c70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40620418" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40620810" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x407019b8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40701860" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4074e3b8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4074e260" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4074b370" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4074b010" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4074b1f0" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4074c9c0" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4074c028" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4074ecd8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4074eeb8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemLowPowerListening" loc="1:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
      <function command="" provided="0" name="setDefaultRemoteWakeupInterval" ref="0x4075c778" loc="3:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x4075c620" loc="3:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRemoteWakeupInterval" ref="0x4076a340" loc="6:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDelayAfterReceive" ref="0x4076a7b8" loc="7:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDelayAfterReceive" ref="0x4075cd60" loc="4:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x4075cc08" loc="4:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x406f2800" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406f2cc8" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x4076d880" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4076d4e8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x4076d720" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x4076c350" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4076c1f8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x4076d010" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x4075d978" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x4075d820" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <function event="" provided="0" name="receive" ref="0x407445b0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
              <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40744068" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40744248" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40744428" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x4076be90" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40779720" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40779320" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4072fa08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x4076b9a0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4072fa08"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x4076b638" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4072fa08"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4076b840" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x406ff138" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40702c48" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40702af0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x406ff638" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40700f18" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40700dc0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40748a28" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407488d0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4075b4e0" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4075b388" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x4076f3d0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4076f3d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x4076f880" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40767060" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4076f3d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4076fd00" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4076fed0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4076f3d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x407423b0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40741e40" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40742068" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40742248" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40750190" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4073fd60" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40750010" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4073f800" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40740088" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40742ef8" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40740d78" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40740a20" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40740c18" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x40752168" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4072fa08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40752010" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40759a10" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407598b8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x4074f940" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40759010" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4074fe80" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40756378" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40756010" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40756218" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40758668" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40758300" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40758508" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40755a68" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40755910" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x407535e8" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407532b8" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40753488" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4072f7b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40756f18" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40756dc0" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40752de8" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4072fa08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40752a88" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40752c88" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4072fa08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x40764670" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4072fa08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockRead" loc="42:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
      <function command="" provided="0" name="read" ref="0x407c25a8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a read operation within a given volume.</short>
          <long>&#10; Initiate a read operation within a given volume. On SUCCESS, the&#10; &#60;code>readDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#10; @param addr starting address to begin reading.&#10; @param 'void* COUNT(len) buf' buffer to place read data.&#10; @param len number of bytes to read.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x407b31b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x407c2068" loc="56:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x407c2220" loc="56:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407c2440" loc="56:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x407b31b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x407be378" loc="95:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a crc computation.</short>
          <long>&#10; Signals the completion of a crc computation.&#10;&#10; @param addr stating address.&#10; @param len number of bytes the crc was computed over.&#10; @param crc the resulting crc value.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x407b31b8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x407bfba8" loc="95:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x407bfdc8" loc="95:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x407b31b8"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x407be010" loc="96:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x407be208" loc="96:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x407bf598" loc="83:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a crc computation.</short>
          <long>&#10; Initiate a crc computation. On SUCCESS, the&#10; &#60;code>computeCrcDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @param addr starting address.&#10; @param len the number of bytes to compute the crc over.&#10; @parm crc initial CRC value&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x407b31b8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x407bf010" loc="83:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x407bf230" loc="83:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x407b31b8"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x407bf430" loc="84:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0x407be8d0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).</short>
          <long>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).&#10; @return Volume size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_len_t" ref="0x407b31b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x407c0688" loc="67:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param addr starting address of read.&#10; @param 'void* COUNT(len) buf' buffer where read data was placed.&#10; @param len number of bytes read.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x407b31b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x407c2f28" loc="67:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x407c00f0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407c0310" loc="67:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x407b31b8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x407c0518" loc="68:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockWrite" loc="42:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <short>&#10; Write interface for the block storage abstraction described in&#10; TEP103.</short>
        <long>&#10; Write interface for the block storage abstraction described in&#10; TEP103.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-06-04 03:00:25 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x407b9e48" loc="112:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a sync operation.</short>
          <long>&#10; Signals the completion of a sync operation. All written data is&#10; flushed to non-volatile storage after this event.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x407b9cf0" loc="112:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x407ba388" loc="71:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation. However, data is not&#10; guaranteed to survive a power-cycle unless a sync operation has&#10; been completed.&#10;&#10; @param addr starting address of write.&#10; @param 'void* COUNT(len) buf' buffer that written data was read from.&#10; @param len number of bytes written.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x407b31b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x407bbb60" loc="71:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x407bbd18" loc="71:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407ba010" loc="71:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x407b31b8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x407ba218" loc="72:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x407bac78" loc="83:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate an erase operation.</short>
          <long>&#10; Initiate an erase operation. On SUCCESS, the&#10; &#60;code>eraseDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x407b92e0" loc="91:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of an erase operation.</short>
          <long>&#10; Signals the completion of an erase operation.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x407b9188" loc="91:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x407bb198" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a write operation within a given volume.</short>
          <long>&#10; Initiate a write operation within a given volume. On SUCCESS, the&#10; &#60;code>writeDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#60;p>&#10; Between two erases, no byte may be written more than once.&#10; &#10; @param addr starting address to begin write.&#10; @param 'void* COUNT(len) buf' buffer to write data from.&#10; @param len number of bytes to write.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x407b31b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x407b7c28" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x407b7de0" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407bb030" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x407b31b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x407b9768" loc="103:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a sync operation to finalize writes to the volume.</short>
          <long>&#10; Initiate a sync operation to finalize writes to the volume. A&#10; sync operation must be issued to ensure that data is stored in&#10; non-volatile storage. On SUCCES, the &#60;code>syncDone&#60;/code> event&#10; will signal completion of the operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ObjectTransfer" loc="39:../../Deluge/ObjectTransfer.nc">
      <documentation loc="36:../../Deluge/DelugePageTransfer.h">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="receive" ref="0x407b5780" loc="42:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x407ae438"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x407ae9a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x407b51b8" loc="42:../../Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x407ae438"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x407b5410" loc="42:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x407ae9a0"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x407b5618" loc="42:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x407b5cc8" loc="43:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x407b5b70" loc="43:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="publish" ref="0x407b8d10" loc="41:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x407ae438"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x407ae9a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x407b8748" loc="41:../../Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x407ae438"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x407b89a0" loc="41:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x407ae9a0"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x407b8ba8" loc="41:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407b40c8" loc="45:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x407c43a8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x407c7ec0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugePageTransfer" loc="44:../../Deluge/DelugePageTransfer.nc">
      <documentation loc="36:../../Deluge/DelugePageTransfer.h">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x407d39d0" loc="51:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataAvailable" ref="0x407d6eb8" loc="46:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sourceAddr" ref="0x407d6d60" loc="46:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="suppressMsgs" ref="0x407d5898" loc="48:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x407ae438"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x407d5740" loc="48:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x407ae438"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedPage" ref="0x407d3098" loc="49:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x407ae438"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x407aeeb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x407d5ce8" loc="49:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x407ae438"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x407d5f28" loc="49:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x407aeeb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setImgNum" ref="0x407d3608" loc="50:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_img_num" ref="0x407d34b0" loc="50:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransferring" ref="0x407d52f0" loc="47:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWorkingPage" ref="0x407d68d0" loc="45:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x407ae438"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x407aeeb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x407d6530" loc="45:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x407ae438"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x407d6770" loc="45:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x407aeeb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Crc" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
        <short>&#10; Compute the CRC-16 value of a byte array.</short>
        <long>&#10; Compute the CRC-16 value of a byte array.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="seededCrc16" ref="0x407d0b18" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
          <short>&#10; Compute a generic CRC-16 using a given seed.</short>
          <long>&#10; Compute a generic CRC-16 using a given seed.  Used to compute CRC's&#10; of discontinuous data.&#10; &#10; @param startCrc An initial CRC value to begin with&#10; @param 'void* COUNT(len) buf' A pointer to a buffer of data&#10; @param len The length of the buffer&#10; @return The CRC-16 value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="startCrc" ref="0x407d0618" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x407d07d0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407d09b0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc16" ref="0x407d8cb0" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
          <short>&#10; Compute the CRC-16 value of a byte array.</short>
          <long>&#10; Compute the CRC-16 value of a byte array.&#10;&#10; @param   'void* COUNT(len) buf' A pointer to the buffer over which to compute CRC.&#10; @param   len The length of the buffer over which to compute CRC.&#10; @return  The CRC-16 value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x407d8970" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407d8b50" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVecUtils" loc="39:../../Deluge/BitVecUtils.nc">
      <documentation loc="33:../../Deluge/BitVecUtils.nc">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="indexOf" ref="0x40822010" loc="50:../../Deluge/BitVecUtils.nc">
        <documentation loc="40:../../Deluge/BitVecUtils.nc">
          <short>&#10; Locates the index of the first '1' bit in a bit vector.</short>
          <long>&#10; Locates the index of the first '1' bit in a bit vector.&#10;&#10; @param result     the location of the '1' bit&#10; @param fromIndex  the index to start search for '1' bit&#10; @param bitVec     the bit vector&#10; @param length     the length of the bit vector in bits&#10; @return           &#60;code>SUCCESS&#60;/code> if a '1' bit was found;&#10;                   &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x40811808" loc="50:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="fromIndex" ref="0x40811a38" loc="50:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
          <variable name="bitVec" ref="0x40811c68" loc="51:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40811e78" loc="51:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="printBitVec" ref="0x408216c0" loc="72:../../Deluge/BitVecUtils.nc">
        <documentation loc="65:../../Deluge/BitVecUtils.nc">
          <short>&#10; Generates an ASCII representation of the bit vector.</short>
          <long>&#10; Generates an ASCII representation of the bit vector.&#10;&#10; @param buf     the character array to place the ASCII string&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40821128" loc="72:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x40821348" loc="72:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40821558" loc="72:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="countOnes" ref="0x40822be0" loc="62:../../Deluge/BitVecUtils.nc">
        <documentation loc="53:../../Deluge/BitVecUtils.nc">
          <short>&#10; Counts the number of '1' bits in a bit vector.</short>
          <long>&#10; Counts the number of '1' bits in a bit vector.&#10;&#10; @param result  the number of '1' bits&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10; @return        &#60;code>SUCCESS&#60;/code> if the operation completed successfully;&#10;                &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x40822638" loc="62:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x40822858" loc="62:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40822a78" loc="63:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x4087f758" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4087f758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x4087fda8" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4087f758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4087fc50" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4087f758"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x408b8948" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b8608" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408b87e8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x408ca4a8" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ca148" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408ca328" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408b3bb0" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408b45e0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b4488" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408b3290" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b4f20" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408b3130" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x408f4d58" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408f4c00" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x408f3ae0" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408f3988" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x408f4518" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408f32a8" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x4090a560" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x4090a1e8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4090a400" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x409036a8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40903550" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x40908ab0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40908718" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x40908950" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x40905d18" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40905bc0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x409056a0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40905308" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x40905540" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x40904010" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40903e70" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x409074d0" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409074d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40907638" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40907638"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40900a78" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40907638"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40900920" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40918528" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409183d0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40907cc0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40907b68" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408ff010" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40907638"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40918c78" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40918e88" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40907638"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x40923150" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40923150"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x40922430" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409222d8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40923de8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40923150"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40923c90" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x409237c8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40923670" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40922bd8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40923150"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40922860" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40922a78" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40923150"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x4091b220" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4091b0c8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4093bcc0" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4093b3a0" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40928d70" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4093b850" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4093a5f0" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x409379f8" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40725300"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409378a0" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40927df0" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40725300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40937428" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40725300"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409372d0" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40936988" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40725300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409365e8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40936828" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40725300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x409361e8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40725300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40937e28" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40936088" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40725300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x409354c0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40725068"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40935368" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x40935c30" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40725068"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409358a0" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40935ad0" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40725068"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40936ef8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40936da0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40933090" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40725068"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40926178" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40725300"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40929b80" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40725300"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40929d98" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40926010" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4093d3c8" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4093d068" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4093d248" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4093faf8" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40926b08" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409269b0" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4093f500" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4093f1a8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4093f3a0" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x4095e1f0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x40952b60" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40952a08" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x409603b8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4072fa08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40960260" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x4095f168" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095f010" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40962630" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409624d8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40969880" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40969728" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40962dc8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40962a60" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40962c68" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40962060" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40969ce0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40969ee8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40960b40" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4072fa08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409607e0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x409609e0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4072fa08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x4094eb20" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x40965138" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x409647b8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40964660" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x40965880" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40965728" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x40964010" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40965e20" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x40981b58" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x409812f8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x40727ce8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x409811a0" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x40727ce8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40981740" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x40977c40" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x40980038" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40727ce8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x4097c188" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4097c030" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4097e750" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4097e5f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4097d4d0" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4097d010" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4097ec48" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4097ee48" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4097e058" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40980ee0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x4097db50" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4097d9f8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x40942eb8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x409429b8" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40942860" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40959610" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409594b8" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x40959b58" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x409582a0" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40958148" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x4095ad60" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095ac08" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x409536c0" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x40953208" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40954e68" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x409530a8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x409551e0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40955088" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x409558a8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40955750" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x40954208" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40955e68" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x409540a8" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x40957298" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40957b08" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
          <long>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409577e0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x409579a8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40954920" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409547c8" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x4096e620" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4096e4c8" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x40970780" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40970628" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x40976630" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409762e0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x409764d0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x409759e8" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40975890" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x4096ca78" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4096c718" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4096c918" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x40975350" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409751f8" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x4096e010" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40970c38" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x40970e18" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x40974a20" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409746a8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x409748c0" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x4096c2a0" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4096c148" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x40976c98" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40976b40" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x40972a38" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409728e0" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x40972388" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40972010" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40972228" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x40985290" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40725300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x4096a168" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4096a010" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x4096add8" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40725068"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x4096dc28" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4096d8c8" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4096dac8" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x40974168" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40974010" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x40970170" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40971df0" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x40970010" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x4096ee08" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4096eab8" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x4096eca8" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40985868" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40985710" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40971258" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40972f18" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x409710f8" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x40966e00" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40966ca8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x4096a878" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4096a720" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x4096d448" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4096d2f0" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x40971908" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409717b0" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x409508b8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40950558" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x40950758" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x40950d50" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x4095ba18" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095b8c0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x40950088" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095bf08" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListeningConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
      <function command="" provided="0" name="getListenLength" ref="0x4095dc60" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
          <short>&#10; Returns the number of milliseconds the mote should turn on&#10; its radio to check for incoming messages.</short>
          <long>&#10; Returns the number of milliseconds the mote should turn on&#10; its radio to check for incoming messages. This check is &#10; performed at every localWakeInterval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ackRequested" ref="0x4095d720" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
          <short>&#10; Returns TRUE if an acknowledgement has been requested for &#10; this message via the PacketAcknowledgements interface.</short>
          <long>&#10; Returns TRUE if an acknowledgement has been requested for &#10; this message via the PacketAcknowledgements interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095d5c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="needsAutoAckRequest" ref="0x4095d010" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
          <short>&#10; Returns TRUE if an acknowledgement should be requested&#10; for the message automatically by the LPL code (this should &#10; normally happen for all non-broadcast messages).</short>
          <long>&#10; Returns TRUE if an acknowledgement should be requested&#10; for the message automatically by the LPL code (this should &#10; normally happen for all non-broadcast messages).&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095ede8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x40968010" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4094fe88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x4094f900" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4094f7a8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x40968508" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x40968bc0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40968a68" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x409c4460" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x409c4a30" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x409c3090" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x409c4038" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x409e3e68" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409e3d10" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x409df010" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409e0e08" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x409e0870" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409e0518" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x409e0710" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x409de010" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
              <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409dfe30" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40a48c48" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40a442c8" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40a46f20" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40a46a60" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40a635a8" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40a63aa8" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40a5b820" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a60200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a5b6c8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a60200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40a5d4a8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40a5db68" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a60200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a5da10" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a60200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40a5b138" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40a60200"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40b1c958" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
              <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b1c7e0" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40b1c168" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b1c010" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40b33730" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40b335d8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40b33bb0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b38c68" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40b38b10" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b331e0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40b33088" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40b36690" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40b36538" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40b35390" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b35238" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40b36d60" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40b36c08" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40b35a48" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40b358f0" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40b36010" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b3aea0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4072fc68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40becd78" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40be87d8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40be8e20" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40be8cc8" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40be72b0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40be82e0" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40be77f0" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40beb870" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40beb718" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40be5528" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40be5010" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40bebe90" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x40c3fcc0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c3fb68" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40c42928" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c427d0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40c3f170" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c42db8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40c3f010" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40c3f730" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c3f5d8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40746db8"/>
                <typename><typedef-ref name="message_t" ref="0x40745b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40c71890" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c71738" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40c71258" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40cfe3f0" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40cfe3f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40cfe558" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40cfe558"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40cfeb70" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40cfe558"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40cfea18" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40cfe558"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40d01910" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40d002d8" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40d01e78" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40d01d20" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40d01408" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x40cddd28" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cddbd0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x40d04948" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d047f0" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40d04270" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40d03010" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d04e38" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40d78800" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d78800"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40d73318" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40d731c0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40d74910" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40d78cf8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d78800"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40d75888" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d78800"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40d75730" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d78800"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40d75cc8" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40d74d70" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40d752b0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d78800"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40d75158" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d78800"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40d740f8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40d744f0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40d90368" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40d93d30" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40d90010" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d90200" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40d8f9a8" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40d8f228" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40d8f440" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d8f630" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40d8f838" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40d94868" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40d94710" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40dae460" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40da9b20" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40dabca8" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40da8168" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40da8010" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40dae010" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40daac20" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40daaac8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40dadec8" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40dadd70" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40daecf0" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40da5218" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40da50c0" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40dab338" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40da8af0" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40da8998" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40da63a8" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40da96d8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40da9580" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40da6c70" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40daa258" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40daa100" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40dad2b8" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40dad160" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40dab888" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40dab730" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40da90f8" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40da8590" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40da8f00" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40da6800" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40daa690" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40dae888" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40dad880" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40dad728" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40dc9500" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40dc99e8" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40e1ea68" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40e1c010" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40e1e1f0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40e1ca40" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40e1c5d0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40e1c478" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40e1d588" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40e1d430" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40e1a020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40e1ceb0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40e1e640" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40e1db00" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40e1d9a8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40e1d010" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40e1ee88" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="VolumeId" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x40f49c60" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
        <interfacedef-ref qname="VolumeId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x407b4b80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StorageMap" loc="39:../../Deluge/StorageMap.nc">
      <documentation loc="32:../../Deluge/StorageMap.nc">
        <short>&#10; An abstraction to map volume addresses to physical addresses.</short>
        <long>&#10; An abstraction to map volume addresses to physical addresses.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-01-25 00:50:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPhysicalAddress" ref="0x40f44e70" loc="47:../../Deluge/StorageMap.nc">
        <documentation loc="41:../../Deluge/StorageMap.nc">
          <short>&#10; Get the physical address of a volume address.</short>
          <long>&#10; Get the physical address of a volume address.&#10;&#10; @param addr the volume addres.&#10; @return the physical address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="StorageMap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40f44d18" loc="47:../../Deluge/StorageMap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x407b4f10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbVolume" loc="18:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
        <short>&#10; AT45DB interface for managing flash volumes.</short>
        <long>&#10; AT45DB interface for managing flash volumes.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="volumeSize" ref="0x40f38680" loc="30:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Find the flash volume size&#10; </short>
          <long>&#10; Find the flash volume size&#10; @return Flash volume size in pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remap" ref="0x40f38168" loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="19:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Map a volume page to the corresponding page in the whole flash&#10; </short>
          <long>&#10; Map a volume page to the corresponding page in the whole flash&#10; @return What flash page this volume page maps to, or &#10;   AT45_MAX_PAGES for invalid volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="volumePage" ref="0x40f38010" loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45db" loc="63:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. This provides&#10; reasonably high-level operations on AT45DB pages, including automatic&#10; buffer management. Writes are only guaranteed to happen after a flush,&#10; flushAll, sync or syncAll.&#10; &#60;p>&#10; When buffers are flushed to the flash (either explicitly or implicitly),&#10; their contents are checked to ensure the write was succesful. If this&#10; check fails, the flush is retried some number of times. If this fails&#10; more than some number of times, all access to the flash is disabled&#10; (all requests will report FAIL in their completion event).&#10; &#60;p>&#10; This interface only supports one operation at a time - components offering&#10; At45db should use the &#60;code>Resource&#60;/code> interface for resource sharing.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x40f8e470" loc="173:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="168:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a read operation.</short>
          <long>&#10; Signal completion of a read operation. The buffer passed to read&#10; is implictly returned.&#10; @param error SUCCESS for a successful read, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f8e318" loc="173:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x40f92cb8" loc="136:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a sync or syncAll operation.</short>
          <long>&#10; Signal completion of a sync or syncAll operation. &#10; @param error SUCCESS if the sync was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f92b60" loc="136:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x40f90dd0" loc="154:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="150:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an flush or flushAll operation.</short>
          <long>&#10; Signal completion of an flush or flushAll operation. &#10; @param error SUCCESS if the flush was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f90c78" loc="154:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40f8fcd0" loc="166:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="156:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Read some data from an AT45DB page.</short>
          <long>&#10; Read some data from an AT45DB page. readDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40f8f288" loc="166:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40f8f4e8" loc="166:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40f8f930" loc="167:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40f8fb60" loc="167:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40f95ab0" loc="80:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a write operation.</short>
          <long>&#10; Signal completion of a write operation. The buffer passed to write&#10; is implictly returned.&#10; @param error SUCCESS for a successful write, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f95958" loc="80:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copyPage" ref="0x40f94368" loc="91:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Copy one flash page to another.</short>
          <long>&#10; Copy one flash page to another. copyDone will be signaled. If page&#10; from had been modified, it is first flushed to flash. Page&#10; &#60;code>to&#60;/code> will only actually be written when the buffer holding&#10; it is flushed (see flush, flushAll, sync, syncAll).&#10;&#10; @param from Flash page to copy. Must be less than AT45_MAX_PAGES.&#10; @param to Flash page to overwrite. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="from" ref="0x40f94010" loc="91:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
          <variable name="to" ref="0x40f94208" loc="91:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x40f932b0" loc="111:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Erase an AT45DB page.</short>
          <long>&#10; Erase an AT45DB page. eraseDone will be signaled.&#10; @param page Flash page to erase. Must be less than AT45_MAX_PAGES.&#10; @param eraseKind How to handle the erase:&#10;   &#60;br>&#60;code>AT45_ERASE&#60;/code>: actually erase the page in the flash chip&#10;   &#60;br>&#60;code>AT45_DONT_ERASE&#60;/code>: don't erase the page in the flash &#10;     chip, but reserve a buffer for this page - subsequent writes to this&#10;     page will be faster because the old contents need not be read&#10;   &#60;br>&#60;code>AT45_PREVIOUSLY_ERASED&#60;/code>: assume the page was previously&#10;     erased in the flash and reserve a buffer for this page - subsequent&#10;     writes to page will be faster because the old contents need not be &#10;     read and the write itself will be faster&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40f94f00" loc="111:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
          <variable name="eraseKind" ref="0x40f93150" loc="111:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x40f93ae0" loc="116:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an erase operation.</short>
          <long>&#10; Signal completion of an erase operation. &#10; @param error SUCCESS if the erase was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f93988" loc="116:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x40f8db90" loc="194:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a CRC computation.</short>
          <long>&#10; Signal completion of a CRC computation.&#10; @param error SUCCESS if the CRC was successfully computed, FAIL otherwise&#10; @param crc CRC value (valid only if error == SUCCESS)&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f8d840" loc="194:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x40f8da30" loc="194:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40f902d8" loc="144:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. flushDone&#10; will be signaled once the flush has been initiated. If the page is not&#10; in the buffers, flushDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40f90180" loc="144:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="syncAll" ref="0x40f92698" loc="131:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flushAll" ref="0x40f907e0" loc="149:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="145:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. flushDone&#10; will be signaled once the flushes have been initiated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40f953b0" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Write some data to an AT45DB page.</short>
          <long>&#10; Write some data to an AT45DB page. writeDone will be signaled.&#10; @param page Flash page to write to. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40f668a0" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40f66b00" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40f95010" loc="74:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40f95240" loc="74:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x40f92168" loc="125:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. If the page is not&#10; in the buffers, syncDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40f92010" loc="125:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x40f8d1a0" loc="187:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h).</short>
          <long>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h). computeCrcDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous computeCrc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40f8e948" loc="187:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40f8eba8" loc="187:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x40f8ede8" loc="188:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x40f8d030" loc="188:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="copyPageDone" ref="0x40f94a80" loc="96:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a copyPage operation.</short>
          <long>&#10; Signal completion of a copyPage operation. &#10; @param error SUCCESS if the copy was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f94928" loc="96:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbBlockConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <short>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; </short>
        <long>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <function event="" provided="0" name="npages" ref="0x40f88c80" loc="50:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Return size of a config volume in pages (half of the actual block)&#10; </short>
          <long>&#10; Return size of a config volume in pages (half of the actual block)&#10; @return Config volume size&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flipped" ref="0x40f8bc38" loc="30:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Query which half of the block is used by the current config state&#10; </short>
          <long>&#10; Query which half of the block is used by the current config state&#10; @return TRUE for 2nd half, FALSE for 1st half&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isConfig" ref="0x40f8b7f8" loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Check if this block is a config volumes&#10; </short>
          <long>&#10; Check if this block is a config volumes&#10; @return TRUE for config volumes, FALSE for block volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeHook" ref="0x40f880f8" loc="37:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Hook called by block storage just before the start of each write&#10; </short>
          <long>&#10; Hook called by block storage just before the start of each write&#10; @return TRUE to delay the write until &#60;code>writeContinue&#60;/code>&#10;    is called, FALSE to proceed immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="remap" ref="0x40f872f8" loc="58:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; </short>
          <long>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; @param page Volume-relative page&#10; @return Actual flash page for &#60;code>page&#60;/code>&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40f871a0" loc="58:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeContinue" ref="0x40f88768" loc="44:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; </short>
          <long>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; @param error SUCCESS to continue write, anything else to abort write &#10;   returning that error code&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f88610" loc="44:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40fd8eb0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40fd58f0" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40fd8980" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40fd5418" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40fd5ec8" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45db" loc="23:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <short>&#10; HPL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HPL for Atmel's AT45DB family of serial dataflash chips. &#10; Provides access to all basic AT45DB operations plus operations to &#10; wait for the flash to go idle or finish a comparison. See the AT45DB&#10; family datasheets for full details on these operations.&#10; &#60;p>&#10; This interface only supports one operation at a time.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x40ffdb68" loc="141:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="137:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been read from the buffer.</short>
          <long>&#10; Signaled when data has been read from the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitCompare" ref="0x40fcea08" loc="41:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a buffer-flash comparison to complete.</short>
          <long>&#10; Wait for a buffer-flash comparison to complete. waitCompareDone will&#10; be signaled when that occurs.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="crcDone" ref="0x40ffa2c8" loc="163:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="159:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when CRC has been computed.</short>
          <long>&#10; Signaled when CRC has been computed.&#10; @param computedCrc CRC value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="computedCrc" ref="0x40ffa170" loc="163:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x40fcca70" loc="79:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when flush command sent (use waitIdle to detect when&#10; flush command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40ffd578" loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read directly from flash.</short>
          <long>&#10; Read directly from flash. readDone will be signaled.&#10; @param cmd AT45_C_READ_CONTINUOUS or AT45_C_READ_PAGE. When the end of&#10;   a page is read, AT45_C_READ_CONTINUOUS continues on the next page,&#10;   while AT45_C_READ_PAGE continues at the start of the same page.&#10; @param page Page to read from&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40ffe880" loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40ffea90" loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40ffecf0" loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40ffd1d0" loc="135:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40ffd400" loc="135:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x41000eb8" loc="100:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="95:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Erase a flash page.</short>
          <long>&#10; Erase a flash page. eraseDone will be signaled.&#10; @param cmd must be AT45_C_ERASE_PAGE&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x41000b48" loc="100:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x41000d58" loc="100:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40ff9a38" loc="185:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="181:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been written to the buffer.</short>
          <long>&#10; Signaled when data has been written to the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitIdleDone" ref="0x40fce5e8" loc="35:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the flash is idle.</short>
          <long>&#10; Signaled when the flash is idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitCompareDone" ref="0x40fcd058" loc="47:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the buffer-flash comparison is complete.</short>
          <long>&#10; Signaled when the buffer-flash comparison is complete.&#10; @param compareOk TRUE if the comparison succeeded, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="compareOk" ref="0x40fceee0" loc="47:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x40fff390" loc="106:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when erase command sent (use waitIdle to detect when&#10; erase command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x40fce0c8" loc="30:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations).</short>
          <long>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations). You should use waitComapre if you are waiting for a&#10; comparison to complete. waitIdleDone will be signaled when the operation&#10; is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40fcc4c0" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write a buffer to a flash page.</short>
          <long>&#10; Write a buffer to a flash page. flushDone will be signaled.&#10; @param cmd AT45_C_FLUSH_BUFFER1 to write buffer 1 to flash,&#10;   AT45_C_FLUSH_BUFFER2 to write buffer 2 to flash,&#10;   AT45_C_QFLUSH_BUFFER1 to write buffer 1 to flash w/o erase&#10;   (page must have been previously erased),&#10;   AT45_C_QFLUSH_BUFFER2 to write buffer 2 to flash w/o erase&#10;   (page must have been previously erased),&#10; @param page Page to write (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40fcc150" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40fcc360" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40ff93d8" loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="165:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write some data to a flash buffer, and optionally the flash itself.</short>
          <long>&#10; Write some data to a flash buffer, and optionally the flash itself. &#10; writeDone will be signaled.&#10; @param cmd One of AT45_C_WRITE_BUFFER1/2 or AT45_C_WRITE_MEM_BUFFER1/2&#10;   to write respectively to buffer 1/2, or to buffer 1/2 and the &#10;   specified main memory page.&#10; @param page Page to write when cmd is AT45_C_WRITE_MEM_BUFFER1/2&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40ffa6e8" loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40ffa8f8" loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40ffab58" loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40ff9030" loc="179:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40ff9260" loc="179:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="compareDone" ref="0x41000710" loc="93:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when compare command sent (use waitCompare to detect when&#10; compare command completes and find out comparison result)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compare" ref="0x41000218" loc="87:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compare a page from flash with a buffer.</short>
          <long>&#10; Compare a page from flash with a buffer. compareDone will be signaled.&#10; @param cmd AT45_C_COMPARE_BUFFER1 to compare buffer 1, &#10;   AT45_C_COMPARE_BUFFER2 to compare buffer 2&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40fcce90" loc="87:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x410000b8" loc="87:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc" ref="0x40ffba50" loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).</short>
          <long>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).&#10; crcDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to compute CRC from buffer 1,&#10;   AT45_C_READ_BUFFER2 to compute CRC from buffer 2&#10; @param page ignored (reserved for future use)&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous crc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40ffb010" loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40ffb220" loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40ffb480" loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x40ffb6c0" loc="158:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x40ffb8d8" loc="158:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readBuffer" ref="0x40ffe280" loc="119:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="108:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read from a flash buffer.</short>
          <long>&#10; Read from a flash buffer. readDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to read from buffer 1,&#10;   AT45_C_READ_BUFFER2 to read from buffer 2&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40fff7d0" loc="119:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40fffa30" loc="119:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x407b2520"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40fffee8" loc="120:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40ffe110" loc="120:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fillDone" ref="0x40fcdcf8" loc="61:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when fill command sent (use waitIdle to detect when&#10; fill command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x40fcd830" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read a page from flash into a buffer.</short>
          <long>&#10; Read a page from flash into a buffer. fillDone will be signaled.&#10; @param cmd AT45_C_FILL_BUFFER1 to read into buffer 1, &#10;   AT45_C_FILL_BUFFER2 to read into buffer 2&#10; @param page Page to read (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40fcd4c0" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40fcd6d0" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x407b2278"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45dbByte" loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <short>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.</short>
        <long>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.&#10; &#60;p>&#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this directory provides a generic HPL&#10; implementation (HplAt45dbByteC) which can easily be used to build an&#10; AT45DB HPL by connecting it to a byte-at-a-time SPI interface, and an&#10; implementation of the operations of this interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCompareStatus" ref="0x41043500" loc="42:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; This command may be called immediately after idle is signaled.</short>
          <long>&#10; This command may be called immediately after idle is signaled. It&#10; must report the flash's current compare status.&#10; @return TRUE if the last compare succeeded, FALSE if it failed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x41046bb0" loc="31:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Wait for the flash chip to report that it is idle.</short>
          <long>&#10; Wait for the flash chip to report that it is idle. This command is&#10; called immediately after sending a status request command to the&#10; flash, so it is sufficient to wait for the flash's data pin to go&#10; high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idle" ref="0x41043070" loc="35:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Signaled when the flash chip is idle.</short>
          <long>&#10; Signaled when the flash chip is idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="select" ref="0x410439a0" loc="47:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Assert the flash's select pin.</short>
          <long>&#10; Assert the flash's select pin.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="deselect" ref="0x41043da8" loc="52:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Deassert the flash's select pin.</short>
          <long>&#10; Deassert the flash's select pin.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x411103e0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411103e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x41110b88" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411103e0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x41110a30" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411103e0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x41115e40" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41115e40"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x41111e20" loc="69:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x41111320" loc="55:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41115e40"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x41111960" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41115e40"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x41111808" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41115e40"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x41106980" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x41106808" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x41105570" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41105010" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x41105200" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x41105408" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x41105d30" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x41106038" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x41105998" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x41106400" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x41124b40" loc="90:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x41124740" loc="85:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x41124298" loc="80:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x41127988" loc="68:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x41127e78" loc="74:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x41186a48" loc="45:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x41182010" loc="69:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x41183e28" loc="69:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x411825d0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x41182478" loc="75:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x41183420" loc="57:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x411832c8" loc="57:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x41182d78" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x41182a38" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x41182c18" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x41186e50" loc="50:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x411839d0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x41183878" loc="63:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x41180210" loc="88:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NetProg" loc="45:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
        <short>&#10; Top level interface for network programming integration with&#10; applications.</short>
        <long>&#10; Top level interface for network programming integration with&#10; applications.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="programImageAndReboot" ref="0x411e4718" loc="64:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot into the image specified by &#60;code>imageAddr&#60;/code>.</short>
          <long>&#10; Reboot into the image specified by &#60;code>imageAddr&#60;/code>. This&#10; assumes that an image is present into the external flash&#10; at the &#60;code>imageAddr&#60;/code> address.&#10;&#10; @param imageAddr  Address in external flash&#10; @return        &#60;code>FAIL&#60;/code> if the reboot command fails to &#10;                complete, does not return, otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imageAddr" ref="0x411e45c0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40123848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reboot" ref="0x411e4090" loc="53:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot the node.</short>
          <long>&#10; Reboot the node.&#10;&#10; @return  Does not return.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="InternalFlash" loc="43:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
        <short>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.</short>
        <long>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Prabal Dutta &#60;prabal@cs.berkeley.edu> (Port to T2)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x411d51d0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
          <short>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.</short>
          <long>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address from which to read.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer into which read bytes are&#10;               placed.&#10; @param   size The number of bytes to read.&#10; @return  SUCCESS if the bytes were successfully read.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x411d8c78" loc="56:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x411d8e30" loc="56:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x411d5068" loc="56:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x411d3098" loc="68:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
          <short>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.</short>
          <long>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address to which to write.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer from which bytes are read.&#10; @param   size The number of bytes to write.&#10; @return  SUCCESS if the bytes were successfully written.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x411d5b40" loc="68:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x411d5cf8" loc="68:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x411d5ef8" loc="68:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeMetadata" loc="10:../../Deluge/DelugeMetadata.nc">
      <documentation loc="1:../../Deluge/DelugeMetadata.nc">
        <short>&#10;  An interface for obtaining the identification data of an&#10;  image.</short>
        <long>&#10;  An interface for obtaining the identification data of an&#10;  image. The pointer returned by readDone will be destroyed by the&#10;  next read.&#10;&#10;  @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;  @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x411fa3d0" loc="12:../../Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x411fa278" loc="12:../../Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x411fad50" loc="13:../../Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:84" alignment="I:1"><nx_struct-ref name="DelugeIdent" ref="0x407a10f0"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x407a0840"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x411fa7b0" loc="13:../../Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="ident" ref="0x411fa9f0" loc="13:../../Deluge/DelugeMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:84" alignment="I:1"><nx_struct-ref name="DelugeIdent" ref="0x407a10f0"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x407a0840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x411fabe8" loc="13:../../Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeVolumeManager" loc="37:../../Deluge/DelugeVolumeManager.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManager.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="erase" ref="0x411fcae0" loc="39:../../Deluge/DelugeVolumeManager.nc">
        <interfacedef-ref qname="DelugeVolumeManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x411fc988" loc="39:../../Deluge/DelugeVolumeManager.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x411f7058" loc="40:../../Deluge/DelugeVolumeManager.nc">
        <interfacedef-ref qname="DelugeVolumeManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x411fcec8" loc="40:../../Deluge/DelugeVolumeManager.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x41298828" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x41298330" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x41298d18" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x412923a8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x412923a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x41292878" loc="58:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x41291060" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x412923a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x41292d18" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4042ec68"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x41292ee8" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x412923a8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x412c7258" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x41288a38" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x41288c60" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x41288e88" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x412c70e8" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x412c6648" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x412c7b78" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x412c7d68" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x412c6010" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x412c6268" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x412c64d0" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x4128a5c8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4128ed08" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x4128a010" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x4128a238" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x4128a458" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x41289618" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x41289090" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4128ad28" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x4128af18" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x412bb418" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x412c2a88" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x404638f0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x40463b78"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x412ba8b8" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x412ba760" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40122b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x412bb8d8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x412be5b8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x412bf168" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x404638f0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40463b78"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x412bf010" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x404638f0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40463b78"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x412bee08" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x412ba210" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x412bad60" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x412be9b8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x412bd700" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x412bd2d0" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x412bdb38" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x412bbd48" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4040e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x412bfc80" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40469bc8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40468010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x412bfb28" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40469bc8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40468010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x412bb018" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x412bf650" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40469bc8"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40468010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x412be158" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x412b9648" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x412b94f0" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401231e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x4131e4d8" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
