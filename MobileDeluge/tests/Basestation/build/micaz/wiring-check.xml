<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="42:BasestationAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b888280ac38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888344c3b8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b888344c3b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b8883446c38"/></to>
    </wire>
    <wire loc="56:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b888286e020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b88838efcb0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b88838efcb0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883935020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b888286e020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883c20e08"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883c20e08"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883935020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b888286e020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883c1c020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883c1c020"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883935020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8882887208"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883c0f390"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883c0f390"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8882887208"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883c0c710"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883c0c710"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8882887208"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883c09c20"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883c09c20"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8882886020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888280ac38"/></to>
    </wire>
    <wire loc="78:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b8883f2ba40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b88829ffda8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b88829ffda8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b88829fbe20"/></to>
    </wire>
    <wire loc="79:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8883f28080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888280ac38"/></to>
    </wire>
    <wire loc="83:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationStdControl" scoped="" ref="0x2b8883f243f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b8883d9ec38"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b8883d9ec38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b8883c7ccf0"/></to>
    </wire>
    <wire loc="84:../../Deluge/DelugeC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x2b8883f24ba0"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x2b88828694f0"/></to>
    </wire>
    <wire loc="55:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x2b88828694f0"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x2b88828940c0"/></to>
    </wire>
    <wire loc="85:../../Deluge/DelugeC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x2b8883f22438"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x2b8883d8f890"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x2b8883d8f890"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x2b8883d8e5f8"/></to>
    </wire>
    <wire loc="86:../../Deluge/DelugeC.nc">
      <from><interface-ref name="RadioSplitControl" scoped="" ref="0x2b8883f23870"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8882e261e0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b8882e261e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8882e4d818"/></to>
    </wire>
    <wire loc="87:../../Deluge/DelugeC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x2b8883f211c8"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x2b8883931500"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x2b8883931500"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x2b888397a9a8"/></to>
    </wire>
    <wire loc="88:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x2b8883f886a0"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x2b8883fc6d30"/></to>
    </wire>
    <wire loc="49:../../Deluge/DelugeMetadataClientC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x2b8883fc6d30"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x2b8883f55c28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../Deluge/DelugeC.nc">
      <from><function-ref name="storageReady" scoped="" ref="0x2b8883fbe840"/></from>
      <to><function-ref name="storageReady" scoped="" ref="0x2b8883f8add0"/></to>
    </wire>
    <wire loc="90:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b8883f855d0"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b888402e258"/></to>
    </wire>
    <wire loc="49:../../Deluge/DelugeVolumeManagerClientC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b888402e258"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b8884029538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883f85d48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883ffda00"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883ffda00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x2b88844f96d0"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x2b8883da1ae8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x2b8883da1ae8"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x2b8884c72020"/></to>
    </wire>
    <wire loc="56:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b888291c500"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b888286e020"/></to>
    </wire>
    <wire loc="57:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b888291b668"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8882887208"/></to>
    </wire>
    <wire loc="58:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x2b88828ac948"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x2b888291d020"/></to>
    </wire>
    <wire loc="58:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x2b888291d020"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x2b8882947648"/></to>
    </wire>
    <wire loc="59:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x2b88828b7a00"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x2b8882d8f020"/></to>
    </wire>
    <wire loc="68:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendAdvMsg" scoped="" ref="0x2b88828bda20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b88838d0080"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b88838d0080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8884876cd0"/></to>
    </wire>
    <wire loc="69:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x2b88828b91b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b88838c4490"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b88838c4490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8882e2a300"/>
      <arguments>
        <value cst="I:80">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x2b8882929020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b88839138a0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b88839138a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8884add7b0"/></to>
    </wire>
    <wire loc="71:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x2b888292cbb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b888390d060"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b888390d060"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8882e2a300"/>
      <arguments>
        <value cst="I:81">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x2b888292a358"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8883909390"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8883909390"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8884b4f7b0"/></to>
    </wire>
    <wire loc="73:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x2b888292c508"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8883903970"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8883903970"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8882e2a300"/>
      <arguments>
        <value cst="I:82">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b888293b8a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8883908bd8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8883908bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8884b4d020"/></to>
    </wire>
    <wire loc="75:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b888293a628"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b8882886020"/></to>
    </wire>
    <wire loc="77:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b88828b9cd8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8882887208"/></to>
    </wire>
    <wire loc="80:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b8882893020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b88829e9690"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b88829e9690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b88829e24c8"/></to>
    </wire>
    <wire loc="81:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b88828a8dc8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b88838fc0a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b88838fc0a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b8882bb91c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:../../Deluge/ObjectTransferP.nc">
      <from><interface-ref name="signalObjRecvDone" scoped="" ref="0x2b88828cebf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b88829434c8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b888291c500"/></to>
    </wire>
    <wire loc="60:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8882950648"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b888291b668"/></to>
    </wire>
    <wire loc="62:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x2b888294f508"/></from>
      <to><interface-ref name="ReceiveDataMsg" scoped="" ref="0x2b888292c508"/></to>
    </wire>
    <wire loc="63:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x2b888294fbb0"/></from>
      <to><interface-ref name="ReceiveReqMsg" scoped="" ref="0x2b888292cbb0"/></to>
    </wire>
    <wire loc="64:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x2b888294e358"/></from>
      <to><interface-ref name="SendDataMsg" scoped="" ref="0x2b888292a358"/></to>
    </wire>
    <wire loc="65:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x2b888294d020"/></from>
      <to><interface-ref name="SendReqMsg" scoped="" ref="0x2b8882929020"/></to>
    </wire>
    <wire loc="67:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b888294dc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b888293b8a0"/></to>
    </wire>
    <wire loc="68:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b888294b348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882948cb0"/></to>
    </wire>
    <wire loc="71:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b888295ad78"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b88829e9690"/></to>
    </wire>
    <wire loc="72:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b888294bde8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8882bc2a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8882bc2a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b8882bb91c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BitVecUtils" scoped="" ref="0x2b8882951650"/></from>
      <to><interface-ref name="BitVecUtils" scoped="" ref="0x2b8882bb42c0"/></to>
    </wire>
    <wire loc="75:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b88829594f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888293a628"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b88829e6668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b88829e33b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b88829e8890"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b88829e7b30"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b88842a8e38"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b88842a3ca8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8884223120"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b888406d110"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8884d5f3a0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8883d8ed48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8884d3f780"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8884c36b78"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8884beb498"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8883a1cc08"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b888381c0e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b888376f9e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b888373d5a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8883639020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8883534878"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8882faf8d0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8884a0a620"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b88832de438"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8882f29a90"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8882bcd1f8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b88829e7b30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b8882ba2490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b88826f9be8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b88826f9be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b88827b6c00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b8882ba2e68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b88829fdc78"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b88829fdc78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8882a074f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b8882ba1560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2_1_2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b88829f99a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b888436c940"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b88829f99a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8883e4ad40"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b88829f99a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8883b34d30"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2_1_2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b88829f99a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b888309a190"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8882a0ab98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8882b8a7e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b8882a06398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8882b8a1b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b8882a07b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8883463020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b8882a07b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b8882a09a08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b8882a09a08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b8882a14428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b8882a17108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b88829f99a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b8882a235f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b8882a2e1a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b8882a2e1a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b8882aae430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b8882a137f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b8882a17108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b8882a57c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8882b38970"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b8882a427e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b8882acf020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b8882acf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88846a8100"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b8882a4d7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b8882ad9d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b8882ad9d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88846cd100"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b8882a5c4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b8882afd5b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b8882afd5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b888477b100"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b8882a2c4d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b8882aab740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b8882aab740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b888452e100"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b8882a461a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b8882ae62a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b8882ae62a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8884781100"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b8882a2a7e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b8882abc930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b8882abc930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845e7180"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b8882a34968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b8882ac3740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b8882ac3740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845ff100"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b8882a3fc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b8882acc430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b8882acc430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b888469f100"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b8882a4ac78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b8882aee120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b8882aee120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88846c4100"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b8882a1cc78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b8882a99020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b8882a99020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b888453d100"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b8882a27c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b8882ab8d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b8882ab8d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845de100"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b8882a31e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b8882ac0bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b8882ac0bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845f6100"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b8882a3b1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b8882ae38c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b8882ae38c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8884696100"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b8882a59968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b8882afaa50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b8882afaa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8884772100"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b8882a537e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8882b44020"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b8882a504d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b8882adba50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b8882adba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88846d3100"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b8882aae430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8884534100"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b8882a38348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b8882ab4120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b8882ab4120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845d5100"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b8882a554d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8882b33ab0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b8882a36658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b8882ac5500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b8882ac5500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8884605180"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b8882a41968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b8882ace120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b8882ace120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88846a5100"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b8882a4c968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b8882ad8e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b8882ad8e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88846ca100"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b8882a5b658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b8882afc740"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b8882afc740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8884778100"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b8882a2b658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b8882aaa8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b8882aaa8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b888452b100"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b8882a29968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b8882abba50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b8882abba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845e4100"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b8882a33af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b8882ac28c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b8882ac28c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845fc100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b8882a3ee00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b8882acb5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b8882acb5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b888469c100"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b8882a49e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b8882aed2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b8882aed2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88846c1100"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b8882a1be00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b8882ab0120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b8882ab0120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b888453a100"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b8882a25e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b8882ab7e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b8882ab7e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845db100"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b8882a2f020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b8882abfd60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b8882abfd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845f3100"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b8882a58af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b8882af9bd8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b8882af9bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b888476f100"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b8882a43348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b8882ad1e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b8882ad1e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88846ab180"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b8882a4f658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b8882adabd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b8882adabd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88846d0100"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b8882a45348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b8882ae4430"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b8882ae4430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b888477e100"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b8882a52968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8882b3f180"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b8882a2d348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b8882aad5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b8882aad5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8884531100"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b8882a374d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b8882ab32a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b8882ab32a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845d2100"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b8882a47020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b8882ae71e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b8882ae71e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8884784180"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b8882a357e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b8882ac45b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b8882ac45b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8884602100"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b8882a40af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b8882acd2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b8882acd2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88846a2100"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b8882a4baf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b8882aef020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b8882aef020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88846c7100"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b8882a5a7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b8882afb8c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b8882afb8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8884775100"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b8882a16ab0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b8882a9bdc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b8882a9bdc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845401e8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b8882a28af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b8882ababd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b8882ababd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845e1100"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b8882a32c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b8882ac1a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b8882ac1a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845f9100"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b8882a3c020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b8882aca740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b8882aca740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8884699100"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b8882a54658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8882b49c38"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b8882a3a348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b8882adc930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b8882adc930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88846d6180"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b8882a441a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b8882abee18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b8882abee18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845f0100"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b8882a19020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b8882aaf2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b8882aaf2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8884537100"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b8882a39100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b8882ab5020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b8882ab5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b88845d8100"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88827b5b08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b88827b2020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b8882703dc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b88827d67b8"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b8882c8b268"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b8882bb91c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b8882bcc020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b8882bcc020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8882d485e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8882bcd1f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8882be2b88"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b8882be1590"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b8882d5c128"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8882be2b88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8882cd21f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b8882d66858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8882d0bab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b8882d06c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b8882bd6748"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b8882bd6748"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b8882cd2998"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8882d77330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b8882bece40"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b8882bece40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8882cf0a90"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8882cf0a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8884851738"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8882cd21f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8884856ce8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b8882cd2998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b88848554f8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b888484ea28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8882c67de8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8882c67de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8882c750f8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b8884849978"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b8882c7e020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b8882c7e020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b8882c70160"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8884848848"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b8882c7d020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8882c7d020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b8882c8e190"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b88848448c0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b8882c79228"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b8882c79228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b8882c8b968"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b8882d24cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b8882d60930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8884876cd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b88848696c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b88838d0c38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8884875908"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8884875908"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8882e25448"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b88838ce888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8884874578"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8884874578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b88838cc020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b8884873bd8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b8884873bd8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882e487e0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8882e25448"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8882e6f0c0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e71a88"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882e487e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882e6ec78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8884868450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8882de54f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8884867060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8882de54f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8882e35920"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8882e346f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8882e2b1c8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8882e2b1c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8882e4c7a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8882e333f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8882e32a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8882e25448"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b8882e31780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b8882e30020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b8882e4d818"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8882e743a0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8882e4c7a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8883830938"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b8882e2ae48"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b8882e71498"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b8882e71498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b888382d628"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8882e6f0c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b888382b2a8"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b8882e3f4a8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b888368e130"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b888368e130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b88836c8060"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b8882e5ab98"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b8882e64ac0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b8882e64ac0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b8882e914a0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8882e2a300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8882e4a928"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8882e4a928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b888382fab0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882e6ec78"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882e924d0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8882e71a88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b888382dc18"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b8882e3d378"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b888368a020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b888368a020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b88836c4020"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b8882e743a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8883810470"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b8882e83b48"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b8883829020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b8882e77658"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b888382a400"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b8882e67e18"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b8882e93678"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b8882e93678"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b88836934a8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b8882e914a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b88838118f8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882e924d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b88836903b8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b8882e7ba98"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b8882e90020"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b8882e90020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b88837feca0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8882e63ca8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8882e92e30"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8882e92e30"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b888368f6b0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2b8883821698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8882e724f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b8883828020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b8882e94340"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b8882e94340"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b888378f0c8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b8883828cc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b8882e93060"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b8882e93060"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b888378fd90"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b88838248d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b888351c2b8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b8883827368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b88836934a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b88836934a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b88836832e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8883826188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8883690d08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8883690d08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8883682b60"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b8883826ab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b8882f02528"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b8882f02528"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b8882f22d90"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b88838226a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b8882e8b678"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b8882e8b678"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b8882e86948"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b888386f2a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888344c3b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b8883810470"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b888380d410"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b888368f6b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8883681630"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b88837feca0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b8883846080"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b888378f0c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b88837d0828"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b88838118f8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b888380c828"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b8882e96e58"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8883790a20"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8883790a20"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2b88837d01b8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b88836903b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b8883682210"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8882e724f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b88837911c8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88837911c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883787758"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b8882e961a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8883791db0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8883791db0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b88837d14b8"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b8882e95518"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b888378e4a0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b888378e4a0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b88837cfd08"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b888378fd90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b88837cf688"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b888380d410"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8882e8f6a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b8882e8f6a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8882e87140"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b888378d840"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8883742210"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8883742210"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b88837408e0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b8883741020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b88837fe080"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b88837fe080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b88837fd9c0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b88837fd9c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8883814530"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8883814530"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b888380e020"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b888380e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8882e8c2d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8882e8c2d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8882e87be0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b888378d1f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b88838112b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b88838112b0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b888380ecc8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b888380ecc8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8883776a20"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8883776a20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8883772cc8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b8883773870"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8882e8b020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8882e8b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b88835f72f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b88835f72f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b88836387a0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8882ead798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8882f125a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8882f125a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8882f22118"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b8882ea5a78"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b8882f0d4a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b8882f0d4a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b8882f20bc0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b8882ea1500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b8883540c48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b8882ea1500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b88835f8080"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b88835f8080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b8883639660"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b8883540c48"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b8883533020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b8882e9bcc8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2b888353d480"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b888353d480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8883533880"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b8882ea9a70"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b888353c140"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b888353c140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b8883532638"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b8882ec17c0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b88836934a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8882ebaa30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8883690d08"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b8882ea3908"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b88829e9690"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2b8882eb5e58"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b888374c740"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b888374c740"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b88832e2790"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8882e9a0c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888344c3b8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2b8882eb0450"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2b8882eb15a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2b8882eb26e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2b8882f27800"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2b8882f1e020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2b8882f19cb8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b8882fd92a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b8882fd92a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b8882fd39e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b8882f18d70"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b8883183de0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b8883183de0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b8882a2a7e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b8882f3f020"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b888317f338"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b888317f338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b8882a2c4d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b8882f3e1b0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2b888317d648"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b888317d648"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2b8882a2d348"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b8882f3c060"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2b88831a7a60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b88831a7a60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b8883219cf0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b8882f52500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883482280"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883482280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b888327d808"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b8882f516e8"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2b88834c1a50"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b88834c1a50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b8882f51dc0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2b88834c0cd0"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b88834c0cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b8882f53df0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2b8883481de8"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b8883481de8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b8882f53510"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2b88834bf368"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b88834bf368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b8882f2c280"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2b88834b7838"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b88834b7838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b8882f2caf0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2b88834b47c0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b88834b47c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b8882f333b8"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2b88834b3020"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b88834b3020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b8882f33c40"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2b88834bbdd8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b88834bbdd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b8882f2e558"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b88834ba5c0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b88834ba5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b8882f2fdb8"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2b88834ae7c0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b88834ae7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b8882f2f480"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2b88834ae020"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b88834ae020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b8882f2edd0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2b88834b8c90"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b88834b8c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b8882f55680"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2b88834bad60"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b88834bad60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b8882f54020"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b88834b9cc8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b88834b9cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2b8882f4f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b88834dfa48"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88834dfa48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b888327d808"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b8882f50238"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b88834fe1a8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88834fe1a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b888327d808"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b8882f344f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b888351c2b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b8882f19340"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b888351ed10"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2b8882f454d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2b8882f46680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8882faf8d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8883187928"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8883187928"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b888318da58"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b8882fd39e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b888492b020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2_1_2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b888492b020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b888491f2f0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2_1_2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b8884919688"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b8884925528"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b8884925528"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b888490f750"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2_1_2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b888491b410"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b88830e2da0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2_1_2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b88830e2da0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b88831350e0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b888490c9c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8882fea538"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8882fea538"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8882ff73a8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b8884907a80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b8882fffe18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b8882fdc7d0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b8882ff2568"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b8882fe3108"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b888301fca0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8882fffe18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b888301a540"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8882fffe18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b88830168e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8882fffe18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b8883012b88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b888300d020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b8882c7e020"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2_1_2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b888309a8b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8882fea538"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2_1_2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b88831322b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b888310ead0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b888310ead0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8883106a98"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8883126b78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8882fea538"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b8883181020"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b8882a374d0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b8883180198"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2b8882a4ac78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b8882fdac88"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b8882a3c020"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b888317e4b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b8882a3fc78"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b88831a3e80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b88831a1c40"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b88831a6710"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b88831bd2c8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x2b88831a0888"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b8882fe3108"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b88831bdd78"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2b88831d7b38"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x2b88831d7b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b8883228cd8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x2b88832168e0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b8882fdac88"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2b88831dcc88"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b8883207cf8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x2b88831d9b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b888322f180"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x2b88831d6b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b88832239d8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2b88831dbb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b88832027e8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x2b88831d8b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b888322b020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2b88831dfdb0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b88831e7258"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2b88831dab38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b88831fe3e0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b8883209060"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x2b88831cf850"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b8883205b10"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x2b88831d1020"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b88832015f8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x2b88831d1758"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b88831fd2e8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x2b88831d0020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b888322e020"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x2b88831d0758"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b888322bde0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x2b88831cd020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b8883227b10"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x2b88831cd758"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b8883222908"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x2b88831cc020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x2b8883249278"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b88834c1438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b88834b67c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b88834b4020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b88834aa7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b88834ac7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b88834c06b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b88834ad7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b88834b1020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b8883482e78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b888327a4c8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b888327a4c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b88832724e8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b88834be020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b88834be638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b88834bed50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b88834ac020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b88834b9528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b88834aa020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b88834ab020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b88834b17c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b88834ad020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b88834b37c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b88834a9020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b88832793c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b88834817d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b88834bb638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b88834b84f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b88834b6020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b88834bd3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b88834bb020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b88834bf980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b88834b07c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b88834ab7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b88834b0020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b88834c00a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b88834b27c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b88834b2020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b88834bd9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b88834a80a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b88832793c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2b88832793c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b888326f4d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b888326e680"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b888326d3c8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b888327d808"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883271300"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b888326c1c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2b888326a0e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b88832e8978"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b88832e8978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b88832e2790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b888326c8e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b888344f020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b888344f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883460870"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b8883268470"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b888344fc18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b888344fc18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b88832fca20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b8883298860"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b888344e2a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b888344e2a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b888332dbc0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b888326ae50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888344c3b8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2b8883295b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2_1_2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b88832e2790"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b88832dd020"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b888332dbc0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b8883328020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b88832fca20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b888332ad80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8883450960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b88832fc400"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b88832fc400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b888332a7a0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x2b888345d700"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b88832f8978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b888345c4a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b8882a2a7e0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b888332d0f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b8883329428"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88832f8978"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883328c88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2b8883344208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b888342a200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b888342a200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884a08a28"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b88833405d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883429760"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883429760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8884a06020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b8883325020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b888336d020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b888336d020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b88833a6dc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b8883340d78"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b88827d7240"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b888335cb58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b8883399350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b88827d7240"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b888339cc70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b8882a2a7e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b88833a0de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b8882a29968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b888339b020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b8882a28af0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b888339a190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b8882a27c78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b8883429020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b8884a07820"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8884a068c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8883427020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b8884a050a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b8884a0abf8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b8884a05b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8883463020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8883446670"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b88834443b8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b8883447b08"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b8883447b08"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b8882a1be00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b8883442648"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b8883466ca8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b8883466ca8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b8882a1cc78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b88834417d0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b8883465e30"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b8883465e30"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b8882a16ab0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b88834d27c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b88834ddcd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b88834d67c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b88834d02e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b88834d0a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b88834c42e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b88834c72e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b88834db020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b88834c82e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b88834d57c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b88834d47c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b88834cda88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b88834cf2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b88834de740"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b888327a4c8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b88834da900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b88834d8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b88834d8738"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b88834c8a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b88834dbc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b88834d4020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b88834d5020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b88834dd6b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b88834c5a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b88834c7a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b88834cb2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b88834c9a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b88834ce2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b88834c4a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b88832793c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b88834dd0a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b88834d6020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b88834d2020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b88834cfa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b88834d12e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b88834dc368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b88834d1a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b88834d8d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b88834d79b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b88834c92e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b88834caa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b88834da2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b88834ca2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b88834c52e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b88834cba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b88834dc980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b88834cd2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b88834db638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b88834cea88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b88834d73a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b8883504020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b88832793c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b88834f2c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b88834fc3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b88834f6dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b88834f07c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b88834ef020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b88834e47c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b88834e67c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b88834fa638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b88834e87c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b88834f4d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b88834f3cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b88834eb020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b88834ef7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b88834feda0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b888327a4c8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b88834f8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b88834f8638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b88834f8d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b88834e6020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b88834f92e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b88834f3528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b88834f45c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b88834fdd60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b88834e4020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b88834e5020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b88834eb7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b88834e8020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b88834ed7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b8883525020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b88832793c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b88834fd748"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b88834f6638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b88834f24f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b88834ed020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b88834f1838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b88834fc9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b88834f0020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b88834f73a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b88834f6020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b88834e97c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b88834e9020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b88834f9900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b88834ea7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b88834e57c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b88834ea020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b88834fa020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b88834ec7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b88834fac50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b88834ec020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b88834f79b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b88835240a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b88832793c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2b888353bcb8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2b88835315b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2b888353a458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2b8883531cf8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2b88835306c8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b8882fd92a0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b888356a8b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b8882fdac88"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b8883569c98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b8883183de0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b8883567e20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2b888317e4b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b8883562d60"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2b88831a3e80"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b8883560020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b88835da7d0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88835da7d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b888327d808"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b8883560cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b88835d9430"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b88835d9430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b888327a4c8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b888355d670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b88835d9d58"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b88835d9d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b888355dd40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2b88835d7638"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b88835d7638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b888355c478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2b88835d7c50"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b88835d7c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b888355cb68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2b88835d5638"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b88835d5638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b888355eda8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b8883614470"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b8883614470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b888355f720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2b88836045f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b88836045f8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b88832793c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b888355e538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b888360ac10"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b888360ac10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b888355a3d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b88835d1c10"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b88835d1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b8883559558"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b88836125f8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b88836125f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b8883559de0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b8883612d98"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b8883612d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b888355ae30"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2b88835d2020"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b88835d2020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b88835576f0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2b8883606470"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b8883606470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b8883558650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b8883609c10"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b8883609c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b8883558e80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b8883608470"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b8883608470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b8883552750"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b88835f8868"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b88835f8868"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b8883639e48"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b888352c940"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b88836934a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b888352b7e8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8883690d08"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b888352a460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b888368e130"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b88835621d8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b8883687ac8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b8883687ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b88836c1ac8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b88835550c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888344c3b8"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b8883613470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b88835d89b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b88835d1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b88836115c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b8883606c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b8883616470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b888360d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b8883611d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b88835d5c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b88835d33a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b8883609470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b88835d6900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b8883616c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b88835d83a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b888360dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b888360a470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b8883610cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b8883605470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b88832793c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b88835d2c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b8883614c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b8883610528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b8883613e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b88835d7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b88835d39b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b88835d2638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b888360bc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b888360b470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b88835d5020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b888360cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b8883608c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b888360c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b888360fc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b88835d62e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b888360f4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2b88835f7a48"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2b8883637020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8883624ba0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888344c3b8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b88836376b8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b8883183de0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b8883636998"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2b8883181020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b8883634b28"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2b8883180198"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b8883633d40"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b88831a6710"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b8883632900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b88836f40e0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88836f40e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b888327d808"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b88836316a0"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2b8883723020"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b8883723020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b88832793c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b8883630c10"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2b88836f0900"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b88836f0900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b8883630520"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2b88836ee638"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b88836ee638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b888362f3a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b88836934a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b888362e350"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8883690d08"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b888362cd08"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b888368e130"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b888362ecb8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b8882f02528"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b8883627020"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b8883730020"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b8883730020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b88836278a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b88837307c0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b88837307c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b88836288e0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2b88837373a0"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b88837373a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b8883625208"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2b88837247c0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b88837247c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b8883626130"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b88837277c0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b88837277c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b8883626960"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b8883726020"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b8883726020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b8883625a70"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b8883727020"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b8883727020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b8883624398"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b88836f3678"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b88836f3678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2b8883617020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8883701720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b88830e2da0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b88836bf520"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b8883703528"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b88836be788"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b8882be1590"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b88836fd730"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b8882bb91c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b8883732c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b88836f22e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b8883736dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b888372f020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b88836f1638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b88837287c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b8883735d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b8883734cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b888372b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b888372f7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b88836f4cd8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b888327a4c8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b88836ee020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b88836eed50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b88836f02e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b8883734528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b88837355c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b88836f3c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b8883724020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b888372b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b8883728020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b888372e7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b8883736638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b88837324f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b888372e020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b8883731838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b88836f2900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b8883736020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b88837297c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b8883729020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b888372a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b88837267c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b888372a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b88836f1020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b888372d7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b88836f1c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b888372d020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b88837379b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b88837220a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b88832793c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b888373dc78"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b8883741020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b888373c8c0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b888373fc58"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b888373fc58"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b88832e2790"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b888373b740"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b88829e9690"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b888373a020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8883690d08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2b8883773168"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2b888376f418"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b888376d128"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b8883773870"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b888376d768"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8883690d08"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b88837cea40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b888378d840"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b88837cd7f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b888378d1f0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b88837cde08"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b88836934a8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b88837ccc40"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8883690d08"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b88837cb678"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b888381c6b8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2b88837ec080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b888380f020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b888380b6c8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b888380b6c8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b88832e2790"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8883846d98"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882e924d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b88838c4a28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8882e25448"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b88838c3700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8884add7b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8884b6b188"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8883912578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8884adc3f0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8884adc3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8882e25448"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8883911268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8884ada020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8884ada020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b88839108c8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b8884ad95b8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b8884ad95b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882e487e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8884b6bda0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8882de54f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8884b6a9d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b888390d5f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8882e25448"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b888390c268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8884b4f7b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8884b43cb0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8883908020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8884b4e3f0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8884b4e3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8882e25448"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8884b4d020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b88839052a8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b8884b4c5b8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b8884b4c5b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882e487e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8884b41968"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8882de54f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8884b40578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8883902020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8882e25448"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8883902bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883c22908"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884b238b8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884b238b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884b24410"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883935020"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b888392cbd0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b888397b9a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b8883976020"/></from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x2b8883978180"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883bead60"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883bead60"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883968660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x2b8883978180"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883be6268"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883be6268"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883968660"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x2b8883978180"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883be2578"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883be2578"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883968660"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x2b8883978180"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883bdfa10"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883bdfa10"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883968660"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x2b8883977020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883bea020"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883bea020"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883969378"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x2b8883977020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883be7398"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883be7398"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883969378"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x2b8883977020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883be3718"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883be3718"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883969378"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x2b8883977020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883be0c28"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883be0c28"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883969378"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x2b88839766f8"/></from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x2b8883bf4780"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x2b88839b9990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x2b8883bf4780"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88839a6658"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883a1fd70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:/opt/tinyos-2_1_2/tos/chips/at45db/WireBlockStorageP.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x2b88839a7398"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x2b8883a248d8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x2b8883a248d8"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x2b8883a152a8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8883a199d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8883bfe4a8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8883bfe4a8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8884be6268"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883a1fd70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883bff020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883bff020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884be9bb8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883a1d770"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883bfd0e0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883bfd0e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8884be6e20"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x2b8883a56ab0"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x2b8883adae58"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2_1_2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x2b8883adae58"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x2b8883ad36c0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b8883a52a58"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b8883b5eb98"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskSuccess" scoped="" ref="0x2b8883a954d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskFail" scoped="" ref="0x2b8883a93190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/opt/tinyos-2_1_2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883b3cb70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883b36360"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883b36360"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883b4a410"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2_1_2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x2b8883b3b8c8"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x2b8883b35020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x2b8883b35020"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x2b8883b31400"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2_1_2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x2b8883b3be60"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x2b8883b35640"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x2b8883b35640"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x2b8883b31a20"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Select" scoped="" ref="0x2b8883b30860"/></from>
      <to><interface-ref name="PortA3" scoped="" ref="0x2b8882a19020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Clk" scoped="" ref="0x2b8883b2fad0"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2b8882a3ee00"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="In" scoped="" ref="0x2b8883b2ddd8"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2b8882a41968"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Out" scoped="" ref="0x2b8883b2ec58"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2b8882a40af0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b8883b2a1e0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b8883b5eb98"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <from><interface-ref name="avail" scoped="" ref="0x2b8883b68bf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:/opt/tinyos-2_1_2/tos/system/NoArbiterC.nc">
      <from><interface-ref name="granted" scoped="" ref="0x2b8883b49800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b8883bffd18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b8884be79a8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8884be56f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8883bfd960"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b8884be5e78"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b8884beba70"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b8884be2020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x2b88839b9990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x2b8883bf4780"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88839a6658"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883a1fd70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x2b88839b9990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x2b8883bf4780"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88839a6658"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883a1fd70"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x2b88839b9990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x2b8883bf4780"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88839a6658"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883a1fd70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c28a08"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883c28a08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884c33100"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883c2bc48"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883c26020"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883c26020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8884c32578"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b8883c27820"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b8884c33df8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8884c32e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8883c268a0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b8884c305d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b8884c352a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b8884c2f100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883c1fa10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884ca7528"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884ca7528"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884ca8060"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883c1cbd8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884c9d4f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884c9d4f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884c9e020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883c0e268"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884c92258"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884c92258"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884c95d78"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883c0b578"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884c88258"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884c88258"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884c8acc8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883c07a10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884c7d258"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884c7d258"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884c80cc8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x2b8883da20a0"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x2b8884c75538"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x2b8883c79a90"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x2b8884c70208"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x2b8883c77be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b8884c76b40"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x2b8883c72838"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x2b8883d14bd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8884c6f020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888344c3b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorP.nc">
      <from><interface-ref name="changedTask" scoped="" ref="0x2b8884c6e5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b8883c7ccf0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b8883c76e68"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x2b8883c6fbd8"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x2b8883c79a90"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x2b8883c6c020"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x2b8883c72838"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x2b8883c6b270"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x2b8883c77be0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8883c6b9d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8883cdf208"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8883cdf208"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8884cee020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8883c6a748"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8883cd9d90"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8883cd9d90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8882e2a300"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x2b8883c6add0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8883cd4710"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8883cd4710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8884cc5cd0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x2b8883c69ae0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8883cce5e0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8883cce5e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8882e2a300"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8883c680f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b8883cc6020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8884cee020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8884ce2958"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8883cdfdc0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8884ceebd8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8884ceebd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8882e25448"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8883cde9d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8884ced888"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8884ced888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b8883cdb0a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b8884ceb020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b8884ceb020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882e487e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8884ce15d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8882de54f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8884ce0268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8883cd83b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8882e25448"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8883cd7020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8884cc5cd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8884cb86c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8883cd33f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8884cc4908"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8884cc4908"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8882e25448"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8883cd2020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8884cc3578"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8884cc3578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b8883cd15b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b8884cc2bd8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b8884cc2bd8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882e487e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8884cb7450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8882de54f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8884cb6060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8883cceb78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8882e25448"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8883ccc888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x2b8883d14bd0"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x2b8883da7a70"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x2b8883da7a70"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x2b8884d3fe38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8884d3ebb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8884d319e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8884d319e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b8882bb91c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b8884d36d20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b88829e9690"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Changed" scoped="" ref="0x2b8884d37bd8"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x2b8884d270c0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Pending" scoped="" ref="0x2b8884d39ae0"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x2b8884d2a430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8884d35470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888344c3b8"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
      <from><interface-ref name="timerTask" scoped="" ref="0x2b8884d34a90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="IFlash" scoped="" ref="0x2b8883dce4a8"/></from>
      <to><interface-ref name="InternalFlash" scoped="" ref="0x2b8883ddbd68"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x2b8883dcebe8"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x2b8882d8f020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="ReprogramGuard" scoped="" ref="0x2b8883dc6748"/></from>
      <to><interface-ref name="ReprogramGuard" scoped="" ref="0x2b8883dcfb08"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/micaz/ReprogramGuardC.nc">
      <from><interface-ref name="ReprogramGuard" scoped="" ref="0x2b8883dcfb08"/></from>
      <to><interface-ref name="ReprogramGuard" scoped="" ref="0x2b8883e15b00"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8883dcd420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888344c3b8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><function-ref name="setAmAddress" scoped="" ref="0x2b8883dc9020"/></from>
      <to><function-ref name="setAmAddress" scoped="" ref="0x2b888351baf0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b8883dcca90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b8882f22d90"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/micaz/ReprogramGuardC.nc">
      <from><interface-ref name="Voltage" scoped="" ref="0x2b8883e124c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b8883e14a60"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2_1_2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b8883e14a60"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b8884d71128"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b8884d71128"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b8883e01c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2_1_2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b8884d706b0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b8883f36438"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b8883df9670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b8884d706b0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883df54c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883df0020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8883def890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8884d6f020"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2_1_2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b8883e01c90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b8883ef0680"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2_1_2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2b8883df6a00"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b8883f16428"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2_1_2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883f40720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883df54c0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2_1_2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b8883f149a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b8883df9670"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2_1_2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b8883f42060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b8883f196a0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2_1_2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b8883f15b18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b8883de90d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b8883de90d0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b8883e47b70"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b8883e4b9b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b8883e46628"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883df0020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883ed5840"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883ed5840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884d5d9c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8883ed13c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8883def890"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b8883e360d0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b8883e48a18"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b8883e48a18"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b8883e6ac38"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8883e43610"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8882a0ab98"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b8883ece060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b8883e473b8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8883eced18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8883ed4dd8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8883ed4dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8884d5b020"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b8883e650c0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b88827d7240"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b8883ed4698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b8884d5c820"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883ed29d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8884d5bbd8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8884d59570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8883ed13c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b8884d59cf0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b8884d5f978"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b8884d57da0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2_1_2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b8884df6e38"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b8883ece060"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2_1_2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b8884df4590"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b8883ece780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2_1_2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8884df4b28"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8883eced18"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2_1_2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8884df3710"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883eb9908"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x2b8883f034d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../Deluge/DelugeP.nc">
      <from><interface-ref name="taskRequest" scoped="" ref="0x2b8883f7a4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8883f5b388"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b8882bb91c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x2b8883f55c28"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x2b8883fb79a8"/></to>
    </wire>
    <wire loc="49:../../Deluge/DelugeMetadataC.nc">
      <from><function-ref name="storageReady" scoped="" ref="0x2b8883fb3b70"/></from>
      <to><function-ref name="storageReady" scoped="" ref="0x2b8883fbe840"/></to>
    </wire>
    <wire loc="50:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b8883fb6180"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b88829ffda8"/></to>
    </wire>
    <wire loc="57:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883fb6ca8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883fe7020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883fe7020"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883935020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883fb6ca8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883fe4140"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883fe4140"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883935020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883fb6ca8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883fe11a8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883fe11a8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883935020"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883fb6ca8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883fde208"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8883fde208"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883935020"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fb5e20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fd98a0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fd98a0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fb5e20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fd6d18"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fd6d18"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fb5e20"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fd2020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fd2020"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fb5e20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fcf390"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fcf390"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883fe7bd8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884dd81a8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884dd81a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884ddab80"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883fe4cf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884dce020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884dce020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884dd0af0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883fe1d60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884e6a020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884e6a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884e6caf0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883fdedc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884e5f020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884e5f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884e61af0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883fd8700"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884e55020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884e55020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884e57af0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883fd5a90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884e4a258"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884e4a258"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884e4dcc8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883fd2d60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884e40258"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884e40258"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884e42cc8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8883fce268"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884e35258"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884e35258"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884e38cc8"/></to>
    </wire>
    <wire loc="46:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b8884029538"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b8884028b68"/></to>
    </wire>
    <wire loc="52:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b88840259e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8884026d18"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8884026d18"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b88840259e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8884008020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8884008020"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b88840259e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8884005390"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8884005390"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884023e10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b888400ba90"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b888400ba90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884e25cc8"/></to>
    </wire>
    <wire loc="57:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884023e10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884008d60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884008d60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884e1bcc8"/></to>
    </wire>
    <wire loc="58:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884023e10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884004268"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884004268"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884eb7cc8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884e25cc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884e26638"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884e1bcc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884e1c6b8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884eb7cc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884eb86b8"/></to>
    </wire>
    <wire loc="43:../../Deluge/SerialStarterC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b88843b7020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b88840649d0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b88840649d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b888406d728"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b888406d728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b88840d3cf8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8884061aa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8884058460"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b888405f2a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8884074d20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8884060c38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8884075180"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b888405c658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8884073908"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b888405d020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8884075738"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b888406d110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b88840d36e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b88840688f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888405b020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b8884072308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b888406b208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b8884071020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b888406c760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b8884068020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b88843c62b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b888406b208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b88841ea020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b888406c760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b88841eb868"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b88841eadb8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b8884068020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b88840cabc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b88840688f8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b88841e8a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b88840688f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b88841df420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b88840688f8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b88841e96c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b88840c7b48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b88841e8020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b88840cb898"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b88840c1b38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b88841e3b30"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b88840c0398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b88841e28b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b88841e28b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b888422e338"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b88841d3448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b88842300c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b88842300c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b8884228310"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b88840df830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b88840a5d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b88840e2020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b88840dc918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b88841e6100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b88841e68a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b888422a290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b888422eaf0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b888422eaf0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b8884223e58"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b8884228310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b88842575f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b888422e338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b88842236f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8884227598"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b88842b7020"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b88842b7020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b88843d5610"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8884254c60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8884227598"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b88842565f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b8884236700"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b8884236700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b88842a5580"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b8884256d98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b8884235020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b8884235020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b88842a5e18"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b88842555c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b8884235860"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b8884235860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b88842a46d8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b8884232020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b88842a1550"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b8884234e58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b88842a23e0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b88842336f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b88842a2c78"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b88842a0ae8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8882a0ab98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b888429f7c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b88827d7240"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b88843d27f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b88842b4d30"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b88842b4d30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b888436e950"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8884362a70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b88842ad9a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b88842ad9a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8884314ca0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b8884320aa8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b888430dc90"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b888431d190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b888430b350"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8884318020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b8884307c48"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8884318020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b8884302020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8884318020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b88842fe360"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2_1_2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b888436b098"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b88842ad9a0"/></to>
    </wire>
    <wire loc="46:../../Deluge/AutoStarterC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b88843b5ba0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b88843b7020"/></to>
    </wire>
    <wire loc="47:../../Deluge/AutoStarterC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b88843b5588"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b88829ffda8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8884f52220"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8884f3c390"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8884f3c390"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883935020"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8884f52220"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8884f39390"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8884f39390"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883935020"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8884f52220"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8884f36390"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8884f36390"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883935020"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8884f52220"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8884f33390"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x2b8884f33390"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x2b8883935020"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f51020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f2f390"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f2f390"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f51020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f2c3f8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f2c3f8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f51020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f293f8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f293f8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f51020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f263f8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f263f8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884f51d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884f3e420"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884f3e420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8884f509d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883c2bc48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <from><interface-ref name="TimeoutTimer" scoped="" ref="0x2b8884f4e700"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8884f440a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8884f440a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b8882bb91c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <from><interface-ref name="SerialAMSender" scoped="" ref="0x2b8884f4f2a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8884f5c0e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8884f5c0e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8884fba060"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <from><interface-ref name="SerialAMReceiver" scoped="" ref="0x2b8884f4e020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8884f56400"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8884f56400"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8884060c38"/>
      <arguments>
        <value cst="I:83">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8884f496c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888344c3b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8884f5cc98"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b888405f2a8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8884f5a888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b888405d020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b8884f58020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b888405c658"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8884fbac78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b88843a1c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8884fb9888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b888405d020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b88843a1c60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8884419550"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b88844183e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8884061aa8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8884417020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b888405d020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8884416578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b888405f2a8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b88844142e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b8884414a88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8884f56998"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b888405f2a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8884f55578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b888405d020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884f3b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884fd44f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884fd44f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884fd5020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884f38020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8884fca4f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884fca4f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8884fcb020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884f35020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b888506d4f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b888506d4f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b888506e020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884f32020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b88850634f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88850634f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8885064020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884f2e268"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b88850584f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88850584f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8885059020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884f2b268"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b888504e4f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b888504e4f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b888504f020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884f28268"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b88850444f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88850444f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b8885045020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8884f25268"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b88850394f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88850394f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x2b888503a020"/></to>
    </wire>
    <wire loc="58:../../Deluge/DelugeManagerC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x2b888501f3b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8885028a08"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8885028a08"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b8882bb91c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../Deluge/DelugeManagerC.nc">
      <from><interface-ref name="SerialAMSender" scoped="" ref="0x2b8885020060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b88850327b0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b88850327b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b88850b0aa0"/></to>
    </wire>
    <wire loc="60:../../Deluge/DelugeManagerC.nc">
      <from><interface-ref name="SerialAMReceiver" scoped="" ref="0x2b8885020c58"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b888502dbb0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b888502dbb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8884060c38"/>
      <arguments>
        <value cst="I:84">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../Deluge/DelugeManagerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b888501ab18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b888344c3b8"/></to>
    </wire>
    <wire loc="62:../../Deluge/DelugeManagerC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x2b8885022e40"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x2b88844f96d0"/></to>
    </wire>
    <wire loc="63:../../Deluge/DelugeManagerC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x2b888501a3f8"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x2b8883d8f890"/></to>
    </wire>
    <wire loc="64:../../Deluge/DelugeManagerC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x2b8885018e58"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x2b88828694f0"/></to>
    </wire>
    <wire loc="66:../../Deluge/DelugeManagerC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x2b8885018180"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x2b8883931500"/></to>
    </wire>
    <wire loc="67:../../Deluge/DelugeManagerC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x2b8885018738"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x2b88850c15e8"/></to>
    </wire>
    <wire loc="49:../../Deluge/DelugeMetadataClientC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x2b88850c15e8"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x2b8883f55c28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../Deluge/DelugeManagerC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b88850c58c8"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b88850c0bd8"/></to>
    </wire>
    <wire loc="49:../../Deluge/DelugeVolumeManagerClientC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b88850c0bd8"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b8884029538"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../Deluge/DelugeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88850c4020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b88850be258"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b88850be258"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../Deluge/DelugeManagerC.nc">
      <from><function-ref name="stop" scoped="" ref="0x2b88850c4c50"/></from>
      <to><function-ref name="stop" scoped="" ref="0x2b8883f86448"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b88850313f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b888405f2a8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8885030020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b888405d020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b888502f5b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b888405c658"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b88850af760"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b88843a1c60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b88850ae3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b888405d020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b888502c268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b888405f2a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b888502ce20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b888405d020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="DelugeC" loc="40:../../Deluge/DelugeC.nc">
      <configuration/>
    </component>
    <component qname="ObjectTransferC" loc="40:../../Deluge/ObjectTransferC.nc">
      <configuration/>
    </component>
    <component qname="ObjectTransferP" loc="45:../../Deluge/ObjectTransferP.nc">
      <module/>
    </component>
    <component qname="DelugePageTransferC" loc="37:../../Deluge/DelugePageTransferC.nc">
      <documentation loc="32:../../Deluge/DelugePageTransferC.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugePageTransferP" loc="45:../../Deluge/DelugePageTransferP.nc">
      <documentation loc="33:../../Deluge/BitVecUtils.h">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2_1_2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2_1_2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2_1_2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2_1_2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2_1_2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2_1_2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2_1_2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2_1_2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BitVecUtilsC" loc="41:../../Deluge/BitVecUtilsC.nc">
      <documentation loc="33:../../Deluge/BitVecUtils.h">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugePageTransferC.Timer" loc="44(DelugePageTransferC.Timer):/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b8882beac48"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CrcC" loc="45:/opt/tinyos-2_1_2/tos/system/CrcC.nc">
      <module/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg" loc="47(ObjectTransferC.SendAdvMsg):/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC" loc="47(ObjectTransferC.SendAdvMsg.SenderC):/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP):/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="53:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2_1_2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2_1_2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b88827ae720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2_1_2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b88827ae720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b88827ae720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2b88827ad020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2_1_2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b88827ae720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2_1_2/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2_1_2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2_1_2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2_1_2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2_1_2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2_1_2/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2_1_2/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2_1_2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2_1_2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-2_1_2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2_1_2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2_1_2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2_1_2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2_1_2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2_1_2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveAdvMsg" loc="43(ObjectTransferC.ReceiveAdvMsg):/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg" loc="47(ObjectTransferC.SendReqMsg):/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:81">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC" loc="47(ObjectTransferC.SendReqMsg.SenderC):/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP):/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveReqMsg" loc="43(ObjectTransferC.ReceiveReqMsg):/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:81">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg" loc="47(ObjectTransferC.SendDataMsg):/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:82">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC" loc="47(ObjectTransferC.SendDataMsg.SenderC):/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP):/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveDataMsg" loc="43(ObjectTransferC.ReceiveDataMsg):/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:82">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.Timer" loc="44(ObjectTransferC.Timer):/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1" loc="40(DelugeC.BlockReaderDeluge1):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageManagerC" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageManagerP" loc="37(BlockStorageManagerC.BlockStorageManagerP):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageManagerP"/>
        <arguments>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_Golden" loc="23(BlockStorageManagerC.BlockStorageC_Golden):/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageP" loc="53:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageP.nc" safe="">
      <documentation loc="43:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageP.nc">
        <short>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.</short>
        <long>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.&#10;&#10; @author: Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="At45dbC" loc="22:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbC.nc">
      <documentation loc="12:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbC.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. Access to the HAL&#10; is controlled by a parameterised Resource interface - client ids are &#10; obtained with unique(UQ_AT45DB).&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="At45dbP" loc="53:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbP.nc" safe="">
      <documentation loc="47:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbP.nc">
        <short>&#10; Private componenent for the Atmel's AT45DB HAL.</short>
        <long>&#10; Private componenent for the Atmel's AT45DB HAL.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAt45dbC" loc="19:/opt/tinyos-2_1_2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
        <short>&#10; AT45DB flash chip HPL for mica family.</short>
        <long>&#10; AT45DB flash chip HPL for mica family. Each family member must provide&#10; and HplAt45dbIOC component implementing the SPIByte and HplAt45dbByte&#10; interfaces required by HplAt45dbByteC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbC.HplAt45dbByteC" loc="25(HplAt45dbC.HplAt45dbByteC):/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByteC.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAt45dbByteC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbIOC" loc="52:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <documentation loc="45:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
        <short>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.</short>
        <long>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbIOP" loc="90:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <documentation loc="75:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
        <short>&#10; Low level hardware access to the onboard AT45DB flash chip.</short>
        <long>&#10; Low level hardware access to the onboard AT45DB flash chip.&#10; &#60;p>&#10; Note: This component includes optimised bit-banging SPI code with the&#10; pins hardwired.  Don't copy it to some other platform without&#10; understanding it (see txByte).&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2_1_2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="HplAt45dbIOC.NoArbiterC" loc="20(HplAt45dbIOC.NoArbiterC):/opt/tinyos-2_1_2/tos/system/NoArbiterC.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoArbiterC"/>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter" loc="89(At45dbC.Arbiter):/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:at45db.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="At45dbC.Arbiter.Queue" loc="42(At45dbC.Arbiter.Queue):/opt/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter.Arbiter" loc="52(At45dbC.Arbiter.Arbiter):/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbStorageManagerC" loc="17:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbStorageManagerC.nc" safe="">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbStorageManagerC.nc">
        <short>&#10; HAL component providing information on the flash volumes.</short>
        <long>&#10; HAL component providing information on the flash volumes.&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_1" loc="23(BlockStorageManagerC.BlockStorageC_1):/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_2" loc="23(BlockStorageManagerC.BlockStorageC_2):/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_3" loc="23(BlockStorageManagerC.BlockStorageC_3):/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC" loc="37:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC.Arbiter" loc="83(BlockStorageLockC.Arbiter):/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:BlockStorageLock.client">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC.Arbiter.Queue" loc="42(BlockStorageLockC.Arbiter.Queue):/opt/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageLockC.Arbiter.Arbiter" loc="49(BlockStorageLockC.Arbiter.Arbiter):/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2" loc="40(DelugeC.BlockReaderDeluge2):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3" loc="40(DelugeC.BlockReaderDeluge3):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1" loc="40(DelugeC.BlockWriterDeluge1):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2" loc="40(DelugeC.BlockWriterDeluge2):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3" loc="40(DelugeC.BlockWriterDeluge3):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC" loc="49(DelugeC.DisseminatorC):/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x2b88827ef358"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x2b88827fc0c8"/></typename>
          </type-tag>
          <value cst="I:56832">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC.DisseminatorP" loc="45(DelugeC.DisseminatorC.DisseminatorP):/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8883c5cda0"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2_1_2/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos-2_1_2/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos-2_1_2/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NetProgC" loc="46:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <configuration/>
    </component>
    <component qname="InternalFlashC" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <documentation loc="519:/usr/lib/gcc/avr/4.1.2/../../../../avr/include/avr/eeprom.h">
        <short> \def __EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM.</short>
        <long> \def __EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM. Compatibility define for IAR C.&#9;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="NetProgM" loc="45:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <documentation loc="37:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgM.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ReprogramGuardC" loc="1:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/micaz/ReprogramGuardC.nc">
      <configuration/>
    </component>
    <component qname="ReprogramGuardP" loc="1:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/micaz/ReprogramGuardP.nc">
      <module/>
    </component>
    <component qname="ReprogramGuardC.VoltageC" loc="39(ReprogramGuardC.VoltageC):/opt/tinyos-2_1_2/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2_1_2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogramGuardC.VoltageC.AdcReadClientC" loc="21(ReprogramGuardC.VoltageC.AdcReadClientC):/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2_1_2/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2_1_2/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2_1_2/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2_1_2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2_1_2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2_1_2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2_1_2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2_1_2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2_1_2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2_1_2/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2_1_2/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeP" loc="37:../../Deluge/DelugeP.nc">
      <documentation loc="32:../../Deluge/DelugeP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC.Timer" loc="44(DelugeC.Timer):/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC" loc="37:../../Deluge/DelugeMetadataC.nc">
      <documentation loc="32:../../Deluge/DelugeMetadataC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeMetadataP" loc="39:../../Deluge/DelugeMetadataP.nc">
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage" loc="40(DelugeMetadataC.BlockReaderGoldenImage):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1" loc="40(DelugeMetadataC.BlockReaderDeluge1):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2" loc="40(DelugeMetadataC.BlockReaderDeluge2):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3" loc="40(DelugeMetadataC.BlockReaderDeluge3):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage" loc="40(DelugeMetadataC.BlockWriterGoldenImage):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1" loc="40(DelugeMetadataC.BlockWriterDeluge1):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2" loc="40(DelugeMetadataC.BlockWriterDeluge2):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3" loc="40(DelugeMetadataC.BlockWriterDeluge3):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeMetadataClientC" loc="37(DelugeC.DelugeMetadataClientC):../../Deluge/DelugeMetadataClientC.nc">
      <documentation loc="32:../../Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeMetadataClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeVolumeManagerClientC" loc="37(DelugeC.DelugeVolumeManagerClientC):../../Deluge/DelugeVolumeManagerClientC.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeVolumeManagerClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC" loc="37:../../Deluge/DelugeVolumeManagerC.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerP" loc="37:../../Deluge/DelugeVolumeManagerP.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1" loc="40(DelugeVolumeManagerC.BlockWriterDeluge1):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2" loc="40(DelugeVolumeManagerC.BlockWriterDeluge2):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3" loc="40(DelugeVolumeManagerC.BlockWriterDeluge3):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockStorageLockClientC" loc="37(DelugeC.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="78:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="41:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882777588"/>
            <typename><typedef-ref name="TThree" ref="0x2b88827aeaa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882777588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b88827778e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882777588"/>
            <typename><typedef-ref name="TThree" ref="0x2b88827aeaa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x2b88827ad470"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2_1_2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AutoStarterC" loc="37:../../Deluge/AutoStarterC.nc">
      <documentation loc="32:../../Deluge/AutoStarterC.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AutoStarterP" loc="37:../../Deluge/AutoStarterP.nc">
      <documentation loc="32:../../Deluge/AutoStarterP.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC" loc="47(DelugeC.FlashVolumeManagerC.SerialAMSenderC):/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP" loc="43(DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC" loc="43(DelugeC.FlashVolumeManagerC.SerialAMReceiverC):/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP" loc="39(DelugeC.FlashVolumeManagerC.FlashVolumeManagerP):/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FlashVolumeManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.TimeoutTimer" loc="44(DelugeC.FlashVolumeManagerC.TimeoutTimer):/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderDeluge1):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderDeluge2):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderDeluge3):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterDeluge1):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterDeluge2):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterDeluge3):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC" loc="39(DelugeC.DelugeManagerC):../../Deluge/DelugeManagerC.nc">
      <documentation loc="32:../../Deluge/DelugeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeManagerC"/>
        <arguments>
          <value cst="I:84">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.SerialAMSenderC" loc="47(DelugeC.DelugeManagerC.SerialAMSenderC):/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP" loc="43(DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.DelugeManagerC.SerialAMReceiverC" loc="43(DelugeC.DelugeManagerC.SerialAMReceiverC):/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.Timer" loc="44(DelugeC.DelugeManagerC.Timer):/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.DelugeManagerP" loc="39(DelugeC.DelugeManagerC.DelugeManagerP):../../Deluge/DelugeManagerP.nc">
      <documentation loc="32:../../Deluge/DelugeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.DelugeManagerC.DelugeMetadataClientC" loc="37(DelugeC.DelugeManagerC.DelugeMetadataClientC):../../Deluge/DelugeMetadataClientC.nc">
      <documentation loc="32:../../Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DelugeMetadataClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.DelugeVolumeManagerClientC" loc="37(DelugeC.DelugeManagerC.DelugeVolumeManagerClientC):../../Deluge/DelugeVolumeManagerClientC.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DelugeVolumeManagerClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.BlockStorageLockClientC" loc="37(DelugeC.DelugeManagerC.BlockStorageLockClientC):/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b8882a66b98" loc="40:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b8882a63020" loc="40:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b8882a63368" loc="40:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b8882a71608" loc="41:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b8882a71970" loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b8882a71cd8" loc="43:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b8882a6e060" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b8882b0a020" loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b8882b0a388" loc="43:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b8882b0a6f0" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b8882b0aa20" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b8882beac48" loc="23:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b8882beac48"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b8882be7020" loc="23:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b8882bfb410" loc="23:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b8882bfb410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b8882bfb700" loc="23:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8882bdfc60" loc="46:/opt/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8882bdfc60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8882d21cc8" loc="46:/opt/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8882d21cc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b8882d1e020" loc="46:/opt/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8882d5e9f0" loc="46:/opt/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8882d5e9f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b8882d88d10" loc="47:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b8882dc1948" loc="47:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b8882db7380" loc="43:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b8882de2730" loc="45:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2_1_2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b88830991f8" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b88830991f8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b8883099548" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b888309da20" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b888309da20"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b88830b5198" loc="52:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b88830b5198"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2b88830b5498" loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b8883108e28" loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b8883108e28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b88831055c8" loc="43:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b88831055c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b888311c6e8" loc="55:/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b888311c6e8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b888311ce50" loc="56:/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b888311ce50"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b888311b240" loc="57:/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b888311b240"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b888311b9b8" loc="58:/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b888311b9b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b888311bd60" loc="59:/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b888311a528" loc="60:/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b888311a528"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2_1_2/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b888312c4d8" loc="52:/opt/tinyos-2_1_2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b888312c4d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b888312cc40" loc="53:/opt/tinyos-2_1_2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b888312cc40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b888312b068" loc="54:/opt/tinyos-2_1_2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b888312b068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b888312b7e0" loc="55:/opt/tinyos-2_1_2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b888312b7e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b888312bb88" loc="56:/opt/tinyos-2_1_2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2_1_2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2_1_2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x2b88831e6020" loc="39:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x2b88831e6388" loc="40:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x2b88831e66f0" loc="41:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b88831e6a20" loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2_1_2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b88833c9578" loc="83:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b88833fc510" loc="42:/opt/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b88838c8108" loc="43:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockReaderC" loc="40:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x2b88838f1988" loc="40:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
          <component-ref qname="BlockReaderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VolumeIdC" loc="37:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x2b88838ebc38" loc="37:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
          <component-ref qname="VolumeIdC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageManagerP" loc="37:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="clients" ref="0x2b888392b020" loc="37:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
          <component-ref qname="BlockStorageManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageC" loc="23:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc" abstract="">
      <documentation loc="12:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="volid" ref="0x2b8883973640" loc="23:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
          <component-ref qname="BlockStorageC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAt45dbByteC" loc="25:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByteC.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="sectorSizeLog2" ref="0x2b8883ad5e28" loc="25:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByteC.nc">
          <component-ref qname="HplAt45dbByteC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoArbiterC" loc="20:/opt/tinyos-2_1_2/tos/system/NoArbiterC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b8883b9a780" loc="89:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b8883b91a88" loc="52:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageLockClientC" loc="37:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockWriterC" loc="40:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x2b8883c1aba0" loc="40:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
          <component-ref qname="BlockWriterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b8883c5cda0" loc="49:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8883c5cda0"/></type-var>
        </typedef>
        <constant name="key" ref="0x2b8883c5b108" loc="49:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b8883c4f7e0" loc="45:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8883c4f7e0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x2b8883d10ab0" loc="51:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x2b8883d10e00" loc="52:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x2b8883d0d150" loc="53:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x2b8883d0d498" loc="54:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x2b8883d0a870" loc="51:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x2b8883d0abc0" loc="52:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x2b8883d07020" loc="53:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x2b8883d07368" loc="54:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x2b8883d076b0" loc="55:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:/opt/tinyos-2_1_2/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x2b8883d680c8" loc="44:/opt/tinyos-2_1_2/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VoltageC" loc="39:/opt/tinyos-2_1_2/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2_1_2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b8883e981c8" loc="89:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2_1_2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x2b8883e92860" loc="42:/opt/tinyos-2_1_2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2_1_2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2_1_2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2_1_2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2_1_2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2_1_2/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2_1_2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2b8883eef1d0" loc="23:/opt/tinyos-2_1_2/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2b8883eef1d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DelugeMetadataClientC" loc="37:../../Deluge/DelugeMetadataClientC.nc" abstract="">
      <documentation loc="32:../../Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerClientC" loc="37:../../Deluge/DelugeVolumeManagerClientC.nc" abstract="">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b88843ab370" loc="47:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMReceiverC" loc="43:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b88844078e8" loc="43:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FlashVolumeManagerP" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DelugeManagerC" loc="39:../../Deluge/DelugeManagerC.nc" abstract="">
      <documentation loc="32:../../Deluge/DelugeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b888445cb10" loc="39:../../Deluge/DelugeManagerC.nc">
          <component-ref qname="DelugeManagerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DelugeManagerP" loc="39:../../Deluge/DelugeManagerP.nc" abstract="">
      <documentation loc="32:../../Deluge/DelugeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Leds" ref="0x2b888280ac38" loc="41:../../Deluge/DelugeC.nc">
      <component-ref qname="DelugeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b888280ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b88827f8020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b88827f81a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b88827f8330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b88827f84b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b88827f8640"/>
        <function-ref name="get" scoped="" ref="0x2b88827f87c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b88827f8950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b88827f7020"/>
        <function-ref name="set" scoped="" ref="0x2b88827f8ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b88827f8c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b88827f8de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x2b888286e020" loc="44:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b888286e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888286e370"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b888286e4f8"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b888286e680"/>
        <function-ref name="getSize" scoped="" ref="0x2b888286e808"/>
        <function-ref name="readDone" scoped="" ref="0x2b888286e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x2b8882887208" loc="45:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8882887208"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8882887558"/>
        <function-ref name="writeDone" scoped="" ref="0x2b88828876e0"/>
        <function-ref name="erase" scoped="" ref="0x2b8882887868"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b88828879f0"/>
        <function-ref name="write" scoped="" ref="0x2b8882887b78"/>
        <function-ref name="sync" scoped="" ref="0x2b8882887d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8882886020" loc="46:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8882886020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8882886370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b88828864f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b8882886680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8882886808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8882886990"/>
        <function-ref name="get" scoped="" ref="0x2b8882886b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8882886ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b888288e330"/>
        <function-ref name="set" scoped="" ref="0x2b8882886e28"/>
        <function-ref name="led0On" scoped="" ref="0x2b888288e020"/>
        <function-ref name="led2On" scoped="" ref="0x2b888288e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x2b88828694f0" loc="42:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x2b88828694f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8882869840"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b88828699c8"/>
        <function-ref name="publish" scoped="" ref="0x2b8882869b50"/>
        <function-ref name="stop" scoped="" ref="0x2b8882869cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b88828a8dc8" loc="50:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b88828a8dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b88828a50c0"/>
        <function-ref name="fired" scoped="" ref="0x2b88828a0798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b88828a64d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b88828a6088"/>
        <function-ref name="getdt" scoped="" ref="0x2b88828a5960"/>
        <function-ref name="gett0" scoped="" ref="0x2b88828a5510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b88828a0be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b88828929e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b88828a6aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8882892e80"/>
        <function-ref name="stop" scoped="" ref="0x2b88828a0348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendAdvMsg" ref="0x2b88828bda20" loc="54:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendAdvMsg" scoped="" ref="0x2b88828bda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88828bdd70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88828ab020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88828ab1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b88828ab330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88828ab4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b8882893020" loc="49:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b8882893020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b8882893370"/>
        <function-ref name="rand32" scoped="" ref="0x2b88828934f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveAdvMsg" ref="0x2b88828b91b8" loc="55:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x2b88828b91b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b88828b9508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x2b88828b9cd8" loc="57:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b88828b9cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b88828b60a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b88828b6228"/>
        <function-ref name="erase" scoped="" ref="0x2b88828b63b0"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b88828b6538"/>
        <function-ref name="write" scoped="" ref="0x2b88828b66c0"/>
        <function-ref name="sync" scoped="" ref="0x2b88828b6848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalObjRecvDone" ref="0x2b88828cebf8" loc="111:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalObjRecvDone" scoped="" ref="0x2b88828cebf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b88828cd020"/>
        <function-ref name="runTask" scoped="" ref="0x2b88828cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b88828b6ac0" loc="59:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b88828b6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b88828b6e10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b88828bc020"/>
        <function-ref name="led1On" scoped="" ref="0x2b88828bc1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b88828bc330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b88828bc4b8"/>
        <function-ref name="get" scoped="" ref="0x2b88828bc640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b88828bc7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b88828bcde8"/>
        <function-ref name="set" scoped="" ref="0x2b88828bc950"/>
        <function-ref name="led0On" scoped="" ref="0x2b88828bcad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b88828bcc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugePageTransfer" ref="0x2b88828ac948" loc="51:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x2b88828ac948"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x2b88828a2640"/>
        <function-ref name="dataAvailable" scoped="" ref="0x2b88828ace20"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x2b88828a2020"/>
        <function-ref name="receivedPage" scoped="" ref="0x2b88828a21a8"/>
        <function-ref name="setImgNum" scoped="" ref="0x2b88828a2330"/>
        <function-ref name="isTransferring" scoped="" ref="0x2b88828a24b8"/>
        <function-ref name="stop" scoped="" ref="0x2b88828acc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x2b88828b7a00" loc="52:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x2b88828b7a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x2b88828b7d50"/>
        <function-ref name="crc16" scoped="" ref="0x2b88828a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x2b88828940c0" loc="47:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x2b88828940c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8882894410"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b8882894598"/>
        <function-ref name="publish" scoped="" ref="0x2b8882894720"/>
        <function-ref name="stop" scoped="" ref="0x2b88828948a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x2b8882929020" loc="47:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x2b8882929020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8882929370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88829294f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8882929680"/>
        <function-ref name="cancel" scoped="" ref="0x2b8882929808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8882929990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x2b888291c500" loc="41:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b888291c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888291c850"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b888291c9d8"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b888291cb60"/>
        <function-ref name="getSize" scoped="" ref="0x2b888291cce8"/>
        <function-ref name="readDone" scoped="" ref="0x2b888291ce70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x2b888291b668" loc="42:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b888291b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b888291b9b8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b888291bb40"/>
        <function-ref name="erase" scoped="" ref="0x2b888291bcc8"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b888291be50"/>
        <function-ref name="write" scoped="" ref="0x2b888292c020"/>
        <function-ref name="sync" scoped="" ref="0x2b888292c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x2b888292c508" loc="44:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x2b888292c508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888292c858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x2b888292cbb0" loc="45:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x2b888292cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888292a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x2b888292a358" loc="46:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x2b888292a358"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b888292a6a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b888292a830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888292a9b8"/>
        <function-ref name="cancel" scoped="" ref="0x2b888292ab40"/>
        <function-ref name="sendDone" scoped="" ref="0x2b888292acc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x2b888291d020" loc="39:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x2b888291d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x2b888291dca0"/>
        <function-ref name="dataAvailable" scoped="" ref="0x2b888291d4f8"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x2b888291d680"/>
        <function-ref name="receivedPage" scoped="" ref="0x2b888291d808"/>
        <function-ref name="setImgNum" scoped="" ref="0x2b888291d990"/>
        <function-ref name="isTransferring" scoped="" ref="0x2b888291db18"/>
        <function-ref name="stop" scoped="" ref="0x2b888291d370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b8882948cb0" loc="49:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882948cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b888293a0a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b888293a228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b888293a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b888293a628" loc="50:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b888293a628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b888293a978"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b888293ab00"/>
        <function-ref name="led1On" scoped="" ref="0x2b888293ac88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b888293ae10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8882939020"/>
        <function-ref name="get" scoped="" ref="0x2b88829391a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8882939330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8882939950"/>
        <function-ref name="set" scoped="" ref="0x2b88829394b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8882939640"/>
        <function-ref name="led2On" scoped="" ref="0x2b88829397c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b888293b8a0" loc="48:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b888293b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b888293bbf0"/>
        <function-ref name="source" scoped="" ref="0x2b888293bd78"/>
        <function-ref name="address" scoped="" ref="0x2b8882928020"/>
        <function-ref name="destination" scoped="" ref="0x2b88829281a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b8882928330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b88829284b8"/>
        <function-ref name="type" scoped="" ref="0x2b8882928640"/>
        <function-ref name="setType" scoped="" ref="0x2b88829287c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8882928950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8882928ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8882928c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b888295ad78" loc="60:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b888295ad78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b88829590f0"/>
        <function-ref name="rand32" scoped="" ref="0x2b8882959278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x2b888294d020" loc="56:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x2b888294d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b888294d370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b888294d4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888294d680"/>
        <function-ref name="cancel" scoped="" ref="0x2b888294d808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b888294d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x2b88829434c8" loc="50:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b88829434c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8882943818"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b88829439a0"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8882943b28"/>
        <function-ref name="getSize" scoped="" ref="0x2b8882943cb0"/>
        <function-ref name="readDone" scoped="" ref="0x2b8882943e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitVecUtils" ref="0x2b8882951650" loc="49:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x2b8882951650"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x2b88829519a0"/>
        <function-ref name="printBitVec" scoped="" ref="0x2b8882951b28"/>
        <function-ref name="countOnes" scoped="" ref="0x2b8882951cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x2b8882950648" loc="51:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8882950648"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8882950998"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8882950b20"/>
        <function-ref name="erase" scoped="" ref="0x2b8882950ca8"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8882950e30"/>
        <function-ref name="write" scoped="" ref="0x2b888294f020"/>
        <function-ref name="sync" scoped="" ref="0x2b888294f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x2b888294f508" loc="53:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x2b888294f508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888294f858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x2b888294fbb0" loc="54:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x2b888294fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888294e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x2b888294e358" loc="55:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x2b888294e358"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b888294e6a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b888294e830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888294e9b8"/>
        <function-ref name="cancel" scoped="" ref="0x2b888294eb40"/>
        <function-ref name="sendDone" scoped="" ref="0x2b888294ecc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b88829594f0" loc="62:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b88829594f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8882959940"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8882959ac8"/>
        <function-ref name="led1On" scoped="" ref="0x2b8882959c50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8882959dd8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8882958020"/>
        <function-ref name="get" scoped="" ref="0x2b88829581a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8882958330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8882958950"/>
        <function-ref name="set" scoped="" ref="0x2b88829584b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8882958640"/>
        <function-ref name="led2On" scoped="" ref="0x2b88829587c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x2b8882947648" loc="47:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x2b8882947648"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x2b8882944330"/>
        <function-ref name="dataAvailable" scoped="" ref="0x2b8882947b20"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x2b8882947ca8"/>
        <function-ref name="receivedPage" scoped="" ref="0x2b8882947e30"/>
        <function-ref name="setImgNum" scoped="" ref="0x2b8882944020"/>
        <function-ref name="isTransferring" scoped="" ref="0x2b88829441a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8882947998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b888294b348" loc="58:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b888294b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b888294b698"/>
        <function-ref name="noAck" scoped="" ref="0x2b888294b820"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b888294b9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b888294dc30" loc="57:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b888294dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b888294c020"/>
        <function-ref name="source" scoped="" ref="0x2b888294c1a8"/>
        <function-ref name="address" scoped="" ref="0x2b888294c330"/>
        <function-ref name="destination" scoped="" ref="0x2b888294c4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b888294c640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b888294c7c8"/>
        <function-ref name="type" scoped="" ref="0x2b888294c950"/>
        <function-ref name="setType" scoped="" ref="0x2b888294cad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b888294cc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b888294cde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b888294b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b888294bde8" loc="59:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b888294bde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b888295a0c0"/>
        <function-ref name="fired" scoped="" ref="0x2b8882949798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b888295b4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b888295b088"/>
        <function-ref name="getdt" scoped="" ref="0x2b888295a960"/>
        <function-ref name="gett0" scoped="" ref="0x2b888295a510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8882949be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b888294a9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b888295baa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b888294ae80"/>
        <function-ref name="stop" scoped="" ref="0x2b8882949348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b88829e9690" loc="46:/opt/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b88829e9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b88829e99e0"/>
        <function-ref name="rand32" scoped="" ref="0x2b88829e9b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b88829e6668" loc="45:/opt/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b88829e6668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88829e91e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b88829e8890" loc="44:/opt/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b88829e8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88829e8be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b88829e24c8" loc="48:/opt/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b88829e24c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b88829e2818"/>
        <function-ref name="rand32" scoped="" ref="0x2b88829e29a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b88829e33b0" loc="47:/opt/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b88829e33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88829e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b88829e7b30" loc="46:/opt/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b88829e7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88829e7e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b88829fe4e8" loc="58:/opt/tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b88829fe4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88829fe838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b88829ffda8" loc="57:/opt/tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b88829ffda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b88829fe170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b88829f99a0" loc="52:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b88829f99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88829f9cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b88829fdc78" loc="46:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b88829fdc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88829fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b8882a0ab98" loc="50:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8882a0ab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b88829f9020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b88829f91a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b88829f9330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b88829f94b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b88829f9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b8882a07b90" loc="45:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b8882a07b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882a06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8882a074f0" loc="44:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8882a074f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882a07840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b8882a06398" loc="46:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b8882a06398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882a066e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b8882a17108" loc="41:/opt/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b8882a17108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882a17458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b8882a09a08" loc="40:/opt/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b8882a09a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882a09d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b8882a137f8" loc="45:/opt/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b8882a137f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882a13b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b8882a235f8" loc="44:/opt/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b8882a235f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a23948"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a23ad0"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a23c58"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a23de0"/>
        <function-ref name="get" scoped="" ref="0x2b8882a13020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a131a8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a13330"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a134b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b8882a14428" loc="43:/opt/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b8882a14428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882a14778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b8882a57c78" loc="100:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b8882a57c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a565e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a56770"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a568f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a56a80"/>
        <function-ref name="get" scoped="" ref="0x2b8882a56c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a56d90"/>
        <function-ref name="set" scoped="" ref="0x2b8882a55020"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b8882a427e0" loc="74:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b8882a427e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a42b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a42cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a42e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a41020"/>
        <function-ref name="get" scoped="" ref="0x2b8882a411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a41330"/>
        <function-ref name="set" scoped="" ref="0x2b8882a414b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a41640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b8882a4d7e0" loc="85:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b8882a4d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a4db30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a4dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a4de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a4c020"/>
        <function-ref name="get" scoped="" ref="0x2b8882a4c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a4c330"/>
        <function-ref name="set" scoped="" ref="0x2b8882a4c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a4c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b8882a5c4d0" loc="94:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b8882a5c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a5c820"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a5c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a5cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a5ccb8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a5ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a5b020"/>
        <function-ref name="set" scoped="" ref="0x2b8882a5b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a5b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b8882a2c4d0" loc="52:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b8882a2c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a2c820"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a2c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a2cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a2ccb8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a2ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a2b020"/>
        <function-ref name="set" scoped="" ref="0x2b8882a2b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a2b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b8882a461a0" loc="92:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b8882a461a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a464f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a46678"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a46800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a46988"/>
        <function-ref name="get" scoped="" ref="0x2b8882a46b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a46c98"/>
        <function-ref name="set" scoped="" ref="0x2b8882a46e20"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b8882a2a7e0" loc="55:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b8882a2a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a2ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a2acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a2ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a29020"/>
        <function-ref name="get" scoped="" ref="0x2b8882a291a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a29330"/>
        <function-ref name="set" scoped="" ref="0x2b8882a294b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a29640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b8882a34968" loc="66:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b8882a34968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a34cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a34e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a33020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a331a8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a33330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a334b8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a33640"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a337c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b8882a3fc78" loc="77:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b8882a3fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a3e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a3e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a3e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a3e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a3e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a3e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a3e950"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a3ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b8882a4ac78" loc="88:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b8882a4ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a49020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a491a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a49330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a494b8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a49640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a497c8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a49950"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a49ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b8882a1cc78" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b8882a1cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a1b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a1b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a1b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a1b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a1b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a1b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a1b950"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a1bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b8882a27c78" loc="58:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b8882a27c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a25020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a251a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a25330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a254b8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a25640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a257c8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a25950"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a25ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b8882a31e00" loc="69:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b8882a31e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a301a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a30330"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a304b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a30640"/>
        <function-ref name="get" scoped="" ref="0x2b8882a307c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a30950"/>
        <function-ref name="set" scoped="" ref="0x2b8882a30ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a30c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b8882a3b1a0" loc="80:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b8882a3b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a3b4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a3b678"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a3b800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a3b988"/>
        <function-ref name="get" scoped="" ref="0x2b8882a3bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a3bc98"/>
        <function-ref name="set" scoped="" ref="0x2b8882a3be20"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b8882a59968" loc="97:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b8882a59968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a59cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a59e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a58020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a581a8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a58330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a584b8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a58640"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a587c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b8882a537e0" loc="103:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b8882a537e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a53b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a53cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a53e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a52020"/>
        <function-ref name="get" scoped="" ref="0x2b8882a521a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a52330"/>
        <function-ref name="set" scoped="" ref="0x2b8882a524b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a52640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b8882a504d0" loc="83:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b8882a504d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a50820"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a509a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a50b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a50cb8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a50e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a4f020"/>
        <function-ref name="set" scoped="" ref="0x2b8882a4f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a4f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b8882a2e1a0" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b8882a2e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a2e4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a2e678"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a2e800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a2e988"/>
        <function-ref name="get" scoped="" ref="0x2b8882a2eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a2ec98"/>
        <function-ref name="set" scoped="" ref="0x2b8882a2ee20"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b8882a38348" loc="61:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b8882a38348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a38698"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a38820"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a389a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a38b30"/>
        <function-ref name="get" scoped="" ref="0x2b8882a38cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a38e40"/>
        <function-ref name="set" scoped="" ref="0x2b8882a37020"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b8882a554d0" loc="101:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b8882a554d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a55820"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a559a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a55b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a55cb8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a55e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a54020"/>
        <function-ref name="set" scoped="" ref="0x2b8882a541a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a54330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b8882a36658" loc="64:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b8882a36658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a369a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a36b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a36cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a36e40"/>
        <function-ref name="get" scoped="" ref="0x2b8882a35020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a351a8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a35330"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a354b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b8882a41968" loc="75:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b8882a41968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a41cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a41e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a40020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a401a8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a40330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a404b8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a40640"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a407c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b8882a4c968" loc="86:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b8882a4c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a4ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a4ce40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a4b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a4b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a4b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a4b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a4b640"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a4b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b8882a5b658" loc="95:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b8882a5b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a5b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a5bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a5bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a5be40"/>
        <function-ref name="get" scoped="" ref="0x2b8882a5a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a5a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a5a330"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a5a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b8882a2b658" loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b8882a2b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a2b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a2bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a2bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a2be40"/>
        <function-ref name="get" scoped="" ref="0x2b8882a2a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a2a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a2a330"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a2a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b8882a29968" loc="56:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b8882a29968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a29cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a29e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a28020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a281a8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a28330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a284b8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a28640"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a287c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b8882a33af0" loc="67:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b8882a33af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a33e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a32020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a321a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a32330"/>
        <function-ref name="get" scoped="" ref="0x2b8882a324b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a32640"/>
        <function-ref name="set" scoped="" ref="0x2b8882a327c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a32950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b8882a3ee00" loc="78:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b8882a3ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a3d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a3d330"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a3d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a3d640"/>
        <function-ref name="get" scoped="" ref="0x2b8882a3d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a3d950"/>
        <function-ref name="set" scoped="" ref="0x2b8882a3dad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a3dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b8882a49e00" loc="89:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b8882a49e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a481a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a48330"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a484b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a48640"/>
        <function-ref name="get" scoped="" ref="0x2b8882a487c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a48950"/>
        <function-ref name="set" scoped="" ref="0x2b8882a48ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a48c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b8882a1be00" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b8882a1be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a1a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a1a330"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a1a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a1a640"/>
        <function-ref name="get" scoped="" ref="0x2b8882a1a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a1a950"/>
        <function-ref name="set" scoped="" ref="0x2b8882a1aad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a1ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b8882a25e00" loc="59:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b8882a25e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a242e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a24470"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a245f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a24780"/>
        <function-ref name="get" scoped="" ref="0x2b8882a24908"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a24a90"/>
        <function-ref name="set" scoped="" ref="0x2b8882a24c18"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a24da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b8882a2f020" loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b8882a2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a2f370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a2f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a2f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a2f808"/>
        <function-ref name="get" scoped="" ref="0x2b8882a2f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a2fb18"/>
        <function-ref name="set" scoped="" ref="0x2b8882a2fca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a2fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b8882a58af0" loc="98:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b8882a58af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a58e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a57020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a571a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a57330"/>
        <function-ref name="get" scoped="" ref="0x2b8882a574b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a57640"/>
        <function-ref name="set" scoped="" ref="0x2b8882a577c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a57950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b8882a43348" loc="73:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b8882a43348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a43898"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a43a20"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a43ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a43d30"/>
        <function-ref name="get" scoped="" ref="0x2b8882a42020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a421a8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a42330"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a424b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b8882a4f658" loc="84:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b8882a4f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a4f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a4fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a4fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a4fe40"/>
        <function-ref name="get" scoped="" ref="0x2b8882a4d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a4d1a8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a4d330"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a4d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b8882a45348" loc="93:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b8882a45348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a45698"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a45820"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a459a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a45b30"/>
        <function-ref name="get" scoped="" ref="0x2b8882a45cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a45e40"/>
        <function-ref name="set" scoped="" ref="0x2b8882a5c020"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a5c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b8882a52968" loc="104:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b8882a52968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a52cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a52e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a51020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a511a8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a51330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a514b8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a51640"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a517c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b8882a2d348" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b8882a2d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a2d698"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a2d820"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a2d9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a2db30"/>
        <function-ref name="get" scoped="" ref="0x2b8882a2dcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a2de40"/>
        <function-ref name="set" scoped="" ref="0x2b8882a2c020"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a2c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b8882a374d0" loc="62:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b8882a374d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a37820"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a379a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a37b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a37cb8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a37e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a36020"/>
        <function-ref name="set" scoped="" ref="0x2b8882a361a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a36330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b8882a47020" loc="91:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b8882a47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a47370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a474f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a47680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a47808"/>
        <function-ref name="get" scoped="" ref="0x2b8882a47990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a47b18"/>
        <function-ref name="set" scoped="" ref="0x2b8882a47ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a47e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b8882a357e0" loc="65:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b8882a357e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a35b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a35cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a35e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a34020"/>
        <function-ref name="get" scoped="" ref="0x2b8882a341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a34330"/>
        <function-ref name="set" scoped="" ref="0x2b8882a344b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a34640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b8882a40af0" loc="76:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b8882a40af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a40e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a3f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a3f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a3f330"/>
        <function-ref name="get" scoped="" ref="0x2b8882a3f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a3f640"/>
        <function-ref name="set" scoped="" ref="0x2b8882a3f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a3f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b8882a4baf0" loc="87:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b8882a4baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a4be40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a4a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a4a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a4a330"/>
        <function-ref name="get" scoped="" ref="0x2b8882a4a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a4a640"/>
        <function-ref name="set" scoped="" ref="0x2b8882a4a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a4a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b8882a5a7e0" loc="96:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b8882a5a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a5ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a5acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a5ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a59020"/>
        <function-ref name="get" scoped="" ref="0x2b8882a591a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a59330"/>
        <function-ref name="set" scoped="" ref="0x2b8882a594b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a59640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b8882a16ab0" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b8882a16ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a16e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a1c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a1c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a1c330"/>
        <function-ref name="get" scoped="" ref="0x2b8882a1c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a1c640"/>
        <function-ref name="set" scoped="" ref="0x2b8882a1c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a1c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b8882a28af0" loc="57:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b8882a28af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a28e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a27020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a271a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a27330"/>
        <function-ref name="get" scoped="" ref="0x2b8882a274b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a27640"/>
        <function-ref name="set" scoped="" ref="0x2b8882a277c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a27950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b8882a32c78" loc="68:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b8882a32c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a31020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a311a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a31330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a314b8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a31640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a317c8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a31950"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a31ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b8882a3c020" loc="79:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b8882a3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a3c370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a3c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a3c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a3c808"/>
        <function-ref name="get" scoped="" ref="0x2b8882a3c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a3cb18"/>
        <function-ref name="set" scoped="" ref="0x2b8882a3cca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a3ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b8882a54658" loc="102:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b8882a54658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a549a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a54b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a54cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a54e40"/>
        <function-ref name="get" scoped="" ref="0x2b8882a53020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a531a8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a53330"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a534b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b8882a3a348" loc="82:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b8882a3a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a3a698"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a3a820"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a3a9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a3ab30"/>
        <function-ref name="get" scoped="" ref="0x2b8882a3acb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a3ae40"/>
        <function-ref name="set" scoped="" ref="0x2b8882a50020"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b8882a441a0" loc="71:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b8882a441a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a444f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a44678"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a44800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a44988"/>
        <function-ref name="get" scoped="" ref="0x2b8882a44b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a44c98"/>
        <function-ref name="set" scoped="" ref="0x2b8882a44e20"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b8882a19020" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b8882a19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a19370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a194f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a19680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a19808"/>
        <function-ref name="get" scoped="" ref="0x2b8882a19990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a19b18"/>
        <function-ref name="set" scoped="" ref="0x2b8882a19ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a19e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b8882a39100" loc="60:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b8882a39100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a39450"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a395d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a39760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a398e8"/>
        <function-ref name="get" scoped="" ref="0x2b8882a39a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a39bf8"/>
        <function-ref name="set" scoped="" ref="0x2b8882a39d80"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a38020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b8882ab0120" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b8882ab0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ab0470"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ab05f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ab0780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ab0908"/>
        <function-ref name="get" scoped="" ref="0x2b8882ab0a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ab0c18"/>
        <function-ref name="set" scoped="" ref="0x2b8882ab0da0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882aaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b8882aad5b8" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b8882aad5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882aad908"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882aada90"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882aadc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882aadda0"/>
        <function-ref name="get" scoped="" ref="0x2b8882aab020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882aab1a8"/>
        <function-ref name="set" scoped="" ref="0x2b8882aab330"/>
        <function-ref name="clr" scoped="" ref="0x2b8882aab4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b8882a9bdc0" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b8882a9bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a9a170"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a9a2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a9a480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a9a608"/>
        <function-ref name="get" scoped="" ref="0x2b8882a9a790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a9a918"/>
        <function-ref name="set" scoped="" ref="0x2b8882a9aaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a9ac28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b8882aaf2a8" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b8882aaf2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882aaf5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882aaf780"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882aaf908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882aafa90"/>
        <function-ref name="get" scoped="" ref="0x2b8882aafc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882aafda0"/>
        <function-ref name="set" scoped="" ref="0x2b8882aae020"/>
        <function-ref name="clr" scoped="" ref="0x2b8882aae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b8882aab740" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b8882aab740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882aaba90"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882aabc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882aabda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882aaa020"/>
        <function-ref name="get" scoped="" ref="0x2b8882aaa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882aaa330"/>
        <function-ref name="set" scoped="" ref="0x2b8882aaa4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882aaa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b8882a99020" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b8882a99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882a99370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882a994f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882a99680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882a99808"/>
        <function-ref name="get" scoped="" ref="0x2b8882a99990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882a99b18"/>
        <function-ref name="set" scoped="" ref="0x2b8882a99ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882a99e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b8882aae430" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b8882aae430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882aae780"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882aae908"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882aaea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882aaec18"/>
        <function-ref name="get" scoped="" ref="0x2b8882aaeda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882aad020"/>
        <function-ref name="set" scoped="" ref="0x2b8882aad1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882aad330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b8882aaa8c8" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b8882aaa8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882aaac18"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882aaada0"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882aa9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882aa91a8"/>
        <function-ref name="get" scoped="" ref="0x2b8882aa9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882aa94b8"/>
        <function-ref name="set" scoped="" ref="0x2b8882aa9640"/>
        <function-ref name="clr" scoped="" ref="0x2b8882aa97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845401e8" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845401e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8884540538"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845406c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884540848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845409d0"/>
        <function-ref name="get" scoped="" ref="0x2b8884540b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8884540ce0"/>
        <function-ref name="set" scoped="" ref="0x2b8884540e68"/>
        <function-ref name="clr" scoped="" ref="0x2b888453f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b888453d100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b888453d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888453d450"/>
        <function-ref name="isInput" scoped="" ref="0x2b888453d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b888453d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888453d8e8"/>
        <function-ref name="get" scoped="" ref="0x2b888453da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888453dbf8"/>
        <function-ref name="set" scoped="" ref="0x2b888453dd80"/>
        <function-ref name="clr" scoped="" ref="0x2b888453c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b888453a100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b888453a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888453a450"/>
        <function-ref name="isInput" scoped="" ref="0x2b888453a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b888453a760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888453a8e8"/>
        <function-ref name="get" scoped="" ref="0x2b888453aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888453abf8"/>
        <function-ref name="set" scoped="" ref="0x2b888453ad80"/>
        <function-ref name="clr" scoped="" ref="0x2b8884539020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8884537100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8884537100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8884537450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845375d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884537760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845378e8"/>
        <function-ref name="get" scoped="" ref="0x2b8884537a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8884537bf8"/>
        <function-ref name="set" scoped="" ref="0x2b8884537d80"/>
        <function-ref name="clr" scoped="" ref="0x2b8884536020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8884534100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8884534100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8884534450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845345d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884534760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845348e8"/>
        <function-ref name="get" scoped="" ref="0x2b8884534a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8884534bf8"/>
        <function-ref name="set" scoped="" ref="0x2b8884534d80"/>
        <function-ref name="clr" scoped="" ref="0x2b8884533020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8884531100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8884531100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8884531450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845315d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884531760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845318e8"/>
        <function-ref name="get" scoped="" ref="0x2b8884531a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8884531bf8"/>
        <function-ref name="set" scoped="" ref="0x2b8884531d80"/>
        <function-ref name="clr" scoped="" ref="0x2b8884530020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b888452e100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b888452e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888452e450"/>
        <function-ref name="isInput" scoped="" ref="0x2b888452e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b888452e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888452e8e8"/>
        <function-ref name="get" scoped="" ref="0x2b888452ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888452ebf8"/>
        <function-ref name="set" scoped="" ref="0x2b888452ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b888452d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b888452b100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b888452b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888452b450"/>
        <function-ref name="isInput" scoped="" ref="0x2b888452b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b888452b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888452b8e8"/>
        <function-ref name="get" scoped="" ref="0x2b888452ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888452bbf8"/>
        <function-ref name="set" scoped="" ref="0x2b888452bd80"/>
        <function-ref name="clr" scoped="" ref="0x2b888452a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b8882ababd8" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b8882ababd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ab8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ab81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ab8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ab84b8"/>
        <function-ref name="get" scoped="" ref="0x2b8882ab8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ab87c8"/>
        <function-ref name="set" scoped="" ref="0x2b8882ab8950"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ab8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b8882ab5020" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b8882ab5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ab5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ab54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ab5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ab5808"/>
        <function-ref name="get" scoped="" ref="0x2b8882ab5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ab5b18"/>
        <function-ref name="set" scoped="" ref="0x2b8882ab5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ab5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b8882abc930" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b8882abc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882abcc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882abce08"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882abb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882abb1a8"/>
        <function-ref name="get" scoped="" ref="0x2b8882abb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882abb4b8"/>
        <function-ref name="set" scoped="" ref="0x2b8882abb640"/>
        <function-ref name="clr" scoped="" ref="0x2b8882abb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b8882ab8d60" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b8882ab8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ab70d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ab7260"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ab73e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ab7570"/>
        <function-ref name="get" scoped="" ref="0x2b8882ab76f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ab7880"/>
        <function-ref name="set" scoped="" ref="0x2b8882ab7a08"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ab7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b8882ab4120" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b8882ab4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ab4470"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ab45f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ab4780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ab4908"/>
        <function-ref name="get" scoped="" ref="0x2b8882ab4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ab4c18"/>
        <function-ref name="set" scoped="" ref="0x2b8882ab4da0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ab3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b8882abba50" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b8882abba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882abbda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882aba020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882aba1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882aba330"/>
        <function-ref name="get" scoped="" ref="0x2b8882aba4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882aba640"/>
        <function-ref name="set" scoped="" ref="0x2b8882aba7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882aba950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b8882ab7e18" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b8882ab7e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ab61a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ab6330"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ab64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ab6640"/>
        <function-ref name="get" scoped="" ref="0x2b8882ab67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ab6950"/>
        <function-ref name="set" scoped="" ref="0x2b8882ab6ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ab6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b8882ab32a8" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b8882ab32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ab35f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ab3780"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ab3908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ab3a90"/>
        <function-ref name="get" scoped="" ref="0x2b8882ab3c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ab3da0"/>
        <function-ref name="set" scoped="" ref="0x2b8882ab2020"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ab21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845e7180" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845e7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88845e74d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845e7658"/>
        <function-ref name="toggle" scoped="" ref="0x2b88845e77e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845e7968"/>
        <function-ref name="get" scoped="" ref="0x2b88845e7af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88845e7c78"/>
        <function-ref name="set" scoped="" ref="0x2b88845e7e00"/>
        <function-ref name="clr" scoped="" ref="0x2b88845e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845e4100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845e4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88845e4450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845e45d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88845e4760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845e48e8"/>
        <function-ref name="get" scoped="" ref="0x2b88845e4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88845e4bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88845e4d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88845e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845e1100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845e1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88845e1450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845e15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88845e1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845e18e8"/>
        <function-ref name="get" scoped="" ref="0x2b88845e1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88845e1bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88845e1d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88845e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845de100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845de100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88845de450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845de5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88845de760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845de8e8"/>
        <function-ref name="get" scoped="" ref="0x2b88845dea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88845debf8"/>
        <function-ref name="set" scoped="" ref="0x2b88845ded80"/>
        <function-ref name="clr" scoped="" ref="0x2b88845dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845db100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845db100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88845db450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845db5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88845db760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845db8e8"/>
        <function-ref name="get" scoped="" ref="0x2b88845dba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88845dbbf8"/>
        <function-ref name="set" scoped="" ref="0x2b88845dbd80"/>
        <function-ref name="clr" scoped="" ref="0x2b88845da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845d8100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845d8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88845d8450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845d85d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88845d8760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845d88e8"/>
        <function-ref name="get" scoped="" ref="0x2b88845d8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88845d8bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88845d8d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88845d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845d5100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88845d5450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845d55d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88845d5760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845d58e8"/>
        <function-ref name="get" scoped="" ref="0x2b88845d5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88845d5bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88845d5d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88845d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845d2100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845d2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88845d2450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845d25d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88845d2760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845d28e8"/>
        <function-ref name="get" scoped="" ref="0x2b88845d2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88845d2bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88845d2d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88845d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b8882ac3740" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b8882ac3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ac3a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ac3c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ac3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ac2020"/>
        <function-ref name="get" scoped="" ref="0x2b8882ac21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ac2330"/>
        <function-ref name="set" scoped="" ref="0x2b8882ac24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ac2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b8882ac0bd8" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b8882ac0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882abf020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882abf1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882abf330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882abf4b8"/>
        <function-ref name="get" scoped="" ref="0x2b8882abf640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882abf7c8"/>
        <function-ref name="set" scoped="" ref="0x2b8882abf950"/>
        <function-ref name="clr" scoped="" ref="0x2b8882abfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b8882ac5500" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b8882ac5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ac5850"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ac59d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ac5b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ac5ce8"/>
        <function-ref name="get" scoped="" ref="0x2b8882ac5e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ac4020"/>
        <function-ref name="set" scoped="" ref="0x2b8882ac41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ac4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b8882ac28c8" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b8882ac28c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ac2c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ac2da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ac1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ac11a8"/>
        <function-ref name="get" scoped="" ref="0x2b8882ac1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ac14b8"/>
        <function-ref name="set" scoped="" ref="0x2b8882ac1640"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ac17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b8882abfd60" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b8882abfd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882abe0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882abe260"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882abe3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882abe570"/>
        <function-ref name="get" scoped="" ref="0x2b8882abe6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882abe880"/>
        <function-ref name="set" scoped="" ref="0x2b8882abea08"/>
        <function-ref name="clr" scoped="" ref="0x2b8882abeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b8882ac45b8" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b8882ac45b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ac4908"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ac4a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ac4c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ac4da0"/>
        <function-ref name="get" scoped="" ref="0x2b8882ac3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ac31a8"/>
        <function-ref name="set" scoped="" ref="0x2b8882ac3330"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ac34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b8882ac1a50" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b8882ac1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ac1da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ac0020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ac01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ac0330"/>
        <function-ref name="get" scoped="" ref="0x2b8882ac04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ac0640"/>
        <function-ref name="set" scoped="" ref="0x2b8882ac07c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ac0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b8882abee18" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b8882abee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882abd1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882abd330"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882abd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882abd640"/>
        <function-ref name="get" scoped="" ref="0x2b8882abd7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882abd950"/>
        <function-ref name="set" scoped="" ref="0x2b8882abdad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882abdc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8884605180" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8884605180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88846054d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8884605658"/>
        <function-ref name="toggle" scoped="" ref="0x2b88846057e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8884605968"/>
        <function-ref name="get" scoped="" ref="0x2b8884605af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8884605c78"/>
        <function-ref name="set" scoped="" ref="0x2b8884605e00"/>
        <function-ref name="clr" scoped="" ref="0x2b8884604020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8884602100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8884602100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8884602450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846025d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884602760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846028e8"/>
        <function-ref name="get" scoped="" ref="0x2b8884602a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8884602bf8"/>
        <function-ref name="set" scoped="" ref="0x2b8884602d80"/>
        <function-ref name="clr" scoped="" ref="0x2b8884601020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845ff100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845ff100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88845ff450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845ff5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88845ff760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845ff8e8"/>
        <function-ref name="get" scoped="" ref="0x2b88845ffa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88845ffbf8"/>
        <function-ref name="set" scoped="" ref="0x2b88845ffd80"/>
        <function-ref name="clr" scoped="" ref="0x2b88845fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845fc100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845fc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88845fc450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845fc5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88845fc760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845fc8e8"/>
        <function-ref name="get" scoped="" ref="0x2b88845fca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88845fcbf8"/>
        <function-ref name="set" scoped="" ref="0x2b88845fcd80"/>
        <function-ref name="clr" scoped="" ref="0x2b88845fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845f9100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845f9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88845f9450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845f95d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88845f9760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845f98e8"/>
        <function-ref name="get" scoped="" ref="0x2b88845f9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88845f9bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88845f9d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88845f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845f6100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845f6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88845f6450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845f65d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88845f6760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845f68e8"/>
        <function-ref name="get" scoped="" ref="0x2b88845f6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88845f6bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88845f6d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88845f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845f3100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845f3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88845f3450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845f35d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88845f3760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845f38e8"/>
        <function-ref name="get" scoped="" ref="0x2b88845f3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88845f3bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88845f3d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88845f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88845f0100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88845f0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88845f0450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88845f05d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88845f0760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88845f08e8"/>
        <function-ref name="get" scoped="" ref="0x2b88845f0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88845f0bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88845f0d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88845ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b8882ace120" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b8882ace120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ace470"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ace5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ace780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ace908"/>
        <function-ref name="get" scoped="" ref="0x2b8882acea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882acec18"/>
        <function-ref name="set" scoped="" ref="0x2b8882aceda0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882acd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b8882acb5b8" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b8882acb5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882acb908"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882acba90"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882acbc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882acbda0"/>
        <function-ref name="get" scoped="" ref="0x2b8882aca020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882aca1a8"/>
        <function-ref name="set" scoped="" ref="0x2b8882aca330"/>
        <function-ref name="clr" scoped="" ref="0x2b8882aca4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b8882ad1e40" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b8882ad1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ad01c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ad0348"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ad04d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ad0658"/>
        <function-ref name="get" scoped="" ref="0x2b8882ad07e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ad0968"/>
        <function-ref name="set" scoped="" ref="0x2b8882ad0af0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ad0c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b8882acd2a8" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b8882acd2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882acd5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882acd780"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882acd908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882acda90"/>
        <function-ref name="get" scoped="" ref="0x2b8882acdc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882acdda0"/>
        <function-ref name="set" scoped="" ref="0x2b8882acc020"/>
        <function-ref name="clr" scoped="" ref="0x2b8882acc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b8882aca740" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b8882aca740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882acaa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882acac18"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882acada0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ae3020"/>
        <function-ref name="get" scoped="" ref="0x2b8882ae31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ae3330"/>
        <function-ref name="set" scoped="" ref="0x2b8882ae34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ae3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b8882acf020" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b8882acf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882acf370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882acf4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882acf680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882acf808"/>
        <function-ref name="get" scoped="" ref="0x2b8882acf990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882acfb18"/>
        <function-ref name="set" scoped="" ref="0x2b8882acfca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882acfe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b8882acc430" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b8882acc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882acc780"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882acc908"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882acca90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882accc18"/>
        <function-ref name="get" scoped="" ref="0x2b8882accda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882acb020"/>
        <function-ref name="set" scoped="" ref="0x2b8882acb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882acb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b8882ae38c8" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b8882ae38c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ae3c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ae3da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ae1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ae11a8"/>
        <function-ref name="get" scoped="" ref="0x2b8882ae1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ae14b8"/>
        <function-ref name="set" scoped="" ref="0x2b8882ae1640"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ae17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88846ab180" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88846ab180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88846ab4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846ab658"/>
        <function-ref name="toggle" scoped="" ref="0x2b88846ab7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846ab968"/>
        <function-ref name="get" scoped="" ref="0x2b88846abaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88846abc78"/>
        <function-ref name="set" scoped="" ref="0x2b88846abe00"/>
        <function-ref name="clr" scoped="" ref="0x2b88846aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88846a8100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88846a8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88846a8450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846a85d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88846a8760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846a88e8"/>
        <function-ref name="get" scoped="" ref="0x2b88846a8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88846a8bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88846a8d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88846a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88846a5100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88846a5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88846a5450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846a55d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88846a5760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846a58e8"/>
        <function-ref name="get" scoped="" ref="0x2b88846a5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88846a5bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88846a5d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88846a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88846a2100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88846a2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88846a2450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846a25d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88846a2760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846a28e8"/>
        <function-ref name="get" scoped="" ref="0x2b88846a2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88846a2bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88846a2d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88846a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b888469f100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b888469f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888469f450"/>
        <function-ref name="isInput" scoped="" ref="0x2b888469f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b888469f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888469f8e8"/>
        <function-ref name="get" scoped="" ref="0x2b888469fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888469fbf8"/>
        <function-ref name="set" scoped="" ref="0x2b888469fd80"/>
        <function-ref name="clr" scoped="" ref="0x2b888469e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b888469c100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b888469c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888469c450"/>
        <function-ref name="isInput" scoped="" ref="0x2b888469c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b888469c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888469c8e8"/>
        <function-ref name="get" scoped="" ref="0x2b888469ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888469cbf8"/>
        <function-ref name="set" scoped="" ref="0x2b888469cd80"/>
        <function-ref name="clr" scoped="" ref="0x2b888469b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8884699100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8884699100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8884699450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846995d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884699760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846998e8"/>
        <function-ref name="get" scoped="" ref="0x2b8884699a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8884699bf8"/>
        <function-ref name="set" scoped="" ref="0x2b8884699d80"/>
        <function-ref name="clr" scoped="" ref="0x2b8884698020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8884696100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8884696100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8884696450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846965d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884696760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846968e8"/>
        <function-ref name="get" scoped="" ref="0x2b8884696a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8884696bf8"/>
        <function-ref name="set" scoped="" ref="0x2b8884696d80"/>
        <function-ref name="clr" scoped="" ref="0x2b8884695020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b8882adabd8" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b8882adabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ad9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ad91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ad9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ad94b8"/>
        <function-ref name="get" scoped="" ref="0x2b8882ad9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ad97c8"/>
        <function-ref name="set" scoped="" ref="0x2b8882ad9950"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ad9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b8882aef020" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b8882aef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882aef370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882aef4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882aef680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882aef808"/>
        <function-ref name="get" scoped="" ref="0x2b8882aef990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882aefb18"/>
        <function-ref name="set" scoped="" ref="0x2b8882aefca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882aefe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b8882adc930" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b8882adc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882adcc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882adce08"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882adb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882adb1a8"/>
        <function-ref name="get" scoped="" ref="0x2b8882adb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882adb4b8"/>
        <function-ref name="set" scoped="" ref="0x2b8882adb640"/>
        <function-ref name="clr" scoped="" ref="0x2b8882adb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b8882ad9d60" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b8882ad9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ad80d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ad8260"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ad83e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ad8570"/>
        <function-ref name="get" scoped="" ref="0x2b8882ad86f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ad8880"/>
        <function-ref name="set" scoped="" ref="0x2b8882ad8a08"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ad8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b8882aee120" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b8882aee120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882aee470"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882aee5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882aee780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882aee908"/>
        <function-ref name="get" scoped="" ref="0x2b8882aeea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882aeec18"/>
        <function-ref name="set" scoped="" ref="0x2b8882aeeda0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882aed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b8882adba50" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b8882adba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882adbda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ada020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ada1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ada330"/>
        <function-ref name="get" scoped="" ref="0x2b8882ada4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ada640"/>
        <function-ref name="set" scoped="" ref="0x2b8882ada7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ada950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b8882ad8e18" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b8882ad8e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882af01a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882af0330"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882af04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882af0640"/>
        <function-ref name="get" scoped="" ref="0x2b8882af07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882af0950"/>
        <function-ref name="set" scoped="" ref="0x2b8882af0ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882af0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b8882aed2a8" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b8882aed2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882aed5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882aed780"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882aed908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882aeda90"/>
        <function-ref name="get" scoped="" ref="0x2b8882aedc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882aedda0"/>
        <function-ref name="set" scoped="" ref="0x2b8882aec020"/>
        <function-ref name="clr" scoped="" ref="0x2b8882aec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88846d6180" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88846d6180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88846d64d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846d6658"/>
        <function-ref name="toggle" scoped="" ref="0x2b88846d67e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846d6968"/>
        <function-ref name="get" scoped="" ref="0x2b88846d6af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88846d6c78"/>
        <function-ref name="set" scoped="" ref="0x2b88846d6e00"/>
        <function-ref name="clr" scoped="" ref="0x2b88846d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88846d3100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88846d3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88846d3450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846d35d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88846d3760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846d38e8"/>
        <function-ref name="get" scoped="" ref="0x2b88846d3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88846d3bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88846d3d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88846d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88846d0100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88846d0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88846d0450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846d05d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88846d0760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846d08e8"/>
        <function-ref name="get" scoped="" ref="0x2b88846d0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88846d0bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88846d0d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88846cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88846cd100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88846cd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88846cd450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846cd5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88846cd760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846cd8e8"/>
        <function-ref name="get" scoped="" ref="0x2b88846cda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88846cdbf8"/>
        <function-ref name="set" scoped="" ref="0x2b88846cdd80"/>
        <function-ref name="clr" scoped="" ref="0x2b88846cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88846ca100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88846ca100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88846ca450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846ca5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88846ca760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846ca8e8"/>
        <function-ref name="get" scoped="" ref="0x2b88846caa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88846cabf8"/>
        <function-ref name="set" scoped="" ref="0x2b88846cad80"/>
        <function-ref name="clr" scoped="" ref="0x2b88846c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88846c7100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88846c7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88846c7450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846c75d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88846c7760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846c78e8"/>
        <function-ref name="get" scoped="" ref="0x2b88846c7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88846c7bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88846c7d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88846c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88846c4100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88846c4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88846c4450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846c45d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88846c4760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846c48e8"/>
        <function-ref name="get" scoped="" ref="0x2b88846c4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88846c4bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88846c4d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88846c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b88846c1100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b88846c1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88846c1450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88846c15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88846c1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88846c18e8"/>
        <function-ref name="get" scoped="" ref="0x2b88846c1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88846c1bf8"/>
        <function-ref name="set" scoped="" ref="0x2b88846c1d80"/>
        <function-ref name="clr" scoped="" ref="0x2b88846c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b8882ae4430" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b8882ae4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ae4780"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ae4908"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ae4a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ae4c18"/>
        <function-ref name="get" scoped="" ref="0x2b8882ae4da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882afd020"/>
        <function-ref name="set" scoped="" ref="0x2b8882afd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882afd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b8882afb8c8" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b8882afb8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882afbc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882afbda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882afa020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882afa1a8"/>
        <function-ref name="get" scoped="" ref="0x2b8882afa330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882afa4b8"/>
        <function-ref name="set" scoped="" ref="0x2b8882afa640"/>
        <function-ref name="clr" scoped="" ref="0x2b8882afa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b8882ae71e8" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b8882ae71e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ae7538"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ae76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ae7848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ae79d0"/>
        <function-ref name="get" scoped="" ref="0x2b8882ae7b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ae7ce0"/>
        <function-ref name="set" scoped="" ref="0x2b8882ae7e68"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ae6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b8882afd5b8" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b8882afd5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882afd908"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882afda90"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882afdc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882afdda0"/>
        <function-ref name="get" scoped="" ref="0x2b8882afc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882afc1a8"/>
        <function-ref name="set" scoped="" ref="0x2b8882afc330"/>
        <function-ref name="clr" scoped="" ref="0x2b8882afc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b8882afaa50" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b8882afaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882afada0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882af9020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882af91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882af9330"/>
        <function-ref name="get" scoped="" ref="0x2b8882af94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882af9640"/>
        <function-ref name="set" scoped="" ref="0x2b8882af97c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882af9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b8882ae62a8" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b8882ae62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882ae65f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882ae6780"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882ae6908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882ae6a90"/>
        <function-ref name="get" scoped="" ref="0x2b8882ae6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882ae6da0"/>
        <function-ref name="set" scoped="" ref="0x2b8882ae4020"/>
        <function-ref name="clr" scoped="" ref="0x2b8882ae41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b8882afc740" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b8882afc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882afca90"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882afcc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882afcda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882afb020"/>
        <function-ref name="get" scoped="" ref="0x2b8882afb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882afb330"/>
        <function-ref name="set" scoped="" ref="0x2b8882afb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882afb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b8882af9bd8" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b8882af9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882af8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882af81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882af8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882af84b8"/>
        <function-ref name="get" scoped="" ref="0x2b8882af8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882af87c8"/>
        <function-ref name="set" scoped="" ref="0x2b8882af8950"/>
        <function-ref name="clr" scoped="" ref="0x2b8882af8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8884784180" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8884784180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88847844d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8884784658"/>
        <function-ref name="toggle" scoped="" ref="0x2b88847847e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8884784968"/>
        <function-ref name="get" scoped="" ref="0x2b8884784af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8884784c78"/>
        <function-ref name="set" scoped="" ref="0x2b8884784e00"/>
        <function-ref name="clr" scoped="" ref="0x2b8884783020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8884781100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8884781100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8884781450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88847815d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884781760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88847818e8"/>
        <function-ref name="get" scoped="" ref="0x2b8884781a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8884781bf8"/>
        <function-ref name="set" scoped="" ref="0x2b8884781d80"/>
        <function-ref name="clr" scoped="" ref="0x2b8884780020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b888477e100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b888477e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888477e450"/>
        <function-ref name="isInput" scoped="" ref="0x2b888477e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b888477e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888477e8e8"/>
        <function-ref name="get" scoped="" ref="0x2b888477ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888477ebf8"/>
        <function-ref name="set" scoped="" ref="0x2b888477ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b888477d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b888477b100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b888477b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888477b450"/>
        <function-ref name="isInput" scoped="" ref="0x2b888477b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b888477b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888477b8e8"/>
        <function-ref name="get" scoped="" ref="0x2b888477ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888477bbf8"/>
        <function-ref name="set" scoped="" ref="0x2b888477bd80"/>
        <function-ref name="clr" scoped="" ref="0x2b888477a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8884778100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8884778100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8884778450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88847785d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884778760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88847788e8"/>
        <function-ref name="get" scoped="" ref="0x2b8884778a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8884778bf8"/>
        <function-ref name="set" scoped="" ref="0x2b8884778d80"/>
        <function-ref name="clr" scoped="" ref="0x2b8884777020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8884775100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8884775100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8884775450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88847755d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884775760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88847758e8"/>
        <function-ref name="get" scoped="" ref="0x2b8884775a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8884775bf8"/>
        <function-ref name="set" scoped="" ref="0x2b8884775d80"/>
        <function-ref name="clr" scoped="" ref="0x2b8884774020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8884772100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8884772100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8884772450"/>
        <function-ref name="isInput" scoped="" ref="0x2b88847725d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884772760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88847728e8"/>
        <function-ref name="get" scoped="" ref="0x2b8884772a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8884772bf8"/>
        <function-ref name="set" scoped="" ref="0x2b8884772d80"/>
        <function-ref name="clr" scoped="" ref="0x2b8884771020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b888476f100" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b888476f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888476f450"/>
        <function-ref name="isInput" scoped="" ref="0x2b888476f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b888476f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888476f8e8"/>
        <function-ref name="get" scoped="" ref="0x2b888476fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888476fbf8"/>
        <function-ref name="set" scoped="" ref="0x2b888476fd80"/>
        <function-ref name="clr" scoped="" ref="0x2b888476e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8882af1ac0" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8882af1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882af1e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882b10020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882b101a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882b10330"/>
        <function-ref name="get" scoped="" ref="0x2b8882b104b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882b10640"/>
        <function-ref name="set" scoped="" ref="0x2b8882b107c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882b10950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8882b0cdb8" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8882b0cdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882b0b170"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882b0b2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882b0b480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882b0b608"/>
        <function-ref name="get" scoped="" ref="0x2b8882b0b790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882b0b918"/>
        <function-ref name="set" scoped="" ref="0x2b8882b0baa0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882b0bc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8882b203e0" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8882b203e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882b20730"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882b208b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882b20a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882b20bc8"/>
        <function-ref name="get" scoped="" ref="0x2b8882b20d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882b1f020"/>
        <function-ref name="set" scoped="" ref="0x2b8882b1f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882b1f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8882b1c7e8" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8882b1c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882b1cb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882b1ccc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882b1ce48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882b1b020"/>
        <function-ref name="get" scoped="" ref="0x2b8882b1b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882b1b330"/>
        <function-ref name="set" scoped="" ref="0x2b8882b1b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882b1b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8882b31c38" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8882b31c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882b30020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882b301a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882b30330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882b304b8"/>
        <function-ref name="get" scoped="" ref="0x2b8882b30640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882b307c8"/>
        <function-ref name="set" scoped="" ref="0x2b8882b30950"/>
        <function-ref name="clr" scoped="" ref="0x2b8882b30ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8882b2b020" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8882b2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882b2b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882b2b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882b2b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882b2b808"/>
        <function-ref name="get" scoped="" ref="0x2b8882b2b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882b2bb18"/>
        <function-ref name="set" scoped="" ref="0x2b8882b2bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882b2be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8882b27480" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8882b27480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882b277d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882b27958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882b27ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882b27c68"/>
        <function-ref name="get" scoped="" ref="0x2b8882b27df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882b26020"/>
        <function-ref name="set" scoped="" ref="0x2b8882b261a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882b26330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8882b3c7e8" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8882b3c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882b3cb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882b3ccc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882b3ce48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882b3b020"/>
        <function-ref name="get" scoped="" ref="0x2b8882b3b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882b3b330"/>
        <function-ref name="set" scoped="" ref="0x2b8882b3b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882b3b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8882b38970" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8882b38970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882b38cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882b38e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882b36020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882b361a8"/>
        <function-ref name="get" scoped="" ref="0x2b8882b36330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882b364b8"/>
        <function-ref name="set" scoped="" ref="0x2b8882b36640"/>
        <function-ref name="clr" scoped="" ref="0x2b8882b367c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8882b33ab0" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8882b33ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882b33e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882b32020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882b321a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882b32330"/>
        <function-ref name="get" scoped="" ref="0x2b8882b324b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882b32640"/>
        <function-ref name="set" scoped="" ref="0x2b8882b327c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8882b32950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8882b49c38" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8882b49c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882b48020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882b481a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882b48330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882b484b8"/>
        <function-ref name="get" scoped="" ref="0x2b8882b48640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882b487c8"/>
        <function-ref name="set" scoped="" ref="0x2b8882b48950"/>
        <function-ref name="clr" scoped="" ref="0x2b8882b48ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8882b44020" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8882b44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882b44370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882b444f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882b44680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882b44808"/>
        <function-ref name="get" scoped="" ref="0x2b8882b44990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882b44b18"/>
        <function-ref name="set" scoped="" ref="0x2b8882b44ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882b44e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8882b3f180" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8882b3f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882b3f4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882b3f658"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882b3f7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882b3f968"/>
        <function-ref name="get" scoped="" ref="0x2b8882b3faf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882b3fc78"/>
        <function-ref name="set" scoped="" ref="0x2b8882b3fe00"/>
        <function-ref name="clr" scoped="" ref="0x2b8882b5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8882b8a1b8" loc="27:/opt/tinyos-2_1_2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8882b8a1b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b88826f26f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b88826f26f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882b8a508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b8882b8a7e8" loc="28:/opt/tinyos-2_1_2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8882b8a7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b8882b8ab38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b8882b8acc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b8882b8ae48"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b8882b89020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b8882b891a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b8882ba1560" loc="60:/opt/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b8882ba1560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882ba18b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b88829fbe20" loc="57:/opt/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b88829fbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b8882ba21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b8882ba2e68" loc="59:/opt/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b8882ba2e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882ba11e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b8882ba2490" loc="58:/opt/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b8882ba2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882ba27e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b8882ba2968"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b8882ba2af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b88826fa728" loc="48:/opt/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b88826fa728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b88826faa78"/>
        <function-ref name="runTask" scoped="" ref="0x2b88826fac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b88826f9be8" loc="47:/opt/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b88826f9be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88826f1020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b88826f11a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b88826f1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b88827b5b08" loc="56:/opt/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b88827b5b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b88827b5e58"/>
        <function-ref name="runTask" scoped="" ref="0x2b88827b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b88827b2020" loc="57:/opt/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b88827b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b88827b2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b88827b6c00" loc="55:/opt/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b88827b6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88827b5020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b88827b51a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b88827b5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b88827d67b8" loc="54:/opt/tinyos-2_1_2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b88827d67b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b88827d6b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b8882703dc8" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b8882703dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b88827cc170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b88827d7240" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b88827d7240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b88827d7590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVecUtils" ref="0x2b8882bb42c0" loc="42:../../Deluge/BitVecUtilsC.nc">
      <component-ref qname="BitVecUtilsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x2b8882bb42c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x2b8882bb4610"/>
        <function-ref name="printBitVec" scoped="" ref="0x2b8882bb4798"/>
        <function-ref name="countOnes" scoped="" ref="0x2b8882bb4920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8882bc2a60" loc="45:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugePageTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8882bc2a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8882d6dd60"/>
        <function-ref name="fired" scoped="" ref="0x2b8882d6f470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8882d6d1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8882d6fd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b8882d6c648"/>
        <function-ref name="gett0" scoped="" ref="0x2b8882d6c1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8882d6f8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8882d70620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8882d6d790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8882d70ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b8882d6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b8882bb91c8" loc="49:/opt/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b8882bb91c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8882bd25f0"/>
        <function-ref name="fired" scoped="" ref="0x2b8882bd4af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8882bd38c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8882bd3470"/>
        <function-ref name="getdt" scoped="" ref="0x2b8882bd1020"/>
        <function-ref name="gett0" scoped="" ref="0x2b8882bd2a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8882bd3020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8882bb9d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8882bd2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8882bd4200"/>
        <function-ref name="stop" scoped="" ref="0x2b8882bd46a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b8882bcc020" loc="46:/opt/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b8882bcc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8882bc82b8"/>
        <function-ref name="fired" scoped="" ref="0x2b8882bcb978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8882bc96c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8882bc9278"/>
        <function-ref name="getdt" scoped="" ref="0x2b8882bc8b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b8882bc8708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8882bcbdc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8882bccb68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8882bc9c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8882bcb088"/>
        <function-ref name="stop" scoped="" ref="0x2b8882bcb528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b8882be1590" loc="47:/opt/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b8882be1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8882be3150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8882bcd1f8" loc="45:/opt/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8882bcd1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882bcd548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b8882bece40" loc="29:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b8882bece40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8882bf1be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8882bf0548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8882bf00c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b8882bf09d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8882be2b88" loc="27:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8882be2b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882bde020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b8882bd6748" loc="28:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b8882bd6748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8882bf2020"/>
        <function-ref name="fired" scoped="" ref="0x2b8882bf3020"/>
        <function-ref name="startAt" scoped="" ref="0x2b8882bf3930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8882bf34a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8882bf24a8"/>
        <function-ref name="start" scoped="" ref="0x2b8882bdd578"/>
        <function-ref name="stop" scoped="" ref="0x2b8882bdda50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b8882cd2998" loc="26:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b8882cd2998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8882cf0020"/>
        <function-ref name="fired" scoped="" ref="0x2b8882cf10c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b8882cf19d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8882cf1548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8882cf04a8"/>
        <function-ref name="start" scoped="" ref="0x2b8882cd0730"/>
        <function-ref name="stop" scoped="" ref="0x2b8882cd0c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8882cd21f0" loc="25:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8882cd21f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b88826f2388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b88826f2388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882cd2540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8882cf0a90" loc="27:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8882cf0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8882cee828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8882ced190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8882ceecb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b8882ced618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b8884849978" loc="31:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b8884849978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b8884849cc8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b8884849e50"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b8884848020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b88848481a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b8884848330"/>
        <function-ref name="setControl" scoped="" ref="0x2b88848484b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b88848554f8" loc="26:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b88848554f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8884852c88"/>
        <function-ref name="fired" scoped="" ref="0x2b8884853d08"/>
        <function-ref name="startAt" scoped="" ref="0x2b8884852680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b88848521f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8884851150"/>
        <function-ref name="start" scoped="" ref="0x2b88848533a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8884853880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8884856ce8" loc="25:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8884856ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88848550a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8884851738" loc="27:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8884851738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884850578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b888484e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8884850a00"/>
        <function-ref name="overflow" scoped="" ref="0x2b888484e4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b88848448c0" loc="33:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b88848448c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b8884844c10"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b8884844d98"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b8884843020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b88848431a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b8884843330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b88848434b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b8884848848" loc="32:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b8884848848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b8884844020"/>
        <function-ref name="fired" scoped="" ref="0x2b8884847d70"/>
        <function-ref name="get" scoped="" ref="0x2b8884847410"/>
        <function-ref name="reset" scoped="" ref="0x2b8884846230"/>
        <function-ref name="isOn" scoped="" ref="0x2b88848444a8"/>
        <function-ref name="set" scoped="" ref="0x2b8884847898"/>
        <function-ref name="start" scoped="" ref="0x2b88848466b8"/>
        <function-ref name="stop" scoped="" ref="0x2b8884846b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b888484ea28" loc="30:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b888484ea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b888484bb80"/>
        <function-ref name="test" scoped="" ref="0x2b888484b270"/>
        <function-ref name="get" scoped="" ref="0x2b888484d5d8"/>
        <function-ref name="setScale" scoped="" ref="0x2b8884849088"/>
        <function-ref name="getScale" scoped="" ref="0x2b8884849560"/>
        <function-ref name="reset" scoped="" ref="0x2b888484c4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b888484c020"/>
        <function-ref name="isOn" scoped="" ref="0x2b888484b6f8"/>
        <function-ref name="set" scoped="" ref="0x2b888484da60"/>
        <function-ref name="start" scoped="" ref="0x2b888484c930"/>
        <function-ref name="stop" scoped="" ref="0x2b888484cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b8882c7e020" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b8882c7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b8882c7e370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b8882c7e4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b8882c7e680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b8882c7e808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b8882c7e990"/>
        <function-ref name="setControl" scoped="" ref="0x2b8882c7eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b8882c79228" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b8882c79228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b8882c79578"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b8882c79700"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b8882c79888"/>
        <function-ref name="countBusy" scoped="" ref="0x2b8882c79a10"/>
        <function-ref name="getAssr" scoped="" ref="0x2b8882c79b98"/>
        <function-ref name="setAssr" scoped="" ref="0x2b8882c79d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b8882c7d020" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b8882c7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b8882c7a7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b8882c7b560"/>
        <function-ref name="get" scoped="" ref="0x2b8882c7dba0"/>
        <function-ref name="reset" scoped="" ref="0x2b8882c7b9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b8882c7ac30"/>
        <function-ref name="set" scoped="" ref="0x2b8882c7b088"/>
        <function-ref name="start" scoped="" ref="0x2b8882c7be70"/>
        <function-ref name="stop" scoped="" ref="0x2b8882c7a320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8882c67de8" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8882c67de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8882c5f0f8"/>
        <function-ref name="test" scoped="" ref="0x2b8882c60798"/>
        <function-ref name="get" scoped="" ref="0x2b8882c63a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b8882c5f580"/>
        <function-ref name="getScale" scoped="" ref="0x2b8882c5fa58"/>
        <function-ref name="reset" scoped="" ref="0x2b8882c62980"/>
        <function-ref name="overflow" scoped="" ref="0x2b8882c624f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b8882c60c20"/>
        <function-ref name="set" scoped="" ref="0x2b8882c62020"/>
        <function-ref name="start" scoped="" ref="0x2b8882c62e08"/>
        <function-ref name="stop" scoped="" ref="0x2b8882c60310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b8882c70160" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b8882c70160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b8882c704b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b8882c70638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b8882c707c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b8882c70948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b8882c70ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b8882c70c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b8882c8b268" loc="52:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b8882c8b268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b8882c8b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b8882c8b968" loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b8882c8b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b8882c8bcb8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b8882c8be40"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b8882c8a020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b8882c8a1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b8882c8a330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b8882c8a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b8882c8e190" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b8882c8e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b8882c8c930"/>
        <function-ref name="fired" scoped="" ref="0x2b8882c8d6d0"/>
        <function-ref name="get" scoped="" ref="0x2b8882c8ed10"/>
        <function-ref name="reset" scoped="" ref="0x2b8882c8db58"/>
        <function-ref name="isOn" scoped="" ref="0x2b8882c8cdb8"/>
        <function-ref name="set" scoped="" ref="0x2b8882c8d1f8"/>
        <function-ref name="start" scoped="" ref="0x2b8882c8c020"/>
        <function-ref name="stop" scoped="" ref="0x2b8882c8c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8882c750f8" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8882c750f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8882c71270"/>
        <function-ref name="test" scoped="" ref="0x2b8882c72930"/>
        <function-ref name="get" scoped="" ref="0x2b8882c75c78"/>
        <function-ref name="setScale" scoped="" ref="0x2b8882c716f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b8882c71bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b8882c73a90"/>
        <function-ref name="overflow" scoped="" ref="0x2b8882c73608"/>
        <function-ref name="isOn" scoped="" ref="0x2b8882c72db8"/>
        <function-ref name="set" scoped="" ref="0x2b8882c73130"/>
        <function-ref name="start" scoped="" ref="0x2b8882c72020"/>
        <function-ref name="stop" scoped="" ref="0x2b8882c724a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b8882d24cf0" loc="74:/opt/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b8882d24cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8882d220a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8882d22228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b8882d06c70" loc="49:/opt/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b8882d06c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8882d24410"/>
        <function-ref name="fired" scoped="" ref="0x2b8882d034a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b8882d03db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8882d03930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8882d24898"/>
        <function-ref name="start" scoped="" ref="0x2b8882d049f0"/>
        <function-ref name="stop" scoped="" ref="0x2b8882d03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8882d0bab0" loc="48:/opt/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8882d0bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8882d07d60"/>
        <function-ref name="fired" scoped="" ref="0x2b8882d08470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8882d071c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8882d08d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b8882d06648"/>
        <function-ref name="gett0" scoped="" ref="0x2b8882d061f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8882d088c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8882d09620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8882d07790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8882d09ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b8882d08020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b8882d60930" loc="71:/opt/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b8882d60930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8882d60c80"/>
        <function-ref name="runTask" scoped="" ref="0x2b8882d60e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b8882d66858" loc="49:/opt/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b8882d66858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8882d62bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b8882d631c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8882d62020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8882d63a60"/>
        <function-ref name="getdt" scoped="" ref="0x2b8882d604d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b8882d60088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8882d63610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8882d643d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8882d625f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8882d64878"/>
        <function-ref name="stop" scoped="" ref="0x2b8882d64d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8882d485e0" loc="48:/opt/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8882d485e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8882d67988"/>
        <function-ref name="fired" scoped="" ref="0x2b8882d69020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8882d69d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8882d69900"/>
        <function-ref name="getdt" scoped="" ref="0x2b8882d662d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b8882d67df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8882d69490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8882d6a198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8882d67398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8882d6a658"/>
        <function-ref name="stop" scoped="" ref="0x2b8882d6ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b8882d5c128" loc="48:/opt/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b8882d5c128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8882d5cca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b8882d77330" loc="49:/opt/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8882d77330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8882d760c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8882d769d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8882d76548"/>
        <function-ref name="overflow" scoped="" ref="0x2b8882d76e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Crc" ref="0x2b8882d8f020" loc="46:/opt/tinyos-2_1_2/tos/system/CrcC.nc">
      <component-ref qname="CrcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x2b8882d8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x2b8882d8f370"/>
        <function-ref name="crc16" scoped="" ref="0x2b8882d8f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b88838d0080" loc="49:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b88838d0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88838d03d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88838d0558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88838d06e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b88838d0868"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88838d09f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b88838d0c38" loc="50:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b88838d0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88838ce020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b88838ce1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88838ce330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88838ce4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b88838ce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b88838ce888" loc="51:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b88838ce888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b88838cebd8"/>
        <function-ref name="source" scoped="" ref="0x2b88838ced60"/>
        <function-ref name="address" scoped="" ref="0x2b88838cd020"/>
        <function-ref name="destination" scoped="" ref="0x2b88838cd1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b88838cd330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b88838cd4b8"/>
        <function-ref name="type" scoped="" ref="0x2b88838cd640"/>
        <function-ref name="setType" scoped="" ref="0x2b88838cd7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b88838cd950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b88838cdad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b88838cdc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b88838cc020" loc="52:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b88838cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b88838cc370"/>
        <function-ref name="noAck" scoped="" ref="0x2b88838cc4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b88838cc680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8884876cd0" loc="49:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8884876cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88848750a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884875228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88848753b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884875538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88848756c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8884875908" loc="50:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8884875908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8884875c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8884875de0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884874020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88848741a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8884874330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8884874578" loc="51:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884874578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b88848748c8"/>
        <function-ref name="source" scoped="" ref="0x2b8884874a50"/>
        <function-ref name="address" scoped="" ref="0x2b8884874bd8"/>
        <function-ref name="destination" scoped="" ref="0x2b8884874d60"/>
        <function-ref name="setSource" scoped="" ref="0x2b8884873020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b88848731a8"/>
        <function-ref name="type" scoped="" ref="0x2b8884873330"/>
        <function-ref name="setType" scoped="" ref="0x2b88848734b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8884873640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b88848737c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884873950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b8884873bd8" loc="52:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b8884873bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8884872020"/>
        <function-ref name="noAck" scoped="" ref="0x2b88848721a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8884872330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b88848696c0" loc="44:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b88848696c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884869a10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884869b98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884869d20"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884868020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88848681a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b8884868450" loc="46:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8884868450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88848687a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884868928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884868ab0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884868c38"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884868dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b8884867060" loc="47:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884867060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b88848673b0"/>
        <function-ref name="source" scoped="" ref="0x2b8884867538"/>
        <function-ref name="address" scoped="" ref="0x2b88848676c0"/>
        <function-ref name="destination" scoped="" ref="0x2b8884867848"/>
        <function-ref name="setSource" scoped="" ref="0x2b88848679d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8884867b58"/>
        <function-ref name="type" scoped="" ref="0x2b8884867ce0"/>
        <function-ref name="setType" scoped="" ref="0x2b8884867e68"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8884865020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b88848651a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884865330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8882de54f8" loc="43:/opt/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8882de54f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8882de5848"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8882de59d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8882de5b58"/>
        <function-ref name="cancel" scoped="" ref="0x2b8882de5ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8882de5e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b8882e346f8" loc="48:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8882e346f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8882e34a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8882e34bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8882e34d78"/>
        <function-ref name="cancel" scoped="" ref="0x2b8882e33020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8882e331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8882e35920" loc="46:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8882e35920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8882e35c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8882e35e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8882e34020"/>
        <function-ref name="cancel" scoped="" ref="0x2b8882e341a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8882e34330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b8882e32a10" loc="50:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8882e32a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8882e32d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8882e31020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8882e311a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8882e31330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8882e314b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b8882e31780" loc="169:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b8882e31780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8882e31ad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8882e31c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b8882e30020" loc="126:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b8882e30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8882e30370"/>
        <function-ref name="runTask" scoped="" ref="0x2b8882e304f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b8882e333f0" loc="49:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8882e333f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8882e33740"/>
        <function-ref name="source" scoped="" ref="0x2b8882e338c8"/>
        <function-ref name="address" scoped="" ref="0x2b8882e33a50"/>
        <function-ref name="destination" scoped="" ref="0x2b8882e33bd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b8882e33d60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8882e32020"/>
        <function-ref name="type" scoped="" ref="0x2b8882e321a8"/>
        <function-ref name="setType" scoped="" ref="0x2b8882e32330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8882e324b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8882e32640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8882e327c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8882e261e0" loc="55:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8882e261e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8882e26530"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8882e266b8"/>
        <function-ref name="start" scoped="" ref="0x2b8882e26840"/>
        <function-ref name="stop" scoped="" ref="0x2b8882e269c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8882e2b1c8" loc="57:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8882e2b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8882e2b518"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8882e2b6a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8882e2b828"/>
        <function-ref name="cancel" scoped="" ref="0x2b8882e2b9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8882e2bb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b8882e2ae48" loc="59:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b8882e2ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8882e251c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8882e25448" loc="61:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8882e25448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8882e25798"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8882e25920"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8882e25aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8882e25c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8882e25db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b8882e3f4a8" loc="64:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b8882e3f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b8882e45900"/>
        <function-ref name="clear" scoped="" ref="0x2b8882e3e020"/>
        <function-ref name="isValid" scoped="" ref="0x2b8882e45220"/>
        <function-ref name="set" scoped="" ref="0x2b8882e3e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b8882e5ab98" loc="66:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b8882e5ab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b8882e38020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b8882e381a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b8882e38330"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b8882e384b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8882e2a300" loc="58:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8882e2a300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8882e2a650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b8882e487e0" loc="63:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882e487e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8882e48b30"/>
        <function-ref name="noAck" scoped="" ref="0x2b8882e48cb8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8882e48e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8882e49080" loc="62:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8882e49080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8882e493d0"/>
        <function-ref name="source" scoped="" ref="0x2b8882e49558"/>
        <function-ref name="address" scoped="" ref="0x2b8882e496e0"/>
        <function-ref name="destination" scoped="" ref="0x2b8882e49868"/>
        <function-ref name="setSource" scoped="" ref="0x2b8882e499f0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8882e49b78"/>
        <function-ref name="type" scoped="" ref="0x2b8882e49d00"/>
        <function-ref name="setType" scoped="" ref="0x2b8882e48020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8882e481a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8882e48330"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8882e484b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b8882e3d378" loc="65:/opt/tinyos-2_1_2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b8882e3d378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b8882e3b7d8"/>
        <function-ref name="clear" scoped="" ref="0x2b8882e3a020"/>
        <function-ref name="isValid" scoped="" ref="0x2b8882e3b0f8"/>
        <function-ref name="set" scoped="" ref="0x2b8882e3a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8882e4d818" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8882e4d818"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8882e4db68"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8882e4dcf0"/>
        <function-ref name="start" scoped="" ref="0x2b8882e4de78"/>
        <function-ref name="stop" scoped="" ref="0x2b8882e4c030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b8882e83b48" loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b8882e83b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b8882e64020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b8882e641a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b8882e64330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b8882e644b8"/>
        <function-ref name="setCca" scoped="" ref="0x2b8882e64640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b8882e647c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b8882e77658" loc="67:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b8882e77658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b8882e77aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8882e6f0c0" loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8882e6f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8882e6f410"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8882e6f598"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8882e6f720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8882e6f8a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8882e6fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8882e4c7a8" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8882e4c7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8882e4caf8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8882e4cc80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8882e4ce08"/>
        <function-ref name="cancel" scoped="" ref="0x2b8882e4a020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8882e4a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b8882e71498" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b8882e71498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8882e717e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b8882e67e18" loc="61:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b8882e67e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b8882e6e1a8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b8882e6e330"/>
        <function-ref name="getRssi" scoped="" ref="0x2b8882e6e4b8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b8882e6e640"/>
        <function-ref name="getPower" scoped="" ref="0x2b8882e6e7c8"/>
        <function-ref name="getLqi" scoped="" ref="0x2b8882e6e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b8882e64ac0" loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b8882e64ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b8882e64e10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b8882e62020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b8882e621a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b8882e62330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8882e4a928" loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8882e4a928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8882e4ac78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b8882e6ec78" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882e6ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8882e6d020"/>
        <function-ref name="noAck" scoped="" ref="0x2b8882e6d1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8882e6d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b8882e7ba98" loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b8882e7ba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b8882e7bde8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b8882e82020"/>
        <function-ref name="getRetries" scoped="" ref="0x2b8882e821a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b8882e82330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b8882e824b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8882e71a88" loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8882e71a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8882e71dd8"/>
        <function-ref name="source" scoped="" ref="0x2b8882e70020"/>
        <function-ref name="address" scoped="" ref="0x2b8882e701a8"/>
        <function-ref name="destination" scoped="" ref="0x2b8882e70330"/>
        <function-ref name="setSource" scoped="" ref="0x2b8882e704b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8882e70640"/>
        <function-ref name="type" scoped="" ref="0x2b8882e707c8"/>
        <function-ref name="setType" scoped="" ref="0x2b8882e70950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8882e70ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8882e70c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8882e70de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b8882e63ca8" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8882e63ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b8882e65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8882e743a0" loc="43:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8882e743a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8882e746f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8882e74878"/>
        <function-ref name="start" scoped="" ref="0x2b8882e74a00"/>
        <function-ref name="stop" scoped="" ref="0x2b8882e74b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b8882e92e30" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8882e92e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b8882e911a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b8882e90020" loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b8882e90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b8882e90370"/>
        <function-ref name="setRetries" scoped="" ref="0x2b8882e904f8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b8882e90680"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b8882e90808"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b8882e90990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b8882e93678" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b8882e93678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b8882e939c8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b8882e93b50"/>
        <function-ref name="getRssi" scoped="" ref="0x2b8882e93cd8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b8882e93e60"/>
        <function-ref name="getPower" scoped="" ref="0x2b8882e92020"/>
        <function-ref name="getLqi" scoped="" ref="0x2b8882e921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b8882e94340" loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2b8882e94340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8882e94690"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8882e94818"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8882e949a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8882e94b28"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8882e94cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b8882e914a0" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b8882e914a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b8882e917f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b8882e91978"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b8882e91b00"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b8882e91c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b8882e96e58" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b8882e96e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8882e951e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b8882e924d0" loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8882e924d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8882e92820"/>
        <function-ref name="noAck" scoped="" ref="0x2b8882e929a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8882e92b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8882e724f8" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8882e724f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8882e72848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8882e729d0"/>
        <function-ref name="request" scoped="" ref="0x2b8882e72b58"/>
        <function-ref name="granted" scoped="" ref="0x2b8882e72ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8882e72e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b8882e961a8" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b8882e961a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8882e964f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8882e96680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8882e96808"/>
        <function-ref name="cancel" scoped="" ref="0x2b8882e96990"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8882e96b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b8882e95518" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2b8882e95518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8882e95868"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8882e959f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8882e95b78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8882e95d00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8882e94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b8882e93060" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2b8882e93060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8882e933b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8882e8f6a0" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8882e8f6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8882e8f9f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8882e8fb78"/>
        <function-ref name="start" scoped="" ref="0x2b8882e8fd00"/>
        <function-ref name="stop" scoped="" ref="0x2b8882e8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b8882e8b678" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b8882e8b678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b8882e8b9c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b8882e8bb50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b8882e8bcd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b8882e8be60"/>
        <function-ref name="setCca" scoped="" ref="0x2b8882e8a020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b8882e8a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8882e8c2d8" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8882e8c2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8882e8c628"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8882e8c7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8882e8c938"/>
        <function-ref name="cancel" scoped="" ref="0x2b8882e8cac0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8882e8cc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8882e8b020" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8882e8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8882e8b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8882e87140" loc="39:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8882e87140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8882e87490"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8882e87618"/>
        <function-ref name="start" scoped="" ref="0x2b8882e877a0"/>
        <function-ref name="stop" scoped="" ref="0x2b8882e87928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b8882e86948" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b8882e86948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b8882e86c98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b8882e86e20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b8882ead020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b8882ead1a8"/>
        <function-ref name="setCca" scoped="" ref="0x2b8882ead330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b8882ead4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b8882ea9a70" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2b8882ea9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b8882ea9dc0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b8882ea3020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b8882ea31a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b8882ea3330"/>
        <function-ref name="setCca" scoped="" ref="0x2b8882ea34b8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b8882ea3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b8882ec17c0" loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b8882ec17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b8882ec1b10"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b8882ec1c98"/>
        <function-ref name="getRssi" scoped="" ref="0x2b8882ec1e20"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b8882ec0020"/>
        <function-ref name="getPower" scoped="" ref="0x2b8882ec01a8"/>
        <function-ref name="getLqi" scoped="" ref="0x2b8882ec0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2b8882e9bcc8" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b8882e9bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8882ea90a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8882ea9228"/>
        <function-ref name="modify" scoped="" ref="0x2b8882ea93b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8882ea9538"/>
        <function-ref name="resend" scoped="" ref="0x2b8882ea96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8882e87be0" loc="40:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8882e87be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8882e86020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8882e861a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8882e86330"/>
        <function-ref name="cancel" scoped="" ref="0x2b8882e864b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8882e86640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b8882ea3908" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b8882ea3908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b8882ea3c58"/>
        <function-ref name="rand32" scoped="" ref="0x2b8882ea3de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b8882ea1500" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b8882ea1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8882ea1850"/>
        <function-ref name="stop" scoped="" ref="0x2b8882ea19d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b8882ebaa30" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8882ebaa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b8882ebad80"/>
        <function-ref name="getHeader" scoped="" ref="0x2b8882ebe020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b8882ebe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2b8882ea5a78" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b8882ea5a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b8882ea5dc8"/>
        <function-ref name="rfOff" scoped="" ref="0x2b8882eaa020"/>
        <function-ref name="rxOn" scoped="" ref="0x2b8882eaa1a8"/>
        <function-ref name="startVReg" scoped="" ref="0x2b8882eaa330"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b8882eaa4b8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b8882eaa640"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b8882eaa7c8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b8882eaa950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8882e9a0c0" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8882e9a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8882e9a410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8882e9a598"/>
        <function-ref name="led1On" scoped="" ref="0x2b8882e9a720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8882e9a8a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8882e9aa30"/>
        <function-ref name="get" scoped="" ref="0x2b8882e9abb8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8882e9ad40"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8882ec14b8"/>
        <function-ref name="set" scoped="" ref="0x2b8882ec1020"/>
        <function-ref name="led0On" scoped="" ref="0x2b8882ec11a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8882ec1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b8882ead798" loc="43:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8882ead798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8882eadae8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8882eadc70"/>
        <function-ref name="request" scoped="" ref="0x2b8882eaddf8"/>
        <function-ref name="granted" scoped="" ref="0x2b8882eac020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8882eac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2b8882eb5e58" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x2b8882eb5e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b8882ebd2e8"/>
        <function-ref name="toIdle" scoped="" ref="0x2b8882ebd470"/>
        <function-ref name="isState" scoped="" ref="0x2b8882ebd5f8"/>
        <function-ref name="isIdle" scoped="" ref="0x2b8882ebd780"/>
        <function-ref name="requestState" scoped="" ref="0x2b8882ebd908"/>
        <function-ref name="forceState" scoped="" ref="0x2b8882ebda90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2b8882eb0450" loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x2b8882eb0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8882eb07a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8882eb0928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2b8882eb15a0" loc="75:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x2b8882eb15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8882eb18f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8882eb1a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2b8882eb26e8" loc="74:/opt/tinyos-2_1_2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x2b8882eb26e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8882eb2a38"/>
        <function-ref name="runTask" scoped="" ref="0x2b8882eb2bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b8882f02528" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b8882f02528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b8882f02878"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b8882f02a00"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b8882f02b88"/>
        <function-ref name="syncDone" scoped="" ref="0x2b8882f02d10"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b8882f0e020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b8882f0e1a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b8882f0e330"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b8882f0e4b8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b8882f0e640"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b8882f0e7c8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b8882f0e950"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b8882f0ead8"/>
        <function-ref name="sync" scoped="" ref="0x2b8882f0ec60"/>
        <function-ref name="getChannel" scoped="" ref="0x2b8882f0d020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b8882f0d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b8882f27800" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2b8882f27800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8882f2a370"/>
        <function-ref name="readDone" scoped="" ref="0x2b8882f2a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b8882f0d4a0" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b8882f0d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b8882f0d7f0"/>
        <function-ref name="rfOff" scoped="" ref="0x2b8882f0d978"/>
        <function-ref name="rxOn" scoped="" ref="0x2b8882f0db00"/>
        <function-ref name="startVReg" scoped="" ref="0x2b8882f0dc88"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b8882f0de10"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b8882f01020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b8882f011a8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b8882f01330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8882f125a0" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8882f125a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8882f128f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8882f12a78"/>
        <function-ref name="request" scoped="" ref="0x2b8882f12c00"/>
        <function-ref name="granted" scoped="" ref="0x2b8882f12d88"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8882f0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b8882f22d90" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b8882f22d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b8882f21170"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b8882f212f8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b8882f21480"/>
        <function-ref name="syncDone" scoped="" ref="0x2b8882f21608"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b8882f21790"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b8882f21918"/>
        <function-ref name="setChannel" scoped="" ref="0x2b8882f21aa0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b8882f21c28"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b8882f21db0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b8882f20020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b8882f201a8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b8882f20330"/>
        <function-ref name="sync" scoped="" ref="0x2b8882f204b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b8882f20740"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b8882f208c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2b8882f2edd0" loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b8882f2edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8882f55170"/>
        <function-ref name="write" scoped="" ref="0x2b8882f552f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2b8882f19340" loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b8882f19340"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b8882f19690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2b8882f19cb8" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x2b8882f19cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8882f18410"/>
        <function-ref name="fired" scoped="" ref="0x2b8882f1a4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b8882f1adb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8882f1a930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8882f18898"/>
        <function-ref name="start" scoped="" ref="0x2b8882f1ba40"/>
        <function-ref name="stop" scoped="" ref="0x2b8882f1a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2b8882f33c40" loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b8882f33c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8882f2e020"/>
        <function-ref name="write" scoped="" ref="0x2b8882f2e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b8882f3f020" loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b8882f3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882f3f370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882f3f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882f3f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882f3f808"/>
        <function-ref name="get" scoped="" ref="0x2b8882f3f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882f3fb18"/>
        <function-ref name="set" scoped="" ref="0x2b8882f3fca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8882f3fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b8882f1e020" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2b8882f1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8882f1eb68"/>
        <function-ref name="readDone" scoped="" ref="0x2b8882f1d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2b8882f454d0" loc="126:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x2b8882f454d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8882f45820"/>
        <function-ref name="runTask" scoped="" ref="0x2b8882f459a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2b8882f55680" loc="67:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b8882f55680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8882f559d0"/>
        <function-ref name="write" scoped="" ref="0x2b8882f55b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b8882f54020" loc="68:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b8882f54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8882f54370"/>
        <function-ref name="write" scoped="" ref="0x2b8882f544f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2b8882f2caf0" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b8882f2caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8882f2ce40"/>
        <function-ref name="write" scoped="" ref="0x2b8882f33020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b8882f344f0" loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b8882f344f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b8882f34840"/>
        <function-ref name="changed" scoped="" ref="0x2b8882f349c8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b8882f34b50"/>
        <function-ref name="setAddress" scoped="" ref="0x2b8882f34cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b8882f18d70" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b8882f18d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882f160f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882f16278"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882f16400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882f16588"/>
        <function-ref name="get" scoped="" ref="0x2b8882f16710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882f16898"/>
        <function-ref name="set" scoped="" ref="0x2b8882f16a20"/>
        <function-ref name="clr" scoped="" ref="0x2b8882f16ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2b8882f53510" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b8882f53510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b8882f53a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2b8882f3e1b0" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2b8882f3e1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8882f3e500"/>
        <function-ref name="isInput" scoped="" ref="0x2b8882f3e688"/>
        <function-ref name="toggle" scoped="" ref="0x2b8882f3e810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8882f3e998"/>
        <function-ref name="get" scoped="" ref="0x2b8882f3eb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8882f3eca8"/>
        <function-ref name="set" scoped="" ref="0x2b8882f3ee30"/>
        <function-ref name="clr" scoped="" ref="0x2b8882f3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8882f29a90" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8882f29a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882f29de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b8882f2e558" loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b8882f2e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8882f2e8a8"/>
        <function-ref name="write" scoped="" ref="0x2b8882f2ea30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2b8882f53df0" loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b8882f53df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b8882f52170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b8882f52500" loc="74:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b8882f52500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8882f52850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8882f529d8"/>
        <function-ref name="request" scoped="" ref="0x2b8882f52b60"/>
        <function-ref name="granted" scoped="" ref="0x2b8882f52ce8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8882f52e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2b8882f4f020" loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x2b8882f4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8882f4f370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8882f4f4f8"/>
        <function-ref name="request" scoped="" ref="0x2b8882f4f680"/>
        <function-ref name="granted" scoped="" ref="0x2b8882f4f808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8882f4f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b8882f20bc0" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b8882f20bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b8882f1f020"/>
        <function-ref name="rfOff" scoped="" ref="0x2b8882f1f1a8"/>
        <function-ref name="rxOn" scoped="" ref="0x2b8882f1f330"/>
        <function-ref name="startVReg" scoped="" ref="0x2b8882f1f4b8"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b8882f1f640"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b8882f1f7c8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b8882f1f950"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b8882f1fad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2b8882f333b8" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b8882f333b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8882f33708"/>
        <function-ref name="write" scoped="" ref="0x2b8882f33890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2b8882f2c280" loc="61:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b8882f2c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8882f2c5d0"/>
        <function-ref name="write" scoped="" ref="0x2b8882f2c758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2b8882f516e8" loc="69:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b8882f516e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b8882f51a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8882f4fc48" loc="78:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8882f4fc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8882f4e020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8882f4e1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b8882f4e330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8882f4e4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8882f4e640"/>
        <function-ref name="get" scoped="" ref="0x2b8882f4e7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8882f4e950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8882f4d020"/>
        <function-ref name="set" scoped="" ref="0x2b8882f4ead8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8882f4ec60"/>
        <function-ref name="led2On" scoped="" ref="0x2b8882f4ede8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2b8882f46680" loc="125:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x2b8882f46680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8882f469d0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8882f46b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8882f22118" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8882f22118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8882f22468"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8882f225f0"/>
        <function-ref name="request" scoped="" ref="0x2b8882f22778"/>
        <function-ref name="granted" scoped="" ref="0x2b8882f22900"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8882f22a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2b8882f2fdb8" loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b8882f2fdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8882f38170"/>
        <function-ref name="write" scoped="" ref="0x2b8882f382f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2b8882f2f480" loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b8882f2f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8882f2f8d0"/>
        <function-ref name="write" scoped="" ref="0x2b8882f2fa58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2b8882f3c060" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2b8882f3c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b8882f3c3b0"/>
        <function-ref name="disable" scoped="" ref="0x2b8882f3c538"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b8882f3c6c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b8882f3c848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2b8882f50238" loc="75:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2b8882f50238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8882f50588"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8882f50710"/>
        <function-ref name="request" scoped="" ref="0x2b8882f50898"/>
        <function-ref name="granted" scoped="" ref="0x2b8882f50a20"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8882f50ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2b8882f51dc0" loc="70:/opt/tinyos-2_1_2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b8882f51dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b8882f53170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8882faf8d0" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8882faf8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8882fafc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b8882fd92a0" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b8882fd92a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8882fd6918"/>
        <function-ref name="fired" scoped="" ref="0x2b8882fd7980"/>
        <function-ref name="startAt" scoped="" ref="0x2b8882fd6310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8882fd7e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8882fd6da0"/>
        <function-ref name="start" scoped="" ref="0x2b8882fd7020"/>
        <function-ref name="stop" scoped="" ref="0x2b8882fd74f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b8882fd39e8" loc="86:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b8882fd39e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8883187088"/>
        <function-ref name="fired" scoped="" ref="0x2b888318b0f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b888318ba08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b888318b580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8883187510"/>
        <function-ref name="start" scoped="" ref="0x2b888318c768"/>
        <function-ref name="stop" scoped="" ref="0x2b888318cc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8883187928" loc="87:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8883187928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8883187c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b888492b020" loc="28:/opt/tinyos-2_1_2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b888492b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8884928690"/>
        <function-ref name="fired" scoped="" ref="0x2b888492a6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b8884928088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b888492ab80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8884928b18"/>
        <function-ref name="start" scoped="" ref="0x2b888492bd70"/>
        <function-ref name="stop" scoped="" ref="0x2b888492a270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b8884925528" loc="30:/opt/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b8884925528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b88827ae720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8884922c88"/>
        <function-ref name="fired" scoped="" ref="0x2b8884924d08"/>
        <function-ref name="startAt" scoped="" ref="0x2b8884922680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b88849221f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8884921150"/>
        <function-ref name="start" scoped="" ref="0x2b88849243a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8884924880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b8882fdc7d0" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b8882fdc7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b8882fdcb20"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b8882fdcca8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b8882fdce30"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b8882fe4020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b8882fe41a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b8882fe4330"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b8882fe44b8"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b8882fe4640"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b8882fe47c8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b8882fe4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b8882fe3108" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b8882fe3108"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b8882fff270"/>
        <function-ref name="test" scoped="" ref="0x2b8883001930"/>
        <function-ref name="get" scoped="" ref="0x2b8882fe3c88"/>
        <function-ref name="captured" scoped="" ref="0x2b8882fdb628"/>
        <function-ref name="reset" scoped="" ref="0x2b8882fdbb00"/>
        <function-ref name="isOn" scoped="" ref="0x2b8883001db8"/>
        <function-ref name="set" scoped="" ref="0x2b8882fdb150"/>
        <function-ref name="start" scoped="" ref="0x2b8883001020"/>
        <function-ref name="stop" scoped="" ref="0x2b88830014a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b8882fffe18" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b8882fffe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b8882ffc798"/>
        <function-ref name="fired" scoped="" ref="0x2b8882ffd4f8"/>
        <function-ref name="get" scoped="" ref="0x2b8882ffea18"/>
        <function-ref name="reset" scoped="" ref="0x2b8882ffd980"/>
        <function-ref name="isOn" scoped="" ref="0x2b8882ffcc20"/>
        <function-ref name="set" scoped="" ref="0x2b8882ffd020"/>
        <function-ref name="start" scoped="" ref="0x2b8882ffde08"/>
        <function-ref name="stop" scoped="" ref="0x2b8882ffc310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8882fea538" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8882fea538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8882fe76f8"/>
        <function-ref name="test" scoped="" ref="0x2b8882fe8db8"/>
        <function-ref name="get" scoped="" ref="0x2b8882fe90f8"/>
        <function-ref name="setScale" scoped="" ref="0x2b8882fe7b80"/>
        <function-ref name="getScale" scoped="" ref="0x2b8882fe5088"/>
        <function-ref name="reset" scoped="" ref="0x2b8882fe8020"/>
        <function-ref name="overflow" scoped="" ref="0x2b8882fe9a58"/>
        <function-ref name="isOn" scoped="" ref="0x2b8882fe7270"/>
        <function-ref name="set" scoped="" ref="0x2b8882fe9580"/>
        <function-ref name="start" scoped="" ref="0x2b8882fe84a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8882fe8930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b8882ff2568" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b8882ff2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b8882ff28b8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b8882ff2a40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b8882ff2bc8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b8882ff2d50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b888301f020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b888301f1a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b888301f330"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b888301f4b8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b888301f640"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b888301f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2b888300d020" loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b888300d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b888300d370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b888300d4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b888300d680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b888300d808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b888300d990"/>
        <function-ref name="setControl" scoped="" ref="0x2b888300db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b888301a540" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b888301a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b8883017db8"/>
        <function-ref name="fired" scoped="" ref="0x2b8883018a58"/>
        <function-ref name="get" scoped="" ref="0x2b88830180f8"/>
        <function-ref name="reset" scoped="" ref="0x2b8883017020"/>
        <function-ref name="isOn" scoped="" ref="0x2b8883016270"/>
        <function-ref name="set" scoped="" ref="0x2b8883018580"/>
        <function-ref name="start" scoped="" ref="0x2b88830174a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8883017930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b888301fca0" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b888301fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b888301be20"/>
        <function-ref name="test" scoped="" ref="0x2b888301b510"/>
        <function-ref name="get" scoped="" ref="0x2b888301e858"/>
        <function-ref name="captured" scoped="" ref="0x2b888301c238"/>
        <function-ref name="reset" scoped="" ref="0x2b888301c710"/>
        <function-ref name="isOn" scoped="" ref="0x2b888301b998"/>
        <function-ref name="set" scoped="" ref="0x2b888301ece0"/>
        <function-ref name="start" scoped="" ref="0x2b888301cb98"/>
        <function-ref name="stop" scoped="" ref="0x2b888301b088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b88830168e8" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b88830168e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b8883012088"/>
        <function-ref name="fired" scoped="" ref="0x2b8883015df0"/>
        <function-ref name="get" scoped="" ref="0x2b8883015490"/>
        <function-ref name="reset" scoped="" ref="0x2b88830132b0"/>
        <function-ref name="isOn" scoped="" ref="0x2b8883012510"/>
        <function-ref name="set" scoped="" ref="0x2b8883015918"/>
        <function-ref name="start" scoped="" ref="0x2b8883013738"/>
        <function-ref name="stop" scoped="" ref="0x2b8883013bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b8883012b88" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b8883012b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b888300e4a8"/>
        <function-ref name="fired" scoped="" ref="0x2b888300f0f8"/>
        <function-ref name="get" scoped="" ref="0x2b8883011760"/>
        <function-ref name="reset" scoped="" ref="0x2b888300f580"/>
        <function-ref name="isOn" scoped="" ref="0x2b888300e930"/>
        <function-ref name="set" scoped="" ref="0x2b8883011be8"/>
        <function-ref name="start" scoped="" ref="0x2b888300fa08"/>
        <function-ref name="stop" scoped="" ref="0x2b888300e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8882ff73a8" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8882ff73a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8882ff3580"/>
        <function-ref name="test" scoped="" ref="0x2b8882ff4c20"/>
        <function-ref name="get" scoped="" ref="0x2b8882ff6020"/>
        <function-ref name="setScale" scoped="" ref="0x2b8882ff3a08"/>
        <function-ref name="getScale" scoped="" ref="0x2b8882ff2020"/>
        <function-ref name="reset" scoped="" ref="0x2b8882ff6e08"/>
        <function-ref name="overflow" scoped="" ref="0x2b8882ff6980"/>
        <function-ref name="isOn" scoped="" ref="0x2b8882ff30f8"/>
        <function-ref name="set" scoped="" ref="0x2b8882ff64a8"/>
        <function-ref name="start" scoped="" ref="0x2b8882ff4310"/>
        <function-ref name="stop" scoped="" ref="0x2b8882ff4798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b888309a190" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b888309a190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b88826f2388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b88826f2388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b888309a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b888309a8b0" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b888309a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b88830bb998"/>
        <function-ref name="test" scoped="" ref="0x2b88830bb088"/>
        <function-ref name="get" scoped="" ref="0x2b88830bd490"/>
        <function-ref name="setScale" scoped="" ref="0x2b88830bbe20"/>
        <function-ref name="getScale" scoped="" ref="0x2b88830b9350"/>
        <function-ref name="reset" scoped="" ref="0x2b88830bc2b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b88830bddf0"/>
        <function-ref name="isOn" scoped="" ref="0x2b88830bb510"/>
        <function-ref name="set" scoped="" ref="0x2b88830bd918"/>
        <function-ref name="start" scoped="" ref="0x2b88830bc738"/>
        <function-ref name="stop" scoped="" ref="0x2b88830bcbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b888490f750" loc="55:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b888490f750"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b88826f2020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b88826f2020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b88827ae720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b888490c020"/>
        <function-ref name="fired" scoped="" ref="0x2b888490d020"/>
        <function-ref name="startAt" scoped="" ref="0x2b888490d930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b888490d4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b888490c4a8"/>
        <function-ref name="start" scoped="" ref="0x2b888490e578"/>
        <function-ref name="stop" scoped="" ref="0x2b888490ea50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2b8884907a80" loc="58:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b8884907a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b8884903270"/>
        <function-ref name="fired" scoped="" ref="0x2b8884904020"/>
        <function-ref name="get" scoped="" ref="0x2b8884906658"/>
        <function-ref name="reset" scoped="" ref="0x2b88849044a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b88849036f8"/>
        <function-ref name="set" scoped="" ref="0x2b8884906ae0"/>
        <function-ref name="start" scoped="" ref="0x2b8884904930"/>
        <function-ref name="stop" scoped="" ref="0x2b8884904db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2b888490c9c8" loc="57:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b888490c9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8884908b80"/>
        <function-ref name="test" scoped="" ref="0x2b8884908270"/>
        <function-ref name="get" scoped="" ref="0x2b888490b598"/>
        <function-ref name="setScale" scoped="" ref="0x2b8884907088"/>
        <function-ref name="getScale" scoped="" ref="0x2b8884907560"/>
        <function-ref name="reset" scoped="" ref="0x2b888490a4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b888490a020"/>
        <function-ref name="isOn" scoped="" ref="0x2b88849086f8"/>
        <function-ref name="set" scoped="" ref="0x2b888490ba20"/>
        <function-ref name="start" scoped="" ref="0x2b888490a930"/>
        <function-ref name="stop" scoped="" ref="0x2b888490adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b88830e2da0" loc="24:/opt/tinyos-2_1_2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b88830e2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8883110b38"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b888310f4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b888310f020"/>
        <function-ref name="overflow" scoped="" ref="0x2b888310f930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b888310ead0" loc="24:/opt/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b888310ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b88827ae720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b888310b860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b88831091f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b888310bce8"/>
        <function-ref name="overflow" scoped="" ref="0x2b8883109680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8883106a98" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8883106a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b88827ae720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8883127828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8883126190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8883127cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b8883126618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b8883126b78" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8883126b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8883122c20"/>
        <function-ref name="test" scoped="" ref="0x2b8883122310"/>
        <function-ref name="get" scoped="" ref="0x2b8883125728"/>
        <function-ref name="setScale" scoped="" ref="0x2b88831210f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b88831215d0"/>
        <function-ref name="reset" scoped="" ref="0x2b8883123548"/>
        <function-ref name="overflow" scoped="" ref="0x2b88831230c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b8883122798"/>
        <function-ref name="set" scoped="" ref="0x2b8883125bb0"/>
        <function-ref name="start" scoped="" ref="0x2b88831239d0"/>
        <function-ref name="stop" scoped="" ref="0x2b8883123e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b88831322b0" loc="63:/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b88831322b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b88827ae720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8883131088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8883131998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8883131510"/>
        <function-ref name="overflow" scoped="" ref="0x2b8883131e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b88831350e0" loc="62:/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b88831350e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8883135e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8883134798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8883134310"/>
        <function-ref name="overflow" scoped="" ref="0x2b8883134c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b888491f2f0" loc="61:/opt/tinyos-2_1_2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b888491f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b888491d928"/>
        <function-ref name="fired" scoped="" ref="0x2b888491e9e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b888491d320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b888491ee70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b888491ddb0"/>
        <function-ref name="start" scoped="" ref="0x2b888491e088"/>
        <function-ref name="stop" scoped="" ref="0x2b888491e560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b8884919688" loc="73:/opt/tinyos-2_1_2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2b8884919688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b88827ae720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8884916cc0"/>
        <function-ref name="fired" scoped="" ref="0x2b8884918d60"/>
        <function-ref name="startAt" scoped="" ref="0x2b88849166b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8884916230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8884915190"/>
        <function-ref name="start" scoped="" ref="0x2b8884918400"/>
        <function-ref name="stop" scoped="" ref="0x2b88849188d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b888491b410" loc="68:/opt/tinyos-2_1_2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b888491b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b888491a190"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b888491aaa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b888491a618"/>
        <function-ref name="overflow" scoped="" ref="0x2b8884919020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b888318da58" loc="18:/opt/tinyos-2_1_2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b888318da58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b888318dda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2b8883181020" loc="87:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2b8883181020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883181370"/>
        <function-ref name="isInput" scoped="" ref="0x2b88831814f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8883181680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883181808"/>
        <function-ref name="get" scoped="" ref="0x2b8883181990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883181b18"/>
        <function-ref name="set" scoped="" ref="0x2b8883181ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8883181e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2b8883180198" loc="88:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2b8883180198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88831804e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883180670"/>
        <function-ref name="toggle" scoped="" ref="0x2b88831807f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883180980"/>
        <function-ref name="get" scoped="" ref="0x2b8883180b08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883180c90"/>
        <function-ref name="set" scoped="" ref="0x2b8883180e18"/>
        <function-ref name="clr" scoped="" ref="0x2b888317f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b888317f338" loc="89:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b888317f338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888317f688"/>
        <function-ref name="isInput" scoped="" ref="0x2b888317f810"/>
        <function-ref name="toggle" scoped="" ref="0x2b888317f998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888317fb20"/>
        <function-ref name="get" scoped="" ref="0x2b888317fca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888317fe30"/>
        <function-ref name="set" scoped="" ref="0x2b888317e020"/>
        <function-ref name="clr" scoped="" ref="0x2b888317e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2b8883183de0" loc="86:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b8883183de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883182170"/>
        <function-ref name="isInput" scoped="" ref="0x2b88831822f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8883182480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883182608"/>
        <function-ref name="get" scoped="" ref="0x2b8883182790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883182918"/>
        <function-ref name="set" scoped="" ref="0x2b8883182aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b8883182c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2b888317d648" loc="91:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2b888317d648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888317d998"/>
        <function-ref name="isInput" scoped="" ref="0x2b888317db20"/>
        <function-ref name="toggle" scoped="" ref="0x2b888317dca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888317de30"/>
        <function-ref name="get" scoped="" ref="0x2b888317c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888317c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b888317c330"/>
        <function-ref name="clr" scoped="" ref="0x2b888317c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b8882fdac88" loc="85:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b8882fdac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883183020"/>
        <function-ref name="isInput" scoped="" ref="0x2b88831831a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8883183330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88831834b8"/>
        <function-ref name="get" scoped="" ref="0x2b8883183640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88831837c8"/>
        <function-ref name="set" scoped="" ref="0x2b8883183950"/>
        <function-ref name="clr" scoped="" ref="0x2b8883183ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2b888317e4b0" loc="90:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2b888317e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888317e800"/>
        <function-ref name="isInput" scoped="" ref="0x2b888317e988"/>
        <function-ref name="toggle" scoped="" ref="0x2b888317eb10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888317ec98"/>
        <function-ref name="get" scoped="" ref="0x2b888317ee20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888317d020"/>
        <function-ref name="set" scoped="" ref="0x2b888317d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b888317d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2b88831a3e80" loc="39:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2b88831a3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b88831a71f8"/>
        <function-ref name="disable" scoped="" ref="0x2b88831a7380"/>
        <function-ref name="captured" scoped="" ref="0x2b88831a7508"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b88831a7690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2b88831a7a60" loc="40:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2b88831a7a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88831a7db0"/>
        <function-ref name="disable" scoped="" ref="0x2b88831a6020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b88831a61a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b88831a6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2b88831a6710" loc="41:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b88831a6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88831a6a60"/>
        <function-ref name="disable" scoped="" ref="0x2b88831a6be8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b88831a6d70"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b88831a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b88831a1c40" loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b88831a1c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b88831a0020"/>
        <function-ref name="disable" scoped="" ref="0x2b88831a01a8"/>
        <function-ref name="captured" scoped="" ref="0x2b88831a0330"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b88831a04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x2b88831a0888" loc="43:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x2b88831a0888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b88831c19d0"/>
        <function-ref name="test" scoped="" ref="0x2b88831c10c0"/>
        <function-ref name="get" scoped="" ref="0x2b88831c4490"/>
        <function-ref name="captured" scoped="" ref="0x2b88831c4df0"/>
        <function-ref name="reset" scoped="" ref="0x2b88831c22f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b88831c1548"/>
        <function-ref name="set" scoped="" ref="0x2b88831c4918"/>
        <function-ref name="start" scoped="" ref="0x2b88831c2778"/>
        <function-ref name="stop" scoped="" ref="0x2b88831c2c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b88831bdd78" loc="9:/opt/tinyos-2_1_2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b88831bdd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88831ab0f0"/>
        <function-ref name="fired" scoped="" ref="0x2b88831ab278"/>
        <function-ref name="disable" scoped="" ref="0x2b88831ab400"/>
        <function-ref name="edge" scoped="" ref="0x2b88831ab588"/>
        <function-ref name="enable" scoped="" ref="0x2b88831ab710"/>
        <function-ref name="getValue" scoped="" ref="0x2b88831ab898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b88831bd2c8" loc="8:/opt/tinyos-2_1_2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b88831bd2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88831bd618"/>
        <function-ref name="disable" scoped="" ref="0x2b88831bd7a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b88831bd928"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b88831bdab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x2b88831d7b38" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x2b88831d7b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88831d6020"/>
        <function-ref name="fired" scoped="" ref="0x2b88831d61a8"/>
        <function-ref name="disable" scoped="" ref="0x2b88831d6330"/>
        <function-ref name="edge" scoped="" ref="0x2b88831d64b8"/>
        <function-ref name="enable" scoped="" ref="0x2b88831d6640"/>
        <function-ref name="getValue" scoped="" ref="0x2b88831d67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2b88831dcc88" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2b88831dcc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88831db020"/>
        <function-ref name="fired" scoped="" ref="0x2b88831db1a8"/>
        <function-ref name="disable" scoped="" ref="0x2b88831db330"/>
        <function-ref name="edge" scoped="" ref="0x2b88831db4b8"/>
        <function-ref name="enable" scoped="" ref="0x2b88831db640"/>
        <function-ref name="getValue" scoped="" ref="0x2b88831db7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x2b88831d9b38" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x2b88831d9b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88831d8020"/>
        <function-ref name="fired" scoped="" ref="0x2b88831d81a8"/>
        <function-ref name="disable" scoped="" ref="0x2b88831d8330"/>
        <function-ref name="edge" scoped="" ref="0x2b88831d84b8"/>
        <function-ref name="enable" scoped="" ref="0x2b88831d8640"/>
        <function-ref name="getValue" scoped="" ref="0x2b88831d87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x2b88831d6b38" loc="52:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x2b88831d6b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88831d5020"/>
        <function-ref name="fired" scoped="" ref="0x2b88831d51a8"/>
        <function-ref name="disable" scoped="" ref="0x2b88831d5330"/>
        <function-ref name="edge" scoped="" ref="0x2b88831d54b8"/>
        <function-ref name="enable" scoped="" ref="0x2b88831d5640"/>
        <function-ref name="getValue" scoped="" ref="0x2b88831d57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2b88831dbb38" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2b88831dbb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88831da020"/>
        <function-ref name="fired" scoped="" ref="0x2b88831da1a8"/>
        <function-ref name="disable" scoped="" ref="0x2b88831da330"/>
        <function-ref name="edge" scoped="" ref="0x2b88831da4b8"/>
        <function-ref name="enable" scoped="" ref="0x2b88831da640"/>
        <function-ref name="getValue" scoped="" ref="0x2b88831da7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x2b88831d8b38" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x2b88831d8b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88831d7020"/>
        <function-ref name="fired" scoped="" ref="0x2b88831d71a8"/>
        <function-ref name="disable" scoped="" ref="0x2b88831d7330"/>
        <function-ref name="edge" scoped="" ref="0x2b88831d74b8"/>
        <function-ref name="enable" scoped="" ref="0x2b88831d7640"/>
        <function-ref name="getValue" scoped="" ref="0x2b88831d77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2b88831dfdb0" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2b88831dfdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88831dc170"/>
        <function-ref name="fired" scoped="" ref="0x2b88831dc2f8"/>
        <function-ref name="disable" scoped="" ref="0x2b88831dc480"/>
        <function-ref name="edge" scoped="" ref="0x2b88831dc608"/>
        <function-ref name="enable" scoped="" ref="0x2b88831dc790"/>
        <function-ref name="getValue" scoped="" ref="0x2b88831dc918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2b88831dab38" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2b88831dab38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88831d9020"/>
        <function-ref name="fired" scoped="" ref="0x2b88831d91a8"/>
        <function-ref name="disable" scoped="" ref="0x2b88831d9330"/>
        <function-ref name="edge" scoped="" ref="0x2b88831d94b8"/>
        <function-ref name="enable" scoped="" ref="0x2b88831d9640"/>
        <function-ref name="getValue" scoped="" ref="0x2b88831d97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x2b88831cd758" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x2b88831cd758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88831cdaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x2b88831d1020" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x2b88831d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88831d1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x2b88831d0758" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x2b88831d0758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88831d0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x2b88831cc020" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x2b88831cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88831cc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x2b88831d1758" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x2b88831d1758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88831d1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x2b88831cd020" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x2b88831cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88831cd370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x2b88831cf850" loc="43:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x2b88831cf850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88831cfba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x2b88831d0020" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x2b88831d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88831d0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b88831e7258" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b88831e7258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88831e75a8"/>
        <function-ref name="fired" scoped="" ref="0x2b88831e7730"/>
        <function-ref name="disable" scoped="" ref="0x2b88831e78b8"/>
        <function-ref name="edge" scoped="" ref="0x2b88831e7a40"/>
        <function-ref name="enable" scoped="" ref="0x2b88831e7bc8"/>
        <function-ref name="getValue" scoped="" ref="0x2b88831e7d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b8883209060" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b8883209060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88832093b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b8883207cf8" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b8883207cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88832050a0"/>
        <function-ref name="fired" scoped="" ref="0x2b8883205228"/>
        <function-ref name="disable" scoped="" ref="0x2b88832053b0"/>
        <function-ref name="edge" scoped="" ref="0x2b8883205538"/>
        <function-ref name="enable" scoped="" ref="0x2b88832056c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b8883205848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b8883205b10" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b8883205b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b8883205e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b88832027e8" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b88832027e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8883202b38"/>
        <function-ref name="fired" scoped="" ref="0x2b8883202cc0"/>
        <function-ref name="disable" scoped="" ref="0x2b8883202e48"/>
        <function-ref name="edge" scoped="" ref="0x2b8883201020"/>
        <function-ref name="enable" scoped="" ref="0x2b88832011a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b8883201330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b88832015f8" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b88832015f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b8883201948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b88831fe3e0" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b88831fe3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88831fe730"/>
        <function-ref name="fired" scoped="" ref="0x2b88831fe8b8"/>
        <function-ref name="disable" scoped="" ref="0x2b88831fea40"/>
        <function-ref name="edge" scoped="" ref="0x2b88831febc8"/>
        <function-ref name="enable" scoped="" ref="0x2b88831fed50"/>
        <function-ref name="getValue" scoped="" ref="0x2b88831fd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b88831fd2e8" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b88831fd2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88831fd638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b888322f180" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b888322f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b888322f4d0"/>
        <function-ref name="fired" scoped="" ref="0x2b888322f658"/>
        <function-ref name="disable" scoped="" ref="0x2b888322f7e0"/>
        <function-ref name="edge" scoped="" ref="0x2b888322f968"/>
        <function-ref name="enable" scoped="" ref="0x2b888322faf0"/>
        <function-ref name="getValue" scoped="" ref="0x2b888322fc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b888322e020" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b888322e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b888322e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b888322b020" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b888322b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b888322b370"/>
        <function-ref name="fired" scoped="" ref="0x2b888322b4f8"/>
        <function-ref name="disable" scoped="" ref="0x2b888322b680"/>
        <function-ref name="edge" scoped="" ref="0x2b888322b808"/>
        <function-ref name="enable" scoped="" ref="0x2b888322b990"/>
        <function-ref name="getValue" scoped="" ref="0x2b888322bb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b888322bde0" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b888322bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b888322a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b8883228cd8" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b8883228cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88832270a0"/>
        <function-ref name="fired" scoped="" ref="0x2b8883227228"/>
        <function-ref name="disable" scoped="" ref="0x2b88832273b0"/>
        <function-ref name="edge" scoped="" ref="0x2b8883227538"/>
        <function-ref name="enable" scoped="" ref="0x2b88832276c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b8883227848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b8883227b10" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b8883227b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b8883227e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b88832239d8" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b88832239d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8883223d28"/>
        <function-ref name="fired" scoped="" ref="0x2b8883222020"/>
        <function-ref name="disable" scoped="" ref="0x2b88832221a8"/>
        <function-ref name="edge" scoped="" ref="0x2b8883222330"/>
        <function-ref name="enable" scoped="" ref="0x2b88832224b8"/>
        <function-ref name="getValue" scoped="" ref="0x2b8883222640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b8883222908" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b8883222908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b8883222c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x2b88832168e0" loc="51:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x2b88832168e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883216c30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883216db8"/>
        <function-ref name="toggle" scoped="" ref="0x2b888324b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888324b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b888324b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888324b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b888324b640"/>
        <function-ref name="clr" scoped="" ref="0x2b888324b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b8883219cf0" loc="47:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b8883219cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88832160a0"/>
        <function-ref name="disable" scoped="" ref="0x2b8883216228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b88832163b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b8883216538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x2b8883249278" loc="69:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x2b8883249278"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b88832495c8"/>
        <function-ref name="runTask" scoped="" ref="0x2b8883249750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b88834b8c90" loc="69:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b88834b8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b73e8"/>
        <function-ref name="write" scoped="" ref="0x2b88834b7570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b88834c1438" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b88834c1438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834c1788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b88834bbdd8" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b88834bbdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834ba170"/>
        <function-ref name="write" scoped="" ref="0x2b88834ba2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b88834b67c0" loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b88834b67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b6b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834b6c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b88834b4020" loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b88834b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b4370"/>
        <function-ref name="write" scoped="" ref="0x2b88834b44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b88834aa7c0" loc="94:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b88834aa7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834aab10"/>
        <function-ref name="write" scoped="" ref="0x2b88834aac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b88834ac7c0" loc="90:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b88834ac7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834acb10"/>
        <function-ref name="write" scoped="" ref="0x2b88834acc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b88834c06b8" loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b88834c06b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834c0a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b88834ad7c0" loc="88:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b88834ad7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834adb10"/>
        <function-ref name="write" scoped="" ref="0x2b88834adc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b88834bad60" loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b88834bad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b90d8"/>
        <function-ref name="write" scoped="" ref="0x2b88834b9260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b88834b9cc8" loc="67:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b88834b9cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b80a0"/>
        <function-ref name="write" scoped="" ref="0x2b88834b8228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b88834b1020" loc="79:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b88834b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b1370"/>
        <function-ref name="write" scoped="" ref="0x2b88834b14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b88834b47c0" loc="74:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b88834b47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b4b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834b4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b8883482e78" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b8883482e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b88834811f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b8883481380"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b8883481508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b88834be020" loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b88834be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834be370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b88834be638" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b88834be638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834bea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b88834bed50" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b88834bed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834bd0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b88834ac020" loc="89:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b88834ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834ac370"/>
        <function-ref name="write" scoped="" ref="0x2b88834ac4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b88834bf368" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b88834bf368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834bf6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b88834b9528" loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b88834b9528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b9878"/>
        <function-ref name="write" scoped="" ref="0x2b88834b9a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b88834ba5c0" loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b88834ba5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834ba910"/>
        <function-ref name="write" scoped="" ref="0x2b88834baa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b8883481de8" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b8883481de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834c1170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b88834aa020" loc="93:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b88834aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834aa370"/>
        <function-ref name="write" scoped="" ref="0x2b88834aa4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b88834ab020" loc="91:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b88834ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834ab370"/>
        <function-ref name="write" scoped="" ref="0x2b88834ab4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b88834b17c0" loc="80:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b88834b17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b1b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834b1c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b88834ad020" loc="87:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b88834ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834ad370"/>
        <function-ref name="write" scoped="" ref="0x2b88834ad4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b88834b37c0" loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b88834b37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b3b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834b3c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b88834a9020" loc="97:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b88834a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b88834a9770"/>
        <function-ref name="writeDone" scoped="" ref="0x2b88834a98f8"/>
        <function-ref name="write" scoped="" ref="0x2b88834a9a80"/>
        <function-ref name="beginRead" scoped="" ref="0x2b88834a9c08"/>
        <function-ref name="readDone" scoped="" ref="0x2b88834a9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b88834817d0" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b88834817d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b8883481b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b88834bb638" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b88834bb638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834bb988"/>
        <function-ref name="write" scoped="" ref="0x2b88834bbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b88834b84f0" loc="68:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b88834b84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b8840"/>
        <function-ref name="write" scoped="" ref="0x2b88834b89c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b88834b3020" loc="75:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b88834b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b3370"/>
        <function-ref name="write" scoped="" ref="0x2b88834b34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b88834b7838" loc="70:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b88834b7838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b7b88"/>
        <function-ref name="write" scoped="" ref="0x2b88834b7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b88834c1a50" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b88834c1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834c1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b88834b6020" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b88834b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b6370"/>
        <function-ref name="write" scoped="" ref="0x2b88834b64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883482280" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883482280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b88834825d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883482758"/>
        <function-ref name="request" scoped="" ref="0x2b88834828e0"/>
        <function-ref name="granted" scoped="" ref="0x2b8883482a68"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883482bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b88834bd3a0" loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b88834bd3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834bd6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b88834bb020" loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b88834bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834bb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b88834ae7c0" loc="86:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b88834ae7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834aeb10"/>
        <function-ref name="write" scoped="" ref="0x2b88834aec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b88834ae020" loc="85:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b88834ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834ae370"/>
        <function-ref name="write" scoped="" ref="0x2b88834ae4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b88834bf980" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b88834bf980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834bfcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b88834b07c0" loc="82:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b88834b07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b0b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834b0c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b88834ab7c0" loc="92:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b88834ab7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834abb10"/>
        <function-ref name="write" scoped="" ref="0x2b88834abc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b88834b0020" loc="81:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b88834b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b0370"/>
        <function-ref name="write" scoped="" ref="0x2b88834b04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b88834c00a0" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b88834c00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834c03f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b88834b27c0" loc="78:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b88834b27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b2b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834b2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b88834c0cd0" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b88834c0cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834bf0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b88834b2020" loc="77:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b88834b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834b2370"/>
        <function-ref name="write" scoped="" ref="0x2b88834b24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b88834bd9b8" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b88834bd9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834bdd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b88834a80a0" loc="98:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b88834a80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b88834a83f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b88834a8578"/>
        <function-ref name="write" scoped="" ref="0x2b88834a8700"/>
        <function-ref name="beginRead" scoped="" ref="0x2b88834a8888"/>
        <function-ref name="readDone" scoped="" ref="0x2b88834a8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b88832793c8" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2b88832793c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b8883279718"/>
        <function-ref name="writeDone" scoped="" ref="0x2b88832798a0"/>
        <function-ref name="write" scoped="" ref="0x2b8883279a28"/>
        <function-ref name="beginRead" scoped="" ref="0x2b8883279bb0"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883279d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b888327a4c8" loc="40:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b888327a4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b888327a818"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b888327a9a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b888327ab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b88832775e0" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2b88832775e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883277930"/>
        <function-ref name="write" scoped="" ref="0x2b8883277ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b8883276348" loc="43:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2b8883276348"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883276698"/>
        <function-ref name="write" scoped="" ref="0x2b8883276820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b888327d808" loc="39:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b888327d808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b888327db58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b888327dce0"/>
        <function-ref name="request" scoped="" ref="0x2b888327de68"/>
        <function-ref name="granted" scoped="" ref="0x2b888327a020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b888327a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b88832751c8" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2b88832751c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b8883275518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2b8883298860" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b8883298860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883298bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8883298d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b888326f4d0" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2b888326f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b888326f820"/>
        <function-ref name="writeDone" scoped="" ref="0x2b888326f9a8"/>
        <function-ref name="write" scoped="" ref="0x2b888326fb30"/>
        <function-ref name="beginRead" scoped="" ref="0x2b888326fcb8"/>
        <function-ref name="readDone" scoped="" ref="0x2b888326fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b88832724e8" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b88832724e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b8883272838"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b88832729c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b8883272b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2b8883268470" loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b8883268470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b88832687c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2b888326a0e0" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x2b888326a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b888326a430"/>
        <function-ref name="toIdle" scoped="" ref="0x2b888326a5b8"/>
        <function-ref name="isState" scoped="" ref="0x2b888326a740"/>
        <function-ref name="isIdle" scoped="" ref="0x2b888326a8c8"/>
        <function-ref name="requestState" scoped="" ref="0x2b888326aa50"/>
        <function-ref name="forceState" scoped="" ref="0x2b888326abd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b888326c8e8" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b888326c8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b888326cc38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b888326cdc0"/>
        <function-ref name="request" scoped="" ref="0x2b888326b020"/>
        <function-ref name="granted" scoped="" ref="0x2b888326b1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b888326b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b888326e680" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2b888326e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888326e9d0"/>
        <function-ref name="write" scoped="" ref="0x2b888326eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b888326d3c8" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2b888326d3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888326d718"/>
        <function-ref name="write" scoped="" ref="0x2b888326d8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b888326ae50" loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b888326ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b88832691e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8883269370"/>
        <function-ref name="led1On" scoped="" ref="0x2b88832694f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8883269680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8883269808"/>
        <function-ref name="get" scoped="" ref="0x2b8883269990"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8883269b18"/>
        <function-ref name="led2Off" scoped="" ref="0x2b88832991a8"/>
        <function-ref name="set" scoped="" ref="0x2b8883269ca0"/>
        <function-ref name="led0On" scoped="" ref="0x2b8883269e28"/>
        <function-ref name="led2On" scoped="" ref="0x2b8883299020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883271300" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883271300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883271650"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88832717d8"/>
        <function-ref name="request" scoped="" ref="0x2b8883271960"/>
        <function-ref name="granted" scoped="" ref="0x2b8883271ae8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883271c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2b8883295b80" loc="88:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x2b8883295b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8883293020"/>
        <function-ref name="runTask" scoped="" ref="0x2b88832931a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b888326c1c8" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2b888326c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b888326c518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b88832e8978" loc="67:/opt/tinyos-2_1_2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b88832e8978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b88832e8cc8"/>
        <function-ref name="toIdle" scoped="" ref="0x2b88832e8e50"/>
        <function-ref name="isState" scoped="" ref="0x2b88832e7020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b88832e71a8"/>
        <function-ref name="requestState" scoped="" ref="0x2b88832e7330"/>
        <function-ref name="forceState" scoped="" ref="0x2b88832e74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b88832e2790" loc="66:/opt/tinyos-2_1_2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b88832e2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b88832e2ae0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b88832e2c68"/>
        <function-ref name="isState" scoped="" ref="0x2b88832e2df0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b88832e1020"/>
        <function-ref name="requestState" scoped="" ref="0x2b88832e11a8"/>
        <function-ref name="forceState" scoped="" ref="0x2b88832e1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b88832de438" loc="66:/opt/tinyos-2_1_2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b88832de438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88832de788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b88832dd020" loc="67:/opt/tinyos-2_1_2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b88832dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b88832dd370"/>
        <function-ref name="toIdle" scoped="" ref="0x2b88832dd4f8"/>
        <function-ref name="isState" scoped="" ref="0x2b88832dd680"/>
        <function-ref name="isIdle" scoped="" ref="0x2b88832dd808"/>
        <function-ref name="requestState" scoped="" ref="0x2b88832dd990"/>
        <function-ref name="forceState" scoped="" ref="0x2b88832ddb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b888344e2a8" loc="43:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b888344e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b888344e5f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b888344e780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b888344fc18" loc="42:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b888344fc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b888344e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8883450960" loc="39:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8883450960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8883450cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b888344f020" loc="40:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b888344f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b888344f370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b888344f4f8"/>
        <function-ref name="request" scoped="" ref="0x2b888344f680"/>
        <function-ref name="granted" scoped="" ref="0x2b888344f808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b888344f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b888332dbc0" loc="84:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b888332dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88832f8020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88832f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b88832fca20" loc="82:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b88832fca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b88832fcd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b88832fc400" loc="81:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b88832fc400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88832fc750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b888332d0f0" loc="83:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b888332d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b888332d440"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b888332d5c8"/>
        <function-ref name="splitRead" scoped="" ref="0x2b888332d750"/>
        <function-ref name="write" scoped="" ref="0x2b888332d8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b88832f8978" loc="85:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b88832f8978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b88832f8cc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88832f8e50"/>
        <function-ref name="request" scoped="" ref="0x2b88832f7020"/>
        <function-ref name="granted" scoped="" ref="0x2b88832f71a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b88832f7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b888335cb58" loc="296:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b888335cb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b888335b020"/>
        <function-ref name="runTask" scoped="" ref="0x2b888335b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b8883328020" loc="94:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b8883328020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883328370"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88833284f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2b8883344208" loc="99:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2b8883344208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883344558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88833446e0"/>
        <function-ref name="request" scoped="" ref="0x2b8883344868"/>
        <function-ref name="granted" scoped="" ref="0x2b88833449f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883344b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b888332ad80" loc="92:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b888332ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b8883329170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b888332a7a0" loc="91:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b888332a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b888332aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b8883325020" loc="98:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b8883325020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b8883325370"/>
        <function-ref name="sleep" scoped="" ref="0x2b88833457c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b8883325680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b8883345950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b8883325990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b8883325b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b8883325ca0"/>
        <function-ref name="read" scoped="" ref="0x2b8883325e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b8883324020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b88833241a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b8883324330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b88833244b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b8883324640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b88833248c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b8883324a50"/>
        <function-ref name="write" scoped="" ref="0x2b8883324bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b8883324d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b8883345020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b88833451a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b8883345330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b88833454b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b88833254f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b8883325808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b8883345640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b8883329428" loc="93:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b8883329428"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b8883329778"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b8883329900"/>
        <function-ref name="splitRead" scoped="" ref="0x2b8883329a88"/>
        <function-ref name="write" scoped="" ref="0x2b8883329c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883328c88" loc="95:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883328c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883326020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88833261a8"/>
        <function-ref name="request" scoped="" ref="0x2b8883326330"/>
        <function-ref name="granted" scoped="" ref="0x2b88833264b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883326640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b88833405d0" loc="100:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b88833405d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8883340920"/>
        <function-ref name="userId" scoped="" ref="0x2b8883340aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b8883340d78" loc="101:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b8883340d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b88833420f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b888336d020" loc="76:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b888336d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b888336d370"/>
        <function-ref name="sleep" scoped="" ref="0x2b888336b7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b888336d680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b888336b950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b888336d990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b888336db18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b888336dca0"/>
        <function-ref name="read" scoped="" ref="0x2b888336de28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b888336c020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b888336c1a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b888336c330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b888336c4b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b888336c640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b888336c8c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b888336ca50"/>
        <function-ref name="write" scoped="" ref="0x2b888336cbd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b888336cd60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b888336b020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b888336b1a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b888336b330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b888336b4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b888336d4f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b888336d808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b888336b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b888339a190" loc="81:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b888339a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888339a4e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b888339a668"/>
        <function-ref name="toggle" scoped="" ref="0x2b888339a7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888339a978"/>
        <function-ref name="get" scoped="" ref="0x2b888339ab00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888339ac88"/>
        <function-ref name="set" scoped="" ref="0x2b888339ae10"/>
        <function-ref name="clr" scoped="" ref="0x2b8883399020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b88833a0de0" loc="79:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b88833a0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888339f170"/>
        <function-ref name="isInput" scoped="" ref="0x2b888339f2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b888339f480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888339f608"/>
        <function-ref name="get" scoped="" ref="0x2b888339f790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888339f918"/>
        <function-ref name="set" scoped="" ref="0x2b888339faa0"/>
        <function-ref name="clr" scoped="" ref="0x2b888339fc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b888339cc70" loc="78:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b888339cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88833a0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b88833a01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b88833a0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88833a04b8"/>
        <function-ref name="get" scoped="" ref="0x2b88833a0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88833a07c8"/>
        <function-ref name="set" scoped="" ref="0x2b88833a0950"/>
        <function-ref name="clr" scoped="" ref="0x2b88833a0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b888339c438" loc="75:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b888339c438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b888339c788"/>
        <function-ref name="stop" scoped="" ref="0x2b888339c910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b8883399350" loc="82:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b8883399350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b88833996a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b88833a6dc0" loc="74:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b88833a6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b88833a3170"/>
        <function-ref name="sleep" scoped="" ref="0x2b88833a1640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b88833a3480"/>
        <function-ref name="dataReady" scoped="" ref="0x2b88833a17c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b88833a3790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b88833a3918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b88833a3aa0"/>
        <function-ref name="read" scoped="" ref="0x2b88833a3c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b88833a3db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b88833a2020"/>
        <function-ref name="setClock" scoped="" ref="0x2b88833a21a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b88833a2330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b88833a24b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b88833a2740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b88833a28c8"/>
        <function-ref name="write" scoped="" ref="0x2b88833a2a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b88833a2bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b88833a2d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b88833a1020"/>
        <function-ref name="getClock" scoped="" ref="0x2b88833a11a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b88833a1330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b88833a32f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b88833a3608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b88833a14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b888339b020" loc="80:/opt/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b888339b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888339b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b888339b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b888339b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888339b808"/>
        <function-ref name="get" scoped="" ref="0x2b888339b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888339bb18"/>
        <function-ref name="set" scoped="" ref="0x2b888339bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b888339be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b8883429020" loc="86:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b8883429020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b8883429390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8883429518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b8883427020" loc="89:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8883427020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b8883427390"/>
        <function-ref name="configure" scoped="" ref="0x2b8883427518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b888342a200" loc="85:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b888342a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b888342a570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b888342a6f8"/>
        <function-ref name="request" scoped="" ref="0x2b888342a880"/>
        <function-ref name="granted" scoped="" ref="0x2b888342aa08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b888342ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b8883429760" loc="87:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883429760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8883429ab0"/>
        <function-ref name="userId" scoped="" ref="0x2b8883429c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8884a0a620" loc="44:/opt/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8884a0a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8884a0a970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b8884a0abf8" loc="45:/opt/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b8884a0abf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b8884a09020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b8884a091a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b8884a09330"/>
        <function-ref name="dequeue" scoped="" ref="0x2b8884a094b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b8884a07820" loc="52:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b8884a07820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b8884a07b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8884a07d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b8884a068c0" loc="56:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8884a068c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b8884a06c30"/>
        <function-ref name="configure" scoped="" ref="0x2b8884a06db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b8884a050a0" loc="57:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b8884a050a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b8884a053f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b8884a05578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b8884a05700"/>
        <function-ref name="dequeue" scoped="" ref="0x2b8884a05888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884a08a28" loc="51:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884a08a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884a08d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884a07020"/>
        <function-ref name="request" scoped="" ref="0x2b8884a071a8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884a07330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884a074b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b8884a06020" loc="53:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8884a06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8884a06370"/>
        <function-ref name="userId" scoped="" ref="0x2b8884a064f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b8884a05b50" loc="69:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b8884a05b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8884a03020"/>
        <function-ref name="runTask" scoped="" ref="0x2b8884a031a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b888345c4a8" loc="45:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b888345c4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888345c7f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b888345c980"/>
        <function-ref name="toggle" scoped="" ref="0x2b888345cb08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b888345cc90"/>
        <function-ref name="get" scoped="" ref="0x2b888345ce18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b888345b020"/>
        <function-ref name="set" scoped="" ref="0x2b888345b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b888345b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883460870" loc="40:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883460870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883460bc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883460d48"/>
        <function-ref name="request" scoped="" ref="0x2b888345d020"/>
        <function-ref name="granted" scoped="" ref="0x2b888345d1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b888345d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2b888345d700" loc="44:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2b888345d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b888345da50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b888345dbd8"/>
        <function-ref name="request" scoped="" ref="0x2b888345dd60"/>
        <function-ref name="granted" scoped="" ref="0x2b888345c020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b888345c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b888344c3b8" loc="46:/opt/tinyos-2_1_2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b888344c3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b888344c708"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b888344c890"/>
        <function-ref name="led1On" scoped="" ref="0x2b888344ca18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b888344cba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b888344cd28"/>
        <function-ref name="get" scoped="" ref="0x2b8883449020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b88834491a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b88834497c8"/>
        <function-ref name="set" scoped="" ref="0x2b8883449330"/>
        <function-ref name="led0On" scoped="" ref="0x2b88834494b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8883449640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b88834443b8" loc="50:/opt/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b88834443b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883444708"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883444890"/>
        <function-ref name="toggle" scoped="" ref="0x2b8883444a18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883444ba0"/>
        <function-ref name="get" scoped="" ref="0x2b8883444d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883442020"/>
        <function-ref name="set" scoped="" ref="0x2b88834421a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8883442330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8883446670" loc="46:/opt/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8883446670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88834469c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b8883442648" loc="51:/opt/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b8883442648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883442998"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883442b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b8883442ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883442e30"/>
        <function-ref name="get" scoped="" ref="0x2b8883441020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88834411a8"/>
        <function-ref name="set" scoped="" ref="0x2b8883441330"/>
        <function-ref name="clr" scoped="" ref="0x2b88834414b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b8883446c38" loc="47:/opt/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8883446c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8883445020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b88834451a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b8883445330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b88834454b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8883445640"/>
        <function-ref name="get" scoped="" ref="0x2b88834457c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8883445950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8883444020"/>
        <function-ref name="set" scoped="" ref="0x2b8883445ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8883445c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b8883445de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b88834417d0" loc="52:/opt/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b88834417d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883441b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883441ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8883441e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883480020"/>
        <function-ref name="get" scoped="" ref="0x2b88834801a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883480330"/>
        <function-ref name="set" scoped="" ref="0x2b88834804b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8883480640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b8883447b08" loc="44:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b8883447b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883447e58"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883466020"/>
        <function-ref name="toggle" scoped="" ref="0x2b88834661a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883466330"/>
        <function-ref name="get" scoped="" ref="0x2b88834664b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883466640"/>
        <function-ref name="set" scoped="" ref="0x2b88834667c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8883466950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b8883466ca8" loc="45:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b8883466ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883465020"/>
        <function-ref name="isInput" scoped="" ref="0x2b88834651a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8883465330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88834654b8"/>
        <function-ref name="get" scoped="" ref="0x2b8883465640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88834657c8"/>
        <function-ref name="set" scoped="" ref="0x2b8883465950"/>
        <function-ref name="clr" scoped="" ref="0x2b8883465ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b8883463020" loc="47:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8883463020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8883463370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b8883465e30" loc="46:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b8883465e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88834641a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883464330"/>
        <function-ref name="toggle" scoped="" ref="0x2b88834644b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883464640"/>
        <function-ref name="get" scoped="" ref="0x2b88834647c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883464950"/>
        <function-ref name="set" scoped="" ref="0x2b8883464ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8883464c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b88834d27c0" loc="69:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b88834d27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834d2d10"/>
        <function-ref name="write" scoped="" ref="0x2b88834d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b88834ddcd0" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b88834ddcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834dc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b88834d67c0" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b88834d67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834d6b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834d6c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b88834d02e8" loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b88834d02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834d0638"/>
        <function-ref name="write" scoped="" ref="0x2b88834d07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b88834d0a88" loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b88834d0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834d0dd8"/>
        <function-ref name="write" scoped="" ref="0x2b88834cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b88834c42e8" loc="94:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b88834c42e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834c4638"/>
        <function-ref name="write" scoped="" ref="0x2b88834c47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b88834c72e8" loc="90:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b88834c72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834c7638"/>
        <function-ref name="write" scoped="" ref="0x2b88834c77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b88834db020" loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b88834db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834db370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b88834c82e8" loc="88:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b88834c82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834c8638"/>
        <function-ref name="write" scoped="" ref="0x2b88834c87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b88834d57c0" loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b88834d57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834d5b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834d5c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b88834d47c0" loc="67:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b88834d47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834d4b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834d4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b88834cda88" loc="79:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b88834cda88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834cddd8"/>
        <function-ref name="write" scoped="" ref="0x2b88834cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b88834cf2e8" loc="74:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b88834cf2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834cf638"/>
        <function-ref name="write" scoped="" ref="0x2b88834cf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b88834de740" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b88834de740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b88834dea90"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b88834dec18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b88834deda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b88834da900" loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b88834da900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834dac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b88834d8020" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b88834d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834d8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b88834d8738" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b88834d8738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834d8a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b88834c8a88" loc="89:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b88834c8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834c8dd8"/>
        <function-ref name="write" scoped="" ref="0x2b88834c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b88834dbc50" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b88834dbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b88834d4020" loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b88834d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834d4370"/>
        <function-ref name="write" scoped="" ref="0x2b88834d44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b88834d5020" loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b88834d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834d5370"/>
        <function-ref name="write" scoped="" ref="0x2b88834d54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b88834dd6b8" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b88834dd6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834dda08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b88834c5a88" loc="93:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b88834c5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834c5dd8"/>
        <function-ref name="write" scoped="" ref="0x2b88834c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b88834c7a88" loc="91:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b88834c7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834c7dd8"/>
        <function-ref name="write" scoped="" ref="0x2b88834c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b88834cb2e8" loc="80:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b88834cb2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834cb638"/>
        <function-ref name="write" scoped="" ref="0x2b88834cb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b88834c9a88" loc="87:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b88834c9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834c9dd8"/>
        <function-ref name="write" scoped="" ref="0x2b88834c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b88834ce2e8" loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b88834ce2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834ce638"/>
        <function-ref name="write" scoped="" ref="0x2b88834ce7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b88834c4a88" loc="97:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b88834c4a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b88834c35e8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b88834c3770"/>
        <function-ref name="write" scoped="" ref="0x2b88834c38f8"/>
        <function-ref name="beginRead" scoped="" ref="0x2b88834c3a80"/>
        <function-ref name="readDone" scoped="" ref="0x2b88834c3c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b88834dd0a0" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b88834dd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834dd3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b88834d6020" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b88834d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834d6370"/>
        <function-ref name="write" scoped="" ref="0x2b88834d64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b88834d2020" loc="68:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b88834d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834d2370"/>
        <function-ref name="write" scoped="" ref="0x2b88834d24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b88834cfa88" loc="75:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b88834cfa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834cfdd8"/>
        <function-ref name="write" scoped="" ref="0x2b88834ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b88834d12e8" loc="70:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b88834d12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834d1638"/>
        <function-ref name="write" scoped="" ref="0x2b88834d17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b88834dc368" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b88834dc368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834dc6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b88834d1a88" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b88834d1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834d1dd8"/>
        <function-ref name="write" scoped="" ref="0x2b88834d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b88834dfa48" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b88834dfa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b88834dfd98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88834de020"/>
        <function-ref name="request" scoped="" ref="0x2b88834de1a8"/>
        <function-ref name="granted" scoped="" ref="0x2b88834de330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b88834de4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b88834d8d50" loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b88834d8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834d70d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b88834d79b8" loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b88834d79b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834d7d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b88834c92e8" loc="86:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b88834c92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834c9638"/>
        <function-ref name="write" scoped="" ref="0x2b88834c97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b88834caa88" loc="85:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b88834caa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834cadd8"/>
        <function-ref name="write" scoped="" ref="0x2b88834c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b88834da2e8" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b88834da2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834da638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b88834ca2e8" loc="82:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b88834ca2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834ca638"/>
        <function-ref name="write" scoped="" ref="0x2b88834ca7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b88834c52e8" loc="92:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b88834c52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834c5638"/>
        <function-ref name="write" scoped="" ref="0x2b88834c57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b88834cba88" loc="81:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b88834cba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834cbdd8"/>
        <function-ref name="write" scoped="" ref="0x2b88834ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b88834dc980" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b88834dc980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834dccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b88834cd2e8" loc="78:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b88834cd2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834cd638"/>
        <function-ref name="write" scoped="" ref="0x2b88834cd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b88834db638" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b88834db638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834db988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b88834cea88" loc="77:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b88834cea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834cedd8"/>
        <function-ref name="write" scoped="" ref="0x2b88834cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b88834d73a0" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b88834d73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834d76f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b8883504020" loc="98:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b8883504020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b8883504370"/>
        <function-ref name="writeDone" scoped="" ref="0x2b88835044f8"/>
        <function-ref name="write" scoped="" ref="0x2b8883504680"/>
        <function-ref name="beginRead" scoped="" ref="0x2b8883504808"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883504990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b88834f2c90" loc="69:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b88834f2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834f13e8"/>
        <function-ref name="write" scoped="" ref="0x2b88834f1570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b88834fc3a0" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b88834fc3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834fc6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b88834f6dd8" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b88834f6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834f4170"/>
        <function-ref name="write" scoped="" ref="0x2b88834f42f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b88834f07c0" loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b88834f07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834f0b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834f0c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b88834ef020" loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b88834ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834ef370"/>
        <function-ref name="write" scoped="" ref="0x2b88834ef4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b88834e47c0" loc="94:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b88834e47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834e4b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834e4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b88834e67c0" loc="90:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b88834e67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834e6b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834e6c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b88834fa638" loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b88834fa638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834fa988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b88834e87c0" loc="88:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b88834e87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834e8b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834e8c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b88834f4d60" loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b88834f4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834f30d8"/>
        <function-ref name="write" scoped="" ref="0x2b88834f3260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b88834f3cc8" loc="67:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b88834f3cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834f20a0"/>
        <function-ref name="write" scoped="" ref="0x2b88834f2228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b88834eb020" loc="79:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b88834eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834eb370"/>
        <function-ref name="write" scoped="" ref="0x2b88834eb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b88834ef7c0" loc="74:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b88834ef7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834efb10"/>
        <function-ref name="write" scoped="" ref="0x2b88834efc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b88834feda0" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b88834feda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b88834fd170"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b88834fd2f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b88834fd480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b88834f8020" loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b88834f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834f8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b88834f8638" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b88834f8638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834f8a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b88834f8d50" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b88834f8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834f70d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b88834e6020" loc="89:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b88834e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834e6370"/>
        <function-ref name="write" scoped="" ref="0x2b88834e64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b88834f92e8" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b88834f92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834f9638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b88834f3528" loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b88834f3528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834f3878"/>
        <function-ref name="write" scoped="" ref="0x2b88834f3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b88834f45c0" loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b88834f45c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834f4910"/>
        <function-ref name="write" scoped="" ref="0x2b88834f4a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b88834fdd60" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b88834fdd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834fc0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b88834e4020" loc="93:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b88834e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834e4370"/>
        <function-ref name="write" scoped="" ref="0x2b88834e44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b88834e5020" loc="91:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b88834e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834e5370"/>
        <function-ref name="write" scoped="" ref="0x2b88834e54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b88834eb7c0" loc="80:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b88834eb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834ebb10"/>
        <function-ref name="write" scoped="" ref="0x2b88834ebc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b88834e8020" loc="87:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b88834e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834e8370"/>
        <function-ref name="write" scoped="" ref="0x2b88834e84f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b88834ed7c0" loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b88834ed7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834edb10"/>
        <function-ref name="write" scoped="" ref="0x2b88834edc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b8883525020" loc="97:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b8883525020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b8883525770"/>
        <function-ref name="writeDone" scoped="" ref="0x2b88835258f8"/>
        <function-ref name="write" scoped="" ref="0x2b8883525a80"/>
        <function-ref name="beginRead" scoped="" ref="0x2b8883525c08"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883525d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b88834fd748" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b88834fd748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834fda98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b88834f6638" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b88834f6638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834f6988"/>
        <function-ref name="write" scoped="" ref="0x2b88834f6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b88834f24f0" loc="68:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b88834f24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834f2840"/>
        <function-ref name="write" scoped="" ref="0x2b88834f29c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b88834ed020" loc="75:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b88834ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834ed370"/>
        <function-ref name="write" scoped="" ref="0x2b88834ed4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b88834f1838" loc="70:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b88834f1838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834f1b88"/>
        <function-ref name="write" scoped="" ref="0x2b88834f1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b88834fc9b8" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b88834fc9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834fcd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b88834f0020" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b88834f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834f0370"/>
        <function-ref name="write" scoped="" ref="0x2b88834f04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b88834fe1a8" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b88834fe1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b88834fe4f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88834fe680"/>
        <function-ref name="request" scoped="" ref="0x2b88834fe808"/>
        <function-ref name="granted" scoped="" ref="0x2b88834fe990"/>
        <function-ref name="isOwner" scoped="" ref="0x2b88834feb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b88834f73a0" loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b88834f73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834f76f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b88834f6020" loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b88834f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834f6370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b88834e97c0" loc="86:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b88834e97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834e9b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834e9c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b88834e9020" loc="85:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b88834e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834e9370"/>
        <function-ref name="write" scoped="" ref="0x2b88834e94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b88834f9900" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b88834f9900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834f9c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b88834ea7c0" loc="82:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b88834ea7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834eab10"/>
        <function-ref name="write" scoped="" ref="0x2b88834eac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b88834e57c0" loc="92:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b88834e57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834e5b10"/>
        <function-ref name="write" scoped="" ref="0x2b88834e5c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b88834ea020" loc="81:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b88834ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834ea370"/>
        <function-ref name="write" scoped="" ref="0x2b88834ea4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b88834fa020" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b88834fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834fa370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b88834ec7c0" loc="78:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b88834ec7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834ecb10"/>
        <function-ref name="write" scoped="" ref="0x2b88834ecc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b88834fac50" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b88834fac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b88834ec020" loc="77:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b88834ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88834ec370"/>
        <function-ref name="write" scoped="" ref="0x2b88834ec4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b88834f79b8" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b88834f79b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88834f7d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b88835240a0" loc="98:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b88835240a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b88835243f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883524578"/>
        <function-ref name="write" scoped="" ref="0x2b8883524700"/>
        <function-ref name="beginRead" scoped="" ref="0x2b8883524888"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883524a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b888351c2b8" loc="54:/opt/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b888351c2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b888351c608"/>
        <function-ref name="changed" scoped="" ref="0x2b888351c790"/>
        <function-ref name="amGroup" scoped="" ref="0x2b888351c918"/>
        <function-ref name="setAddress" scoped="" ref="0x2b888351caa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b888351ed10" loc="40:/opt/tinyos-2_1_2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b888351ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b888350b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b888353c140" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b888353c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b888353c490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b888353c618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b888353c7a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b888353c928"/>
        <function-ref name="setCca" scoped="" ref="0x2b888353cab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b888353cc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b888353bcb8" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b888353bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b888353a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2b888353d480" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b888353d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b888353d7d0"/>
        <function-ref name="cancel" scoped="" ref="0x2b888353d958"/>
        <function-ref name="modify" scoped="" ref="0x2b888353dae0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b888353dc68"/>
        <function-ref name="resend" scoped="" ref="0x2b888353ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b8883540c48" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b8883540c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b888353d020"/>
        <function-ref name="stop" scoped="" ref="0x2b888353d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b888353a458" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2b888353a458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b888353a7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b8883532638" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b8883532638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b8883532988"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b8883532b10"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b8883532c98"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b8883532e20"/>
        <function-ref name="setCca" scoped="" ref="0x2b8883531020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b88835311a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b888352a460" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b888352a460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b8883528900"/>
        <function-ref name="clear" scoped="" ref="0x2b8883527020"/>
        <function-ref name="isValid" scoped="" ref="0x2b8883528220"/>
        <function-ref name="set" scoped="" ref="0x2b8883527700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b8883559de0" loc="78:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b8883559de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883558170"/>
        <function-ref name="write" scoped="" ref="0x2b88835582f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b8883558650" loc="79:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b8883558650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88835589a0"/>
        <function-ref name="write" scoped="" ref="0x2b8883558b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b88835315b0" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b88835315b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b8883531900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2b888355c478" loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b888355c478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b888355c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2b8883562d60" loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2b8883562d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b888356a0d8"/>
        <function-ref name="disable" scoped="" ref="0x2b888356a260"/>
        <function-ref name="captured" scoped="" ref="0x2b888356a3e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b888356a570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2b88835306c8" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x2b88835306c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b888352c020"/>
        <function-ref name="fired" scoped="" ref="0x2b888352d020"/>
        <function-ref name="startAt" scoped="" ref="0x2b888352d930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b888352d4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b888352c4a8"/>
        <function-ref name="start" scoped="" ref="0x2b888352f578"/>
        <function-ref name="stop" scoped="" ref="0x2b888352fa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b888352c940" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b888352c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b888352cc90"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b888352ce18"/>
        <function-ref name="getRssi" scoped="" ref="0x2b888352b020"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b888352b1a8"/>
        <function-ref name="getPower" scoped="" ref="0x2b888352b330"/>
        <function-ref name="getLqi" scoped="" ref="0x2b888352b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2b888355e538" loc="68:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b888355e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888355e888"/>
        <function-ref name="write" scoped="" ref="0x2b888355ea10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b888355eda8" loc="69:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b888355eda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888355d170"/>
        <function-ref name="write" scoped="" ref="0x2b888355d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2b8883552750" loc="83:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b8883552750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8883552aa0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b8883552c28"/>
        <function-ref name="sfd" scoped="" ref="0x2b8883552db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8883533880" loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8883533880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883533bd0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883533d58"/>
        <function-ref name="modify" scoped="" ref="0x2b8883532020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88835321a8"/>
        <function-ref name="resend" scoped="" ref="0x2b8883532330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2b8883560cb0" loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b8883560cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b888355f0a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b888355f228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b888355f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2b888355cb68" loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b888355cb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b888355a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b8883569c98" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b8883569c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883567020"/>
        <function-ref name="isInput" scoped="" ref="0x2b88835671a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8883567330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88835674b8"/>
        <function-ref name="get" scoped="" ref="0x2b8883567640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88835677c8"/>
        <function-ref name="set" scoped="" ref="0x2b8883567950"/>
        <function-ref name="clr" scoped="" ref="0x2b8883567ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8883534878" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8883534878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8883534bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b888352b7e8" loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b888352b7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b888352bb38"/>
        <function-ref name="getHeader" scoped="" ref="0x2b888352bcc0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b888352be48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b88835621d8" loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b88835621d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8883562528"/>
        <function-ref name="isSet" scoped="" ref="0x2b88835626b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883562838"/>
        <function-ref name="set" scoped="" ref="0x2b88835629c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b888355a3d0" loc="74:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b888355a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888355a920"/>
        <function-ref name="write" scoped="" ref="0x2b888355aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b8883560020" loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b8883560020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883560370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88835604f8"/>
        <function-ref name="request" scoped="" ref="0x2b8883560680"/>
        <function-ref name="granted" scoped="" ref="0x2b8883560808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883560990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2b888356a8b8" loc="61:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b888356a8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b888356ad08"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883569020"/>
        <function-ref name="toggle" scoped="" ref="0x2b88835691a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883569330"/>
        <function-ref name="get" scoped="" ref="0x2b88835694b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883569640"/>
        <function-ref name="set" scoped="" ref="0x2b88835697c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8883569950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b8883558e80" loc="80:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b8883558e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88835571f8"/>
        <function-ref name="write" scoped="" ref="0x2b8883557380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2b88835576f0" loc="81:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b88835576f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883557a40"/>
        <function-ref name="write" scoped="" ref="0x2b8883557bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b888355d670" loc="70:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b888355d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b888355d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2b8883567e20" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2b8883567e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b88835611a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883561330"/>
        <function-ref name="toggle" scoped="" ref="0x2b88835614b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883561640"/>
        <function-ref name="get" scoped="" ref="0x2b88835617c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883561950"/>
        <function-ref name="set" scoped="" ref="0x2b8883561ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8883561c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b88835550c0" loc="84:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b88835550c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8883555410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8883555598"/>
        <function-ref name="led1On" scoped="" ref="0x2b8883555720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b88835558a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8883555a30"/>
        <function-ref name="get" scoped="" ref="0x2b8883555bb8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8883555d40"/>
        <function-ref name="led2Off" scoped="" ref="0x2b88835544b8"/>
        <function-ref name="set" scoped="" ref="0x2b8883554020"/>
        <function-ref name="led0On" scoped="" ref="0x2b88835541a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8883554330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b8883559558" loc="77:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b8883559558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88835598a8"/>
        <function-ref name="write" scoped="" ref="0x2b8883559a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b8883533020" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b8883533020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8883533370"/>
        <function-ref name="stop" scoped="" ref="0x2b88835334f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2b888355f720" loc="67:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b888355f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b888355fa70"/>
        <function-ref name="writeDone" scoped="" ref="0x2b888355fbf8"/>
        <function-ref name="write" scoped="" ref="0x2b888355fd80"/>
        <function-ref name="beginRead" scoped="" ref="0x2b888355e020"/>
        <function-ref name="readDone" scoped="" ref="0x2b888355e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2b888355dd40" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b888355dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b888355c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2b888355ae30" loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b888355ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b8883531cf8" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2b8883531cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b88835300a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b8883613470" loc="69:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b8883613470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88836139c0"/>
        <function-ref name="write" scoped="" ref="0x2b8883613b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b88835d89b8" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b88835d89b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d8d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b88835d1470" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b88835d1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88835d17c0"/>
        <function-ref name="write" scoped="" ref="0x2b88835d1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b8883612d98" loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b8883612d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883611170"/>
        <function-ref name="write" scoped="" ref="0x2b88836112f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b88836115c0" loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b88836115c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883611910"/>
        <function-ref name="write" scoped="" ref="0x2b8883611a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b8883606c10" loc="94:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b8883606c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883605020"/>
        <function-ref name="write" scoped="" ref="0x2b88836051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b8883609c10" loc="90:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b8883609c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883608020"/>
        <function-ref name="write" scoped="" ref="0x2b88836081a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b88835d7c50" loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b88835d7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b888360ac10" loc="88:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b888360ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883609020"/>
        <function-ref name="write" scoped="" ref="0x2b88836091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b8883616470" loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b8883616470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88836167c0"/>
        <function-ref name="write" scoped="" ref="0x2b8883616948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b8883614470" loc="67:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b8883614470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88836147c0"/>
        <function-ref name="write" scoped="" ref="0x2b8883614948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b888360d470" loc="79:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b888360d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888360d7c0"/>
        <function-ref name="write" scoped="" ref="0x2b888360d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b8883611d60" loc="74:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b8883611d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88836100d8"/>
        <function-ref name="write" scoped="" ref="0x2b8883610260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b88835d9430" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b88835d9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b88835d9780"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b88835d9908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b88835d9a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b88835d5638" loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b88835d5638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d5988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b88835d5c50" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b88835d5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d30d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b88835d33a0" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b88835d33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d36f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b8883609470" loc="89:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b8883609470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88836097c0"/>
        <function-ref name="write" scoped="" ref="0x2b8883609948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b88835d6900" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b88835d6900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d6c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b8883616c10" loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b8883616c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883614020"/>
        <function-ref name="write" scoped="" ref="0x2b88836141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b88835d1c10" loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b88835d1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883616020"/>
        <function-ref name="write" scoped="" ref="0x2b88836161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b88835d83a0" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b88835d83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d86f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b8883606470" loc="93:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b8883606470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88836067c0"/>
        <function-ref name="write" scoped="" ref="0x2b8883606948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b8883608470" loc="91:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b8883608470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88836087c0"/>
        <function-ref name="write" scoped="" ref="0x2b8883608948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b888360dc10" loc="80:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b888360dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888360c020"/>
        <function-ref name="write" scoped="" ref="0x2b888360c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b888360a470" loc="87:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b888360a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888360a7c0"/>
        <function-ref name="write" scoped="" ref="0x2b888360a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b8883610cc8" loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b8883610cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888360f0a0"/>
        <function-ref name="write" scoped="" ref="0x2b888360f228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b8883605470" loc="97:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b8883605470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b8883605bc0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883605d48"/>
        <function-ref name="write" scoped="" ref="0x2b8883604020"/>
        <function-ref name="beginRead" scoped="" ref="0x2b88836041a8"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883604330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b88835d9d58" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b88835d9d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d80d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b88835d2c50" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b88835d2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88835d1020"/>
        <function-ref name="write" scoped="" ref="0x2b88835d11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b8883614c10" loc="68:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b8883614c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883613020"/>
        <function-ref name="write" scoped="" ref="0x2b88836131a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b8883610528" loc="75:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b8883610528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883610878"/>
        <function-ref name="write" scoped="" ref="0x2b8883610a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b8883613e10" loc="70:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b8883613e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88836121a8"/>
        <function-ref name="write" scoped="" ref="0x2b8883612330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b88835d7020" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b88835d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b88836125f8" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b88836125f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883612948"/>
        <function-ref name="write" scoped="" ref="0x2b8883612ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b88835da7d0" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b88835da7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b88835dab20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88835daca8"/>
        <function-ref name="request" scoped="" ref="0x2b88835dae30"/>
        <function-ref name="granted" scoped="" ref="0x2b88835d9020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b88835d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b88835d39b8" loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b88835d39b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d3d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b88835d2638" loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b88835d2638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d2988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b888360bc10" loc="86:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b888360bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888360a020"/>
        <function-ref name="write" scoped="" ref="0x2b888360a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b888360b470" loc="85:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b888360b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888360b7c0"/>
        <function-ref name="write" scoped="" ref="0x2b888360b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b88835d5020" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b88835d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b888360cc10" loc="82:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b888360cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888360b020"/>
        <function-ref name="write" scoped="" ref="0x2b888360b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b8883608c10" loc="92:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b8883608c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883606020"/>
        <function-ref name="write" scoped="" ref="0x2b88836061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b888360c470" loc="81:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b888360c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888360c7c0"/>
        <function-ref name="write" scoped="" ref="0x2b888360c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b88835d7638" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b88835d7638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d7988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b888360fc90" loc="78:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b888360fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888360d020"/>
        <function-ref name="write" scoped="" ref="0x2b888360d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b88835d62e8" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b88835d62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d6638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b888360f4f0" loc="77:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b888360f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888360f840"/>
        <function-ref name="write" scoped="" ref="0x2b888360f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b88835d2020" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b88835d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88835d2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b88836045f8" loc="98:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b88836045f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b8883604948"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883604ad0"/>
        <function-ref name="write" scoped="" ref="0x2b8883604c58"/>
        <function-ref name="beginRead" scoped="" ref="0x2b8883604de0"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883603020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b88835f8868" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b88835f8868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b88835f8bb8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b88835f8d40"/>
        <function-ref name="sfd" scoped="" ref="0x2b88835f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b88835f72f0" loc="43:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b88835f72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b88835f7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b88835f7a48" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2b88835f7a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b88835f7d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b88835f8080" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b88835f8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b88835f83d0"/>
        <function-ref name="stop" scoped="" ref="0x2b88835f8558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2b8883636998" loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2b8883636998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883636ce8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883636e70"/>
        <function-ref name="toggle" scoped="" ref="0x2b8883634020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b88836341a8"/>
        <function-ref name="get" scoped="" ref="0x2b8883634330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b88836344b8"/>
        <function-ref name="set" scoped="" ref="0x2b8883634640"/>
        <function-ref name="clr" scoped="" ref="0x2b88836347c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b888362ecb8" loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b888362ecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b888362d0a0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b888362d228"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b888362d3b0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b888362d538"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b888362d6c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b888362d848"/>
        <function-ref name="setChannel" scoped="" ref="0x2b888362d9d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b888362db58"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b888362dce0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b888362de68"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b888362c020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b888362c1a8"/>
        <function-ref name="sync" scoped="" ref="0x2b888362c330"/>
        <function-ref name="getChannel" scoped="" ref="0x2b888362c5b8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b888362c740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2b8883617020" loc="148:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x2b8883617020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8883617370"/>
        <function-ref name="runTask" scoped="" ref="0x2b88836174f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b888362cd08" loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b888362cd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b888362a1f0"/>
        <function-ref name="clear" scoped="" ref="0x2b888362a8d0"/>
        <function-ref name="isValid" scoped="" ref="0x2b888362bac0"/>
        <function-ref name="set" scoped="" ref="0x2b8883628020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2b8883634b28" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2b8883634b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883634e78"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883633030"/>
        <function-ref name="toggle" scoped="" ref="0x2b88836331b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883633340"/>
        <function-ref name="get" scoped="" ref="0x2b88836334c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883633650"/>
        <function-ref name="set" scoped="" ref="0x2b88836337d8"/>
        <function-ref name="clr" scoped="" ref="0x2b8883633960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b88836278a8" loc="69:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b88836278a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883627bf8"/>
        <function-ref name="write" scoped="" ref="0x2b8883627d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b8883626130" loc="70:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b8883626130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883626480"/>
        <function-ref name="write" scoped="" ref="0x2b8883626608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2b8883625208" loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b8883625208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883625558"/>
        <function-ref name="write" scoped="" ref="0x2b88836256e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b888362f3a8" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b888362f3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b888362f6f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b888362f880"/>
        <function-ref name="getRssi" scoped="" ref="0x2b888362fa08"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b888362fb90"/>
        <function-ref name="getPower" scoped="" ref="0x2b888362fd18"/>
        <function-ref name="getLqi" scoped="" ref="0x2b888362e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b8883639e48" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b8883639e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b88836381c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b8883638348"/>
        <function-ref name="sfd" scoped="" ref="0x2b88836384d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2b8883630520" loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b8883630520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b8883630870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b88836376b8" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b88836376b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883637a08"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883637b90"/>
        <function-ref name="toggle" scoped="" ref="0x2b8883637d18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883636020"/>
        <function-ref name="get" scoped="" ref="0x2b88836361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883636330"/>
        <function-ref name="set" scoped="" ref="0x2b88836364b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8883636640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2b8883625a70" loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b8883625a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883625dc0"/>
        <function-ref name="write" scoped="" ref="0x2b8883624020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8883639020" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8883639020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8883639370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b888362e350" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b888362e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b888362e6a0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b888362e828"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b888362e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b88836387a0" loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b88836387a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8883638af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b8883632900" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b8883632900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883632c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883632dd8"/>
        <function-ref name="request" scoped="" ref="0x2b8883631020"/>
        <function-ref name="granted" scoped="" ref="0x2b88836311a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883631330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b8883626960" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b8883626960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883626cb0"/>
        <function-ref name="write" scoped="" ref="0x2b8883626e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2b88836316a0" loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b88836316a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b88836319f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883631b78"/>
        <function-ref name="write" scoped="" ref="0x2b8883631d00"/>
        <function-ref name="beginRead" scoped="" ref="0x2b8883630020"/>
        <function-ref name="readDone" scoped="" ref="0x2b88836301a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b8883624398" loc="74:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b8883624398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88836248e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b8883637020" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2b8883637020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b8883637370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8883624ba0" loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8883624ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8883623020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b88836231a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b8883623330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b88836234b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8883623640"/>
        <function-ref name="get" scoped="" ref="0x2b88836237c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8883623950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8883622020"/>
        <function-ref name="set" scoped="" ref="0x2b8883623ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8883623c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b8883623de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b8883627020" loc="68:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b8883627020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883627370"/>
        <function-ref name="write" scoped="" ref="0x2b88836274f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2b88836288e0" loc="67:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b88836288e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b8883628c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2b8883633d40" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b8883633d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b88836320d8"/>
        <function-ref name="disable" scoped="" ref="0x2b8883632260"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b88836323e8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b8883632570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2b8883630c10" loc="61:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b8883630c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b888362f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b8883639660" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b8883639660"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b88836399b0"/>
        <function-ref name="stop" scoped="" ref="0x2b8883639b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b888368f6b0" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b888368f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b888368fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b88836934a8" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b88836934a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b88836937f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b8883693980"/>
        <function-ref name="getRssi" scoped="" ref="0x2b8883693b08"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b8883693c90"/>
        <function-ref name="getPower" scoped="" ref="0x2b8883693e18"/>
        <function-ref name="getLqi" scoped="" ref="0x2b8883690020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b888368e130" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b888368e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b888368d588"/>
        <function-ref name="clear" scoped="" ref="0x2b888368dc68"/>
        <function-ref name="isValid" scoped="" ref="0x2b888368ee80"/>
        <function-ref name="set" scoped="" ref="0x2b888368b380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b8883690d08" loc="43:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8883690d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b888368f0a0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b888368f228"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b888368f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b8883687ac8" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b8883687ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8883687e18"/>
        <function-ref name="isSet" scoped="" ref="0x2b8883686020"/>
        <function-ref name="cancel" scoped="" ref="0x2b88836861a8"/>
        <function-ref name="set" scoped="" ref="0x2b8883686330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b888368a020" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b888368a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b8883689478"/>
        <function-ref name="clear" scoped="" ref="0x2b8883689b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b888368ad70"/>
        <function-ref name="set" scoped="" ref="0x2b8883687278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b88836903b8" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b88836903b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8883690708"/>
        <function-ref name="noAck" scoped="" ref="0x2b8883690890"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8883690a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b8883681630" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8883681630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b8883681980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b88836832e8" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b88836832e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b8883683638"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b88836837c0"/>
        <function-ref name="getRssi" scoped="" ref="0x2b8883683948"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b8883683ad0"/>
        <function-ref name="getPower" scoped="" ref="0x2b8883683c58"/>
        <function-ref name="getLqi" scoped="" ref="0x2b8883683de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b88836c0618" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b88836c0618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88836c0968"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b88836c0af0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88836c0c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88836c0e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b88836bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b88836c8060" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b88836c8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b88836c64b8"/>
        <function-ref name="clear" scoped="" ref="0x2b88836c6b98"/>
        <function-ref name="isValid" scoped="" ref="0x2b88836c8db0"/>
        <function-ref name="set" scoped="" ref="0x2b88836c52b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b8883682b60" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8883682b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b8883681020"/>
        <function-ref name="getHeader" scoped="" ref="0x2b88836811a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b8883681330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b88836c1ac8" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b88836c1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b88836c1e18"/>
        <function-ref name="isSet" scoped="" ref="0x2b88836c0020"/>
        <function-ref name="cancel" scoped="" ref="0x2b88836c01a8"/>
        <function-ref name="set" scoped="" ref="0x2b88836c0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b88836bf520" loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b88836bf520"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b88836be0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b88836be788" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b88836be788"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b88836bc3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b88836c4020" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b88836c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b88836c2478"/>
        <function-ref name="clear" scoped="" ref="0x2b88836c2b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b88836c4d70"/>
        <function-ref name="set" scoped="" ref="0x2b88836c1278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b8883682210" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b8883682210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8883682560"/>
        <function-ref name="noAck" scoped="" ref="0x2b88836826e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8883682870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b8883703528" loc="48:/opt/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b8883703528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b88837010f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b8883701720" loc="49:/opt/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8883701720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b8882777178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8883700578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b88836ff020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8883700a00"/>
        <function-ref name="overflow" scoped="" ref="0x2b88836ff4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b88836fd730" loc="45:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b88836fd730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b88836f9a18"/>
        <function-ref name="fired" scoped="" ref="0x2b88836fa158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b88836fae48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b88836fa9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b88836f82e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b88836f9e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b88836fa5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b88836fc370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b88836f9448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b88836fc810"/>
        <function-ref name="stop" scoped="" ref="0x2b88836fccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b8883732c90" loc="69:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b8883732c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88837313e8"/>
        <function-ref name="write" scoped="" ref="0x2b8883731570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b88836f22e8" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b88836f22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88836f2638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b8883736dd8" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b8883736dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883735170"/>
        <function-ref name="write" scoped="" ref="0x2b88837352f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b88837307c0" loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b88837307c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883730b10"/>
        <function-ref name="write" scoped="" ref="0x2b8883730c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b888372f020" loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b888372f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888372f370"/>
        <function-ref name="write" scoped="" ref="0x2b888372f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b88837247c0" loc="94:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b88837247c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883724b10"/>
        <function-ref name="write" scoped="" ref="0x2b8883724c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b88837277c0" loc="90:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b88837277c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883727b10"/>
        <function-ref name="write" scoped="" ref="0x2b8883727c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b88836f1638" loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b88836f1638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88836f1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b88837287c0" loc="88:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b88837287c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883728b10"/>
        <function-ref name="write" scoped="" ref="0x2b8883728c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b8883735d60" loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b8883735d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88837340d8"/>
        <function-ref name="write" scoped="" ref="0x2b8883734260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b8883734cc8" loc="67:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b8883734cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88837320a0"/>
        <function-ref name="write" scoped="" ref="0x2b8883732228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b888372b020" loc="79:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b888372b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888372b370"/>
        <function-ref name="write" scoped="" ref="0x2b888372b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b888372f7c0" loc="74:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b888372f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888372fb10"/>
        <function-ref name="write" scoped="" ref="0x2b888372fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b88836f4cd8" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b88836f4cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b88836f30a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b88836f3228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b88836f33b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b88836ee020" loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b88836ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88836ee370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b88836ee638" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b88836ee638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88836eea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b88836eed50" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b88836eed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88837370d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b8883727020" loc="89:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b8883727020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883727370"/>
        <function-ref name="write" scoped="" ref="0x2b88837274f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b88836f02e8" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b88836f02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88836f0638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b8883734528" loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b8883734528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883734878"/>
        <function-ref name="write" scoped="" ref="0x2b8883734a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b88837355c0" loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b88837355c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883735910"/>
        <function-ref name="write" scoped="" ref="0x2b8883735a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b88836f3c90" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b88836f3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88836f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b8883724020" loc="93:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b8883724020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883724370"/>
        <function-ref name="write" scoped="" ref="0x2b88837244f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b8883726020" loc="91:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b8883726020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883726370"/>
        <function-ref name="write" scoped="" ref="0x2b88837264f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b888372b7c0" loc="80:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b888372b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888372bb10"/>
        <function-ref name="write" scoped="" ref="0x2b888372bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b8883728020" loc="87:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b8883728020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883728370"/>
        <function-ref name="write" scoped="" ref="0x2b88837284f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b888372e7c0" loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b888372e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888372eb10"/>
        <function-ref name="write" scoped="" ref="0x2b888372ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b8883723020" loc="97:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b8883723020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b8883723770"/>
        <function-ref name="writeDone" scoped="" ref="0x2b88837238f8"/>
        <function-ref name="write" scoped="" ref="0x2b8883723a80"/>
        <function-ref name="beginRead" scoped="" ref="0x2b8883723c08"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883723d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b88836f3678" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b88836f3678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88836f39c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b8883736638" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b8883736638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883736988"/>
        <function-ref name="write" scoped="" ref="0x2b8883736b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b88837324f0" loc="68:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b88837324f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883732840"/>
        <function-ref name="write" scoped="" ref="0x2b88837329c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b888372e020" loc="75:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b888372e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888372e370"/>
        <function-ref name="write" scoped="" ref="0x2b888372e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b8883731838" loc="70:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b8883731838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883731b88"/>
        <function-ref name="write" scoped="" ref="0x2b8883731d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b88836f2900" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b88836f2900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88836f2c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b8883730020" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b8883730020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883730370"/>
        <function-ref name="write" scoped="" ref="0x2b88837304f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b88836f40e0" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b88836f40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b88836f4430"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88836f45b8"/>
        <function-ref name="request" scoped="" ref="0x2b88836f4740"/>
        <function-ref name="granted" scoped="" ref="0x2b88836f48c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b88836f4a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b88837373a0" loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b88837373a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88837376f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b8883736020" loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b8883736020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b8883736370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b88837297c0" loc="86:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b88837297c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883729b10"/>
        <function-ref name="write" scoped="" ref="0x2b8883729c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b8883729020" loc="85:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b8883729020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883729370"/>
        <function-ref name="write" scoped="" ref="0x2b88837294f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b88836f0900" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b88836f0900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88836f0c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b888372a7c0" loc="82:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b888372a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888372ab10"/>
        <function-ref name="write" scoped="" ref="0x2b888372ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b88837267c0" loc="92:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b88837267c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883726b10"/>
        <function-ref name="write" scoped="" ref="0x2b8883726c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b888372a020" loc="81:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b888372a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888372a370"/>
        <function-ref name="write" scoped="" ref="0x2b888372a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b88836f1020" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b88836f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88836f1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b888372d7c0" loc="78:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b888372d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888372db10"/>
        <function-ref name="write" scoped="" ref="0x2b888372dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b88836f1c50" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b88836f1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b88836f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b888372d020" loc="77:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b888372d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888372d370"/>
        <function-ref name="write" scoped="" ref="0x2b888372d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b88837379b8" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b88837379b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b8883737d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b88837220a0" loc="98:/opt/tinyos-2_1_2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b88837220a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b88837223f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883722578"/>
        <function-ref name="write" scoped="" ref="0x2b8883722700"/>
        <function-ref name="beginRead" scoped="" ref="0x2b8883722888"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883722a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b888374c740" loc="67:/opt/tinyos-2_1_2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b888374c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b888374ca90"/>
        <function-ref name="toIdle" scoped="" ref="0x2b888374cc18"/>
        <function-ref name="isState" scoped="" ref="0x2b888374cda0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b888374a020"/>
        <function-ref name="requestState" scoped="" ref="0x2b888374a1a8"/>
        <function-ref name="forceState" scoped="" ref="0x2b888374a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b8883741020" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b8883741020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883741370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88837414f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883741680"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883741808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8883741990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8883742210" loc="40:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8883742210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883742560"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88837426e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883742870"/>
        <function-ref name="cancel" scoped="" ref="0x2b88837429f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8883742b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b888373dc78" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b888373dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b888373c020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b888373c1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888373c330"/>
        <function-ref name="cancel" scoped="" ref="0x2b888373c4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b888373c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b88837408e0" loc="40:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b88837408e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883740c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883740db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888373d020"/>
        <function-ref name="cancel" scoped="" ref="0x2b888373d1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b888373d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b888373b740" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b888373b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b888373ba90"/>
        <function-ref name="rand32" scoped="" ref="0x2b888373bc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b888373d5a8" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b888373d5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b888373d8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b888373a020" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b888373a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b888373a370"/>
        <function-ref name="getHeader" scoped="" ref="0x2b888373a4f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b888373a680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2b888373c8c0" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b888373c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b888373cc10"/>
        <function-ref name="toIdle" scoped="" ref="0x2b888373cd98"/>
        <function-ref name="isState" scoped="" ref="0x2b888373b020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b888373b1a8"/>
        <function-ref name="requestState" scoped="" ref="0x2b888373b330"/>
        <function-ref name="forceState" scoped="" ref="0x2b888373b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b888373fc58" loc="67:/opt/tinyos-2_1_2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b888373fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b888373e020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b888373e1a8"/>
        <function-ref name="isState" scoped="" ref="0x2b888373e330"/>
        <function-ref name="isIdle" scoped="" ref="0x2b888373e4b8"/>
        <function-ref name="requestState" scoped="" ref="0x2b888373e640"/>
        <function-ref name="forceState" scoped="" ref="0x2b888373e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b8883773870" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b8883773870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8883773bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8883776a20" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8883776a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8883776d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b8883773168" loc="43:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b8883773168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b88837734b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b888376d128" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b888376d128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888376d478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b888376f9e0" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b888376f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b888376fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8883772cc8" loc="43:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8883772cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888376f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b888376d768" loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b888376d768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b888376dab8"/>
        <function-ref name="getHeader" scoped="" ref="0x2b888376dc40"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b888376ddc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b888376f418" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b888376f418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888376f768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b888378d1f0" loc="75:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b888378d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888378d540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b888378d840" loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b888378d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b888378db90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b888378dd18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888378c020"/>
        <function-ref name="cancel" scoped="" ref="0x2b888378c1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b888378c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8883791db0" loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8883791db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883790170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88837902f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883790480"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883790608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8883790790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b888378f0c8" loc="68:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2b888378f0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b888378f418"/>
        <function-ref name="getPayload" scoped="" ref="0x2b888378f5a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888378f728"/>
        <function-ref name="cancel" scoped="" ref="0x2b888378f8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b888378fa38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8883790a20" loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8883790a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8883790d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b88837911c8" loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b88837911c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883791518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88837916a0"/>
        <function-ref name="request" scoped="" ref="0x2b8883791828"/>
        <function-ref name="granted" scoped="" ref="0x2b88837919b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883791b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b888378fd90" loc="69:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2b888378fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888378e170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b888378e4a0" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2b888378e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b888378e7f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b888378e978"/>
        <function-ref name="getPayload" scoped="" ref="0x2b888378eb00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888378ec88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b888378ee10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b88837cea40" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b88837cea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88837ced90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88837cd020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88837cd1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b88837cd330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88837cd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b88837cd7f0" loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b88837cd7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b88837cdb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2b88837ec080" loc="180:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x2b88837ec080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b88837ec3d0"/>
        <function-ref name="runTask" scoped="" ref="0x2b88837ec558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b88837cde08" loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b88837cde08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b88837cc1a8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b88837cc330"/>
        <function-ref name="getRssi" scoped="" ref="0x2b88837cc4b8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b88837cc640"/>
        <function-ref name="getPower" scoped="" ref="0x2b88837cc7c8"/>
        <function-ref name="getLqi" scoped="" ref="0x2b88837cc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b88837d0828" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2b88837d0828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88837d0b78"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88837d0d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88837cf020"/>
        <function-ref name="cancel" scoped="" ref="0x2b88837cf1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88837cf330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b88837cb678" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b88837cb678"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b88837cb9c8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b88837cbb50"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b88837cbcd8"/>
        <function-ref name="dequeue" scoped="" ref="0x2b88837cbe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b88837ccc40" loc="61:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b88837ccc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b88837cb020"/>
        <function-ref name="getHeader" scoped="" ref="0x2b88837cb1a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b88837cb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b88837d01b8" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b88837d01b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b88837d0508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883787758" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883787758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883787aa8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883787c30"/>
        <function-ref name="request" scoped="" ref="0x2b8883787db8"/>
        <function-ref name="granted" scoped="" ref="0x2b88837d1020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b88837d11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b88837d14b8" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b88837d14b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88837d1808"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88837d1990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88837d1b18"/>
        <function-ref name="cancel" scoped="" ref="0x2b88837d1ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88837d1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b88837cf688" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2b88837cf688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b88837cf9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b88837cfd08" loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2b88837cfd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88837ce0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b88837ce228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88837ce3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88837ce538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b88837ce6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b888381c0e0" loc="44:/opt/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b888381c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b888381c430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b888381c6b8" loc="45:/opt/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b888381c6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b888381ca08"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b888381cb90"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b888381cd18"/>
        <function-ref name="dequeue" scoped="" ref="0x2b888381a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8883810470" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8883810470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b88838107c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8883810948"/>
        <function-ref name="start" scoped="" ref="0x2b8883810ad0"/>
        <function-ref name="stop" scoped="" ref="0x2b8883810c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b888380e020" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b888380e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b888380e370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b888380e4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888380e680"/>
        <function-ref name="cancel" scoped="" ref="0x2b888380e808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b888380e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b888380ecc8" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b888380ecc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888380d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8883814530" loc="43:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8883814530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883814880"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883814a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883814b90"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883814d18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8883811020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b88838118f8" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b88838118f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b8883811c48"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b8883811dd0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b8883810020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b88838101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2b888380f020" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x2b888380f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b888380f370"/>
        <function-ref name="toIdle" scoped="" ref="0x2b888380f4f8"/>
        <function-ref name="isState" scoped="" ref="0x2b888380f680"/>
        <function-ref name="isIdle" scoped="" ref="0x2b888380f808"/>
        <function-ref name="requestState" scoped="" ref="0x2b888380f990"/>
        <function-ref name="forceState" scoped="" ref="0x2b888380fb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b888380d410" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b888380d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b888380d760"/>
        <function-ref name="stopDone" scoped="" ref="0x2b888380d8e8"/>
        <function-ref name="start" scoped="" ref="0x2b888380da70"/>
        <function-ref name="stop" scoped="" ref="0x2b888380dbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b88838112b0" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b88838112b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8883811600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b888380c828" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b888380c828"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b888380cb78"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b888380cd00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b8883809020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b88838091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b888380b6c8" loc="67:/opt/tinyos-2_1_2/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b888380b6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b888380ba18"/>
        <function-ref name="toIdle" scoped="" ref="0x2b888380bba0"/>
        <function-ref name="isState" scoped="" ref="0x2b888380bd28"/>
        <function-ref name="isIdle" scoped="" ref="0x2b888380a020"/>
        <function-ref name="requestState" scoped="" ref="0x2b888380a1a8"/>
        <function-ref name="forceState" scoped="" ref="0x2b888380a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b88837fd9c0" loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b88837fd9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88837fdd10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88837fc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88837fc1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b88837fc330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88837fc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b88837fe080" loc="40:/opt/tinyos-2_1_2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b88837fe080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88837fe3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88837fe558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88837fe6e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b88837fe868"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88837fe9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b88837feca0" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b88837feca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b88837fd020"/>
        <function-ref name="setRetries" scoped="" ref="0x2b88837fd1a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b88837fd330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b88837fd4b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b88837fd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b8883846d98" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8883846d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8883845170"/>
        <function-ref name="noAck" scoped="" ref="0x2b88838452f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8883845480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b8883846080" loc="40:/opt/tinyos-2_1_2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b8883846080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b88838463d0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b8883846558"/>
        <function-ref name="getRetries" scoped="" ref="0x2b88838466e0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b8883846868"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b88838469f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b8883828cc8" loc="59:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b8883828cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b88838270a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b8883828020" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b8883828020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883828370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88838284f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883828680"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883828808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8883828990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b8883826ab0" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b8883826ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b8883826e00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b8883825020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b88838251a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2b8883825330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b88838254b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b8883825640"/>
        <function-ref name="setChannel" scoped="" ref="0x2b88838257c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b8883825950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b8883825ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b8883825c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b8883825de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b8883824020"/>
        <function-ref name="sync" scoped="" ref="0x2b88838241a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b8883824430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b88838245b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b8883829020" loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b8883829020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b8883829370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b88838294f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b8883829680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b8883829808"/>
        <function-ref name="setCca" scoped="" ref="0x2b8883829990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b8883829b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b888382a400" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b888382a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b888382a750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b88838226a0" loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2b88838226a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b88838229f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b8883822b78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b8883822d00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b8883821020"/>
        <function-ref name="setCca" scoped="" ref="0x2b88838211a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b8883821330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b888382b2a8" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b888382b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b888382b5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b888382b780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b888382b908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888382ba90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b888382bc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8883830938" loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8883830938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883830c88"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883830e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888382f020"/>
        <function-ref name="cancel" scoped="" ref="0x2b888382f1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b888382f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b888382d628" loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b888382d628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888382d978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b8883827368" loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b8883827368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b88838276b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b8883827840"/>
        <function-ref name="getRssi" scoped="" ref="0x2b88838279c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b8883827b50"/>
        <function-ref name="getPower" scoped="" ref="0x2b8883827cd8"/>
        <function-ref name="getLqi" scoped="" ref="0x2b8883827e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b88838248d0" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b88838248d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b8883824d20"/>
        <function-ref name="changed" scoped="" ref="0x2b8883822020"/>
        <function-ref name="amGroup" scoped="" ref="0x2b88838221a8"/>
        <function-ref name="setAddress" scoped="" ref="0x2b8883822330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b8883826188" loc="61:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b8883826188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b88838264d8"/>
        <function-ref name="getHeader" scoped="" ref="0x2b8883826660"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b88838267e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b888382fab0" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b888382fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888382fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b888386f2a8" loc="67:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b888386f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b888386f5f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b888386f780"/>
        <function-ref name="led1On" scoped="" ref="0x2b888386f908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b888386fa90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b888386fc18"/>
        <function-ref name="get" scoped="" ref="0x2b888386fda0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b888386e020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b888386e640"/>
        <function-ref name="set" scoped="" ref="0x2b888386e1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b888386e330"/>
        <function-ref name="led2On" scoped="" ref="0x2b888386e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b888382dc18" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b888382dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b888382c020"/>
        <function-ref name="source" scoped="" ref="0x2b888382c1a8"/>
        <function-ref name="address" scoped="" ref="0x2b888382c330"/>
        <function-ref name="destination" scoped="" ref="0x2b888382c4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b888382c640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b888382c7c8"/>
        <function-ref name="type" scoped="" ref="0x2b888382c950"/>
        <function-ref name="setType" scoped="" ref="0x2b888382cad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b888382cc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b888382cde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b888382b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2b8883821698" loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x2b8883821698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b88838219e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883821b70"/>
        <function-ref name="request" scoped="" ref="0x2b8883821cf8"/>
        <function-ref name="granted" scoped="" ref="0x2b8883821e80"/>
        <function-ref name="isOwner" scoped="" ref="0x2b888386f030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b88838c4a28" loc="46:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b88838c4a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88838c4d78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b88838c3020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88838c31a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88838c3330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b88838c34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b88838c4490" loc="45:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b88838c4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b88838c47e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b88838c3700" loc="47:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b88838c3700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b88838c3a50"/>
        <function-ref name="source" scoped="" ref="0x2b88838c3bd8"/>
        <function-ref name="address" scoped="" ref="0x2b88838c3d60"/>
        <function-ref name="destination" scoped="" ref="0x2b88838c1020"/>
        <function-ref name="setSource" scoped="" ref="0x2b88838c11a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b88838c1330"/>
        <function-ref name="type" scoped="" ref="0x2b88838c14b8"/>
        <function-ref name="setType" scoped="" ref="0x2b88838c1640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b88838c17c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b88838c1950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b88838c1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b88839138a0" loc="49:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b88839138a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883913bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883913d78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883912020"/>
        <function-ref name="cancel" scoped="" ref="0x2b88839121a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8883912330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8883912578" loc="50:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8883912578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88839128c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8883912a50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883912bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883912d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8883911020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8883911268" loc="51:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8883911268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b88839115b8"/>
        <function-ref name="source" scoped="" ref="0x2b8883911740"/>
        <function-ref name="address" scoped="" ref="0x2b88839118c8"/>
        <function-ref name="destination" scoped="" ref="0x2b8883911a50"/>
        <function-ref name="setSource" scoped="" ref="0x2b8883911bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8883911d60"/>
        <function-ref name="type" scoped="" ref="0x2b8883910020"/>
        <function-ref name="setType" scoped="" ref="0x2b88839101a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8883910330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b88839104b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8883910640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b88839108c8" loc="52:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b88839108c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8883910c18"/>
        <function-ref name="noAck" scoped="" ref="0x2b8883910da0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b888390f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8884add7b0" loc="49:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8884add7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884addb00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884addc88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884adde10"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884adc020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884adc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8884adc3f0" loc="50:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8884adc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8884adc740"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8884adc8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884adca50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884adcbd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8884adcd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8884ada020" loc="51:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884ada020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8884ada370"/>
        <function-ref name="source" scoped="" ref="0x2b8884ada4f8"/>
        <function-ref name="address" scoped="" ref="0x2b8884ada680"/>
        <function-ref name="destination" scoped="" ref="0x2b8884ada808"/>
        <function-ref name="setSource" scoped="" ref="0x2b8884ada990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8884adab18"/>
        <function-ref name="type" scoped="" ref="0x2b8884adaca0"/>
        <function-ref name="setType" scoped="" ref="0x2b8884adae28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8884ad9020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8884ad91a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884ad9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b8884ad95b8" loc="52:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b8884ad95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8884ad9908"/>
        <function-ref name="noAck" scoped="" ref="0x2b8884ad9a90"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8884ad9c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8884b6b188" loc="44:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8884b6b188"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884b6b4d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884b6b660"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884b6b7e8"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884b6b970"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884b6baf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b8884b6bda0" loc="46:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8884b6bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884b6a170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884b6a2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884b6a480"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884b6a608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884b6a790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b8884b6a9d8" loc="47:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884b6a9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8884b6ad28"/>
        <function-ref name="source" scoped="" ref="0x2b8884b69020"/>
        <function-ref name="address" scoped="" ref="0x2b8884b691a8"/>
        <function-ref name="destination" scoped="" ref="0x2b8884b69330"/>
        <function-ref name="setSource" scoped="" ref="0x2b8884b694b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8884b69640"/>
        <function-ref name="type" scoped="" ref="0x2b8884b697c8"/>
        <function-ref name="setType" scoped="" ref="0x2b8884b69950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8884b69ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8884b69c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884b69de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b888390d5f8" loc="46:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b888390d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b888390d948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b888390dad0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b888390dc58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888390dde0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b888390c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b888390d060" loc="45:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b888390d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888390d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b888390c268" loc="47:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b888390c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b888390c5b8"/>
        <function-ref name="source" scoped="" ref="0x2b888390c740"/>
        <function-ref name="address" scoped="" ref="0x2b888390c8c8"/>
        <function-ref name="destination" scoped="" ref="0x2b888390ca50"/>
        <function-ref name="setSource" scoped="" ref="0x2b888390cbd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b888390cd60"/>
        <function-ref name="type" scoped="" ref="0x2b888390b020"/>
        <function-ref name="setType" scoped="" ref="0x2b888390b1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b888390b330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b888390b4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b888390b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8883909390" loc="49:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8883909390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88839096e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883909868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88839099f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883909b78"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8883909d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8883908020" loc="50:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8883908020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8883908370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b88839084f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883908680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883908808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8883908990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8883908bd8" loc="51:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8883908bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8883906020"/>
        <function-ref name="source" scoped="" ref="0x2b88839061a8"/>
        <function-ref name="address" scoped="" ref="0x2b8883906330"/>
        <function-ref name="destination" scoped="" ref="0x2b88839064b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b8883906640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b88839067c8"/>
        <function-ref name="type" scoped="" ref="0x2b8883906950"/>
        <function-ref name="setType" scoped="" ref="0x2b8883906ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8883906c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8883906de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8883905020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b88839052a8" loc="52:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b88839052a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b88839055f8"/>
        <function-ref name="noAck" scoped="" ref="0x2b8883905780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8883905908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8884b4f7b0" loc="49:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8884b4f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884b4fb00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884b4fc88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884b4fe10"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884b4e020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884b4e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8884b4e3f0" loc="50:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8884b4e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8884b4e740"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8884b4e8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884b4ea50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884b4ebd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8884b4ed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8884b4d020" loc="51:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884b4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8884b4d370"/>
        <function-ref name="source" scoped="" ref="0x2b8884b4d4f8"/>
        <function-ref name="address" scoped="" ref="0x2b8884b4d680"/>
        <function-ref name="destination" scoped="" ref="0x2b8884b4d808"/>
        <function-ref name="setSource" scoped="" ref="0x2b8884b4d990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8884b4db18"/>
        <function-ref name="type" scoped="" ref="0x2b8884b4dca0"/>
        <function-ref name="setType" scoped="" ref="0x2b8884b4de28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8884b4c020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8884b4c1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884b4c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b8884b4c5b8" loc="52:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b8884b4c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8884b4c908"/>
        <function-ref name="noAck" scoped="" ref="0x2b8884b4ca90"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8884b4cc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8884b43cb0" loc="44:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8884b43cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884b410a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884b41228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884b413b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884b41538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884b416c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b8884b41968" loc="46:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8884b41968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884b41cb8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884b41e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884b40020"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884b401a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884b40330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b8884b40578" loc="47:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884b40578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8884b408c8"/>
        <function-ref name="source" scoped="" ref="0x2b8884b40a50"/>
        <function-ref name="address" scoped="" ref="0x2b8884b40bd8"/>
        <function-ref name="destination" scoped="" ref="0x2b8884b40d60"/>
        <function-ref name="setSource" scoped="" ref="0x2b8884b3f020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8884b3f1a8"/>
        <function-ref name="type" scoped="" ref="0x2b8884b3f330"/>
        <function-ref name="setType" scoped="" ref="0x2b8884b3f4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8884b3f640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8884b3f7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884b3f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8883902020" loc="46:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8883902020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8883902370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b88839024f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883902680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883902808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8883902990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8883903970" loc="45:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8883903970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8883903cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8883902bd8" loc="47:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8883902bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8883901020"/>
        <function-ref name="source" scoped="" ref="0x2b88839011a8"/>
        <function-ref name="address" scoped="" ref="0x2b8883901330"/>
        <function-ref name="destination" scoped="" ref="0x2b88839014b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b8883901640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b88839017c8"/>
        <function-ref name="type" scoped="" ref="0x2b8883901950"/>
        <function-ref name="setType" scoped="" ref="0x2b8883901ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8883901c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8883901de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8883900020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b88838fc0a0" loc="45:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="ObjectTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b88838fc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b88838f82b8"/>
        <function-ref name="fired" scoped="" ref="0x2b88838fb9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b88838f96c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b88838f9278"/>
        <function-ref name="getdt" scoped="" ref="0x2b88838f8b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b88838f8708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b88838fbe00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b88838fcbe8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b88838f9c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b88838fb0c0"/>
        <function-ref name="stop" scoped="" ref="0x2b88838fb560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b88838efcb0" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b88838efcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883c220a0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883c22228"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883c223b0"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883c22538"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883c226c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883c22908" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883c22908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883c22c58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883c22de0"/>
        <function-ref name="request" scoped="" ref="0x2b8883c21020"/>
        <function-ref name="granted" scoped="" ref="0x2b8883c211a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883c21330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884b24410" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884b24410"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884b24760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8883935020" loc="42:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8883935020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883935370"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b88839354f8"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883935680"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883935808"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883935990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b88839331c8" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b88839331c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8883933518"/>
        <function-ref name="writeDone" scoped="" ref="0x2b88839336a0"/>
        <function-ref name="erase" scoped="" ref="0x2b8883933828"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b88839339b0"/>
        <function-ref name="write" scoped="" ref="0x2b8883933b38"/>
        <function-ref name="sync" scoped="" ref="0x2b8883933cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeId" ref="0x2b88839301c8" loc="46:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b88839301c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8883930518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StorageMap" ref="0x2b8883931500" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x2b8883931500"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x2b8883931850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b888392cbd0" loc="40:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b888392cbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b888397b020"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b888397b1a8"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b888397b330"/>
        <function-ref name="getSize" scoped="" ref="0x2b888397b4b8"/>
        <function-ref name="readDone" scoped="" ref="0x2b888397b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b888397b9a8" loc="41:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b888397b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b888397bd18"/>
        <function-ref name="writeDone" scoped="" ref="0x2b888397a020"/>
        <function-ref name="erase" scoped="" ref="0x2b888397a1a8"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b888397a330"/>
        <function-ref name="write" scoped="" ref="0x2b888397a4b8"/>
        <function-ref name="sync" scoped="" ref="0x2b888397a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeId" ref="0x2b8883976020" loc="47:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8883976020"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8883976390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StorageMap" ref="0x2b888397a9a8" loc="42:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x2b888397a9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x2b888397ad18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockRead" ref="0x2b8883978180" loc="45:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockRead" scoped="" ref="0x2b8883978180"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88839784f0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883978678"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883978800"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883978988"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883978b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockWrite" ref="0x2b8883977020" loc="46:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockWrite" scoped="" ref="0x2b8883977020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8883977390"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883977518"/>
        <function-ref name="erase" scoped="" ref="0x2b88839776a0"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883977828"/>
        <function-ref name="write" scoped="" ref="0x2b88839779b0"/>
        <function-ref name="sync" scoped="" ref="0x2b8883977b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x2b88839766f8" loc="51:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x2b88839766f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x2b8883976a68"/>
        <function-ref name="remap" scoped="" ref="0x2b8883976bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8883bea020" loc="25:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8883bea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8883bea370"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883bea4f8"/>
        <function-ref name="erase" scoped="" ref="0x2b8883bea680"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883bea808"/>
        <function-ref name="write" scoped="" ref="0x2b8883bea990"/>
        <function-ref name="sync" scoped="" ref="0x2b8883beab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8883bead60" loc="26:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8883bead60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883be90d8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883be9260"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883be93e8"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883be9570"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883be96f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45db" ref="0x2b88839a7398" loc="59:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x2b88839a7398"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x2b88839b91a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2b88839a7870"/>
        <function-ref name="flushDone" scoped="" ref="0x2b88839a79f8"/>
        <function-ref name="read" scoped="" ref="0x2b88839a7b80"/>
        <function-ref name="writeDone" scoped="" ref="0x2b88839a7d08"/>
        <function-ref name="copyPage" scoped="" ref="0x2b88839ba020"/>
        <function-ref name="erase" scoped="" ref="0x2b88839ba1a8"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b88839ba330"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b88839ba4b8"/>
        <function-ref name="flush" scoped="" ref="0x2b88839ba640"/>
        <function-ref name="syncAll" scoped="" ref="0x2b88839ba7c8"/>
        <function-ref name="flushAll" scoped="" ref="0x2b88839ba950"/>
        <function-ref name="write" scoped="" ref="0x2b88839baad8"/>
        <function-ref name="sync" scoped="" ref="0x2b88839bad60"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b88839b9020"/>
        <function-ref name="readDone" scoped="" ref="0x2b88839a76e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8883969378" loc="55:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8883969378"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b88839696c8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883969850"/>
        <function-ref name="erase" scoped="" ref="0x2b88839699d8"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883969b60"/>
        <function-ref name="write" scoped="" ref="0x2b8883969ce8"/>
        <function-ref name="sync" scoped="" ref="0x2b8883969e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8883968660" loc="56:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8883968660"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88839689b0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883968b38"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883968cc0"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883968e48"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883967020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BConfig" ref="0x2b88839a41c8" loc="62:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BConfig" scoped="" ref="0x2b88839a41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbBlockConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="npages" scoped="" ref="0x2b88839a4518"/>
        <function-ref name="flipped" scoped="" ref="0x2b88839a46a0"/>
        <function-ref name="isConfig" scoped="" ref="0x2b88839a4828"/>
        <function-ref name="writeHook" scoped="" ref="0x2b88839a49b0"/>
        <function-ref name="remap" scoped="" ref="0x2b88839a4b38"/>
        <function-ref name="writeContinue" scoped="" ref="0x2b88839a4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x2b88839b9990" loc="60:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x2b88839b9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x2b88839b9ce0"/>
        <function-ref name="remap" scoped="" ref="0x2b88839b9e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b88839a6658" loc="61:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b88839a6658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b88839a69a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88839a6b30"/>
        <function-ref name="request" scoped="" ref="0x2b88839a6cb8"/>
        <function-ref name="granted" scoped="" ref="0x2b88839a6e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b88839a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x2b8883a248d8" loc="25:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x2b8883a248d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x2b8883a1f5b8"/>
        <function-ref name="syncDone" scoped="" ref="0x2b8883a24db0"/>
        <function-ref name="flushDone" scoped="" ref="0x2b8883a20020"/>
        <function-ref name="read" scoped="" ref="0x2b8883a201a8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883a20330"/>
        <function-ref name="copyPage" scoped="" ref="0x2b8883a204b8"/>
        <function-ref name="erase" scoped="" ref="0x2b8883a20640"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883a207c8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883a20950"/>
        <function-ref name="flush" scoped="" ref="0x2b8883a20ad8"/>
        <function-ref name="syncAll" scoped="" ref="0x2b8883a20c60"/>
        <function-ref name="flushAll" scoped="" ref="0x2b8883a20de8"/>
        <function-ref name="write" scoped="" ref="0x2b8883a1f020"/>
        <function-ref name="sync" scoped="" ref="0x2b8883a1f2a8"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883a1f430"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883a24c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b8883a199d0" loc="27:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8883a199d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883a19d20"/>
        <function-ref name="requested" scoped="" ref="0x2b8883a1d020"/>
        <function-ref name="granted" scoped="" ref="0x2b8883a1d1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883a1d330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8883a1d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883a1fd70" loc="26:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883a1fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883a1e0f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883a1e278"/>
        <function-ref name="request" scoped="" ref="0x2b8883a1e400"/>
        <function-ref name="granted" scoped="" ref="0x2b8883a1e588"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883a1e710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b8883a1d770" loc="28:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883a1d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8883a1dac0"/>
        <function-ref name="userId" scoped="" ref="0x2b8883a1dc48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45db" ref="0x2b8883a56ab0" loc="59:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x2b8883a56ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x2b8883a11bd8"/>
        <function-ref name="waitCompare" scoped="" ref="0x2b8883a12020"/>
        <function-ref name="crcDone" scoped="" ref="0x2b8883a121a8"/>
        <function-ref name="flushDone" scoped="" ref="0x2b8883a12330"/>
        <function-ref name="read" scoped="" ref="0x2b8883a124b8"/>
        <function-ref name="erase" scoped="" ref="0x2b8883a12640"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883a127c8"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x2b8883a12950"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x2b8883a12ad8"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883a12c60"/>
        <function-ref name="waitIdle" scoped="" ref="0x2b8883a12de8"/>
        <function-ref name="flush" scoped="" ref="0x2b8883a11020"/>
        <function-ref name="write" scoped="" ref="0x2b8883a111a8"/>
        <function-ref name="compareDone" scoped="" ref="0x2b8883a11430"/>
        <function-ref name="compare" scoped="" ref="0x2b8883a115b8"/>
        <function-ref name="crc" scoped="" ref="0x2b8883a11740"/>
        <function-ref name="readBuffer" scoped="" ref="0x2b8883a118c8"/>
        <function-ref name="fillDone" scoped="" ref="0x2b8883a11a50"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883a56e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x2b8883a152a8" loc="56:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x2b8883a152a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x2b8883a13020"/>
        <function-ref name="syncDone" scoped="" ref="0x2b8883a15780"/>
        <function-ref name="flushDone" scoped="" ref="0x2b8883a15908"/>
        <function-ref name="read" scoped="" ref="0x2b8883a15a90"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883a15c18"/>
        <function-ref name="copyPage" scoped="" ref="0x2b8883a15da0"/>
        <function-ref name="erase" scoped="" ref="0x2b8883a14020"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883a141a8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883a14330"/>
        <function-ref name="flush" scoped="" ref="0x2b8883a144b8"/>
        <function-ref name="syncAll" scoped="" ref="0x2b8883a14640"/>
        <function-ref name="flushAll" scoped="" ref="0x2b8883a147c8"/>
        <function-ref name="write" scoped="" ref="0x2b8883a14950"/>
        <function-ref name="sync" scoped="" ref="0x2b8883a14bd8"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883a14d60"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883a155f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b8883a52a58" loc="60:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b8883a52a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882777588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b88827778e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b8883a54828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskSuccess" ref="0x2b8883a954d8" loc="145:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskSuccess" scoped="" ref="0x2b8883a954d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8883a95828"/>
        <function-ref name="runTask" scoped="" ref="0x2b8883a959b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskFail" ref="0x2b8883a93190" loc="148:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskFail" scoped="" ref="0x2b8883a93190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8883a934e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8883a93668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8883a1cc08" loc="55:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8883a1cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8883a15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x2b8883adae58" loc="20:/opt/tinyos-2_1_2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <component-ref qname="HplAt45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x2b8883adae58"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b88826f2020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b88826f2020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x2b8883ad5020"/>
        <function-ref name="waitCompare" scoped="" ref="0x2b8883ad7370"/>
        <function-ref name="crcDone" scoped="" ref="0x2b8883ad74f8"/>
        <function-ref name="flushDone" scoped="" ref="0x2b8883ad7680"/>
        <function-ref name="read" scoped="" ref="0x2b8883ad7808"/>
        <function-ref name="erase" scoped="" ref="0x2b8883ad7990"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883ad7b18"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x2b8883ad7ca0"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x2b8883ad7e28"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883ad6020"/>
        <function-ref name="waitIdle" scoped="" ref="0x2b8883ad61a8"/>
        <function-ref name="flush" scoped="" ref="0x2b8883ad6330"/>
        <function-ref name="write" scoped="" ref="0x2b8883ad64b8"/>
        <function-ref name="compareDone" scoped="" ref="0x2b8883ad6740"/>
        <function-ref name="compare" scoped="" ref="0x2b8883ad68c8"/>
        <function-ref name="crc" scoped="" ref="0x2b8883ad6a50"/>
        <function-ref name="readBuffer" scoped="" ref="0x2b8883ad6bd8"/>
        <function-ref name="fillDone" scoped="" ref="0x2b8883ad6d60"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883ad71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x2b8883ad36c0" loc="26:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x2b8883ad36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0x2b8883b3c8c8"/>
        <function-ref name="waitCompare" scoped="" ref="0x2b8883ad3b98"/>
        <function-ref name="crcDone" scoped="" ref="0x2b8883ad3d20"/>
        <function-ref name="flushDone" scoped="" ref="0x2b8883b3d020"/>
        <function-ref name="read" scoped="" ref="0x2b8883b3d1a8"/>
        <function-ref name="erase" scoped="" ref="0x2b8883b3d330"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883b3d4b8"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x2b8883b3d640"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x2b8883b3d7c8"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883b3d950"/>
        <function-ref name="waitIdle" scoped="" ref="0x2b8883b3dad8"/>
        <function-ref name="flush" scoped="" ref="0x2b8883b3dc60"/>
        <function-ref name="write" scoped="" ref="0x2b8883b3dde8"/>
        <function-ref name="compareDone" scoped="" ref="0x2b8883b3c120"/>
        <function-ref name="compare" scoped="" ref="0x2b8883b3c2a8"/>
        <function-ref name="crc" scoped="" ref="0x2b8883b3c430"/>
        <function-ref name="readBuffer" scoped="" ref="0x2b8883b3c5b8"/>
        <function-ref name="fillDone" scoped="" ref="0x2b8883b3c740"/>
        <function-ref name="fill" scoped="" ref="0x2b8883ad3a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45dbByte" ref="0x2b8883b3be60" loc="30:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x2b8883b3be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x2b8883b3a1e8"/>
        <function-ref name="waitIdle" scoped="" ref="0x2b8883b3a370"/>
        <function-ref name="idle" scoped="" ref="0x2b8883b3a4f8"/>
        <function-ref name="select" scoped="" ref="0x2b8883b3a680"/>
        <function-ref name="deselect" scoped="" ref="0x2b8883b3a808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b8883b3cb70" loc="28:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883b3cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883b3b020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883b3b1a8"/>
        <function-ref name="request" scoped="" ref="0x2b8883b3b330"/>
        <function-ref name="granted" scoped="" ref="0x2b8883b3b4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883b3b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlashSpi" ref="0x2b8883b3b8c8" loc="29:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x2b8883b3b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b8883b3bc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x2b8883b35640" loc="56:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x2b8883b35640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x2b8883b35990"/>
        <function-ref name="waitIdle" scoped="" ref="0x2b8883b35b18"/>
        <function-ref name="idle" scoped="" ref="0x2b8883b35ca0"/>
        <function-ref name="select" scoped="" ref="0x2b8883b35e28"/>
        <function-ref name="deselect" scoped="" ref="0x2b8883b34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883b36360" loc="54:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883b36360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883b366b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883b36838"/>
        <function-ref name="request" scoped="" ref="0x2b8883b369c0"/>
        <function-ref name="granted" scoped="" ref="0x2b8883b36b48"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883b36cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x2b8883b35020" loc="55:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x2b8883b35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b8883b35370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="In" ref="0x2b8883b2ddd8" loc="100:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="In" scoped="" ref="0x2b8883b2ddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883b2b170"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883b2b2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8883b2b480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883b2b608"/>
        <function-ref name="get" scoped="" ref="0x2b8883b2b790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883b2b918"/>
        <function-ref name="set" scoped="" ref="0x2b8883b2baa0"/>
        <function-ref name="clr" scoped="" ref="0x2b8883b2bc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b8883b2a1e0" loc="101:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b8883b2a1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882777588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b88827778e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b8883b29020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Out" ref="0x2b8883b2ec58" loc="99:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Out" scoped="" ref="0x2b8883b2ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883b2d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883b2d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8883b2d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883b2d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b8883b2d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883b2d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b8883b2d950"/>
        <function-ref name="clr" scoped="" ref="0x2b8883b2dad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Select" ref="0x2b8883b30860" loc="97:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Select" scoped="" ref="0x2b8883b30860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883b30bb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883b30d38"/>
        <function-ref name="toggle" scoped="" ref="0x2b8883b2f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883b2f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b8883b2f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883b2f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b8883b2f640"/>
        <function-ref name="clr" scoped="" ref="0x2b8883b2f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x2b8883b31a20" loc="94:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x2b8883b31a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x2b8883b31d70"/>
        <function-ref name="waitIdle" scoped="" ref="0x2b8883b30020"/>
        <function-ref name="idle" scoped="" ref="0x2b8883b301a8"/>
        <function-ref name="select" scoped="" ref="0x2b8883b30330"/>
        <function-ref name="deselect" scoped="" ref="0x2b8883b304b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Clk" ref="0x2b8883b2fad0" loc="98:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Clk" scoped="" ref="0x2b8883b2fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8883b2fe20"/>
        <function-ref name="isInput" scoped="" ref="0x2b8883b2e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8883b2e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8883b2e330"/>
        <function-ref name="get" scoped="" ref="0x2b8883b2e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8883b2e640"/>
        <function-ref name="set" scoped="" ref="0x2b8883b2e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8883b2e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="avail" ref="0x2b8883b68bf8" loc="163:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="avail" scoped="" ref="0x2b8883b68bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8883b67020"/>
        <function-ref name="runTask" scoped="" ref="0x2b8883b671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8883b34d30" loc="92:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8883b34d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8883b310d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x2b8883b31400" loc="93:/opt/tinyos-2_1_2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x2b8883b31400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b8883b31750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b8883b5eb98" loc="36:/opt/tinyos-2_1_2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b8883b5eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882777588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b88827778e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b8883b5b930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b8883b49060" loc="22:/opt/tinyos-2_1_2/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8883b49060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b8883b493b0"/>
        <function-ref name="configure" scoped="" ref="0x2b8883b49538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883b4a410" loc="21:/opt/tinyos-2_1_2/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883b4a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883b4a760"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883b4a8e8"/>
        <function-ref name="request" scoped="" ref="0x2b8883b4aa70"/>
        <function-ref name="granted" scoped="" ref="0x2b8883b4abf8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883b4ad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="granted" ref="0x2b8883b49800" loc="25:/opt/tinyos-2_1_2/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="granted" scoped="" ref="0x2b8883b49800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8883b49b50"/>
        <function-ref name="runTask" scoped="" ref="0x2b8883b49cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b8883bffd18" loc="92:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b8883bffd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b8883bfe0d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8883bfe260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b8883bfd960" loc="96:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8883bfd960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b8883bfdcd0"/>
        <function-ref name="configure" scoped="" ref="0x2b8883bfde58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b8883bfe4a8" loc="93:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8883bfe4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883bfe7f8"/>
        <function-ref name="requested" scoped="" ref="0x2b8883bfe980"/>
        <function-ref name="granted" scoped="" ref="0x2b8883bfeb08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883bfec90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8883bfee18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883bff020" loc="91:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883bff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883bff390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883bff518"/>
        <function-ref name="request" scoped="" ref="0x2b8883bff6a0"/>
        <function-ref name="granted" scoped="" ref="0x2b8883bff828"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883bff9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b8883bfd0e0" loc="94:/opt/tinyos-2_1_2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883bfd0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8883bfd430"/>
        <function-ref name="userId" scoped="" ref="0x2b8883bfd5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8884beb498" loc="44:/opt/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8884beb498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8884beb7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b8884beba70" loc="45:/opt/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b8884beba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b8884bebdc0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b8884bea020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b8884bea1a8"/>
        <function-ref name="dequeue" scoped="" ref="0x2b8884bea330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b8884be79a8" loc="55:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b8884be79a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b8884be7d18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8884be6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b8884be56f8" loc="60:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8884be56f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b8884be5a68"/>
        <function-ref name="configure" scoped="" ref="0x2b8884be5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b8884be5e78" loc="61:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b8884be5e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b8884be41f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b8884be4380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b8884be4508"/>
        <function-ref name="dequeue" scoped="" ref="0x2b8884be4690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b8884be6268" loc="56:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8884be6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884be65b8"/>
        <function-ref name="requested" scoped="" ref="0x2b8884be6740"/>
        <function-ref name="granted" scoped="" ref="0x2b8884be68c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884be6a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8884be6bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8884be48d8" loc="62:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8884be48d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8884be4c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8884be4db0"/>
        <function-ref name="led1On" scoped="" ref="0x2b8884be3020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8884be31a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8884be3330"/>
        <function-ref name="get" scoped="" ref="0x2b8884be34b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8884be3640"/>
        <function-ref name="led0On" scoped="" ref="0x2b8884be3c60"/>
        <function-ref name="set" scoped="" ref="0x2b8884be3950"/>
        <function-ref name="led2On" scoped="" ref="0x2b8884be37c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8884be3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884be9bb8" loc="54:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884be9bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884be7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884be71a8"/>
        <function-ref name="request" scoped="" ref="0x2b8884be7330"/>
        <function-ref name="granted" scoped="" ref="0x2b8884be74b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884be7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b8884be6e20" loc="57:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8884be6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8884be51a8"/>
        <function-ref name="userId" scoped="" ref="0x2b8884be5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b8884be2020" loc="75:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b8884be2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8884be2370"/>
        <function-ref name="runTask" scoped="" ref="0x2b8884be24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbVolume" ref="0x2b8883bf4780" loc="18:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbStorageManagerC.nc">
      <component-ref qname="At45dbStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x2b8883bf4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x2b8883bf4ad0"/>
        <function-ref name="remap" scoped="" ref="0x2b8883bf4c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8883be7398" loc="25:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8883be7398"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8883be76e8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883be7870"/>
        <function-ref name="erase" scoped="" ref="0x2b8883be79f8"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883be7b80"/>
        <function-ref name="write" scoped="" ref="0x2b8883be7d08"/>
        <function-ref name="sync" scoped="" ref="0x2b8883be6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8883be6268" loc="26:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8883be6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883be65b8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883be6740"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883be68c8"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883be6a50"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883be6bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8883be3718" loc="25:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8883be3718"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8883be3a68"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883be3bf0"/>
        <function-ref name="erase" scoped="" ref="0x2b8883be3d78"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883be2020"/>
        <function-ref name="write" scoped="" ref="0x2b8883be21a8"/>
        <function-ref name="sync" scoped="" ref="0x2b8883be2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8883be2578" loc="26:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8883be2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883be28c8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883be2a50"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883be2bd8"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883be2d60"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883be1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8883be0c28" loc="25:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8883be0c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8883bdf020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883bdf1a8"/>
        <function-ref name="erase" scoped="" ref="0x2b8883bdf330"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883bdf4b8"/>
        <function-ref name="write" scoped="" ref="0x2b8883bdf640"/>
        <function-ref name="sync" scoped="" ref="0x2b8883bdf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8883bdfa10" loc="26:/opt/tinyos-2_1_2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8883bdfa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883bdfd60"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883bde020"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883bde1a8"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883bde330"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883bde4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884b238b8" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884b238b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884b23c08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884b23d90"/>
        <function-ref name="request" scoped="" ref="0x2b8884b22020"/>
        <function-ref name="granted" scoped="" ref="0x2b8884b221a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884b22330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883c2b020" loc="40:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <component-ref qname="BlockStorageLockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883c2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883c2b370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883c2b4f8"/>
        <function-ref name="request" scoped="" ref="0x2b8883c2b680"/>
        <function-ref name="granted" scoped="" ref="0x2b8883c2b808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883c2b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b8883c2bc48" loc="41:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <component-ref qname="BlockStorageLockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883c2bc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8883c29020"/>
        <function-ref name="userId" scoped="" ref="0x2b8883c291a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b8883c27820" loc="86:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b8883c27820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b8883c27b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8883c27d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b8883c268a0" loc="89:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8883c268a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b8883c26c10"/>
        <function-ref name="configure" scoped="" ref="0x2b8883c26d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883c28a08" loc="85:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883c28a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883c28d78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883c27020"/>
        <function-ref name="request" scoped="" ref="0x2b8883c271a8"/>
        <function-ref name="granted" scoped="" ref="0x2b8883c27330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883c274b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b8883c26020" loc="87:/opt/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883c26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8883c26370"/>
        <function-ref name="userId" scoped="" ref="0x2b8883c264f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8884c36b78" loc="44:/opt/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8884c36b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8884c35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b8884c352a8" loc="45:/opt/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b8884c352a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b8884c355f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b8884c35780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b8884c35908"/>
        <function-ref name="dequeue" scoped="" ref="0x2b8884c35a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b8884c33df8" loc="52:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b8884c33df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b8884c321a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8884c32330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b8884c32e18" loc="56:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8884c32e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b8884c301c0"/>
        <function-ref name="configure" scoped="" ref="0x2b8884c30348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b8884c305d0" loc="57:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b8884c305d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b8884c30920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b8884c30aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b8884c30c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b8884c30db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884c33100" loc="51:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884c33100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884c33470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884c335f8"/>
        <function-ref name="request" scoped="" ref="0x2b8884c33780"/>
        <function-ref name="granted" scoped="" ref="0x2b8884c33908"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884c33a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b8884c32578" loc="53:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8884c32578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8884c328c8"/>
        <function-ref name="userId" scoped="" ref="0x2b8884c32a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b8884c2f100" loc="69:/opt/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b8884c2f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8884c2f450"/>
        <function-ref name="runTask" scoped="" ref="0x2b8884c2f5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8883c20e08" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8883c20e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883c1f1a8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883c1f330"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883c1f4b8"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883c1f640"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883c1f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883c1fa10" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883c1fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883c1fd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883c1e020"/>
        <function-ref name="request" scoped="" ref="0x2b8883c1e1a8"/>
        <function-ref name="granted" scoped="" ref="0x2b8883c1e330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883c1e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884ca8060" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884ca8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884ca83b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884ca7528" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884ca7528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884ca7878"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884ca7a00"/>
        <function-ref name="request" scoped="" ref="0x2b8884ca7b88"/>
        <function-ref name="granted" scoped="" ref="0x2b8884ca7d10"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884ca6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8883c1c020" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8883c1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883c1c370"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883c1c4f8"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883c1c680"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883c1c808"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883c1c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883c1cbd8" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883c1cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883c1b020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883c1b1a8"/>
        <function-ref name="request" scoped="" ref="0x2b8883c1b330"/>
        <function-ref name="granted" scoped="" ref="0x2b8883c1b4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883c1b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884c9e020" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884c9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884c9e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884c9d4f0" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884c9d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884c9d840"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884c9d9c8"/>
        <function-ref name="request" scoped="" ref="0x2b8884c9db50"/>
        <function-ref name="granted" scoped="" ref="0x2b8884c9dcd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884c9de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8883c0f390" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8883c0f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8883c0f6e0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883c0f868"/>
        <function-ref name="erase" scoped="" ref="0x2b8883c0f9f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883c0fb78"/>
        <function-ref name="write" scoped="" ref="0x2b8883c0fd00"/>
        <function-ref name="sync" scoped="" ref="0x2b8883c0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883c0e268" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883c0e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883c0e5b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883c0e740"/>
        <function-ref name="request" scoped="" ref="0x2b8883c0e8c8"/>
        <function-ref name="granted" scoped="" ref="0x2b8883c0ea50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883c0ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884c95d78" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884c95d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884c930f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884c92258" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884c92258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884c925a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884c92730"/>
        <function-ref name="request" scoped="" ref="0x2b8884c928b8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884c92a40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884c92bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8883c0c710" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8883c0c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8883c0ca60"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883c0cbe8"/>
        <function-ref name="erase" scoped="" ref="0x2b8883c0cd70"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883c0b020"/>
        <function-ref name="write" scoped="" ref="0x2b8883c0b1a8"/>
        <function-ref name="sync" scoped="" ref="0x2b8883c0b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883c0b578" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883c0b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883c0b8c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883c0ba50"/>
        <function-ref name="request" scoped="" ref="0x2b8883c0bbd8"/>
        <function-ref name="granted" scoped="" ref="0x2b8883c0bd60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883c0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884c8acc8" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884c8acc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884c890a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884c88258" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884c88258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884c885a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884c88730"/>
        <function-ref name="request" scoped="" ref="0x2b8884c888b8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884c88a40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884c88bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8883c09c20" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8883c09c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8883c07020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883c071a8"/>
        <function-ref name="erase" scoped="" ref="0x2b8883c07330"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883c074b8"/>
        <function-ref name="write" scoped="" ref="0x2b8883c07640"/>
        <function-ref name="sync" scoped="" ref="0x2b8883c077c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883c07a10" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883c07a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883c07d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883c06020"/>
        <function-ref name="request" scoped="" ref="0x2b8883c061a8"/>
        <function-ref name="granted" scoped="" ref="0x2b8883c06330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883c064b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884c80cc8" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884c80cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884c7e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884c7d258" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884c7d258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884c7d5a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884c7d730"/>
        <function-ref name="request" scoped="" ref="0x2b8884c7d8b8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884c7da40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884c7dbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x2b8883da1ae8" loc="51:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x2b8883da1ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x2b88827ef358"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x2b88827fc0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b8883da0658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x2b8883da20a0" loc="50:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x2b8883da20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x2b88827ef358"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x2b88827fc0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b8883da15c8"/>
        <function-ref name="get" scoped="" ref="0x2b8883da2c20"/>
        <function-ref name="set" scoped="" ref="0x2b8883da10f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x2b8884c6e5f8" loc="62:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x2b8884c6e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8884c6e948"/>
        <function-ref name="runTask" scoped="" ref="0x2b8884c6ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x2b8884c70208" loc="50:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x2b8884c70208"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x2b8884c706e0"/>
        <function-ref name="storeData" scoped="" ref="0x2b8884c70d00"/>
        <function-ref name="newData" scoped="" ref="0x2b8884c70868"/>
        <function-ref name="start" scoped="" ref="0x2b8884c709f0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x2b8884c70b78"/>
        <function-ref name="stop" scoped="" ref="0x2b8884c70558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x2b8884c72020" loc="49:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x2b8884c72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x2b88827ef358"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x2b88827fc0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b8884c72b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8884c6f020" loc="52:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8884c6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8884c6f370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8884c6f4f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b8884c6f680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8884c6f808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8884c6f990"/>
        <function-ref name="get" scoped="" ref="0x2b8884c6fb18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8884c6fca0"/>
        <function-ref name="led0On" scoped="" ref="0x2b8884c6e330"/>
        <function-ref name="set" scoped="" ref="0x2b8884c6e020"/>
        <function-ref name="led2On" scoped="" ref="0x2b8884c6fe28"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8884c6e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x2b8884c75538" loc="48:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x2b8884c75538"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x2b88827ef358"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x2b88827fc0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b8884c73a50"/>
        <function-ref name="get" scoped="" ref="0x2b8884c730f8"/>
        <function-ref name="set" scoped="" ref="0x2b8884c73580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b8884c76b40" loc="46:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b8884c76b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8884c75020"/>
        <function-ref name="stop" scoped="" ref="0x2b8884c751a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x2b8883c72838" loc="52:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x2b8883c72838"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b8883c72b88"/>
        <function-ref name="incrementCounter" scoped="" ref="0x2b8883c72d10"/>
        <function-ref name="reset" scoped="" ref="0x2b8883c77020"/>
        <function-ref name="start" scoped="" ref="0x2b8883c771a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8883c77330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x2b8883c79a90" loc="51:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x2b8883c79a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x2b8883c78020"/>
        <function-ref name="stop" scoped="" ref="0x2b8883c78640"/>
        <function-ref name="newData" scoped="" ref="0x2b8883c781a8"/>
        <function-ref name="start" scoped="" ref="0x2b8883c78330"/>
        <function-ref name="requestSeqno" scoped="" ref="0x2b8883c784b8"/>
        <function-ref name="requestData" scoped="" ref="0x2b8883c79de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b8883c7ccf0" loc="48:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b8883c7ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8883c790a0"/>
        <function-ref name="stop" scoped="" ref="0x2b8883c79228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x2b8883c77be0" loc="53:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x2b8883c77be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8883c76020"/>
        <function-ref name="stop" scoped="" ref="0x2b8883c761a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x2b8883c69ae0" loc="57:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x2b8883c69ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8883c69e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x2b8883c6add0" loc="56:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x2b8883c6add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883c69170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883c692f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883c69480"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883c69608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8883c69790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b8883c6b9d0" loc="53:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8883c6b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883c6bd20"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883c6a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883c6a1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883c6a330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8883c6a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x2b8883c6c020" loc="50:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x2b8883c6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b8883c6c370"/>
        <function-ref name="incrementCounter" scoped="" ref="0x2b8883c6c4f8"/>
        <function-ref name="reset" scoped="" ref="0x2b8883c6c680"/>
        <function-ref name="start" scoped="" ref="0x2b8883c6c808"/>
        <function-ref name="stop" scoped="" ref="0x2b8883c6c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x2b8883c6fbd8" loc="49:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x2b8883c6fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x2b8883c6e1a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8883c6e7c8"/>
        <function-ref name="newData" scoped="" ref="0x2b8883c6e330"/>
        <function-ref name="start" scoped="" ref="0x2b8883c6e4b8"/>
        <function-ref name="requestSeqno" scoped="" ref="0x2b8883c6e640"/>
        <function-ref name="requestData" scoped="" ref="0x2b8883c6e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2b8883c6a748" loc="54:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8883c6a748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8883c6aa98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8883c680f0" loc="59:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8883c680f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8883c68440"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8883c685c8"/>
        <function-ref name="led1On" scoped="" ref="0x2b8883c68750"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8883c688d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8883c68a60"/>
        <function-ref name="get" scoped="" ref="0x2b8883c68be8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8883c68d70"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8883c674b8"/>
        <function-ref name="set" scoped="" ref="0x2b8883c67020"/>
        <function-ref name="led0On" scoped="" ref="0x2b8883c671a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8883c67330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b8883c76e68" loc="46:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b8883c76e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8883c6f1e8"/>
        <function-ref name="stop" scoped="" ref="0x2b8883c6f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x2b8883c6b270" loc="51:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x2b8883c6b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8883c6b5c0"/>
        <function-ref name="stop" scoped="" ref="0x2b8883c6b748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8883cdf208" loc="49:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8883cdf208"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883cdf558"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883cdf6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883cdf868"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883cdf9f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8883cdfb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8883cdfdc0" loc="50:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8883cdfdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8883cde170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8883cde2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883cde480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883cde608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8883cde790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8883cde9d8" loc="51:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8883cde9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8883cded28"/>
        <function-ref name="source" scoped="" ref="0x2b8883cdc020"/>
        <function-ref name="address" scoped="" ref="0x2b8883cdc1a8"/>
        <function-ref name="destination" scoped="" ref="0x2b8883cdc330"/>
        <function-ref name="setSource" scoped="" ref="0x2b8883cdc4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8883cdc640"/>
        <function-ref name="type" scoped="" ref="0x2b8883cdc7c8"/>
        <function-ref name="setType" scoped="" ref="0x2b8883cdc950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8883cdcad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8883cdcc60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8883cdcde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b8883cdb0a0" loc="52:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b8883cdb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8883cdb3f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b8883cdb578"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8883cdb700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8884cee020" loc="49:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8884cee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884cee370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884cee4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884cee680"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884cee808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884cee990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8884ceebd8" loc="50:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8884ceebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8884ced020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8884ced1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884ced330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884ced4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8884ced640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8884ced888" loc="51:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884ced888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8884cedbd8"/>
        <function-ref name="source" scoped="" ref="0x2b8884cedd60"/>
        <function-ref name="address" scoped="" ref="0x2b8884cec020"/>
        <function-ref name="destination" scoped="" ref="0x2b8884cec1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b8884cec330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8884cec4b8"/>
        <function-ref name="type" scoped="" ref="0x2b8884cec640"/>
        <function-ref name="setType" scoped="" ref="0x2b8884cec7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8884cec950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8884cecad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884cecc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b8884ceb020" loc="52:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b8884ceb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8884ceb370"/>
        <function-ref name="noAck" scoped="" ref="0x2b8884ceb4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8884ceb680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8884ce2958" loc="44:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8884ce2958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884ce2ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884ce2e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884ce1020"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884ce11a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884ce1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b8884ce15d8" loc="46:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8884ce15d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884ce1928"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884ce1ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884ce1c38"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884ce1dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884ce0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b8884ce0268" loc="47:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884ce0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8884ce05b8"/>
        <function-ref name="source" scoped="" ref="0x2b8884ce0740"/>
        <function-ref name="address" scoped="" ref="0x2b8884ce08c8"/>
        <function-ref name="destination" scoped="" ref="0x2b8884ce0a50"/>
        <function-ref name="setSource" scoped="" ref="0x2b8884ce0bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8884ce0d60"/>
        <function-ref name="type" scoped="" ref="0x2b8884cdf020"/>
        <function-ref name="setType" scoped="" ref="0x2b8884cdf1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8884cdf330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8884cdf4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884cdf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8883cd83b8" loc="46:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8883cd83b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8883cd8708"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8883cd8890"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883cd8a18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883cd8ba0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8883cd8d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8883cd9d90" loc="45:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8883cd9d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8883cd8170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8883cd7020" loc="47:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8883cd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8883cd7370"/>
        <function-ref name="source" scoped="" ref="0x2b8883cd74f8"/>
        <function-ref name="address" scoped="" ref="0x2b8883cd7680"/>
        <function-ref name="destination" scoped="" ref="0x2b8883cd7808"/>
        <function-ref name="setSource" scoped="" ref="0x2b8883cd7990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8883cd7b18"/>
        <function-ref name="type" scoped="" ref="0x2b8883cd7ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b8883cd7e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8883cd6020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8883cd61a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8883cd6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8883cd4710" loc="49:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8883cd4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8883cd4a60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883cd4be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883cd4d70"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883cd3020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8883cd31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8883cd33f0" loc="50:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8883cd33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8883cd3740"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8883cd38c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883cd3a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883cd3bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8883cd3d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8883cd2020" loc="51:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8883cd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8883cd2370"/>
        <function-ref name="source" scoped="" ref="0x2b8883cd24f8"/>
        <function-ref name="address" scoped="" ref="0x2b8883cd2680"/>
        <function-ref name="destination" scoped="" ref="0x2b8883cd2808"/>
        <function-ref name="setSource" scoped="" ref="0x2b8883cd2990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8883cd2b18"/>
        <function-ref name="type" scoped="" ref="0x2b8883cd2ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b8883cd2e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8883cd1020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8883cd11a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8883cd1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b8883cd15b8" loc="52:/opt/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b8883cd15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8883cd1908"/>
        <function-ref name="noAck" scoped="" ref="0x2b8883cd1a90"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8883cd1c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8884cc5cd0" loc="49:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8884cc5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884cc40a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884cc4228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884cc43b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884cc4538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884cc46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8884cc4908" loc="50:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8884cc4908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8884cc4c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8884cc4de0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884cc3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884cc31a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8884cc3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8884cc3578" loc="51:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884cc3578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8884cc38c8"/>
        <function-ref name="source" scoped="" ref="0x2b8884cc3a50"/>
        <function-ref name="address" scoped="" ref="0x2b8884cc3bd8"/>
        <function-ref name="destination" scoped="" ref="0x2b8884cc3d60"/>
        <function-ref name="setSource" scoped="" ref="0x2b8884cc2020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8884cc21a8"/>
        <function-ref name="type" scoped="" ref="0x2b8884cc2330"/>
        <function-ref name="setType" scoped="" ref="0x2b8884cc24b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8884cc2640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8884cc27c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884cc2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b8884cc2bd8" loc="52:/opt/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b8884cc2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8884cc1020"/>
        <function-ref name="noAck" scoped="" ref="0x2b8884cc11a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8884cc1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8884cb86c0" loc="44:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8884cb86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884cb8a10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884cb8b98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884cb8d20"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884cb7020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884cb71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b8884cb7450" loc="46:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8884cb7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884cb77a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884cb7928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884cb7ab0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884cb7c38"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884cb7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b8884cb6060" loc="47:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884cb6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8884cb63b0"/>
        <function-ref name="source" scoped="" ref="0x2b8884cb6538"/>
        <function-ref name="address" scoped="" ref="0x2b8884cb66c0"/>
        <function-ref name="destination" scoped="" ref="0x2b8884cb6848"/>
        <function-ref name="setSource" scoped="" ref="0x2b8884cb69d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8884cb6b58"/>
        <function-ref name="type" scoped="" ref="0x2b8884cb6ce0"/>
        <function-ref name="setType" scoped="" ref="0x2b8884cb6e68"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8884cb5020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8884cb51a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884cb5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8883cceb78" loc="46:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8883cceb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8883ccc020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8883ccc1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8883ccc330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8883ccc4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8883ccc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8883cce5e0" loc="45:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8883cce5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8883cce930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8883ccc888" loc="47:/opt/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8883ccc888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8883cccbd8"/>
        <function-ref name="source" scoped="" ref="0x2b8883cccd60"/>
        <function-ref name="address" scoped="" ref="0x2b8883ccb020"/>
        <function-ref name="destination" scoped="" ref="0x2b8883ccb1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b8883ccb330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8883ccb4b8"/>
        <function-ref name="type" scoped="" ref="0x2b8883ccb640"/>
        <function-ref name="setType" scoped="" ref="0x2b8883ccb7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8883ccb950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8883ccbad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8883ccbc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8883cc99e0" loc="46:/opt/tinyos-2_1_2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8883cc99e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8883cc9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b8883cc6020" loc="47:/opt/tinyos-2_1_2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8883cc6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8883cc6370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8883cc64f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b8883cc6680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8883cc6808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8883cc6990"/>
        <function-ref name="get" scoped="" ref="0x2b8883cc6b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8883cc6ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8883cc5330"/>
        <function-ref name="set" scoped="" ref="0x2b8883cc6e28"/>
        <function-ref name="led0On" scoped="" ref="0x2b8883cc5020"/>
        <function-ref name="led2On" scoped="" ref="0x2b8883cc51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x2b8883d14bd0" loc="45:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x2b8883d14bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b8883d11020"/>
        <function-ref name="incrementCounter" scoped="" ref="0x2b8883d111a8"/>
        <function-ref name="reset" scoped="" ref="0x2b8883d11330"/>
        <function-ref name="start" scoped="" ref="0x2b8883d114b8"/>
        <function-ref name="stop" scoped="" ref="0x2b8883d11640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x2b8883da7a70" loc="55:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x2b8883da7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b8883da7de0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x2b8883da6020"/>
        <function-ref name="reset" scoped="" ref="0x2b8883da61a8"/>
        <function-ref name="start" scoped="" ref="0x2b8883da6330"/>
        <function-ref name="stop" scoped="" ref="0x2b8883da64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x2b8884d39ae0" loc="62:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x2b8884d39ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x2b8884d39e30"/>
        <function-ref name="clear" scoped="" ref="0x2b8884d37020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884d371a8"/>
        <function-ref name="get" scoped="" ref="0x2b8884d37330"/>
        <function-ref name="assign" scoped="" ref="0x2b8884d374b8"/>
        <function-ref name="setAll" scoped="" ref="0x2b8884d37640"/>
        <function-ref name="set" scoped="" ref="0x2b8884d377c8"/>
        <function-ref name="size" scoped="" ref="0x2b8884d37950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x2b8884d37bd8" loc="63:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x2b8884d37bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x2b8884d36020"/>
        <function-ref name="clear" scoped="" ref="0x2b8884d361a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884d36330"/>
        <function-ref name="get" scoped="" ref="0x2b8884d364b8"/>
        <function-ref name="assign" scoped="" ref="0x2b8884d36640"/>
        <function-ref name="setAll" scoped="" ref="0x2b8884d367c8"/>
        <function-ref name="set" scoped="" ref="0x2b8884d36950"/>
        <function-ref name="size" scoped="" ref="0x2b8884d36ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b8884d36d20" loc="64:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b8884d36d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b8884d350a0"/>
        <function-ref name="rand32" scoped="" ref="0x2b8884d35228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x2b8884d3fe38" loc="58:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x2b8884d3fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b8884d3e1e8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x2b8884d3e370"/>
        <function-ref name="reset" scoped="" ref="0x2b8884d3e4f8"/>
        <function-ref name="start" scoped="" ref="0x2b8884d3e680"/>
        <function-ref name="stop" scoped="" ref="0x2b8884d3e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8884d3f780" loc="57:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8884d3f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8884d3fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x2b8884d34a90" loc="154:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x2b8884d34a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8884d34de0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8884d33020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8884d35470" loc="65:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8884d35470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8884d357c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8884d35948"/>
        <function-ref name="led1On" scoped="" ref="0x2b8884d35ad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8884d35c58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8884d35de0"/>
        <function-ref name="get" scoped="" ref="0x2b8884d34020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8884d341a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8884d347c8"/>
        <function-ref name="set" scoped="" ref="0x2b8884d344b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8884d34330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8884d34640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b8884d3ebb8" loc="61:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8884d3ebb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8884d3add8"/>
        <function-ref name="fired" scoped="" ref="0x2b8884d3b510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8884d3a238"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8884d3bdb0"/>
        <function-ref name="getdt" scoped="" ref="0x2b8884d396c8"/>
        <function-ref name="gett0" scoped="" ref="0x2b8884d39278"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8884d3b960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8884d3c728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8884d3a808"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8884d3cbc8"/>
        <function-ref name="stop" scoped="" ref="0x2b8884d3b0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8884d319e8" loc="45:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8884d319e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8884d2dd60"/>
        <function-ref name="fired" scoped="" ref="0x2b8884d2f470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8884d2d1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8884d2fd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b8884d2c648"/>
        <function-ref name="gett0" scoped="" ref="0x2b8884d2c1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8884d2f8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8884d30560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8884d2d790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8884d30a00"/>
        <function-ref name="stop" scoped="" ref="0x2b8884d2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8884d2be28" loc="46:/opt/tinyos-2_1_2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8884d2be28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8884d2a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x2b8884d2a430" loc="47:/opt/tinyos-2_1_2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x2b8884d2a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x2b8884d2a780"/>
        <function-ref name="clear" scoped="" ref="0x2b8884d2a908"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884d2aa90"/>
        <function-ref name="get" scoped="" ref="0x2b8884d2ac18"/>
        <function-ref name="assign" scoped="" ref="0x2b8884d2ada0"/>
        <function-ref name="setAll" scoped="" ref="0x2b8884d29020"/>
        <function-ref name="set" scoped="" ref="0x2b8884d291a8"/>
        <function-ref name="size" scoped="" ref="0x2b8884d29330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8884d28a78" loc="46:/opt/tinyos-2_1_2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8884d28a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8884d28dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x2b8884d270c0" loc="47:/opt/tinyos-2_1_2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x2b8884d270c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x2b8884d27410"/>
        <function-ref name="clear" scoped="" ref="0x2b8884d27598"/>
        <function-ref name="toggle" scoped="" ref="0x2b8884d27720"/>
        <function-ref name="get" scoped="" ref="0x2b8884d278a8"/>
        <function-ref name="assign" scoped="" ref="0x2b8884d27a30"/>
        <function-ref name="setAll" scoped="" ref="0x2b8884d27bb8"/>
        <function-ref name="set" scoped="" ref="0x2b8884d27d40"/>
        <function-ref name="size" scoped="" ref="0x2b8884d26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b8883d9ec38" loc="47:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b8883d9ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8883d9b020"/>
        <function-ref name="stop" scoped="" ref="0x2b8883d9b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x2b8883d8f890" loc="48:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <component-ref qname="NetProgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x2b8883d8f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x2b8883d8fbe0"/>
        <function-ref name="reboot" scoped="" ref="0x2b8883d8fd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InternalFlash" ref="0x2b8883ddbd68" loc="45:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <component-ref qname="InternalFlashC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InternalFlash" scoped="" ref="0x2b8883ddbd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883dde0f0"/>
        <function-ref name="write" scoped="" ref="0x2b8883dde278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x2b8883d8e5f8" loc="47:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x2b8883d8e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x2b8883d8e948"/>
        <function-ref name="reboot" scoped="" ref="0x2b8883d8ead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b8883dcca90" loc="55:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b8883dcca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b8883dccde0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b8883dcb020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b8883dcb1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2b8883dcb330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b8883dcb4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b8883dcb640"/>
        <function-ref name="setChannel" scoped="" ref="0x2b8883dcb7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b8883dcb950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b8883dcbad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b8883dcbc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b8883dcbde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b8883dca020"/>
        <function-ref name="sync" scoped="" ref="0x2b8883dca1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b8883dca430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b8883dca5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReprogramGuard" ref="0x2b8883dc6748" loc="58:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReprogramGuard" scoped="" ref="0x2b8883dc6748"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReprogramGuard"/>
      </instance>
      <interface-functions>
        <function-ref name="okToProgramDone" scoped="" ref="0x2b8883dc6a98"/>
        <function-ref name="okToProgram" scoped="" ref="0x2b8883dc6c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IFlash" ref="0x2b8883dce4a8" loc="51:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IFlash" scoped="" ref="0x2b8883dce4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883dce7f8"/>
        <function-ref name="write" scoped="" ref="0x2b8883dce980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8883d8ed48" loc="48:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8883d8ed48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8883dce0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8883dcd420" loc="53:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8883dcd420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8883dcd770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8883dcd8f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b8883dcda80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8883dcdc08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8883dcdd90"/>
        <function-ref name="get" scoped="" ref="0x2b8883dcc020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8883dcc1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8883dcc7c8"/>
        <function-ref name="set" scoped="" ref="0x2b8883dcc330"/>
        <function-ref name="led0On" scoped="" ref="0x2b8883dcc4b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8883dcc640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x2b8883dcebe8" loc="52:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x2b8883dcebe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x2b8883dcd020"/>
        <function-ref name="crc16" scoped="" ref="0x2b8883dcd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReprogramGuard" ref="0x2b8883dcfb08" loc="3:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/micaz/ReprogramGuardC.nc">
      <component-ref qname="ReprogramGuardC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReprogramGuard" scoped="" ref="0x2b8883dcfb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReprogramGuard"/>
      </instance>
      <interface-functions>
        <function-ref name="okToProgramDone" scoped="" ref="0x2b8883dcfe58"/>
        <function-ref name="okToProgram" scoped="" ref="0x2b8883e15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReprogramGuard" ref="0x2b8883e15b00" loc="3:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/micaz/ReprogramGuardP.nc">
      <component-ref qname="ReprogramGuardP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReprogramGuard" scoped="" ref="0x2b8883e15b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReprogramGuard"/>
      </instance>
      <interface-functions>
        <function-ref name="okToProgramDone" scoped="" ref="0x2b8883e15e50"/>
        <function-ref name="okToProgram" scoped="" ref="0x2b8883e12020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Voltage" ref="0x2b8883e124c0" loc="4:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/micaz/ReprogramGuardP.nc">
      <component-ref qname="ReprogramGuardP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Voltage" scoped="" ref="0x2b8883e124c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883e11088"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883e114d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b8883e14a60" loc="41:/opt/tinyos-2_1_2/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="ReprogramGuardC.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b8883e14a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883e13620"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883e13a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b8884d6f020" loc="25:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="ReprogramGuardC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8884d6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b8884d6f370"/>
        <function-ref name="configure" scoped="" ref="0x2b8884d6f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b8884d71128" loc="22:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="ReprogramGuardC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b8884d71128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8884d71c70"/>
        <function-ref name="readDone" scoped="" ref="0x2b8884d700f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b8884d706b0" loc="24:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="ReprogramGuardC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b8884d706b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b8884d70a00"/>
        <function-ref name="getChannel" scoped="" ref="0x2b8884d70b88"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b8884d70d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b8883e01c90" loc="18:/opt/tinyos-2_1_2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b8883e01c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883dfc820"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883dfcc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b8883df6a00" loc="19:/opt/tinyos-2_1_2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b8883df6a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883dfa5b0"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883dfaa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b8883df9670" loc="22:/opt/tinyos-2_1_2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b8883df9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b8883df99c0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b8883df9b48"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b8883df9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b8883df54c0" loc="23:/opt/tinyos-2_1_2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883df54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883df5810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883df5998"/>
        <function-ref name="request" scoped="" ref="0x2b8883df5b20"/>
        <function-ref name="granted" scoped="" ref="0x2b8883df5ca8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883df5e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b8883def890" loc="58:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8883def890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b8883defbe0"/>
        <function-ref name="configure" scoped="" ref="0x2b8883defd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b8883e4b9b0" loc="56:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b8883e4b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b8883e4bd00"/>
        <function-ref name="dataReady" scoped="" ref="0x2b8883def020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b8883de90d0" loc="55:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b8883de90d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b8883de9420"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883de95a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b8883de9730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883df0020" loc="54:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883df0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883df0370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883df04f8"/>
        <function-ref name="request" scoped="" ref="0x2b8883df0680"/>
        <function-ref name="granted" scoped="" ref="0x2b8883df0808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883df0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8883e4ad40" loc="85:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8883e4ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8883e470d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b8883e46628" loc="88:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b8883e46628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b8883e46978"/>
        <function-ref name="dataReady" scoped="" ref="0x2b8883e46b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b8883e47b70" loc="87:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b8883e47b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b8883e46020"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883e461a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b8883e46330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2b8883e360d0" loc="91:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b8883e360d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b8883e36420"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b8883e365a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b8883e36730"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b8883e368b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b8883e36a40"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b8883e36bc8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b8883e36d50"/>
        <function-ref name="isComplete" scoped="" ref="0x2b8883e44020"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883e441a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b8883e44330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b8883e444b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b8883e44640"/>
        <function-ref name="startConversion" scoped="" ref="0x2b8883e447c8"/>
        <function-ref name="isStarted" scoped="" ref="0x2b8883e44a50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b8883e44bd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b8883e44d60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b8883e43020"/>
        <function-ref name="getValue" scoped="" ref="0x2b8883e431a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b8883e43330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b8883e473b8" loc="86:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b8883e473b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8883e47708"/>
        <function-ref name="stop" scoped="" ref="0x2b8883e47890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b8883e43610" loc="92:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8883e43610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b8883e43960"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b8883e43ae8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b8883e43c70"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b8883e43df8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b8883e35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b8883e48a18" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b8883e48a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b8883e48d68"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b8883e6c020"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b8883e6c1a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b8883e6c330"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b8883e6c4b8"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b8883e6c640"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b8883e6c7c8"/>
        <function-ref name="isComplete" scoped="" ref="0x2b8883e6c950"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883e6cad8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b8883e6cc60"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b8883e6cde8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b8883e6b020"/>
        <function-ref name="startConversion" scoped="" ref="0x2b8883e6b1a8"/>
        <function-ref name="isStarted" scoped="" ref="0x2b8883e6b430"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b8883e6b5b8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b8883e6b740"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b8883e6b8c8"/>
        <function-ref name="getValue" scoped="" ref="0x2b8883e6ba50"/>
        <function-ref name="dataReady" scoped="" ref="0x2b8883e6bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b8883e6ac38" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b8883e6ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b8883e67020"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b8883e671a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b8883e67330"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b8883e674b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b8883e67640"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b8883e677c8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b8883e67950"/>
        <function-ref name="isComplete" scoped="" ref="0x2b8883e67ad8"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883e67c60"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b8883e67de8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b8883e66020"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b8883e661a8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b8883e66330"/>
        <function-ref name="isStarted" scoped="" ref="0x2b8883e665b8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b8883e66740"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b8883e668c8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b8883e66a50"/>
        <function-ref name="getValue" scoped="" ref="0x2b8883e66bd8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b8883e66d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b8883e650c0" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b8883e650c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b8883e65410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b8883ed4698" loc="92:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b8883ed4698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b8883ed4a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8883ed4b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b8883ed13c8" loc="96:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8883ed13c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b8883ed1738"/>
        <function-ref name="configure" scoped="" ref="0x2b8883ed18c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b8883ed4dd8" loc="93:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8883ed4dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883ed2170"/>
        <function-ref name="requested" scoped="" ref="0x2b8883ed22f8"/>
        <function-ref name="granted" scoped="" ref="0x2b8883ed2480"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883ed2608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8883ed2790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883ed5840" loc="91:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883ed5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883ed5bb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883ed5d38"/>
        <function-ref name="request" scoped="" ref="0x2b8883ed4020"/>
        <function-ref name="granted" scoped="" ref="0x2b8883ed41a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883ed4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b8883ed29d8" loc="94:/opt/tinyos-2_1_2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883ed29d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8883ed2d28"/>
        <function-ref name="userId" scoped="" ref="0x2b8883ed1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8884d5f3a0" loc="44:/opt/tinyos-2_1_2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8884d5f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8884d5f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b8884d5f978" loc="45:/opt/tinyos-2_1_2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b8884d5f978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b8884d5fcc8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b8884d5fe50"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b8884d5e020"/>
        <function-ref name="dequeue" scoped="" ref="0x2b8884d5e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b8884d5c820" loc="55:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b8884d5c820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b8884d5cb90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8884d5cd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b8884d59570" loc="60:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8884d59570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b8884d598e0"/>
        <function-ref name="configure" scoped="" ref="0x2b8884d59a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b8884d59cf0" loc="61:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b8884d59cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b8884d580a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b8884d58228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b8884d583b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b8884d58538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b8884d5b020" loc="56:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8884d5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884d5b370"/>
        <function-ref name="requested" scoped="" ref="0x2b8884d5b4f8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884d5b680"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884d5b808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8884d5b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8884d58780" loc="62:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8884d58780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8884d58ad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8884d58c58"/>
        <function-ref name="led1On" scoped="" ref="0x2b8884d58de0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8884d57020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8884d571a8"/>
        <function-ref name="get" scoped="" ref="0x2b8884d57330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8884d574b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8884d57ad8"/>
        <function-ref name="set" scoped="" ref="0x2b8884d577c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8884d57640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8884d57950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884d5d9c0" loc="54:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884d5d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884d5dd30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884d5c020"/>
        <function-ref name="request" scoped="" ref="0x2b8884d5c1a8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884d5c330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884d5c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b8884d5bbd8" loc="57:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8884d5bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8884d59020"/>
        <function-ref name="userId" scoped="" ref="0x2b8884d591a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b8884d57da0" loc="75:/opt/tinyos-2_1_2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b8884d57da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8884d56170"/>
        <function-ref name="runTask" scoped="" ref="0x2b8884d562f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b8883ece780" loc="72:/opt/tinyos-2_1_2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b8883ece780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b8883ecead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b8883eced18" loc="73:/opt/tinyos-2_1_2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8883eced18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883eb90a0"/>
        <function-ref name="requested" scoped="" ref="0x2b8883eb9228"/>
        <function-ref name="granted" scoped="" ref="0x2b8883eb93b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883eb9538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8883eb96c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b8883ece060" loc="70:/opt/tinyos-2_1_2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b8883ece060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8883ece3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b8883ece538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b8883eb9908" loc="74:/opt/tinyos-2_1_2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8883eb9908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8883eb9c58"/>
        <function-ref name="userId" scoped="" ref="0x2b8883eb9de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b8884df4590" loc="62:/opt/tinyos-2_1_2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b8884df4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b8884df48e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b8884df4b28" loc="63:/opt/tinyos-2_1_2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b8884df4b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884df4e78"/>
        <function-ref name="requested" scoped="" ref="0x2b8884df3030"/>
        <function-ref name="granted" scoped="" ref="0x2b8884df31b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884df3340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8884df34c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b8884df6e38" loc="60:/opt/tinyos-2_1_2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b8884df6e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8884df41c0"/>
        <function-ref name="stop" scoped="" ref="0x2b8884df4348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b8884df3710" loc="64:/opt/tinyos-2_1_2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8884df3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8884df3a60"/>
        <function-ref name="userId" scoped="" ref="0x2b8884df3be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b8883f196a0" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b8883f196a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883f18370"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883f187c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b8883f16428" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b8883f16428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883f15020"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883f154a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b8883f149a0" loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b8883f149a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b8883f14cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b8883f14e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b8883f13030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2b8883f15b18" loc="52:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b8883f15b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b8883f15e68"/>
        <function-ref name="cancel" scoped="" ref="0x2b8883f14020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b8883f141a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x2b8883f034d8" loc="103:/opt/tinyos-2_1_2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x2b8883f034d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8883f03828"/>
        <function-ref name="runTask" scoped="" ref="0x2b8883f039b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b8883ef0680" loc="24:/opt/tinyos-2_1_2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b8883ef0680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883f43370"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883f437e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b8883f42060" loc="26:/opt/tinyos-2_1_2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b8883f42060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883f42bc8"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883f40088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b8883f40720" loc="27:/opt/tinyos-2_1_2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883f40720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883f40a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883f40c18"/>
        <function-ref name="request" scoped="" ref="0x2b8883f40da0"/>
        <function-ref name="granted" scoped="" ref="0x2b8883f3f020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883f3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2b8883f36438" loc="40:/opt/tinyos-2_1_2/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b8883f36438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b8883f36788"/>
        <function-ref name="getChannel" scoped="" ref="0x2b8883f36910"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b8883f36a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskRequest" ref="0x2b8883f7a4d8" loc="97:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskRequest" scoped="" ref="0x2b8883f7a4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8883f7a828"/>
        <function-ref name="runTask" scoped="" ref="0x2b8883f7a9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NetProg" ref="0x2b8883f22438" loc="46:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x2b8883f22438"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x2b8883f22788"/>
        <function-ref name="reboot" scoped="" ref="0x2b8883f22910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSplitControl" ref="0x2b8883f23870" loc="45:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSplitControl" scoped="" ref="0x2b8883f23870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8883f23bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8883f23d48"/>
        <function-ref name="start" scoped="" ref="0x2b8883f22020"/>
        <function-ref name="stop" scoped="" ref="0x2b8883f221a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b8883f2ba40" loc="40:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b8883f2ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b8883f2bd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationStdControl" ref="0x2b8883f243f0" loc="43:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationStdControl" scoped="" ref="0x2b8883f243f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8883f24740"/>
        <function-ref name="stop" scoped="" ref="0x2b8883f248c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x2b8883f211c8" loc="47:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x2b8883f211c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x2b8883f21518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeMetadata" ref="0x2b8883f886a0" loc="48:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x2b8883f886a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883f889f0"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883f88b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8883f28080" loc="41:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8883f28080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8883f283d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8883f28558"/>
        <function-ref name="led1On" scoped="" ref="0x2b8883f286e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8883f28868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8883f289f0"/>
        <function-ref name="get" scoped="" ref="0x2b8883f28b78"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8883f28d00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8883f274b8"/>
        <function-ref name="set" scoped="" ref="0x2b8883f27020"/>
        <function-ref name="led0On" scoped="" ref="0x2b8883f271a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8883f27330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b8883f85d48" loc="50:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883f85d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883f8a0d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883f8a260"/>
        <function-ref name="request" scoped="" ref="0x2b8883f8a3e8"/>
        <function-ref name="granted" scoped="" ref="0x2b8883f8a570"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883f8a6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationValue" ref="0x2b8883f27920" loc="42:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x2b8883f27920"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x2b88827ef358"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x2b88827fc0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b8883f26e20"/>
        <function-ref name="get" scoped="" ref="0x2b8883f264c8"/>
        <function-ref name="set" scoped="" ref="0x2b8883f26950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeVolumeManager" ref="0x2b8883f855d0" loc="49:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b8883f855d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x2b8883f85920"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883f85aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ObjectTransfer" ref="0x2b8883f24ba0" loc="44:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x2b8883f24ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8883f23020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b8883f231a8"/>
        <function-ref name="publish" scoped="" ref="0x2b8883f23330"/>
        <function-ref name="stop" scoped="" ref="0x2b8883f234b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8883f5b388" loc="45:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8883f5b388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8883f586c8"/>
        <function-ref name="fired" scoped="" ref="0x2b8883f5adb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8883f59ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8883f59688"/>
        <function-ref name="getdt" scoped="" ref="0x2b8883f57020"/>
        <function-ref name="gett0" scoped="" ref="0x2b8883f58b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8883f59238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8883f5a020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8883f580f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8883f5a4c0"/>
        <function-ref name="stop" scoped="" ref="0x2b8883f5a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x2b8883f55c28" loc="39:../../Deluge/DelugeMetadataC.nc">
      <component-ref qname="DelugeMetadataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x2b8883f55c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883fbe020"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883fbe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b8883fb6180" loc="43:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b8883fb6180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b8883fb64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x2b8883fb6ca8" loc="44:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8883fb6ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883fb5020"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883fb51a8"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883fb5330"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883fb54b8"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883fb5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x2b8883fb5e20" loc="45:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fb5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8883fb41a8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883fb4330"/>
        <function-ref name="erase" scoped="" ref="0x2b8883fb44b8"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883fb4640"/>
        <function-ref name="write" scoped="" ref="0x2b8883fb47c8"/>
        <function-ref name="sync" scoped="" ref="0x2b8883fb4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x2b8883fb79a8" loc="41:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x2b8883fb79a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883fb7cf8"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883fb7e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x2b8883fb31c8" loc="46:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x2b8883fb31c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x2b8883fb3518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8883fe7020" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8883fe7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883fe7370"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883fe74f8"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883fe7680"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883fe7808"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883fe7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883fe7bd8" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883fe7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883fe6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883fe61a8"/>
        <function-ref name="request" scoped="" ref="0x2b8883fe6330"/>
        <function-ref name="granted" scoped="" ref="0x2b8883fe64b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883fe6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884ddab80" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884ddab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884dd9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884dd81a8" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884dd81a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884dd84f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884dd8680"/>
        <function-ref name="request" scoped="" ref="0x2b8884dd8808"/>
        <function-ref name="granted" scoped="" ref="0x2b8884dd8990"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884dd8b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8883fe4140" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8883fe4140"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883fe4490"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883fe4618"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883fe47a0"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883fe4928"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883fe4ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883fe4cf8" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883fe4cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883fe30a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883fe3228"/>
        <function-ref name="request" scoped="" ref="0x2b8883fe33b0"/>
        <function-ref name="granted" scoped="" ref="0x2b8883fe3538"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883fe36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884dd0af0" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884dd0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884dd0e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884dce020" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884dce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884dce370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884dce4f8"/>
        <function-ref name="request" scoped="" ref="0x2b8884dce680"/>
        <function-ref name="granted" scoped="" ref="0x2b8884dce808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884dce990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8883fe11a8" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8883fe11a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883fe14f8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883fe1680"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883fe1808"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883fe1990"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883fe1b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883fe1d60" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883fe1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883fe00d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883fe0260"/>
        <function-ref name="request" scoped="" ref="0x2b8883fe03e8"/>
        <function-ref name="granted" scoped="" ref="0x2b8883fe0570"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883fe06f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884e6caf0" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884e6caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884e6ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884e6a020" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884e6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884e6a370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884e6a4f8"/>
        <function-ref name="request" scoped="" ref="0x2b8884e6a680"/>
        <function-ref name="granted" scoped="" ref="0x2b8884e6a808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884e6a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8883fde208" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8883fde208"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883fde558"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8883fde6e0"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8883fde868"/>
        <function-ref name="getSize" scoped="" ref="0x2b8883fde9f0"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883fdeb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883fdedc0" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883fdedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883fdc170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883fdc2f8"/>
        <function-ref name="request" scoped="" ref="0x2b8883fdc480"/>
        <function-ref name="granted" scoped="" ref="0x2b8883fdc608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883fdc790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884e61af0" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884e61af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884e61e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884e5f020" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884e5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884e5f370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884e5f4f8"/>
        <function-ref name="request" scoped="" ref="0x2b8884e5f680"/>
        <function-ref name="granted" scoped="" ref="0x2b8884e5f808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884e5f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8883fd98a0" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fd98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8883fd9bf0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883fd9d78"/>
        <function-ref name="erase" scoped="" ref="0x2b8883fd8020"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883fd81a8"/>
        <function-ref name="write" scoped="" ref="0x2b8883fd8330"/>
        <function-ref name="sync" scoped="" ref="0x2b8883fd84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883fd8700" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883fd8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883fd8a50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883fd8bd8"/>
        <function-ref name="request" scoped="" ref="0x2b8883fd8d60"/>
        <function-ref name="granted" scoped="" ref="0x2b8883fd7020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883fd71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884e57af0" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884e57af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884e57e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884e55020" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884e55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884e55370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884e554f8"/>
        <function-ref name="request" scoped="" ref="0x2b8884e55680"/>
        <function-ref name="granted" scoped="" ref="0x2b8884e55808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884e55990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8883fd6d18" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fd6d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8883fd50a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883fd5228"/>
        <function-ref name="erase" scoped="" ref="0x2b8883fd53b0"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883fd5538"/>
        <function-ref name="write" scoped="" ref="0x2b8883fd56c0"/>
        <function-ref name="sync" scoped="" ref="0x2b8883fd5848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883fd5a90" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883fd5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883fd5de0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883fd4020"/>
        <function-ref name="request" scoped="" ref="0x2b8883fd41a8"/>
        <function-ref name="granted" scoped="" ref="0x2b8883fd4330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883fd44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884e4dcc8" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884e4dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884e4b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884e4a258" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884e4a258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884e4a5a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884e4a730"/>
        <function-ref name="request" scoped="" ref="0x2b8884e4a8b8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884e4aa40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884e4abc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8883fd2020" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8883fd2370"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883fd24f8"/>
        <function-ref name="erase" scoped="" ref="0x2b8883fd2680"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883fd2808"/>
        <function-ref name="write" scoped="" ref="0x2b8883fd2990"/>
        <function-ref name="sync" scoped="" ref="0x2b8883fd2b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883fd2d60" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883fd2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883fd10d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883fd1260"/>
        <function-ref name="request" scoped="" ref="0x2b8883fd13e8"/>
        <function-ref name="granted" scoped="" ref="0x2b8883fd1570"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883fd16f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884e42cc8" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884e42cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884e410a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884e40258" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884e40258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884e405a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884e40730"/>
        <function-ref name="request" scoped="" ref="0x2b8884e408b8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884e40a40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884e40bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8883fcf390" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8883fcf390"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8883fcf6e0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8883fcf868"/>
        <function-ref name="erase" scoped="" ref="0x2b8883fcf9f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8883fcfb78"/>
        <function-ref name="write" scoped="" ref="0x2b8883fcfd00"/>
        <function-ref name="sync" scoped="" ref="0x2b8883fce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883fce268" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883fce268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883fce5b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883fce740"/>
        <function-ref name="request" scoped="" ref="0x2b8883fce8c8"/>
        <function-ref name="granted" scoped="" ref="0x2b8883fcea50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883fcebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884e38cc8" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884e38cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884e360a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884e35258" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884e35258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884e355a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884e35730"/>
        <function-ref name="request" scoped="" ref="0x2b8884e358b8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884e35a40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884e35bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x2b8883fc6d30" loc="39:../../Deluge/DelugeMetadataClientC.nc">
      <component-ref qname="DelugeC.DelugeMetadataClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x2b8883fc6d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8883fc50d8"/>
        <function-ref name="readDone" scoped="" ref="0x2b8883fc5260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x2b888402e258" loc="39:../../Deluge/DelugeVolumeManagerClientC.nc">
      <component-ref qname="DelugeC.DelugeVolumeManagerClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b888402e258"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x2b888402e5a8"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b888402e730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x2b8884029538" loc="39:../../Deluge/DelugeVolumeManagerC.nc">
      <component-ref qname="DelugeVolumeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b8884029538"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x2b8884029888"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8884029a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x2b88840259e8" loc="41:../../Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b88840259e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8884025d38"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8884023020"/>
        <function-ref name="erase" scoped="" ref="0x2b88840231a8"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8884023330"/>
        <function-ref name="write" scoped="" ref="0x2b88840234b8"/>
        <function-ref name="sync" scoped="" ref="0x2b8884023640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b8884023e10" loc="42:../../Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884023e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b88840221a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884022330"/>
        <function-ref name="request" scoped="" ref="0x2b88840224b8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884022640"/>
        <function-ref name="isOwner" scoped="" ref="0x2b88840227c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x2b8884028b68" loc="39:../../Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b8884028b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x2b8884025020"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b88840251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8884026d18" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8884026d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b888400b0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b888400b228"/>
        <function-ref name="erase" scoped="" ref="0x2b888400b3b0"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b888400b538"/>
        <function-ref name="write" scoped="" ref="0x2b888400b6c0"/>
        <function-ref name="sync" scoped="" ref="0x2b888400b848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b888400ba90" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b888400ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b888400bde0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b888400a020"/>
        <function-ref name="request" scoped="" ref="0x2b888400a1a8"/>
        <function-ref name="granted" scoped="" ref="0x2b888400a330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b888400a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884e26638" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884e26638"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884e26988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884e25cc8" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884e25cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884e240a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884e24228"/>
        <function-ref name="request" scoped="" ref="0x2b8884e243b0"/>
        <function-ref name="granted" scoped="" ref="0x2b8884e24538"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884e246c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8884008020" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8884008020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8884008370"/>
        <function-ref name="writeDone" scoped="" ref="0x2b88840084f8"/>
        <function-ref name="erase" scoped="" ref="0x2b8884008680"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8884008808"/>
        <function-ref name="write" scoped="" ref="0x2b8884008990"/>
        <function-ref name="sync" scoped="" ref="0x2b8884008b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884008d60" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884008d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b88840070d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884007260"/>
        <function-ref name="request" scoped="" ref="0x2b88840073e8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884007570"/>
        <function-ref name="isOwner" scoped="" ref="0x2b88840076f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884e1c6b8" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884e1c6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884e1ca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884e1bcc8" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884e1bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884ec00a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884ec0228"/>
        <function-ref name="request" scoped="" ref="0x2b8884ec03b0"/>
        <function-ref name="granted" scoped="" ref="0x2b8884ec0538"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884ec06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8884005390" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8884005390"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b88840056e0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8884005868"/>
        <function-ref name="erase" scoped="" ref="0x2b88840059f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8884005b78"/>
        <function-ref name="write" scoped="" ref="0x2b8884005d00"/>
        <function-ref name="sync" scoped="" ref="0x2b8884004020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884004268" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884004268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b88840045b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884004740"/>
        <function-ref name="request" scoped="" ref="0x2b88840048c8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884004a50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884004bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884eb86b8" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884eb86b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884eb8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884eb7cc8" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884eb7cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884eb60a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884eb6228"/>
        <function-ref name="request" scoped="" ref="0x2b8884eb63b0"/>
        <function-ref name="granted" scoped="" ref="0x2b8884eb6538"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884eb66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8883ffda00" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8883ffda00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8883ffdd50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8883ffc020"/>
        <function-ref name="request" scoped="" ref="0x2b8883ffc1a8"/>
        <function-ref name="granted" scoped="" ref="0x2b8883ffc330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8883ffc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b88840649d0" loc="46:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b88840649d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8884064d20"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8884061020"/>
        <function-ref name="start" scoped="" ref="0x2b88840611a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8884061330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8884061aa8" loc="47:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8884061aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884061df8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884060020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88840601a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884060330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88840604b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b888405f2a8" loc="49:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b888405f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b888405f5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b888405f780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b888405f908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888405fa90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b888405fc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8884060c38" loc="48:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8884060c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888405f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b888405b020" loc="53:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b888405b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b888405b370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b888405b4f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b888405b680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b888405b808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b888405b990"/>
        <function-ref name="get" scoped="" ref="0x2b888405bb18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b888405bca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b888405a330"/>
        <function-ref name="set" scoped="" ref="0x2b888405be28"/>
        <function-ref name="led0On" scoped="" ref="0x2b888405a020"/>
        <function-ref name="led2On" scoped="" ref="0x2b888405a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b888405c658" loc="51:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b888405c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b888405c9a8"/>
        <function-ref name="noAck" scoped="" ref="0x2b888405cb30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b888405ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b888405d020" loc="50:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b888405d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b888405d370"/>
        <function-ref name="source" scoped="" ref="0x2b888405d4f8"/>
        <function-ref name="address" scoped="" ref="0x2b888405d680"/>
        <function-ref name="destination" scoped="" ref="0x2b888405d808"/>
        <function-ref name="setSource" scoped="" ref="0x2b888405d990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b888405db18"/>
        <function-ref name="type" scoped="" ref="0x2b888405dca0"/>
        <function-ref name="setType" scoped="" ref="0x2b888405de28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b888405c020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b888405c1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b888405c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b8884072308" loc="54:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b8884072308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884072658"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88840727e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884072968"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884072af0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884072c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b8884071020" loc="55:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b8884071020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8884071370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8884058460" loc="47:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8884058460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88840587d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884058958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884058ae0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884058c68"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884058df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8884074d20" loc="50:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8884074d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88840730a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8884073228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88840733b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884073538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b88840736c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8884075180" loc="48:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8884075180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b88840754f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b8884073908" loc="51:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8884073908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8884073c58"/>
        <function-ref name="noAck" scoped="" ref="0x2b8884073de0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8884072020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8884075738" loc="49:/opt/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884075738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8884075a88"/>
        <function-ref name="source" scoped="" ref="0x2b8884075c10"/>
        <function-ref name="address" scoped="" ref="0x2b8884075d98"/>
        <function-ref name="destination" scoped="" ref="0x2b8884074020"/>
        <function-ref name="setSource" scoped="" ref="0x2b88840741a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8884074330"/>
        <function-ref name="type" scoped="" ref="0x2b88840744b8"/>
        <function-ref name="setType" scoped="" ref="0x2b8884074640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b88840747c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8884074950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884074ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b888406d728" loc="50:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b888406d728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b888406da78"/>
        <function-ref name="stopDone" scoped="" ref="0x2b888406dc00"/>
        <function-ref name="start" scoped="" ref="0x2b888406dd88"/>
        <function-ref name="stop" scoped="" ref="0x2b888406c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b888406b208" loc="52:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b888406b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b8882848408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b888406b558"/>
        <function-ref name="getPayload" scoped="" ref="0x2b888406b6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888406b868"/>
        <function-ref name="cancel" scoped="" ref="0x2b888406b9f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b888406bb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b888406d110" loc="49:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b888406d110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b888406d460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b888406c760" loc="51:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b888406c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b8882848408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888406cab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b88840688f8" loc="56:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b88840688f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8884068c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8884068dd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b88840d4020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b88840d41a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b88840d4330"/>
        <function-ref name="get" scoped="" ref="0x2b88840d44b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b88840d4640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b88840d4c60"/>
        <function-ref name="set" scoped="" ref="0x2b88840d47c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b88840d4950"/>
        <function-ref name="led2On" scoped="" ref="0x2b88840d4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b8884068020" loc="55:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b8884068020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b8882848408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b8884068370"/>
        <function-ref name="offset" scoped="" ref="0x2b88840684f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b8884068680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b88840d3cf8" loc="66:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b88840d3cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b88840d00a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b88840d0228"/>
        <function-ref name="start" scoped="" ref="0x2b88840d03b0"/>
        <function-ref name="stop" scoped="" ref="0x2b88840d0538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b88840df830" loc="332:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b88840df830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b88840dfb80"/>
        <function-ref name="runTask" scoped="" ref="0x2b88840dfd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b88840c0398" loc="74:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b88840c0398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b88840c06e8"/>
        <function-ref name="stop" scoped="" ref="0x2b88840c0870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b88840a5d70" loc="191:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b88840a5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b88840a30f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b88840a3278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b88840d36e0" loc="65:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b88840d36e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88840d3a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b88840bde40" loc="75:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b88840bde40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b88840bf1c0"/>
        <function-ref name="flush" scoped="" ref="0x2b88840bf348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b88840e2020" loc="322:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b88840e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b88840e2370"/>
        <function-ref name="runTask" scoped="" ref="0x2b88840e24f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b88840c1b38" loc="72:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b88840c1b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b88840ca020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b88840ca1a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b88840ca330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b88840ca4b8"/>
        <function-ref name="putData" scoped="" ref="0x2b88840ca640"/>
        <function-ref name="putDone" scoped="" ref="0x2b88840ca7c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b88840ca950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b88840cabc8" loc="73:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b88840cabc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b88840c6020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b88840c61a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b88840c6330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b88840c64b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b88840c6640"/>
        <function-ref name="get" scoped="" ref="0x2b88840c67c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b88840c6950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b88840c0020"/>
        <function-ref name="set" scoped="" ref="0x2b88840c6ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b88840c6c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b88840c6de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b88840dc918" loc="341:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b88840dc918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b88840dcc68"/>
        <function-ref name="runTask" scoped="" ref="0x2b88840dcdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b88840cb898" loc="67:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b88840cb898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b88840cbbe8"/>
        <function-ref name="nextByte" scoped="" ref="0x2b88840cbd70"/>
        <function-ref name="startSend" scoped="" ref="0x2b88840cf020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b88840cf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b88840c7b48" loc="68:/opt/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b88840c7b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b88840ce020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b88840ce1a8"/>
        <function-ref name="endPacket" scoped="" ref="0x2b88840ce330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b88841e6100" loc="275:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b88841e6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b88841e6450"/>
        <function-ref name="runTask" scoped="" ref="0x2b88841e65d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b88841ea020" loc="51:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b88841ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b8882848408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88841ea390"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88841ea518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88841ea6a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b88841ea828"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88841ea9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b88841e68a0" loc="158:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b88841e68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b88841e6bf0"/>
        <function-ref name="runTask" scoped="" ref="0x2b88841e6d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b88841eb868" loc="50:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b88841eb868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b8882848408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b88841ebbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b88841eadb8" loc="54:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b88841eadb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b8882848408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b88841e9170"/>
        <function-ref name="offset" scoped="" ref="0x2b88841e92f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b88841e9480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b88841e8a50" loc="57:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b88841e8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b88841e8da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b88841e7020"/>
        <function-ref name="led1On" scoped="" ref="0x2b88841e71a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b88841e7330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b88841e74b8"/>
        <function-ref name="get" scoped="" ref="0x2b88841e7640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b88841e77c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b88841e7de8"/>
        <function-ref name="set" scoped="" ref="0x2b88841e7ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b88841e7950"/>
        <function-ref name="led0On" scoped="" ref="0x2b88841e7c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b88841e8020" loc="56:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b88841e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b88841e8370"/>
        <function-ref name="nextByte" scoped="" ref="0x2b88841e84f8"/>
        <function-ref name="startSend" scoped="" ref="0x2b88841e8680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b88841e8808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b88841e96c8" loc="55:/opt/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b88841e96c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b88841e9a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b88841e9ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b88841e9d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b88841d3448" loc="50:/opt/tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b88841d3448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88841d3798"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b88841d3920"/>
        <function-ref name="receive" scoped="" ref="0x2b88841d3aa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b88841d3c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b88841d3db8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b88841df020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88841df1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b88841e3b30" loc="48:/opt/tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b88841e3b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b88841e3e80"/>
        <function-ref name="resetSend" scoped="" ref="0x2b88841e0030"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b88841e01b8"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b88841e0340"/>
        <function-ref name="putData" scoped="" ref="0x2b88841e04c8"/>
        <function-ref name="putDone" scoped="" ref="0x2b88841e0650"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b88841e07d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b88841df420" loc="51:/opt/tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b88841df420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b88841df770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b88841df8f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b88841dfa80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b88841dfc08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b88841dfd90"/>
        <function-ref name="get" scoped="" ref="0x2b88841de020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b88841de1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b88841de7c8"/>
        <function-ref name="set" scoped="" ref="0x2b88841de330"/>
        <function-ref name="led0On" scoped="" ref="0x2b88841de4b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b88841de640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b888422a290" loc="42:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b888422a290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b888422a5e0"/>
        <function-ref name="receive" scoped="" ref="0x2b888422a768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b88842300c0" loc="41:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b88842300c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884230410"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b8884230598"/>
        <function-ref name="receive" scoped="" ref="0x2b8884230720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b88842308a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b8884230a30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b8884230bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884230d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b88841e28b0" loc="40:/opt/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b88841e28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b88841e2c00"/>
        <function-ref name="stop" scoped="" ref="0x2b88841e2d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b888422eaf0" loc="41:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b888422eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b888422ee40"/>
        <function-ref name="receive" scoped="" ref="0x2b8884228020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b8884228310" loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b8884228310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884228660"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b88842287e8"/>
        <function-ref name="receive" scoped="" ref="0x2b8884228970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b8884228af8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b8884228c80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b8884228e08"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884227020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b8884227598" loc="43:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8884227598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882777588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b88827778e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b88842263a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8884226cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8884226830"/>
        <function-ref name="overflow" scoped="" ref="0x2b8884225190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b888422e338" loc="40:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b888422e338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b888422e688"/>
        <function-ref name="stop" scoped="" ref="0x2b888422e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b8884223e58" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b8884223e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88842571e8"/>
        <function-ref name="receive" scoped="" ref="0x2b8884257370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b88842565f8" loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b88842565f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8884256948"/>
        <function-ref name="stop" scoped="" ref="0x2b8884256ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8884223120" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8884223120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8884223470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b88842575f8" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b88842575f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884257948"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b8884257ad0"/>
        <function-ref name="receive" scoped="" ref="0x2b8884257c58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b8884257de0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b8884256020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b88842561a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884256330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b8884254c60" loc="56:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8884254c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882777588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b88827778e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b88842539f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8884252330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8884253e78"/>
        <function-ref name="overflow" scoped="" ref="0x2b88842527b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b88842555c0" loc="55:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b88842555c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b8884255910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b8884255a98"/>
        <function-ref name="rxDone" scoped="" ref="0x2b8884255c20"/>
        <function-ref name="txDone" scoped="" ref="0x2b8884255da8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b8884254020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b88842541a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b8884254330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b88842544b8"/>
        <function-ref name="tx" scoped="" ref="0x2b8884254640"/>
        <function-ref name="rx" scoped="" ref="0x2b88842547c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b88842236f8" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b88842236f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8884223a48"/>
        <function-ref name="stop" scoped="" ref="0x2b8884223bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b8884256d98" loc="54:/opt/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b8884256d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8884255170"/>
        <function-ref name="stop" scoped="" ref="0x2b88842552f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b8884235860" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b8884235860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b8884235bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b8884235d38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b8884234020"/>
        <function-ref name="txDone" scoped="" ref="0x2b88842341a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b8884234330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b88842344b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b8884234640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b88842347c8"/>
        <function-ref name="tx" scoped="" ref="0x2b8884234950"/>
        <function-ref name="rx" scoped="" ref="0x2b8884234ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b8884232020" loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b8884232020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b8884232370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b88842324f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b8884232680"/>
        <function-ref name="txDone" scoped="" ref="0x2b8884232808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b8884232990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b8884232b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b8884232ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b8884232e28"/>
        <function-ref name="tx" scoped="" ref="0x2b88842a8020"/>
        <function-ref name="rx" scoped="" ref="0x2b88842a81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b8884235020" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b8884235020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8884235370"/>
        <function-ref name="stop" scoped="" ref="0x2b88842354f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b8884234e58" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b8884234e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b88842331e8"/>
        <function-ref name="stop" scoped="" ref="0x2b8884233370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b88842336f0" loc="52:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b88842336f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8884233a40"/>
        <function-ref name="stop" scoped="" ref="0x2b8884233bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b8884236700" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b8884236700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8884236a50"/>
        <function-ref name="stop" scoped="" ref="0x2b8884236bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b88842a8e38" loc="80:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b88842a8e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88842a51c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b88842a46d8" loc="83:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b88842a46d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b88842a4a28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b88842a4bb0"/>
        <function-ref name="rxDone" scoped="" ref="0x2b88842a4d38"/>
        <function-ref name="txDone" scoped="" ref="0x2b88842a3020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b88842a31a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b88842a3330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b88842a34b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b88842a3640"/>
        <function-ref name="tx" scoped="" ref="0x2b88842a37c8"/>
        <function-ref name="rx" scoped="" ref="0x2b88842a3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b88842a3ca8" loc="85:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b88842a3ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b88842a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b88842a1550" loc="88:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b88842a1550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b88842a18a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b88842a1a28"/>
        <function-ref name="rxDone" scoped="" ref="0x2b88842a1bb0"/>
        <function-ref name="txDone" scoped="" ref="0x2b88842a1d38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b88842a0020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b88842a01a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b88842a0330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b88842a04b8"/>
        <function-ref name="tx" scoped="" ref="0x2b88842a0640"/>
        <function-ref name="rx" scoped="" ref="0x2b88842a07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b88842a5e18" loc="82:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b88842a5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b88842a41a8"/>
        <function-ref name="stop" scoped="" ref="0x2b88842a4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b88842a23e0" loc="86:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b88842a23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b88842a2730"/>
        <function-ref name="stop" scoped="" ref="0x2b88842a28b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b88842a2c78" loc="87:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b88842a2c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b88842a1020"/>
        <function-ref name="stop" scoped="" ref="0x2b88842a11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b88842a0ae8" loc="90:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b88842a0ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b88842a0e38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b888429f020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b888429f1a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b888429f330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b888429f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b888429f7c8" loc="91:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b888429f7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b888429fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b88842a5580" loc="81:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b88842a5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b88842a58d0"/>
        <function-ref name="stop" scoped="" ref="0x2b88842a5a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b88842b7020" loc="24:/opt/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b88842b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882777588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b88827778e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b88842b7d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b88842b56b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b88842b5230"/>
        <function-ref name="overflow" scoped="" ref="0x2b88842b5b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b88842b4d30" loc="24:/opt/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b88842b4d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882777588"/>
            <typename><typedef-ref name="TThree" ref="0x2b88827aeaa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b88842b0ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b88842af4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b88842af020"/>
        <function-ref name="overflow" scoped="" ref="0x2b88842af930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b8884320aa8" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b8884320aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b8884320df8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b888431e020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b888431e1a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b888431e330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b888431e4b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b888431e640"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b888431e7c8"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b888431e950"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b888431ead8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b888431ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b888431d190" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b888431d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b8884319310"/>
        <function-ref name="test" scoped="" ref="0x2b888431b998"/>
        <function-ref name="get" scoped="" ref="0x2b888431dd10"/>
        <function-ref name="captured" scoped="" ref="0x2b888431c6d0"/>
        <function-ref name="reset" scoped="" ref="0x2b888431cba8"/>
        <function-ref name="isOn" scoped="" ref="0x2b888431be20"/>
        <function-ref name="set" scoped="" ref="0x2b888431c1f8"/>
        <function-ref name="start" scoped="" ref="0x2b888431b088"/>
        <function-ref name="stop" scoped="" ref="0x2b888431b510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b8884318020" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b8884318020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b88843167a8"/>
        <function-ref name="fired" scoped="" ref="0x2b8884317560"/>
        <function-ref name="get" scoped="" ref="0x2b8884318ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b88843179e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b8884316c30"/>
        <function-ref name="set" scoped="" ref="0x2b8884317088"/>
        <function-ref name="start" scoped="" ref="0x2b8884317e70"/>
        <function-ref name="stop" scoped="" ref="0x2b8884316320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b88842ad9a0" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b88842ad9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8884321b80"/>
        <function-ref name="test" scoped="" ref="0x2b8884321270"/>
        <function-ref name="get" scoped="" ref="0x2b88842aa560"/>
        <function-ref name="setScale" scoped="" ref="0x2b8884320088"/>
        <function-ref name="getScale" scoped="" ref="0x2b8884320560"/>
        <function-ref name="reset" scoped="" ref="0x2b88842a94a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b88842a9020"/>
        <function-ref name="isOn" scoped="" ref="0x2b88843216f8"/>
        <function-ref name="set" scoped="" ref="0x2b88842aa9e8"/>
        <function-ref name="start" scoped="" ref="0x2b88842a9930"/>
        <function-ref name="stop" scoped="" ref="0x2b88842a9db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b888430dc90" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b888430dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b888430c020"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b888430c1a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b888430c330"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b888430c4b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b888430c640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b888430c7c8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b888430c950"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b888430cad8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b888430cc60"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b888430cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b8884307c48" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b8884307c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b88843034a8"/>
        <function-ref name="fired" scoped="" ref="0x2b88843041d0"/>
        <function-ref name="get" scoped="" ref="0x2b8884306820"/>
        <function-ref name="reset" scoped="" ref="0x2b8884304658"/>
        <function-ref name="isOn" scoped="" ref="0x2b8884303930"/>
        <function-ref name="set" scoped="" ref="0x2b8884306ca8"/>
        <function-ref name="start" scoped="" ref="0x2b8884304ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b8884303020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b888430b350" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b888430b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b8884307580"/>
        <function-ref name="test" scoped="" ref="0x2b8884308c20"/>
        <function-ref name="get" scoped="" ref="0x2b888430a020"/>
        <function-ref name="captured" scoped="" ref="0x2b888430a980"/>
        <function-ref name="reset" scoped="" ref="0x2b888430ae58"/>
        <function-ref name="isOn" scoped="" ref="0x2b88843070f8"/>
        <function-ref name="set" scoped="" ref="0x2b888430a4a8"/>
        <function-ref name="start" scoped="" ref="0x2b8884308310"/>
        <function-ref name="stop" scoped="" ref="0x2b8884308798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b8884302020" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b8884302020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b88842ff7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b8884301560"/>
        <function-ref name="get" scoped="" ref="0x2b8884302ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b88843019e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b88842ffc30"/>
        <function-ref name="set" scoped="" ref="0x2b8884301088"/>
        <function-ref name="start" scoped="" ref="0x2b8884301e70"/>
        <function-ref name="stop" scoped="" ref="0x2b88842ff320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b88842fe360" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b88842fe360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b88842fbc20"/>
        <function-ref name="fired" scoped="" ref="0x2b88842fd980"/>
        <function-ref name="get" scoped="" ref="0x2b88842fd020"/>
        <function-ref name="reset" scoped="" ref="0x2b88842fde08"/>
        <function-ref name="isOn" scoped="" ref="0x2b88842fa0f8"/>
        <function-ref name="set" scoped="" ref="0x2b88842fd4a8"/>
        <function-ref name="start" scoped="" ref="0x2b88842fb310"/>
        <function-ref name="stop" scoped="" ref="0x2b88842fb798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8884314ca0" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8884314ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b888430edb8"/>
        <function-ref name="test" scoped="" ref="0x2b888430e4a8"/>
        <function-ref name="get" scoped="" ref="0x2b8884311858"/>
        <function-ref name="setScale" scoped="" ref="0x2b888430d270"/>
        <function-ref name="getScale" scoped="" ref="0x2b888430d748"/>
        <function-ref name="reset" scoped="" ref="0x2b88843106c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b8884310238"/>
        <function-ref name="isOn" scoped="" ref="0x2b888430e930"/>
        <function-ref name="set" scoped="" ref="0x2b8884311ce0"/>
        <function-ref name="start" scoped="" ref="0x2b8884310b48"/>
        <function-ref name="stop" scoped="" ref="0x2b888430e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b888436c940" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b888436c940"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b88826f2388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b88826f2388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b888436cc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b888436b098" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b888436b098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8884367270"/>
        <function-ref name="test" scoped="" ref="0x2b8884368930"/>
        <function-ref name="get" scoped="" ref="0x2b888436bc18"/>
        <function-ref name="setScale" scoped="" ref="0x2b88843676f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b8884367bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b888436aa58"/>
        <function-ref name="overflow" scoped="" ref="0x2b888436a5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b8884368db8"/>
        <function-ref name="set" scoped="" ref="0x2b888436a0f8"/>
        <function-ref name="start" scoped="" ref="0x2b8884368020"/>
        <function-ref name="stop" scoped="" ref="0x2b88843684a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b888436e950" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b888436e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882777588"/>
            <typename><typedef-ref name="TThree" ref="0x2b88827aeaa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884363730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8884362088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8884363bb8"/>
        <function-ref name="overflow" scoped="" ref="0x2b8884362510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b8884362a70" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8884362a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b88843dab80"/>
        <function-ref name="test" scoped="" ref="0x2b88843da270"/>
        <function-ref name="get" scoped="" ref="0x2b8884361658"/>
        <function-ref name="setScale" scoped="" ref="0x2b88843d9088"/>
        <function-ref name="getScale" scoped="" ref="0x2b88843d9560"/>
        <function-ref name="reset" scoped="" ref="0x2b888435f4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b888435f020"/>
        <function-ref name="isOn" scoped="" ref="0x2b88843da6f8"/>
        <function-ref name="set" scoped="" ref="0x2b8884361ae0"/>
        <function-ref name="start" scoped="" ref="0x2b888435f930"/>
        <function-ref name="stop" scoped="" ref="0x2b888435fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b88843d27f8" loc="63:/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b88843d27f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882777588"/>
            <typename><typedef-ref name="TThree" ref="0x2b88827aeaa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b88843d1578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b88843d0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b88843d1a00"/>
        <function-ref name="overflow" scoped="" ref="0x2b88843d04a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b88843d5610" loc="62:/opt/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b88843d5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882777588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b88827778e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b88843d43a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b88843d4cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b88843d4830"/>
        <function-ref name="overflow" scoped="" ref="0x2b88843d2190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b88843c62b8" loc="47:/opt/tinyos-2_1_2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b88843c62b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b88843c6608"/>
        <function-ref name="offset" scoped="" ref="0x2b88843c6790"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b88843c6918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b88843b7020" loc="39:../../Deluge/AutoStarterC.nc">
      <component-ref qname="AutoStarterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b88843b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b88843b7370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b88843b74f8"/>
        <function-ref name="start" scoped="" ref="0x2b88843b7680"/>
        <function-ref name="stop" scoped="" ref="0x2b88843b7808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b88843b5ba0" loc="41:../../Deluge/AutoStarterP.nc">
      <component-ref qname="AutoStarterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b88843b5ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b88843b2020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b88843b21a8"/>
        <function-ref name="start" scoped="" ref="0x2b88843b2330"/>
        <function-ref name="stop" scoped="" ref="0x2b88843b24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b88843b5588" loc="40:../../Deluge/AutoStarterP.nc">
      <component-ref qname="AutoStarterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b88843b5588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b88843b58d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8884f5c0e0" loc="49:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8884f5c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884f5c430"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884f5c5b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884f5c740"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884f5c8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884f5ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8884f5cc98" loc="50:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8884f5cc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8884f5a020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8884f5a1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884f5a330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884f5a4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8884f5a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8884f5a888" loc="51:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884f5a888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8884f5abd8"/>
        <function-ref name="source" scoped="" ref="0x2b8884f5ad60"/>
        <function-ref name="address" scoped="" ref="0x2b8884f59020"/>
        <function-ref name="destination" scoped="" ref="0x2b8884f591a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b8884f59330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8884f594b8"/>
        <function-ref name="type" scoped="" ref="0x2b8884f59640"/>
        <function-ref name="setType" scoped="" ref="0x2b8884f597c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8884f59950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8884f59ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884f59c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b8884f58020" loc="52:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b8884f58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8884f58370"/>
        <function-ref name="noAck" scoped="" ref="0x2b8884f584f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8884f58680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8884fba060" loc="44:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8884fba060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884fba3b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884fba538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884fba6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884fba848"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884fba9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b8884fbac78" loc="46:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8884fbac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884fb9020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884fb91a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884fb9330"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884fb94b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884fb9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b8884fb9888" loc="47:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884fb9888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8884fb9bd8"/>
        <function-ref name="source" scoped="" ref="0x2b8884fb9d60"/>
        <function-ref name="address" scoped="" ref="0x2b8884fb8020"/>
        <function-ref name="destination" scoped="" ref="0x2b8884fb81a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b8884fb8330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8884fb84b8"/>
        <function-ref name="type" scoped="" ref="0x2b8884fb8640"/>
        <function-ref name="setType" scoped="" ref="0x2b8884fb87c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8884fb8950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8884fb8ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884fb8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b88843a1c60" loc="44:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b88843a1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b888439e020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b888439e1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888439e330"/>
        <function-ref name="cancel" scoped="" ref="0x2b888439e4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b888439e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b88844183e8" loc="48:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b88844183e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884418758"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88844188e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884418a68"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884418bf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884418d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8884419550" loc="46:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8884419550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88844198c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884419a48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884419bd0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884419d58"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884418020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b8884416578" loc="50:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8884416578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b88844168c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8884416a50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884416bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884416d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8884414020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b88844142e8" loc="169:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b88844142e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8884414638"/>
        <function-ref name="runTask" scoped="" ref="0x2b88844147c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b8884414a88" loc="126:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b8884414a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8884414dd8"/>
        <function-ref name="runTask" scoped="" ref="0x2b8884413020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b8884417020" loc="49:/opt/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884417020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8884417370"/>
        <function-ref name="source" scoped="" ref="0x2b88844174f8"/>
        <function-ref name="address" scoped="" ref="0x2b8884417680"/>
        <function-ref name="destination" scoped="" ref="0x2b8884417808"/>
        <function-ref name="setSource" scoped="" ref="0x2b8884417990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8884417b18"/>
        <function-ref name="type" scoped="" ref="0x2b8884417ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b8884417e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8884416020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b88844161a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884416330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8884f56998" loc="46:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8884f56998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8884f56ce8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8884f56e70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884f55020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884f551a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8884f55330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8884f56400" loc="45:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8884f56400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8884f56750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8884f55578" loc="47:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8884f55578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8884f558c8"/>
        <function-ref name="source" scoped="" ref="0x2b8884f55a50"/>
        <function-ref name="address" scoped="" ref="0x2b8884f55bd8"/>
        <function-ref name="destination" scoped="" ref="0x2b8884f55d60"/>
        <function-ref name="setSource" scoped="" ref="0x2b8884f54020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8884f541a8"/>
        <function-ref name="type" scoped="" ref="0x2b8884f54330"/>
        <function-ref name="setType" scoped="" ref="0x2b8884f544b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8884f54640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8884f547c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8884f54950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeoutTimer" ref="0x2b8884f4e700" loc="48:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeoutTimer" scoped="" ref="0x2b8884f4e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8884f4aa18"/>
        <function-ref name="fired" scoped="" ref="0x2b8884f4b158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8884f4be48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8884f4b9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b8884f492e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b8884f4ae68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8884f4b5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8884f4c370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8884f4a448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8884f4c810"/>
        <function-ref name="stop" scoped="" ref="0x2b8884f4ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMSender" ref="0x2b8884f4f2a8" loc="46:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMSender" scoped="" ref="0x2b8884f4f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8884f4f5f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8884f4f780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8884f4f908"/>
        <function-ref name="cancel" scoped="" ref="0x2b8884f4fa90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8884f4fc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x2b8884f52220" loc="42:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8884f52220"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8884f52590"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8884f52718"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8884f528a0"/>
        <function-ref name="getSize" scoped="" ref="0x2b8884f52a28"/>
        <function-ref name="readDone" scoped="" ref="0x2b8884f52bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x2b8884f51020" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8884f51390"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8884f51518"/>
        <function-ref name="erase" scoped="" ref="0x2b8884f516a0"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8884f51828"/>
        <function-ref name="write" scoped="" ref="0x2b8884f519b0"/>
        <function-ref name="sync" scoped="" ref="0x2b8884f51b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMReceiver" ref="0x2b8884f4e020" loc="47:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMReceiver" scoped="" ref="0x2b8884f4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8884f4e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8884f496c0" loc="49:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8884f496c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8884f49a10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8884f49b98"/>
        <function-ref name="led1On" scoped="" ref="0x2b8884f49d20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8884f47020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8884f471a8"/>
        <function-ref name="get" scoped="" ref="0x2b8884f47330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8884f474b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8884f47ad8"/>
        <function-ref name="set" scoped="" ref="0x2b8884f477c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8884f47640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8884f47950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b8884f51d80" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884f51d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884f50170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884f502f8"/>
        <function-ref name="request" scoped="" ref="0x2b8884f50480"/>
        <function-ref name="granted" scoped="" ref="0x2b8884f50608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884f50790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b8884f509d8" loc="45:/opt/tinyos-2_1_2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8884f509d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8884f50d28"/>
        <function-ref name="userId" scoped="" ref="0x2b8884f4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8884f440a0" loc="45:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.TimeoutTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8884f440a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8884f412b8"/>
        <function-ref name="fired" scoped="" ref="0x2b8884f439b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8884f426c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8884f42278"/>
        <function-ref name="getdt" scoped="" ref="0x2b8884f41b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b8884f41708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8884f43e00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8884f44be8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8884f42c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8884f430c0"/>
        <function-ref name="stop" scoped="" ref="0x2b8884f43560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884f3e420" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884f3e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884f3e770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884f3e8f8"/>
        <function-ref name="request" scoped="" ref="0x2b8884f3ea80"/>
        <function-ref name="granted" scoped="" ref="0x2b8884f3ec08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884f3ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8884f3c390" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8884f3c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8884f3c6e0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8884f3c868"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8884f3c9f0"/>
        <function-ref name="getSize" scoped="" ref="0x2b8884f3cb78"/>
        <function-ref name="readDone" scoped="" ref="0x2b8884f3cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884f3b020" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884f3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884f3b370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884f3b4f8"/>
        <function-ref name="request" scoped="" ref="0x2b8884f3b680"/>
        <function-ref name="granted" scoped="" ref="0x2b8884f3b808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884f3b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884fd5020" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884fd5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884fd5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884fd44f0" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884fd44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884fd4840"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884fd49c8"/>
        <function-ref name="request" scoped="" ref="0x2b8884fd4b50"/>
        <function-ref name="granted" scoped="" ref="0x2b8884fd4cd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884fd4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8884f39390" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8884f39390"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8884f396e0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8884f39868"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8884f399f0"/>
        <function-ref name="getSize" scoped="" ref="0x2b8884f39b78"/>
        <function-ref name="readDone" scoped="" ref="0x2b8884f39d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884f38020" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884f38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884f38370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884f384f8"/>
        <function-ref name="request" scoped="" ref="0x2b8884f38680"/>
        <function-ref name="granted" scoped="" ref="0x2b8884f38808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884f38990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8884fcb020" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8884fcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8884fcb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884fca4f0" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884fca4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884fca840"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884fca9c8"/>
        <function-ref name="request" scoped="" ref="0x2b8884fcab50"/>
        <function-ref name="granted" scoped="" ref="0x2b8884fcacd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884fcae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8884f36390" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8884f36390"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8884f366e0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8884f36868"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8884f369f0"/>
        <function-ref name="getSize" scoped="" ref="0x2b8884f36b78"/>
        <function-ref name="readDone" scoped="" ref="0x2b8884f36d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884f35020" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884f35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884f35370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884f354f8"/>
        <function-ref name="request" scoped="" ref="0x2b8884f35680"/>
        <function-ref name="granted" scoped="" ref="0x2b8884f35808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884f35990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b888506e020" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b888506e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b888506e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b888506d4f0" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b888506d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b888506d840"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b888506d9c8"/>
        <function-ref name="request" scoped="" ref="0x2b888506db50"/>
        <function-ref name="granted" scoped="" ref="0x2b888506dcd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b888506de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x2b8884f33390" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x2b8884f33390"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8884f336e0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x2b8884f33868"/>
        <function-ref name="computeCrc" scoped="" ref="0x2b8884f339f0"/>
        <function-ref name="getSize" scoped="" ref="0x2b8884f33b78"/>
        <function-ref name="readDone" scoped="" ref="0x2b8884f33d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884f32020" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884f32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884f32370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884f324f8"/>
        <function-ref name="request" scoped="" ref="0x2b8884f32680"/>
        <function-ref name="granted" scoped="" ref="0x2b8884f32808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884f32990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8885064020" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8885064020"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8885064370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b88850634f0" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b88850634f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8885063840"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88850639c8"/>
        <function-ref name="request" scoped="" ref="0x2b8885063b50"/>
        <function-ref name="granted" scoped="" ref="0x2b8885063cd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8885063e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8884f2f390" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f2f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8884f2f6e0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8884f2f868"/>
        <function-ref name="erase" scoped="" ref="0x2b8884f2f9f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8884f2fb78"/>
        <function-ref name="write" scoped="" ref="0x2b8884f2fd00"/>
        <function-ref name="sync" scoped="" ref="0x2b8884f2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884f2e268" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884f2e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884f2e5b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884f2e740"/>
        <function-ref name="request" scoped="" ref="0x2b8884f2e8c8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884f2ea50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884f2ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8885059020" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8885059020"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8885059370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b88850584f0" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b88850584f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8885058840"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88850589c8"/>
        <function-ref name="request" scoped="" ref="0x2b8885058b50"/>
        <function-ref name="granted" scoped="" ref="0x2b8885058cd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8885058e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8884f2c3f8" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f2c3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8884f2c748"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8884f2c8d0"/>
        <function-ref name="erase" scoped="" ref="0x2b8884f2ca58"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8884f2cbe0"/>
        <function-ref name="write" scoped="" ref="0x2b8884f2cd68"/>
        <function-ref name="sync" scoped="" ref="0x2b8884f2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884f2b268" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884f2b268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884f2b5b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884f2b740"/>
        <function-ref name="request" scoped="" ref="0x2b8884f2b8c8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884f2ba50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884f2bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b888504f020" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b888504f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b888504f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b888504e4f0" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b888504e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b888504e840"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b888504e9c8"/>
        <function-ref name="request" scoped="" ref="0x2b888504eb50"/>
        <function-ref name="granted" scoped="" ref="0x2b888504ecd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b888504ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8884f293f8" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f293f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8884f29748"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8884f298d0"/>
        <function-ref name="erase" scoped="" ref="0x2b8884f29a58"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8884f29be0"/>
        <function-ref name="write" scoped="" ref="0x2b8884f29d68"/>
        <function-ref name="sync" scoped="" ref="0x2b8884f28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884f28268" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884f28268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884f285b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884f28740"/>
        <function-ref name="request" scoped="" ref="0x2b8884f288c8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884f28a50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884f28bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b8885045020" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b8885045020"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8885045370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b88850444f0" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b88850444f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8885044840"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88850449c8"/>
        <function-ref name="request" scoped="" ref="0x2b8885044b50"/>
        <function-ref name="granted" scoped="" ref="0x2b8885044cd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8885044e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x2b8884f263f8" loc="43:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x2b8884f263f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x2b8884f26748"/>
        <function-ref name="writeDone" scoped="" ref="0x2b8884f268d0"/>
        <function-ref name="erase" scoped="" ref="0x2b8884f26a58"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b8884f26be0"/>
        <function-ref name="write" scoped="" ref="0x2b8884f26d68"/>
        <function-ref name="sync" scoped="" ref="0x2b8884f25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8884f25268" loc="44:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8884f25268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8884f255b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8884f25740"/>
        <function-ref name="request" scoped="" ref="0x2b8884f258c8"/>
        <function-ref name="granted" scoped="" ref="0x2b8884f25a50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8884f25bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x2b888503a020" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x2b888503a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b888503a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b88850394f0" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b88850394f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8885039840"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88850399c8"/>
        <function-ref name="request" scoped="" ref="0x2b8885039b50"/>
        <function-ref name="granted" scoped="" ref="0x2b8885039cd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8885039e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationUpdate" ref="0x2b88844f96d0" loc="41:../../Deluge/DelugeManagerC.nc">
      <component-ref qname="DelugeC.DelugeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x2b88844f96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x2b88827ef358"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x2b88827fc0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b88844f8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b88850327b0" loc="49:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b88850327b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8885032b00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8885032c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8885032e10"/>
        <function-ref name="cancel" scoped="" ref="0x2b8885031020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88850311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b88850313f0" loc="50:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b88850313f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8885031740"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b88850318c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8885031a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8885031bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8885031d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8885030020" loc="51:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8885030020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8885030370"/>
        <function-ref name="source" scoped="" ref="0x2b88850304f8"/>
        <function-ref name="address" scoped="" ref="0x2b8885030680"/>
        <function-ref name="destination" scoped="" ref="0x2b8885030808"/>
        <function-ref name="setSource" scoped="" ref="0x2b8885030990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8885030b18"/>
        <function-ref name="type" scoped="" ref="0x2b8885030ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b8885030e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b888502f020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b888502f1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b888502f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b888502f5b8" loc="52:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b888502f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b888502f908"/>
        <function-ref name="noAck" scoped="" ref="0x2b888502fa90"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b888502fc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b88850b0aa0" loc="44:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b88850b0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88850b0df0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88850af020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88850af1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b88850af330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88850af4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b88850af760" loc="46:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b88850af760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88850afab0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b88850afc38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88850afdc0"/>
        <function-ref name="cancel" scoped="" ref="0x2b88850ae020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88850ae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b88850ae3f0" loc="47:/opt/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b88850ae3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b88850ae740"/>
        <function-ref name="source" scoped="" ref="0x2b88850ae8c8"/>
        <function-ref name="address" scoped="" ref="0x2b88850aea50"/>
        <function-ref name="destination" scoped="" ref="0x2b88850aebd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b88850aed60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b88850ad020"/>
        <function-ref name="type" scoped="" ref="0x2b88850ad1a8"/>
        <function-ref name="setType" scoped="" ref="0x2b88850ad330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b88850ad4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b88850ad640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b88850ad7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b888502c268" loc="46:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b888502c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b888502c5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b888502c740"/>
        <function-ref name="getPayload" scoped="" ref="0x2b888502c8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b888502ca50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b888502cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b888502dbb0" loc="45:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b888502dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888502c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b888502ce20" loc="47:/opt/tinyos-2_1_2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b888502ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b888502a1a8"/>
        <function-ref name="source" scoped="" ref="0x2b888502a330"/>
        <function-ref name="address" scoped="" ref="0x2b888502a4b8"/>
        <function-ref name="destination" scoped="" ref="0x2b888502a640"/>
        <function-ref name="setSource" scoped="" ref="0x2b888502a7c8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b888502a950"/>
        <function-ref name="type" scoped="" ref="0x2b888502aad8"/>
        <function-ref name="setType" scoped="" ref="0x2b888502ac60"/>
        <function-ref name="isForMe" scoped="" ref="0x2b888502ade8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8885029020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b88850291a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8885028a08" loc="45:/opt/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8885028a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8885025d60"/>
        <function-ref name="fired" scoped="" ref="0x2b8885026470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b88850251c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8885026d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b8885024648"/>
        <function-ref name="gett0" scoped="" ref="0x2b88850241f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b88850268c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8885027578"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8885025790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8885027a18"/>
        <function-ref name="stop" scoped="" ref="0x2b8885026020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NetProg" ref="0x2b888501a3f8" loc="46:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x2b888501a3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x2b888501a748"/>
        <function-ref name="reboot" scoped="" ref="0x2b888501a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b88850c4020" loc="52:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b88850c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b88850c4370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88850c44f8"/>
        <function-ref name="request" scoped="" ref="0x2b88850c4680"/>
        <function-ref name="granted" scoped="" ref="0x2b88850c4808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b88850c4990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x2b888501f3b0" loc="45:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x2b888501f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8882778608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8882778960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b888501b6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b888501edb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b888501cad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b888501c688"/>
        <function-ref name="getdt" scoped="" ref="0x2b888501a020"/>
        <function-ref name="gett0" scoped="" ref="0x2b888501bb18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b888501c238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b888501e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b888501b0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b888501e4c0"/>
        <function-ref name="stop" scoped="" ref="0x2b888501e960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMSender" ref="0x2b8885020060" loc="43:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMSender" scoped="" ref="0x2b8885020060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b88850203b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8885020538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b88850206c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8885020848"/>
        <function-ref name="sendDone" scoped="" ref="0x2b88850209d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x2b8885018180" loc="48:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x2b8885018180"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x2b88850184f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationUpdate" ref="0x2b8885022e40" loc="42:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x2b8885022e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x2b88827ef358"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x2b88827fc0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b88850219e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMReceiver" ref="0x2b8885020c58" loc="44:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMReceiver" scoped="" ref="0x2b8885020c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b888501f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b888501ab18" loc="47:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b888501ab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b888501ae68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8885019020"/>
        <function-ref name="led1On" scoped="" ref="0x2b88850191a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8885019330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b88850194b8"/>
        <function-ref name="get" scoped="" ref="0x2b8885019640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b88850197c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8885019de8"/>
        <function-ref name="set" scoped="" ref="0x2b8885019ad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8885019950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8885019c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeMetadata" ref="0x2b8885018738" loc="49:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x2b8885018738"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b8885018a88"/>
        <function-ref name="readDone" scoped="" ref="0x2b8885018c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeVolumeManager" ref="0x2b88850c58c8" loc="51:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b88850c58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x2b88850c5c18"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b88850c5da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ObjectTransfer" ref="0x2b8885018e58" loc="50:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x2b8885018e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b88850c51e8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b88850c5370"/>
        <function-ref name="publish" scoped="" ref="0x2b88850c54f8"/>
        <function-ref name="stop" scoped="" ref="0x2b88850c5680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x2b88850c15e8" loc="39:../../Deluge/DelugeMetadataClientC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeMetadataClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x2b88850c15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b88850c1938"/>
        <function-ref name="readDone" scoped="" ref="0x2b88850c1ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x2b88850c0bd8" loc="39:../../Deluge/DelugeVolumeManagerClientC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeVolumeManagerClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x2b88850c0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x2b88850bf020"/>
        <function-ref name="eraseDone" scoped="" ref="0x2b88850bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b88850be258" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b88850be258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b88850be5a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b88850be730"/>
        <function-ref name="request" scoped="" ref="0x2b88850be8b8"/>
        <function-ref name="granted" scoped="" ref="0x2b88850bea40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b88850bebc8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b8882801020" loc="61:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b8882801758" loc="67:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b8882800020" loc="72:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b8882800e70" loc="83:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b88827fd480" loc="100:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b88827fdc18" loc="117:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b8882800738" loc="77:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b888280a768" loc="134:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b888280a4f8" loc="134:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b88828027e0" loc="56:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b88827ff608" loc="89:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b88827ffd20" loc="94:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockRead" loc="42:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
      <function command="" provided="0" name="read" ref="0x2b888287e478" loc="56:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
        <documentation loc="43:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a read operation within a given volume.</short>
          <long>&#10; Initiate a read operation within a given volume. On SUCCESS, the&#10; &#60;code>readDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#10; @param addr starting address to begin reading.&#10; @param 'void* COUNT(len) buf' buffer to place read data.&#10; @param len number of bytes to read.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x2b888286fe30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b888287fb70" loc="56:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b888287fe70" loc="56:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b888287e1e8" loc="56:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x2b888286fe30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x2b8882879d20" loc="95:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
        <documentation loc="86:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a crc computation.</short>
          <long>&#10; Signals the completion of a crc computation.&#10;&#10; @param addr stating address.&#10; @param len number of bytes the crc was computed over.&#10; @param crc the resulting crc value.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x2b888286fe30"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b88828790c8" loc="95:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x2b8882879418" loc="95:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x2b888286fe30"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x2b8882879758" loc="96:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b8882879a80" loc="96:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x2b888287b7b8" loc="83:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
        <documentation loc="70:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a crc computation.</short>
          <long>&#10; Initiate a crc computation. On SUCCESS, the&#10; &#60;code>computeCrcDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @param addr starting address.&#10; @param len the number of bytes to compute the crc over.&#10; @parm crc initial CRC value&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x2b888286fe30"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b888287ce68" loc="83:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x2b888287b1e8" loc="83:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x2b888286fe30"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x2b888287b528" loc="84:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0x2b88828885a0" loc="103:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
        <documentation loc="98:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
          <short>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).</short>
          <long>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).&#10; @return Volume size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_len_t" ref="0x2b888286fe30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b888287c020" loc="67:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
        <documentation loc="58:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param addr starting address of read.&#10; @param 'void* COUNT(len) buf' buffer where read data was placed.&#10; @param len number of bytes read.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x2b888286fe30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b888287d350" loc="67:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b888287d650" loc="67:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b888287d9a0" loc="67:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x2b888286fe30"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b888287dce8" loc="68:/opt/tinyos-2_1_2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockWrite" loc="42:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
        <short>&#10; Write interface for the block storage abstraction described in&#10; TEP103.</short>
        <long>&#10; Write interface for the block storage abstraction described in&#10; TEP103.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-06-04 03:00:25 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x2b888288f8e0" loc="112:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
        <documentation loc="105:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a sync operation.</short>
          <long>&#10; Signals the completion of a sync operation. All written data is&#10; flushed to non-volatile storage after this event.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b888288f670" loc="112:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b8882883c58" loc="71:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
        <documentation loc="60:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation. However, data is not&#10; guaranteed to survive a power-cycle unless a sync operation has&#10; been completed.&#10;&#10; @param addr starting address of write.&#10; @param 'void* COUNT(len) buf' buffer that written data was read from.&#10; @param len number of bytes written.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x2b888286fe30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b8882883020" loc="71:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b8882883320" loc="71:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8882883670" loc="71:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x2b888286fe30"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b88828839b8" loc="72:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x2b8882881af8" loc="83:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
        <documentation loc="74:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate an erase operation.</short>
          <long>&#10; Initiate an erase operation. On SUCCESS, the&#10; &#60;code>eraseDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x2b8882882580" loc="91:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
        <documentation loc="85:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of an erase operation.</short>
          <long>&#10; Signals the completion of an erase operation.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b8882882310" loc="91:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b8882884020" loc="58:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
        <documentation loc="43:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a write operation within a given volume.</short>
          <long>&#10; Initiate a write operation within a given volume. On SUCCESS, the&#10; &#60;code>writeDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#60;p>&#10; Between two erases, no byte may be written more than once.&#10; &#10; @param addr starting address to begin write.&#10; @param 'void* COUNT(len) buf' buffer to write data from.&#10; @param len number of bytes to write.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x2b888286fe30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b8882885678" loc="58:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b8882885978" loc="58:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8882885cc8" loc="58:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x2b888286fe30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b8882882ce0" loc="103:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
        <documentation loc="93:/opt/tinyos-2_1_2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a sync operation to finalize writes to the volume.</short>
          <long>&#10; Initiate a sync operation to finalize writes to the volume. A&#10; sync operation must be issued to ensure that data is stored in&#10; non-volatile storage. On SUCCES, the &#60;code>syncDone&#60;/code> event&#10; will signal completion of the operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ObjectTransfer" loc="39:../../Deluge/ObjectTransfer.nc">
      <documentation loc="36:../../Deluge/DelugePageTransfer.h">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="receive" ref="0x2b888286a2b0" loc="42:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x2b8882859138"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x2b8882859910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x2b888286c808" loc="42:../../Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x2b8882859138"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x2b888286cb90" loc="42:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x2b8882859910"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x2b888286a020" loc="42:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b888286ab90" loc="43:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b888286a920" loc="43:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="publish" ref="0x2b888286c128" loc="41:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x2b8882859138"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x2b8882859910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x2b888286d768" loc="41:../../Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x2b8882859138"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x2b888286daf0" loc="41:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x2b8882859910"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x2b888286de28" loc="41:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8882869258" loc="45:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b888289f020" loc="53:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b888289f020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b8882899918" loc="136:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b888289d3e0" loc="83:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b888289a020" loc="114:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b888289ba60" loc="114:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b888289bd78" loc="114:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b888289b328" loc="98:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b88828a8878" loc="151:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b88828a8070" loc="144:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b888289db58" loc="92:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b888289faf0" loc="64:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b888289f880" loc="64:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b8882899020" loc="129:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b888289a950" loc="129:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b888289ac68" loc="129:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b888289e570" loc="73:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b888289e300" loc="73:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b888289ed18" loc="78:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b88828b55c0" loc="80:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8882849128"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b88828a1bc8" loc="80:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8882849128"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b88828b5020" loc="80:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b88828b5330" loc="80:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b88828c0a68" loc="135:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b88828c04a0" loc="135:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b88828c07b0" loc="135:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b88828b2c58" loc="123:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b88828b3890" loc="96:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b88828b3620" loc="96:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b88828b1cf8" loc="110:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b88828b1750" loc="110:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b88828b1a78" loc="110:/opt/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2_1_2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b8882891cb8" loc="52:/opt/tinyos-2_1_2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2_1_2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b8882891520" loc="46:/opt/tinyos-2_1_2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2_1_2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2_1_2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b88828bba00" loc="78:/opt/tinyos-2_1_2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2_1_2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
              <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b88828bb100" loc="78:/opt/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b88828bb428" loc="78:/opt/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b88828bb738" loc="78:/opt/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b88826fb608" loc="67:/opt/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b88826fbdf8" loc="75:/opt/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugePageTransfer" loc="44:../../Deluge/DelugePageTransfer.nc">
      <documentation loc="36:../../Deluge/DelugePageTransfer.h">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x2b88828ac6b0" loc="51:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataAvailable" ref="0x2b88828b0818" loc="46:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sourceAddr" ref="0x2b88828b05a8" loc="46:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="suppressMsgs" ref="0x2b88828af960" loc="48:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x2b8882859138"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x2b88828af6f0" loc="48:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x2b8882859138"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedPage" ref="0x2b88828ae650" loc="49:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x2b8882859138"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x2b8882858130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x2b88828ae060" loc="49:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x2b8882859138"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x2b88828ae3d0" loc="49:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x2b8882858130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setImgNum" ref="0x2b88828ac020" loc="50:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_img_num" ref="0x2b88828aece8" loc="50:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransferring" ref="0x2b88828af020" loc="47:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWorkingPage" ref="0x2b88828a3e60" loc="45:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x2b8882859138"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x2b8882858130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x2b88828a3870" loc="45:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x2b8882859138"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x2b88828a3be0" loc="45:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x2b8882858130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Crc" loc="41:/opt/tinyos-2_1_2/tos/interfaces/Crc.nc">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/interfaces/Crc.nc">
        <short>&#10; Compute the CRC-16 value of a byte array.</short>
        <long>&#10; Compute the CRC-16 value of a byte array.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="seededCrc16" ref="0x2b88828b7020" loc="61:/opt/tinyos-2_1_2/tos/interfaces/Crc.nc">
        <documentation loc="52:/opt/tinyos-2_1_2/tos/interfaces/Crc.nc">
          <short>&#10; Compute a generic CRC-16 using a given seed.</short>
          <long>&#10; Compute a generic CRC-16 using a given seed.  Used to compute CRC's&#10; of discontinuous data.&#10; &#10; @param startCrc An initial CRC value to begin with&#10; @param 'void* COUNT(len) buf' A pointer to a buffer of data&#10; @param len The length of the buffer&#10; @return The CRC-16 value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="startCrc" ref="0x2b88828a95e8" loc="61:/opt/tinyos-2_1_2/tos/interfaces/Crc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b88828a98e8" loc="61:/opt/tinyos-2_1_2/tos/interfaces/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b88828a9bf8" loc="61:/opt/tinyos-2_1_2/tos/interfaces/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc16" ref="0x2b88828aa728" loc="50:/opt/tinyos-2_1_2/tos/interfaces/Crc.nc">
        <documentation loc="43:/opt/tinyos-2_1_2/tos/interfaces/Crc.nc">
          <short>&#10; Compute the CRC-16 value of a byte array.</short>
          <long>&#10; Compute the CRC-16 value of a byte array.&#10;&#10; @param   'void* COUNT(len) buf' A pointer to the buffer over which to compute CRC.&#10; @param   len The length of the buffer over which to compute CRC.&#10; @return  The CRC-16 value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b88828aa198" loc="50:/opt/tinyos-2_1_2/tos/interfaces/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b88828aa4a8" loc="50:/opt/tinyos-2_1_2/tos/interfaces/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b8882938020" loc="59:/opt/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882927c58" loc="59:/opt/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b8882937290" loc="71:/opt/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882937020" loc="71:/opt/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b8882948338" loc="85:/opt/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b88829480c8" loc="85:/opt/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b888293e3b0" loc="177:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b888284bd20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b888293e140" loc="177:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b8882935290" loc="88:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b8882849128"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8882935020" loc="88:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b88829267a8" loc="68:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b8882849128"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b8882925290" loc="78:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b8882849128"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8882925020" loc="78:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b8882933a28" loc="121:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8882849128"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8882933470" loc="121:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b88829337a8" loc="121:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8882849128"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b88829345d8" loc="103:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8882849128"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8882934020" loc="103:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b8882934358" loc="103:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8882849128"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b888292f020" loc="147:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8882931cf8" loc="147:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b888292d2a0" loc="162:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b888292fce8" loc="162:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b888292d020" loc="162:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b888284b970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b8882930bf8" loc="136:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8882930988" loc="136:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b888293d7b8" loc="187:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b888284bd20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b888293d208" loc="187:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b888293d538" loc="187:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b888284bd20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b888293b560" loc="195:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b888284bd20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVecUtils" loc="39:../../Deluge/BitVecUtils.nc">
      <documentation loc="33:../../Deluge/BitVecUtils.nc">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="indexOf" ref="0x2b8882941ce8" loc="50:../../Deluge/BitVecUtils.nc">
        <documentation loc="40:../../Deluge/BitVecUtils.nc">
          <short>&#10; Locates the index of the first '1' bit in a bit vector.</short>
          <long>&#10; Locates the index of the first '1' bit in a bit vector.&#10;&#10; @param result     the location of the '1' bit&#10; @param fromIndex  the index to start search for '1' bit&#10; @param bitVec     the bit vector&#10; @param length     the length of the bit vector in bits&#10; @return           &#60;code>SUCCESS&#60;/code> if a '1' bit was found;&#10;                   &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x2b8882941020" loc="50:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="fromIndex" ref="0x2b8882941380" loc="50:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
          <variable name="bitVec" ref="0x2b8882941708" loc="51:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b8882941a48" loc="51:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="printBitVec" ref="0x2b88829512b0" loc="72:../../Deluge/BitVecUtils.nc">
        <documentation loc="65:../../Deluge/BitVecUtils.nc">
          <short>&#10; Generates an ASCII representation of the bit vector.</short>
          <long>&#10; Generates an ASCII representation of the bit vector.&#10;&#10; @param buf     the character array to place the ASCII string&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b8882952898" loc="72:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x2b8882952c00" loc="72:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b8882951020" loc="72:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="countOnes" ref="0x2b88829520c8" loc="62:../../Deluge/BitVecUtils.nc">
        <documentation loc="53:../../Deluge/BitVecUtils.nc">
          <short>&#10; Counts the number of '1' bits in a bit vector.</short>
          <long>&#10; Counts the number of '1' bits in a bit vector.&#10;&#10; @param result  the number of '1' bits&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10; @return        &#60;code>SUCCESS&#60;/code> if the operation completed successfully;&#10;                &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x2b888293f728" loc="62:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x2b888293fa90" loc="62:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b888293fdf0" loc="63:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b88829ea490" loc="53:/opt/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b88829ea490"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b88829e6020" loc="64:/opt/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b88829ea490"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b88829eacc8" loc="64:/opt/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b88829ea490"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2_1_2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b88829e84c8" loc="62:/opt/tinyos-2_1_2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2_1_2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2_1_2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2_1_2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b88829ff9e8" loc="60:/opt/tinyos-2_1_2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2_1_2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b8882a0a810" loc="60:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b8882a0a5a0" loc="60:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b8882a0d020" loc="31:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b8882a0da18" loc="39:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b8882a0d7a8" loc="39:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b8882a0c4d0" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b8882a0c260" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b8882a0cd18" loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b8882a10dc0" loc="44:/opt/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b8882a0f4c8" loc="45:/opt/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b8882a10070" loc="42:/opt/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b8882a23290" loc="47:/opt/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8882a10710" loc="43:/opt/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b8882a0fb80" loc="46:/opt/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8882a11328" loc="40:/opt/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b8882a11998" loc="41:/opt/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b88826ed968" loc="57:/opt/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b88826f9878" loc="72:/opt/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b88826f90d8" loc="65:/opt/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b88827b3ca0" loc="76:/opt/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b88827d6328" loc="62:/opt/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b8882758940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b88827cce60" loc="52:/opt/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8882be47d0" loc="53:/opt/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8882be47d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b8882be10d8" loc="61:/opt/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2_1_2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8882bef3f8" loc="57:/opt/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8882bef3f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8882bef628" loc="57:/opt/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882bef628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b8882bed020" loc="64:/opt/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882bef628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b8882bec070" loc="76:/opt/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b8882bed838" loc="71:/opt/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b8882bec760" loc="82:/opt/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8882bdeac0" loc="56:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8882bdeac0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8882bdecf0" loc="56:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882bdecf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b8882bd77a0" loc="109:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882bdecf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b8882bd9770" loc="78:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b8882bd8d70" loc="103:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882bdecf0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882bdecf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b8882bd87d0" loc="103:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882bdecf0"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b8882bd8af0" loc="103:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882bdecf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b8882bd8020" loc="88:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b8882bd6020" loc="116:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882bdecf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8882bdb810" loc="66:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882bdecf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b8882bdb5a0" loc="66:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882bdecf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8882bd9020" loc="73:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b8882c03a48" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8882785a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b8882785e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b8882c1ce18" loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8882792100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b8882792508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b8882c1ec70" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b888278a980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b888278ad88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b8882c1c678" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b888278a980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b888278ad88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b8882c1c408" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b888278a980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b888278ad88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b8882c1b828" loc="54:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8882792100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b8882792508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b8882c1b5b8" loc="54:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8882792100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b8882792508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b8882c1e4c8" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8882785a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b8882785e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b8882c1e258" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8882785a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b8882785e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b8882c2c998" loc="38:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b8882c2a1d8" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b8882c2c290" loc="32:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b8882c2a988" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b8882c2d0d8" loc="21:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b888278c118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b888278c520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b8882c2da88" loc="27:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b888278c118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b888278c520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b8882c2d818" loc="27:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b888278c118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b888278c520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b8882c19020" loc="41:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882c19020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b8882c15738" loc="74:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b8882c189d0" loc="58:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8882c198d8" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882c19020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b8882c16110" loc="62:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b8882c14020" loc="80:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8882c18290" loc="54:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882c19020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b8882c18020" loc="54:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882c19020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8882c16808" loc="65:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8882c15020" loc="68:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b8882c0e418" loc="55:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b8882c0e418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b8882c09900" loc="98:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b8882c0aa40" loc="87:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8882c0ecb8" loc="61:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b8882c0e418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b8882c07290" loc="104:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b8882c07020" loc="104:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b8882c07a10" loc="110:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b8882c0b4c0" loc="75:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b8882c0cd50" loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b8882c091d8" loc="93:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8882c0c630" loc="67:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b8882c0e418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b8882c0c3c0" loc="67:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b8882c0e418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8882c0bbb8" loc="78:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8882c0a328" loc="81:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b8882da8998" loc="65:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882da8728" loc="65:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b8882da3990" loc="78:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882da3720" loc="78:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b8882dc4ca0" loc="126:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882dc46d8" loc="126:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8882dc49e8" loc="126:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b8882da5cf8" loc="106:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b8882da2d30" loc="94:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882da27a0" loc="94:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8882da2ab0" loc="94:/opt/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b8882db3808" loc="75:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882db3278" loc="75:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8882db3588" loc="75:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b8882dd3a68" loc="125:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882dd34a0" loc="125:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8882dd37b0" loc="125:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b8882dd7c70" loc="112:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b8882dd6a50" loc="89:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882dd67e0" loc="89:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b8882dd5e28" loc="100:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882dd5880" loc="100:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b8882dd5ba8" loc="100:/opt/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b8882e29a48" loc="113:/opt/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b8882e297d8" loc="113:/opt/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b8882e27e38" loc="138:/opt/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b8882e27bc8" loc="138:/opt/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8882e2cdd8" loc="104:/opt/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8882e27258" loc="130:/opt/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b8882e475a0" loc="35:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8882e475a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8882e477d0" loc="35:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882e477d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b8882e434e8" loc="63:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882e477d0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e43278" loc="63:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b8882e425b8" loc="70:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e42348" loc="70:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b8882e44338" loc="49:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e440c8" loc="49:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8882e40838" loc="78:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882e477d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e40278" loc="78:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b8882e405b8" loc="78:/opt/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8882e477d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b8882e5b2a0" loc="65:/opt/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e5cc78" loc="65:/opt/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b8882e5b020" loc="65:/opt/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b8882e5a370" loc="71:/opt/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e5a100" loc="71:/opt/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b8882e5c4f8" loc="57:/opt/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b8882e39b68" loc="52:/opt/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b8882e398f8" loc="52:/opt/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2b8882e83290" loc="95:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e83020" loc="95:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2b8882e5e578" loc="81:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e5e308" loc="81:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2b8882e61d30" loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b8882e61ac0" loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2b8882e61290" loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b8882e61020" loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2b8882e5f728" loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2b8882e5f4b8" loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2b8882e853b0" loc="88:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e85140" loc="88:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b8882e78830" loc="59:/opt/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8882849128"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b8882e78250" loc="59:/opt/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8882849128"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b8882e785b0" loc="59:/opt/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2b8882e6b6a8" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b8882e6b100" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2b8882e6b428" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2b8882e67b80" loc="77:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b8882e675b0" loc="77:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2b8882e67900" loc="77:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2b8882e69290" loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b8881e1a908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b8882e69020" loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2b8882e68b60" loc="75:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b8882e688f0" loc="75:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2b8882e6c930" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b8882e6c6c0" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2b8882e69d30" loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b8882e69ac0" loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b8882e7c290" loc="65:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e7c020" loc="65:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b8882e80480" loc="46:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e62e70" loc="46:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b8882e80200" loc="46:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b8882e7d290" loc="59:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e7d020" loc="59:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b8882e7f7e0" loc="53:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e7f1f8" loc="53:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b8882e7f560" loc="53:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b8882e7b290" loc="71:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e7b020" loc="71:/opt/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b8882e63338" loc="47:/opt/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882e630c8" loc="47:/opt/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2_1_2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b8882e971d8" loc="120:/opt/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b8882e982a8" loc="97:/opt/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b8882e73988" loc="88:/opt/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b8882e98a30" loc="102:/opt/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b8882e97bc0" loc="128:/opt/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b8882e9f050" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b8882ea0a88" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2b8882ea0da0" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b8882e9e258" loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2b8882e9b8d8" loc="84:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b8882e9cae0" loc="84:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b8882e9b338" loc="84:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8882e9b648" loc="84:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b8882e9c348" loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b8882e9ed30" loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b8882e9c0c8" loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2b8882e9fa60" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2b8882e9f7f0" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2_1_2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b8882ea27d0" loc="95:/opt/tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2_1_2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8882ea1020" loc="105:/opt/tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2_1_2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2b8882ebb520" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882ebb278" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2b8882ebca68" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2b8882805af0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2b8882810438"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882ebc780" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2b8882eba748" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2b8882810ed8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2b888280e6c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8882eba460" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2b8882ea77e8" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2b8882ea5778" loc="97:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2b8882ea5020" loc="90:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2b8882ea8020" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2b8882ea7020" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2b8882ea6020" loc="76:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2b8882ea67d0" loc="83:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2b8882ea8818" loc="56:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2b8882eb5a90" loc="71:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2b8882eb6258" loc="56:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2b8882eb5338" loc="66:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2b8882eb50c8" loc="66:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2b8882eb6960" loc="61:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2b8882eb7020" loc="45:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b8882ebed70" loc="45:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2b8882eb7a48" loc="51:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b8882eb77d8" loc="51:/opt/tinyos-2_1_2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2b8882f030b8" loc="106:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2b8882f04ab0" loc="106:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2b8882f04de8" loc="106:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b8882f06b70" loc="93:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b8882f062a0" loc="87:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b8882f07ad8" loc="87:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2b8882f06020" loc="87:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2b8882f0c800" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b8882f0c590" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2b8882f043a0" loc="98:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2b8882f08290" loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b8882f08020" loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b8882f0b940" loc="61:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b8882f0b6d0" loc="61:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2b8882f02258" loc="117:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2b8882f07338" loc="78:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b8882f070c8" loc="78:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2b8882f03a48" loc="112:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2b8882f0a0d8" loc="66:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b8882e56648"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b8882e56d70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2b8882f0a858" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b8882f0fdb8" loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b8882f0b020" loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2b8882f089c0" loc="77:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2_1_2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b8882f01bf8" loc="49:/opt/tinyos-2_1_2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b8882f01bf8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b8882f28490" loc="55:/opt/tinyos-2_1_2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2_1_2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b8882f272a0" loc="63:/opt/tinyos-2_1_2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2_1_2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b8882f01bf8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b8882f28ba0" loc="63:/opt/tinyos-2_1_2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b8882f27020" loc="63:/opt/tinyos-2_1_2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b8882f01bf8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b8882f2d418" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b8882807d80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8882f2d1a8" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b8882f2de70" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b8882807d80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8882f2dc00" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-2_1_2/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-2_1_2/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2b8882f19020" loc="48:/opt/tinyos-2_1_2/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-2_1_2/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b8882e56648"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b8882e56d70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b8882f35328" loc="50:/opt/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b8882849128"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b8882f341d8" loc="60:/opt/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b8882f35a88" loc="55:/opt/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b888284bd20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b8882f37ab0" loc="45:/opt/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b888284bd20"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8882849128"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b8882f374f8" loc="45:/opt/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b888284bd20"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b8882f37830" loc="45:/opt/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8882849128"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2b8882f512a8" loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b8882807d80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b8882f32870" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b8882807d80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b8882f3ba58" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b8882f322b0" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b8882f325e0" loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b8882f2f020" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b8882807d80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b8882f31108" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b8882f31910" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b8882f31c40" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2_1_2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b8882f39c30" loc="68:/opt/tinyos-2_1_2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2_1_2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b8882f394e0" loc="61:/opt/tinyos-2_1_2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2_1_2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b8882f3ad88" loc="54:/opt/tinyos-2_1_2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b8882f3a540" loc="53:/opt/tinyos-2_1_2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2_1_2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b8882fdda38" loc="58:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b88827b1928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b88827b1d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2b8882fe04f0" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b888279c478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b888279c880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b8882fe0280" loc="50:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b888279c478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b888279c880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b8882fde7d0" loc="54:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b88827a7578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b88827a7980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2b8882fe20d8" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8882798da8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b8882797228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b8882fdd290" loc="55:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b88827a7578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b88827a7980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b8882fdd020" loc="55:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b88827a7578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b88827a7980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b8882fdc478" loc="59:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b88827b1928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b88827b1d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b8882fdc208" loc="59:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b88827b1928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b88827b1d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2b8882fe10d8" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b888279a890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b888279ac98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2b8882fe28d8" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b888279c478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b888279c880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2b8882fe1ad0" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8882798da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b8882797228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b8882fe1860" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8882798da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b8882797228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2b8882fde020" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b888279a890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b888279ac98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b8882fe0c50" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b888279a890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b888279ac98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b88830081d0" loc="40:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b88830081d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b8883003ba0" loc="88:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b8883003930" loc="88:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b8883004a88" loc="76:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8883008a88" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b88830081d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b8883006dc8" loc="60:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b88830081d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b8883006b58" loc="60:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b88830081d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b8883005560" loc="64:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b8883003258" loc="82:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8883006420" loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b88830081d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b88830061b0" loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b88830081d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8883005c58" loc="67:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8883004378" loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b88831a5a40" loc="54:/opt/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b88831a3ae0" loc="66:/opt/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b88831a33a8" loc="61:/opt/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b88831a3138" loc="61:/opt/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b88831a5258" loc="53:/opt/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b88831b74e0" loc="56:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b88831b6dd0" loc="75:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b88831b9db8" loc="51:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b88831b6618" loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b88831b63a8" loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b88831b96c0" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b88831b7c20" loc="63:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b88831cf4e0" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2b88832348e8" loc="24:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2b8883233110" loc="31:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2b88832338e0" loc="39:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2b888324d998" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b888324d3e8" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b888324d718" loc="62:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b8883280948" loc="91:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8883280060" loc="91:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b8883280390" loc="91:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b88832806b8" loc="91:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b8883281348" loc="82:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b8882807d80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8883282d20" loc="82:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b88832810c8" loc="82:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2b888324e678" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b8882807d80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b888324e0c8" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b888324e3f8" loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b8883282030" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8883283720" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b8883283a50" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b8883283d78" loc="71:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b888329d2b0" loc="70:/opt/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b888329e840" loc="70:/opt/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b888329eba0" loc="70:/opt/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b888329d020" loc="70:/opt/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b888329c648" loc="82:/opt/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b888329b9b0" loc="82:/opt/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b888329bd10" loc="82:/opt/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b888329c060" loc="82:/opt/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b888329c3a8" loc="83:/opt/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b8883268108" loc="45:/opt/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b888326be68" loc="45:/opt/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b88832f6020" loc="62:/opt/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b88832f9c50" loc="62:/opt/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b888332e338" loc="74:/opt/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b888332e0c8" loc="74:/opt/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b88832f6820" loc="68:/opt/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b888332ecd8" loc="81:/opt/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b888332ea68" loc="81:/opt/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b888331a020" loc="86:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b888334ca60" loc="126:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b8883315538" loc="117:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b888334a458" loc="128:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b888334a1e8" loc="128:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b888331c880" loc="83:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b8883313108" loc="122:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b8883314e18" loc="122:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b8883318d50" loc="113:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b8883318ae0" loc="113:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b8883319020" loc="97:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b8883346b98" loc="141:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b8883346928" loc="141:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b88833174d0" loc="114:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b88833494b0" loc="131:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b8883349240" loc="131:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b8883348360" loc="136:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b888334c338" loc="125:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b888334c0c8" loc="125:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b8883346258" loc="140:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b8883314020" loc="119:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b8883315c18" loc="119:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b8883319978" loc="103:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8883319708" loc="103:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b8883317de0" loc="116:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b8883317b70" loc="116:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b8883313918" loc="123:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b888334ab60" loc="129:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b8883349ba0" loc="132:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b8883348aa8" loc="138:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b8883314738" loc="120:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b888331a738" loc="89:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b8883318338" loc="109:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b88833180c8" loc="109:/opt/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b88833439f0" loc="90:/opt/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b8883340258" loc="98:/opt/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b888339e748" loc="95:/opt/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b888339c020" loc="105:/opt/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b88833c57d0" loc="53:/opt/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b88834020d8" loc="61:/opt/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b88833fe020" loc="65:/opt/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b88833ff6f8" loc="59:/opt/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b88833f6c80" loc="79:/opt/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b88833fc020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b88833f6a10" loc="79:/opt/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b88833fc020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b88833fbe10" loc="53:/opt/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b88833f78f0" loc="62:/opt/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b88833fc020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b88833f7680" loc="62:/opt/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b88833fc020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b88833f61d8" loc="70:/opt/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b88833fc020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2b888353b8c8" loc="43:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b8883552400" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2b8883553a68" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b8883552180" loc="63:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2b8883553328" loc="55:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2b8883556b30" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b88835568c0" loc="49:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b8883566ae8" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8883566878" loc="58:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b8883526b50" loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b88835268e0" loc="50:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b8883564938" loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b88835646c8" loc="72:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8883565a20" loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b88835657b0" loc="65:/opt/tinyos-2_1_2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="VolumeId" loc="37:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x2b888393a9f0" loc="39:/opt/tinyos-2_1_2/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
        <interfacedef-ref qname="VolumeId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x2b888286f568"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StorageMap" loc="39:../../Deluge/StorageMap.nc">
      <documentation loc="32:../../Deluge/StorageMap.nc">
        <short>&#10; An abstraction to map volume addresses to physical addresses.</short>
        <long>&#10; An abstraction to map volume addresses to physical addresses.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-01-25 00:50:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPhysicalAddress" ref="0x2b8883932c30" loc="47:../../Deluge/StorageMap.nc">
        <documentation loc="41:../../Deluge/StorageMap.nc">
          <short>&#10; Get the physical address of a volume address.</short>
          <long>&#10; Get the physical address of a volume address.&#10;&#10; @param addr the volume addres.&#10; @return the physical address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="StorageMap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b88839329c0" loc="47:../../Deluge/StorageMap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x2b888286fa50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbVolume" loc="18:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbVolume.nc">
      <documentation loc="13:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbVolume.nc">
        <short>&#10; AT45DB interface for managing flash volumes.</short>
        <long>&#10; AT45DB interface for managing flash volumes.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="volumeSize" ref="0x2b8883921dc0" loc="30:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="26:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Find the flash volume size&#10; </short>
          <long>&#10; Find the flash volume size&#10; @return Flash volume size in pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remap" ref="0x2b88839215d0" loc="24:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="19:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Map a volume page to the corresponding page in the whole flash&#10; </short>
          <long>&#10; Map a volume page to the corresponding page in the whole flash&#10; @return What flash page this volume page maps to, or &#10;   AT45_MAX_PAGES for invalid volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="volumePage" ref="0x2b8883921360" loc="24:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbVolume.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45db" loc="63:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
      <documentation loc="45:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. This provides&#10; reasonably high-level operations on AT45DB pages, including automatic&#10; buffer management. Writes are only guaranteed to happen after a flush,&#10; flushAll, sync or syncAll.&#10; &#60;p>&#10; When buffers are flushed to the flash (either explicitly or implicitly),&#10; their contents are checked to ensure the write was succesful. If this&#10; check fails, the flush is retried some number of times. If this fails&#10; more than some number of times, all access to the flash is disabled&#10; (all requests will report FAIL in their completion event).&#10; &#60;p>&#10; This interface only supports one operation at a time - components offering&#10; At45db should use the &#60;code>Resource&#60;/code> interface for resource sharing.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x2b88839abbd8" loc="173:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="168:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a read operation.</short>
          <long>&#10; Signal completion of a read operation. The buffer passed to read&#10; is implictly returned.&#10; @param error SUCCESS for a successful read, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b88839ab968" loc="173:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2b88839b0ba0" loc="136:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="132:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a sync or syncAll operation.</short>
          <long>&#10; Signal completion of a sync or syncAll operation. &#10; @param error SUCCESS if the sync was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b88839b0930" loc="136:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x2b88839ae748" loc="154:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="150:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an flush or flushAll operation.</short>
          <long>&#10; Signal completion of an flush or flushAll operation. &#10; @param error SUCCESS if the flush was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b88839ae4d8" loc="154:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b88839ab020" loc="166:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="156:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Read some data from an AT45DB page.</short>
          <long>&#10; Read some data from an AT45DB page. readDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x2b88839aee68" loc="166:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x2b88839ac228" loc="166:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b88839ac9b0" loc="167:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x2b88839acd10" loc="167:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b88839b7d68" loc="80:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="75:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a write operation.</short>
          <long>&#10; Signal completion of a write operation. The buffer passed to write&#10; is implictly returned.&#10; @param error SUCCESS for a successful write, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b88839b7af8" loc="80:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copyPage" ref="0x2b88839b5ad0" loc="91:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="82:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Copy one flash page to another.</short>
          <long>&#10; Copy one flash page to another. copyDone will be signaled. If page&#10; from had been modified, it is first flushed to flash. Page&#10; &#60;code>to&#60;/code> will only actually be written when the buffer holding&#10; it is flushed (see flush, flushAll, sync, syncAll).&#10;&#10; @param from Flash page to copy. Must be less than AT45_MAX_PAGES.&#10; @param to Flash page to overwrite. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="from" ref="0x2b88839b5528" loc="91:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
          <variable name="to" ref="0x2b88839b5850" loc="91:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x2b88839b32e0" loc="111:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="98:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Erase an AT45DB page.</short>
          <long>&#10; Erase an AT45DB page. eraseDone will be signaled.&#10; @param page Flash page to erase. Must be less than AT45_MAX_PAGES.&#10; @param eraseKind How to handle the erase:&#10;   &#60;br>&#60;code>AT45_ERASE&#60;/code>: actually erase the page in the flash chip&#10;   &#60;br>&#60;code>AT45_DONT_ERASE&#60;/code>: don't erase the page in the flash &#10;     chip, but reserve a buffer for this page - subsequent writes to this&#10;     page will be faster because the old contents need not be read&#10;   &#60;br>&#60;code>AT45_PREVIOUSLY_ERASED&#60;/code>: assume the page was previously&#10;     erased in the flash and reserve a buffer for this page - subsequent&#10;     writes to page will be faster because the old contents need not be &#10;     read and the write itself will be faster&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x2b88839b4cc8" loc="111:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
          <variable name="eraseKind" ref="0x2b88839b3060" loc="111:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x2b88839b1020" loc="116:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="112:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an erase operation.</short>
          <long>&#10; Signal completion of an erase operation. &#10; @param error SUCCESS if the erase was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b88839b3c48" loc="116:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x2b88839a7020" loc="194:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="189:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a CRC computation.</short>
          <long>&#10; Signal completion of a CRC computation.&#10; @param error SUCCESS if the CRC was successfully computed, FAIL otherwise&#10; @param crc CRC value (valid only if error == SUCCESS)&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b88839a9a08" loc="194:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x2b88839a9d28" loc="194:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b88839af598" loc="144:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="138:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. flushDone&#10; will be signaled once the flush has been initiated. If the page is not&#10; in the buffers, flushDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x2b88839af328" loc="144:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="syncAll" ref="0x2b88839b01d8" loc="131:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="126:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flushAll" ref="0x2b88839afd78" loc="149:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="145:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. flushDone&#10; will be signaled once the flushes have been initiated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b88839b72c0" loc="73:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="64:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Write some data to an AT45DB page.</short>
          <long>&#10; Write some data to an AT45DB page. writeDone will be signaled.&#10; @param page Flash page to write to. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x2b88839b8020" loc="73:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x2b88839b83b0" loc="73:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b88839b8b38" loc="74:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x2b88839b7020" loc="74:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b88839b1998" loc="125:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="118:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. If the page is not&#10; in the buffers, syncDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x2b88839b1728" loc="125:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x2b88839a90d8" loc="187:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="175:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h).</short>
          <long>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h). computeCrcDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous computeCrc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x2b88839aa378" loc="187:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x2b88839aa708" loc="187:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x2b88839aaa88" loc="188:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x2b88839aadd0" loc="188:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="copyPageDone" ref="0x2b88839b45b8" loc="96:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
        <documentation loc="92:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a copyPage operation.</short>
          <long>&#10; Signal completion of a copyPage operation. &#10; @param error SUCCESS if the copy was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b88839b4348" loc="96:/opt/tinyos-2_1_2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbBlockConfig" loc="19:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
      <documentation loc="13:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
        <short>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; </short>
        <long>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <function event="" provided="0" name="npages" ref="0x2b88839a0d70" loc="50:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="46:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Return size of a config volume in pages (half of the actual block)&#10; </short>
          <long>&#10; Return size of a config volume in pages (half of the actual block)&#10; @return Config volume size&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flipped" ref="0x2b88839a23e0" loc="30:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="26:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Query which half of the block is used by the current config state&#10; </short>
          <long>&#10; Query which half of the block is used by the current config state&#10; @return TRUE for 2nd half, FALSE for 1st half&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isConfig" ref="0x2b88839a5c80" loc="24:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="20:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Check if this block is a config volumes&#10; </short>
          <long>&#10; Check if this block is a config volumes&#10; @return TRUE for config volumes, FALSE for block volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeHook" ref="0x2b88839a2b38" loc="37:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Hook called by block storage just before the start of each write&#10; </short>
          <long>&#10; Hook called by block storage just before the start of each write&#10; @return TRUE to delay the write until &#60;code>writeContinue&#60;/code>&#10;    is called, FALSE to proceed immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="remap" ref="0x2b888399f7a0" loc="58:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="52:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; </short>
          <long>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; @param page Volume-relative page&#10; @return Actual flash page for &#60;code>page&#60;/code>&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x2b888399f530" loc="58:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeContinue" ref="0x2b88839a0580" loc="44:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="38:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; </short>
          <long>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; @param error SUCCESS to continue write, anything else to abort write &#10;   returning that error code&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b88839a0310" loc="44:/opt/tinyos-2_1_2/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2_1_2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2_1_2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b8883a1bc80" loc="56:/opt/tinyos-2_1_2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2_1_2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b8883a1ac90" loc="73:/opt/tinyos-2_1_2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2_1_2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b8883a1b460" loc="46:/opt/tinyos-2_1_2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2_1_2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b8883a1a4c8" loc="65:/opt/tinyos-2_1_2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2_1_2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b8883a19580" loc="81:/opt/tinyos-2_1_2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2_1_2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45db" loc="23:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
      <documentation loc="10:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <short>&#10; HPL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HPL for Atmel's AT45DB family of serial dataflash chips. &#10; Provides access to all basic AT45DB operations plus operations to &#10; wait for the flash to go idle or finish a comparison. See the AT45DB&#10; family datasheets for full details on these operations.&#10; &#60;p>&#10; This interface only supports one operation at a time.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x2b8883a5cb98" loc="141:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="137:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been read from the buffer.</short>
          <long>&#10; Signaled when data has been read from the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitCompare" ref="0x2b8883a69c48" loc="41:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="37:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a buffer-flash comparison to complete.</short>
          <long>&#10; Wait for a buffer-flash comparison to complete. waitCompareDone will&#10; be signaled when that occurs.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="crcDone" ref="0x2b8883a59020" loc="163:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="159:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when CRC has been computed.</short>
          <long>&#10; Signaled when CRC has been computed.&#10; @param computedCrc CRC value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="computedCrc" ref="0x2b8883a5ac70" loc="163:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x2b8883a640d8" loc="79:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="75:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when flush command sent (use waitIdle to detect when&#10; flush command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b8883a5c2d0" loc="134:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="122:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read directly from flash.</short>
          <long>&#10; Read directly from flash. readDone will be signaled.&#10; @param cmd AT45_C_READ_CONTINUOUS or AT45_C_READ_PAGE. When the end of&#10;   a page is read, AT45_C_READ_CONTINUOUS continues on the next page,&#10;   while AT45_C_READ_PAGE continues at the start of the same page.&#10; @param page Page to read from&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b8883a5fbd0" loc="134:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x2b8883a5e020" loc="134:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x2b8883a5e3b0" loc="134:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b8883a5eba8" loc="135:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x2b8883a5c020" loc="135:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x2b8883a622a0" loc="100:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="95:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Erase a flash page.</short>
          <long>&#10; Erase a flash page. eraseDone will be signaled.&#10; @param cmd must be AT45_C_ERASE_PAGE&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b8883a63c08" loc="100:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x2b8883a62020" loc="100:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b8883a56788" loc="185:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="181:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been written to the buffer.</short>
          <long>&#10; Signaled when data has been written to the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitIdleDone" ref="0x2b8883a69550" loc="35:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the flash is idle.</short>
          <long>&#10; Signaled when the flash is idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitCompareDone" ref="0x2b8883a68648" loc="47:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="43:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the buffer-flash comparison is complete.</short>
          <long>&#10; Signaled when the buffer-flash comparison is complete.&#10; @param compareOk TRUE if the comparison succeeded, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="compareOk" ref="0x2b8883a683d8" loc="47:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x2b8883a629f0" loc="106:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="102:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when erase command sent (use waitIdle to detect when&#10; erase command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x2b8883a13d18" loc="30:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="24:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations).</short>
          <long>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations). You should use waitComapre if you are waiting for a&#10; comparison to complete. waitIdleDone will be signaled when the operation&#10; is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b8883a657e8" loc="73:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="63:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write a buffer to a flash page.</short>
          <long>&#10; Write a buffer to a flash page. flushDone will be signaled.&#10; @param cmd AT45_C_FLUSH_BUFFER1 to write buffer 1 to flash,&#10;   AT45_C_FLUSH_BUFFER2 to write buffer 2 to flash,&#10;   AT45_C_QFLUSH_BUFFER1 to write buffer 1 to flash w/o erase&#10;   (page must have been previously erased),&#10;   AT45_C_QFLUSH_BUFFER2 to write buffer 2 to flash w/o erase&#10;   (page must have been previously erased),&#10; @param page Page to write (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b8883a65228" loc="73:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x2b8883a65568" loc="73:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b8883a58c00" loc="178:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="165:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write some data to a flash buffer, and optionally the flash itself.</short>
          <long>&#10; Write some data to a flash buffer, and optionally the flash itself. &#10; writeDone will be signaled.&#10; @param cmd One of AT45_C_WRITE_BUFFER1/2 or AT45_C_WRITE_MEM_BUFFER1/2&#10;   to write respectively to buffer 1/2, or to buffer 1/2 and the &#10;   specified main memory page.&#10; @param page Page to write when cmd is AT45_C_WRITE_MEM_BUFFER1/2&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b8883a596d0" loc="178:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x2b8883a59a10" loc="178:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x2b8883a59da0" loc="178:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b8883a585f0" loc="179:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x2b8883a58950" loc="179:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="compareDone" ref="0x2b8883a63540" loc="93:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="89:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when compare command sent (use waitCompare to detect when&#10; compare command completes and find out comparison result)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compare" ref="0x2b8883a64d48" loc="87:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="81:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compare a page from flash with a buffer.</short>
          <long>&#10; Compare a page from flash with a buffer. compareDone will be signaled.&#10; @param cmd AT45_C_COMPARE_BUFFER1 to compare buffer 1, &#10;   AT45_C_COMPARE_BUFFER2 to compare buffer 2&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b8883a64788" loc="87:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x2b8883a64ac8" loc="87:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc" ref="0x2b8883a5a310" loc="157:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="143:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).</short>
          <long>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).&#10; crcDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to compute CRC from buffer 1,&#10;   AT45_C_READ_BUFFER2 to compute CRC from buffer 2&#10; @param page ignored (reserved for future use)&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous crc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b8883a5b278" loc="157:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x2b8883a5b5b8" loc="157:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x2b8883a5b948" loc="157:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x2b8883a5bcc8" loc="158:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x2b8883a5a060" loc="158:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readBuffer" ref="0x2b8883a5f2c0" loc="119:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="108:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read from a flash buffer.</short>
          <long>&#10; Read from a flash buffer. readDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to read from buffer 1,&#10;   AT45_C_READ_BUFFER2 to read from buffer 2&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b8883a60108" loc="119:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x2b8883a60498" loc="119:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2b8882876d48"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b8883a60c90" loc="120:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x2b8883a5f020" loc="120:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fillDone" ref="0x2b8883a67ae8" loc="61:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="57:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when fill command sent (use waitIdle to detect when&#10; fill command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x2b8883a67348" loc="55:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="49:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read a page from flash into a buffer.</short>
          <long>&#10; Read a page from flash into a buffer. fillDone will be signaled.&#10; @param cmd AT45_C_FILL_BUFFER1 to read into buffer 1, &#10;   AT45_C_FILL_BUFFER2 to read into buffer 2&#10; @param page Page to read (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b8883a68d40" loc="55:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x2b8883a670c8" loc="55:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x2b8882876948"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8883a55708" loc="59:/opt/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8883a55708"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8883a55938" loc="59:/opt/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8883a55938"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b8883a52428" loc="66:/opt/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8883a55938"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b8883a521b8" loc="66:/opt/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8883a55938"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45dbByte" loc="24:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByte.nc">
      <documentation loc="11:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByte.nc">
        <short>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.</short>
        <long>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.&#10; &#60;p>&#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this directory provides a generic HPL&#10; implementation (HplAt45dbByteC) which can easily be used to build an&#10; AT45DB HPL by connecting it to a byte-at-a-time SPI interface, and an&#10; implementation of the operations of this interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCompareStatus" ref="0x2b8883aca840" loc="42:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="37:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; This command may be called immediately after idle is signaled.</short>
          <long>&#10; This command may be called immediately after idle is signaled. It&#10; must report the flash's current compare status.&#10; @return TRUE if the last compare succeeded, FALSE if it failed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x2b8883acd920" loc="31:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="25:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Wait for the flash chip to report that it is idle.</short>
          <long>&#10; Wait for the flash chip to report that it is idle. This command is&#10; called immediately after sending a status request command to the&#10; flash, so it is sufficient to wait for the flash's data pin to go&#10; high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idle" ref="0x2b8883aca0d8" loc="35:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Signaled when the flash chip is idle.</short>
          <long>&#10; Signaled when the flash chip is idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="select" ref="0x2b8883ac9020" loc="47:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="44:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Assert the flash's select pin.</short>
          <long>&#10; Assert the flash's select pin.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="deselect" ref="0x2b8883ac9700" loc="52:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="49:/opt/tinyos-2_1_2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Deassert the flash's select pin.</short>
          <long>&#10; Deassert the flash's select pin.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos-2_1_2/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b8883c55b28" loc="48:/opt/tinyos-2_1_2/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8883c55b28"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x2b8883c518e0" loc="60:/opt/tinyos-2_1_2/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos-2_1_2/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8883c55b28"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b8883c51670" loc="60:/opt/tinyos-2_1_2/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8883c55b28"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos-2_1_2/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b8883c5bae0" loc="44:/opt/tinyos-2_1_2/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8883c5bae0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x2b8883c56608" loc="69:/opt/tinyos-2_1_2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos-2_1_2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8883c57398" loc="55:/opt/tinyos-2_1_2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos-2_1_2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8883c5bae0"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8883c57d90" loc="64:/opt/tinyos-2_1_2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos-2_1_2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8883c5bae0"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x2b8883c57b20" loc="64:/opt/tinyos-2_1_2/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8883c5bae0"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x2b8883c45dd8" loc="47:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x2b8883c45b30" loc="47:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x2b8883c432b0" loc="48:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8883c448c0" loc="48:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x2b8883c44be0" loc="48:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x2b8883c43020" loc="48:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x2b8883c41030" loc="50:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x2b8883c48dd8" loc="45:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x2b8883c439a0" loc="49:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x2b8883c45490" loc="46:/opt/tinyos-2_1_2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x2b8883c72020" loc="90:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x2b8883c74858" loc="85:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b8883c740d8" loc="80:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8883c751d8" loc="68:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8883c759a0" loc="74:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/opt/tinyos-2_1_2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x2b8883d00d60" loc="45:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
        <documentation loc="42:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b8883cfa290" loc="69:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
        <documentation loc="65:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x2b8883cfa020" loc="69:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b8883cfac10" loc="75:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
        <documentation loc="71:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x2b8883cfa9a0" loc="75:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8883cfdde0" loc="57:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
        <documentation loc="52:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x2b8883cfdb70" loc="57:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x2b8883cf98f0" loc="82:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
        <documentation loc="77:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x2b8883cf9360" loc="82:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x2b8883cf9670" loc="82:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x2b8883cfd490" loc="50:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
        <documentation loc="47:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8883cfb798" loc="63:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
        <documentation loc="59:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x2b8883cfb528" loc="63:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b8883cf80d8" loc="88:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
        <documentation loc="84:/opt/tinyos-2_1_2/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NetProg" loc="45:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProg.nc">
      <documentation loc="38:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProg.nc">
        <short>&#10; Top level interface for network programming integration with&#10; applications.</short>
        <long>&#10; Top level interface for network programming integration with&#10; applications.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="programImageAndReboot" ref="0x2b8883d8f468" loc="64:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="55:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot into the image specified by &#60;code>imageAddr&#60;/code>.</short>
          <long>&#10; Reboot into the image specified by &#60;code>imageAddr&#60;/code>. This&#10; assumes that an image is present into the external flash&#10; at the &#60;code>imageAddr&#60;/code> address.&#10;&#10; @param imageAddr  Address in external flash&#10; @return        &#60;code>FAIL&#60;/code> if the reboot command fails to &#10;                complete, does not return, otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imageAddr" ref="0x2b8883d8f1f8" loc="64:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProg.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8881e1c608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reboot" ref="0x2b8883d999d0" loc="53:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="48:/opt/tinyos-2_1_2/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot the node.</short>
          <long>&#10; Reboot the node.&#10;&#10; @return  Does not return.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="InternalFlash" loc="43:/opt/tinyos-2_1_2/tos/interfaces/InternalFlash.nc">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/interfaces/InternalFlash.nc">
        <short>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.</short>
        <long>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Prabal Dutta &#60;prabal@cs.berkeley.edu> (Port to T2)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b8883ddca00" loc="56:/opt/tinyos-2_1_2/tos/interfaces/InternalFlash.nc">
        <documentation loc="45:/opt/tinyos-2_1_2/tos/interfaces/InternalFlash.nc">
          <short>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.</short>
          <long>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address from which to read.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer into which read bytes are&#10;               placed.&#10; @param   size The number of bytes to read.&#10; @return  SUCCESS if the bytes were successfully read.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b8883ddc140" loc="56:/opt/tinyos-2_1_2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x2b8883ddc440" loc="56:/opt/tinyos-2_1_2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x2b8883ddc770" loc="56:/opt/tinyos-2_1_2/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b8883ddb2b0" loc="68:/opt/tinyos-2_1_2/tos/interfaces/InternalFlash.nc">
        <documentation loc="58:/opt/tinyos-2_1_2/tos/interfaces/InternalFlash.nc">
          <short>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.</short>
          <long>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address to which to write.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer from which bytes are read.&#10; @param   size The number of bytes to write.&#10; @return  SUCCESS if the bytes were successfully written.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b8883dda948" loc="68:/opt/tinyos-2_1_2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x2b8883ddac48" loc="68:/opt/tinyos-2_1_2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x2b8883ddb020" loc="68:/opt/tinyos-2_1_2/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReprogramGuard" loc="1:../../Deluge/ReprogramGuard.nc">
      <function event="" provided="0" name="okToProgramDone" ref="0x2b8883dc64b0" loc="4:../../Deluge/ReprogramGuard.nc">
        <interfacedef-ref qname="ReprogramGuard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ok" ref="0x2b8883dc6240" loc="4:../../Deluge/ReprogramGuard.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="okToProgram" ref="0x2b8883dc9b98" loc="3:../../Deluge/ReprogramGuard.nc">
        <interfacedef-ref qname="ReprogramGuard"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2b8883e00178" loc="32:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b8883e04960" loc="25:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2b8883e00958" loc="39:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2_1_2/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2_1_2/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b8883dfb940" loc="52:/opt/tinyos-2_1_2/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b8883dfb940"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b8883df81d8" loc="58:/opt/tinyos-2_1_2/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2_1_2/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b8883df6020" loc="66:/opt/tinyos-2_1_2/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2_1_2/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b8883dfb940"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b8883df8920" loc="66:/opt/tinyos-2_1_2/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b8883df8c20" loc="66:/opt/tinyos-2_1_2/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b8883dfb940"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b8883e4d768" loc="100:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b8883e4ea60" loc="100:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b8883e4edb8" loc="100:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b8883e4d178" loc="101:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b8883e4d4c8" loc="101:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b8883e4b3f0" loc="119:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8883e4c368" loc="119:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b8883e4c688" loc="119:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2b8883e4c9c0" loc="119:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2b8883e4cd70" loc="120:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2b8883e4b140" loc="120:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b8883dec440" loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b8883ded738" loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b8883deda90" loc="70:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b8883deddf8" loc="71:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b8883dec1a0" loc="71:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b8883debc80" loc="91:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b8883deb408" loc="81:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8883dece48" loc="81:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b8883deb188" loc="81:/opt/tinyos-2_1_2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2b8883e3c868" loc="114:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x2b8883e459e8" loc="53:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8882775020"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x2b88827754d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2b8883e39a88" loc="140:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b8883e39818" loc="140:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b8883e3a0d8" loc="122:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2b8883e3f548" loc="82:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x2b8883e423e8" loc="58:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8882775020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b88827754d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x2b8883e42178" loc="58:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8882775020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b88827754d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2b8883e3e3a0" loc="91:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2b8883e39020" loc="133:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b8883e38258" loc="150:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2b8883e3fc38" loc="86:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2b8883e3d258" loc="99:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2b8883e3eae8" loc="95:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2b8883e3d980" loc="106:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2b8883e3a838" loc="127:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2b8883e41608" loc="69:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b888277ba10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b8882779178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2b8883e41398" loc="69:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b888277ba10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b8882779178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2b8883e3c178" loc="110:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2b8883e42bc0" loc="64:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b888277ba10"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b8882779178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b8883e41da8" loc="75:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b8883e38d68" loc="156:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8883e38af8" loc="156:/opt/tinyos-2_1_2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2_1_2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2_1_2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b8883eccc18" loc="62:/opt/tinyos-2_1_2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2_1_2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeMetadata" loc="10:../../Deluge/DelugeMetadata.nc">
      <documentation loc="1:../../Deluge/DelugeMetadata.nc">
        <short>&#10;  An interface for obtaining the identification data of an&#10;  image.</short>
        <long>&#10;  An interface for obtaining the identification data of an&#10;  image. The pointer returned by readDone will be destroyed by the&#10;  next read.&#10;&#10;  @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;  @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b8883f89438" loc="12:../../Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x2b8883f891c8" loc="12:../../Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b8883f88408" loc="13:../../Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:84" alignment="I:1"><nx_struct-ref name="DelugeIdent" ref="0x2b8881e0ecb8"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x2b88827f2178"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x2b8883f89a98" loc="13:../../Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
          <variable name="ident" ref="0x2b8883f89e20" loc="13:../../Deluge/DelugeMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:84" alignment="I:1"><nx_struct-ref name="DelugeIdent" ref="0x2b8881e0ecb8"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x2b88827f2178"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b8883f88178" loc="13:../../Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeVolumeManager" loc="37:../../Deluge/DelugeVolumeManager.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManager.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="erase" ref="0x2b8883f20a30" loc="39:../../Deluge/DelugeVolumeManager.nc">
        <interfacedef-ref qname="DelugeVolumeManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x2b8883f207c0" loc="39:../../Deluge/DelugeVolumeManager.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x2b8883f85338" loc="40:../../Deluge/DelugeVolumeManager.nc">
        <interfacedef-ref qname="DelugeVolumeManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x2b8883f850c8" loc="40:../../Deluge/DelugeVolumeManager.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b88840d5640" loc="31:/opt/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b88840d5060" loc="31:/opt/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b88840d53c0" loc="31:/opt/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b8884069948" loc="15:/opt/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b8884066760" loc="23:/opt/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8884066198" loc="23:/opt/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b888284c780"/>
                <typename><typedef-ref name="message_t" ref="0x2b888285bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b88840664e0" loc="23:/opt/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b88840bdb60" loc="54:/opt/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b88840bd450" loc="49:/opt/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b88840c51d8" loc="56:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b88840c4528" loc="72:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b88840c1020" loc="94:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b88840c2d60" loc="94:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b88840c4d40" loc="79:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b88840c5cc8" loc="65:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b88840c5a58" loc="65:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b88840c1818" loc="100:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b88840c25b8" loc="85:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b88840cc020" loc="71:/opt/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b88840cc8d8" loc="81:/opt/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b88840cd6c8" loc="62:/opt/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b88840cd458" loc="62:/opt/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b88840cb430" loc="91:/opt/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b88840cb1c0" loc="91:/opt/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b88840c8020" loc="62:/opt/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b88840c8bc8" loc="69:/opt/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b88840c8958" loc="69:/opt/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b88840c7640" loc="80:/opt/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b88840c73d0" loc="80:/opt/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b88841dd9b8" loc="48:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b88841dd418" loc="48:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b88841dd738" loc="48:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b88841d84a8" loc="79:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b88841d8238" loc="79:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b88841d72a0" loc="90:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b88841d8c20" loc="90:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b88841d7020" loc="90:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b88841da1d8" loc="65:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b88841d6a38" loc="99:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b88841d6160" loc="99:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b88841d6480" loc="99:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b88841d67a8" loc="99:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b88841daa50" loc="72:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b88841dc2b0" loc="57:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b88841db880" loc="57:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b88841dbba0" loc="57:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8881e1bb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b88841dc020" loc="57:/opt/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2_1_2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b888422fbb0" loc="46:/opt/tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2_1_2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b888422f940" loc="46:/opt/tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b888422c9b0" loc="56:/opt/tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2_1_2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b888422c3f8" loc="56:/opt/tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b888422c730" loc="56:/opt/tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b8884219578" loc="44:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b888421a738" loc="42:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b8884216c08" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8884216998" loc="49:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b8884218c08" loc="47:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b888421d7f8" loc="40:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b888421a020" loc="41:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b888421ae58" loc="43:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b88826fe1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b8884219c58" loc="45:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b88826eb9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b8884218578" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8884218308" loc="46:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b8884216328" loc="48:/opt/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8881e1b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
