<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="21:../ReprogrammerBaseC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404c88d8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4055caf8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4055caf8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40650780"/></to>
    </wire>
    <wire loc="22:../ReprogrammerBaseC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404caca8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055e898"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4055e898"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40562888"/></to>
    </wire>
    <wire loc="23:../ReprogrammerBaseC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x406818f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055e898"/></to>
    </wire>
    <wire loc="31:../ReprogrammerBaseC.nc">
      <from><interface-ref name="ChangeChannel" scoped="" ref="0x40526268"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x4095d1f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x4095d1f0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40955118"/></to>
    </wire>
    <wire loc="36:../ReprogrammerBaseC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4052ec78"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40ef1a78"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40ef1a78"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40eee6e0"/></to>
    </wire>
    <wire loc="41:../ReprogrammerBaseC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x404d2010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x413b81f8"/>
      <arguments>
        <value cst="I:136">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:../ReprogrammerBaseC.nc">
      <from><interface-ref name="SerialPacket" scoped="" ref="0x4050a0b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x413b8550"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x413b8550"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x413f9850"/></to>
    </wire>
    <wire loc="45:../ReprogrammerBaseC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x40503ce8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413b9810"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../ReprogrammerBaseC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4050a818"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416bcce8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x416bcce8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41db5f28"/></to>
    </wire>
    <wire loc="53:../ReprogrammerBaseC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40509010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x416bb3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x416bb3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41db25d0"/></to>
    </wire>
    <wire loc="57:../ReprogrammerBaseC.nc">
      <from><interface-ref name="ReplyReceive" scoped="" ref="0x40509790"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x416b81f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x416b81f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408d5c68"/>
      <arguments>
        <value cst="I:152">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../ReprogrammerBaseC.nc">
      <from><interface-ref name="RetxTimer" scoped="" ref="0x4051b548"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x416b68e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x416b68e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../ReprogrammerBaseC.nc">
      <from><interface-ref name="ReplyTimer" scoped="" ref="0x4050d8a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x416b2688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x416b2688"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../ReprogrammerBaseC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4052f010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x407610a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x407610a0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4075eb08"/></to>
    </wire>
    <wire loc="70:../ReprogrammerBaseC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40534380"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40764798"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40764798"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x4075e248"/></to>
    </wire>
    <wire loc="73:../ReprogrammerBaseC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40533af0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x416aed98"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x416aed98"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4077deb8"/></to>
    </wire>
    <wire loc="99:../ReprogrammerBaseP.nc">
      <from><interface-ref name="sendSerialMessage" scoped="" ref="0x40539b98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../ReprogrammerBaseP.nc">
      <from><interface-ref name="sendRadioMessage" scoped="" ref="0x40539358"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4057ed68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40562540"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4056b6f8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40566ef8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40566ef8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x4057ace8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40563110"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40573910"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40573910"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x4057a2f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40563af8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x4057e3e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4057e3e0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x4057d8b0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x4057ace8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405cb4f0"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x4057a2f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405ccb80"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x4057d8b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405cc228"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40645440"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4064dbf8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40645440"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4057ed68"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x405a24b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406203e8"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x4058ea28"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405dd790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405dd790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41784010"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x405930a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405ef410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405ef410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4179c228"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x40599210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405f5c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405f5c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4180ec08"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x40582670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405c9ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405c9ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416db010"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x4059cce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405f7968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405f7968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x418117f8"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x40581a98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405d3b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405d3b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41703de8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x40586210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405d76b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405d76b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41768d70"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x4058c8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405e94f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405e94f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4177f010"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40592ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405ed170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405ed170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x417970b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405ccb80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416e5ac8"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x4057f8e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405d07d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405d07d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416fbc08"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x405900a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405d5330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405d5330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41763c08"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40596750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405e7170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405e7170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4177a010"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x405970a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405f3988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405f3988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41809a88"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x405a0590"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406263b0"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40595c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405f0090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405f0090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x417a0de0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x40583210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405ca7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405ca7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416df9e8"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40589830"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405ce4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405ce4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416f6a88"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x405a10c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4061e8f0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40588ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405d83d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405d83d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4176c938"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x4058d4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405dc170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405dc170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x417839e8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x40593a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405efd68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405efd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4179bc08"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40599c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405f46b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405f46b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4180c6c0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x405810a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405c84f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405c84f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416da9e8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x405804b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405d14f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405d14f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416fe7f8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x40586c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405d6030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405d6030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x417667f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x4058b2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405e9e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405e9e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4177e9e8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x405918e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405edac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405edac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x417eaa88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405cb4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416e3570"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x4058a2f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405cf170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405cf170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416f96c0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x40590a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405d5c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405d5c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x417616c0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x40597a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405f2330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405f2330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41807538"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4058fea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405dedc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405dedc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41786538"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x40594670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405f09e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405f09e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4179e7f8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x4059b750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405f5330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405f5330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4180f228"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x4059f010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406238a0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x40583c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405c9170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405c9170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416dd538"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x405882f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405cee48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405cee48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416f4538"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x4059c2f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405f7010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x417c1de8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x40587750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405d8d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405d8d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4176a3b0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x4058dea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405dcac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405dcac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41781538"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x405924b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405ee790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405ee790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x417996c0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x40598670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405f3030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405f3030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4180a0b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405cc228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416e60f8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40580ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405d1e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405d1e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416fc228"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x40585670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405d6988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405d6988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41764228"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x4058bce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405e87d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405e87d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4177c538"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x405a1ab8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4061bdd8"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x40595210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405e36f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405e36f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x417a2418"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4058f4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405e16b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405e16b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4175f0b0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40579750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405cbe48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405cbe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416e1010"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x4058ad68"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405cfac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405cfac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416f70b0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40645848"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4065fdb0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x415309b0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x4152b4c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414da060"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4140a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41bba0d8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41267960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41ba0e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41af52c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41ac2100"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41041918"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e832d8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e314b8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e21b48"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e07e08"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d5a1e8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ce03c8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409b7290"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4195fdf0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bab128"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4095b640"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40781390"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40761cf8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40650b18"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4041ced8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4041ced8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x404974f8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4066c100"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4064e060"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4064e060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40645060"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4066c508"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4064d0f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415b6a78"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4064d0f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4129eee0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4064d0f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410f9380"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4064d0f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a3cdb8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40659968"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4065e1e8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4064dbf8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40657b98"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40657010"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4064d0f8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x40654010"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x40583210"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40654a00"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40657010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40497d30"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x404959b8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40496438"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x404aaf10"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407e3aa8"/></to>
    </wire>
    <wire loc="56:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40682100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40faf2c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40faf2c0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40fabb58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40682100"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x4116ae30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x4116ae30"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40fabb58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40682100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x411649d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x411649d8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40fabb58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4069d6e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41161958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41161958"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4069d6e8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x4115b6a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4115b6a0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4069d6e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41159330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41159330"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4069de90"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x406818f8"/></to>
    </wire>
    <wire loc="78:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4126a4c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4055caf8"/></to>
    </wire>
    <wire loc="79:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4126a808"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x406818f8"/></to>
    </wire>
    <wire loc="83:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationStdControl" scoped="" ref="0x41330490"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4126cc68"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4126cc68"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x411a5478"/></to>
    </wire>
    <wire loc="84:../../Deluge/DelugeC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x41330918"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x4068f540"/></to>
    </wire>
    <wire loc="55:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x4068f540"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x406a85a8"/></to>
    </wire>
    <wire loc="85:../../Deluge/DelugeC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x41372630"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x41260898"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x41260898"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x41267538"/></to>
    </wire>
    <wire loc="86:../../Deluge/DelugeC.nc">
      <from><interface-ref name="RadioSplitControl" scoped="" ref="0x41372030"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408eb9b8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408eb9b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408dfcb0"/></to>
    </wire>
    <wire loc="87:../../Deluge/DelugeC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x41372db0"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x40fa3b70"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x40fa3b70"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x40fd4068"/></to>
    </wire>
    <wire loc="88:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x4136e4d8"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x4139acc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x4139acc0"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x41352910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../Deluge/DelugeC.nc">
      <from><function-ref name="storageReady" scoped="" ref="0x41393010"/></from>
      <to><function-ref name="storageReady" scoped="" ref="0x413705c0"/></to>
    </wire>
    <wire loc="90:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4136d810"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x413c1e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x413c1e48"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41398ef8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4136dc60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4139cba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4139cba8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x416c1538"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x4122e9d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x4122e9d8"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x41b37308"/></to>
    </wire>
    <wire loc="56:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x406e8e80"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40682100"/></to>
    </wire>
    <wire loc="57:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x406e78a8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x4069d6e8"/></to>
    </wire>
    <wire loc="58:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x406ae178"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x406e8288"/></to>
    </wire>
    <wire loc="58:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x406e8288"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x406f6af0"/></to>
    </wire>
    <wire loc="59:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x406ac7b0"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x40882360"/></to>
    </wire>
    <wire loc="68:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendAdvMsg" scoped="" ref="0x406acc70"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40879a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40879a28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x418b9dd0"/></to>
    </wire>
    <wire loc="69:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x406a3408"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f95e10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f95e10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408d5c68"/>
      <arguments>
        <value cst="I:80">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x406e50c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f8f330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f8f330"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a34cc0"/></to>
    </wire>
    <wire loc="71:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x406e6560"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f8c250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f8c250"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408d5c68"/>
      <arguments>
        <value cst="I:81">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x406e6948"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f8a760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f8a760"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a68678"/></to>
    </wire>
    <wire loc="73:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x406e6158"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f87750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f87750"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408d5c68"/>
      <arguments>
        <value cst="I:82">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406fc140"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f894d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f894d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41a673f0"/></to>
    </wire>
    <wire loc="75:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x406f8810"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4069de90"/></to>
    </wire>
    <wire loc="77:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x406a3a98"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x4069d6e8"/></to>
    </wire>
    <wire loc="80:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x406a8bd0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x407610a0"/></to>
    </wire>
    <wire loc="81:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406a6168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40fb65a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40fb65a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:../../Deluge/ObjectTransferP.nc">
      <from><interface-ref name="signalObjRecvDone" scoped="" ref="0x406b4dd8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x407084c0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x406e8e80"/></to>
    </wire>
    <wire loc="60:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40708ed0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x406e78a8"/></to>
    </wire>
    <wire loc="62:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40707758"/></from>
      <to><interface-ref name="ReceiveDataMsg" scoped="" ref="0x406e6158"/></to>
    </wire>
    <wire loc="63:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40707b60"/></from>
      <to><interface-ref name="ReceiveReqMsg" scoped="" ref="0x406e6560"/></to>
    </wire>
    <wire loc="64:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x40702010"/></from>
      <to><interface-ref name="SendDataMsg" scoped="" ref="0x406e6948"/></to>
    </wire>
    <wire loc="65:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x40702770"/></from>
      <to><interface-ref name="SendReqMsg" scoped="" ref="0x406e50c8"/></to>
    </wire>
    <wire loc="67:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40702e60"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406fc140"/></to>
    </wire>
    <wire loc="68:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40701b30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406f8308"/></to>
    </wire>
    <wire loc="71:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x407103a0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x407610a0"/></to>
    </wire>
    <wire loc="72:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40700188"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40762660"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40762660"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BitVecUtils" scoped="" ref="0x40704c28"/></from>
      <to><interface-ref name="BitVecUtils" scoped="" ref="0x40763918"/></to>
    </wire>
    <wire loc="75:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407107c8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x406f8810"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40764278"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40761cf8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40781b40"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40781b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4083ea60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40781390"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4077a5a0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4077deb8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40870460"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4077a5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4081e790"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x4085de30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4078cc60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4082d010"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40786eb0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40786eb0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4081ebc8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40870df8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x407958c8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x407958c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4081b650"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x4081b650"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41899790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x4081e790"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4189c8b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4081ebc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4189ccf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41898950"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407dd7c0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407dd7c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407e8308"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41895b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407d8af0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x407d8af0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407e5600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x418943c0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407d74f8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407d74f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407e4010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x41893dc0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x407d5030"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x407d5030"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x407e3f08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x408429a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40871050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x418b9dd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x418ac550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40895150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x418b64d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x418b64d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x418ae010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x408957e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x418b6b68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x418b6b68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x418ae6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f97410"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x418b5790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x418b5790"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x418ad330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x418ae010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ea668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x418ae6a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x418ad330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e9af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x418acc38"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x418b18c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x418b18c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x418a7af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x418ab330"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408f6e58"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408f6e58"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408feef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x418ab8e8"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40ef1a78"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408ea668"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408f16d0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408f2a18"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e9af0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408f0740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x418a3260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408a4120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x418a38f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408a4120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408db010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408db780"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408d52a8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408d52a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408f3630"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408dbe28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408daa50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ea668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x408d9190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x408d95c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408dfcb0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408fd5a8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408f3630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f35100"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408ea310"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x408f26a8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408f26a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40f33178"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408f16d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f32190"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408e14a0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d93668"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d93668"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40db5100"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408feef8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40908888"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408d5c68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408f2010"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408f2010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f35ac0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408f0740"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40909f10"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408f2a18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f334e8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408e7ea8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d90100"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d90100"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40db4af8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408fd5a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40e86b08"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x408fe6d0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40f31238"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x4090f3f8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40f32b88"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40905eb0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x409096b8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x409096b8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40d97b88"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40908888"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40e88a88"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40909f10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40d94448"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x408f98f8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40908ea8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40908ea8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40f15d50"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40903b38"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409084c0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409084c0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d93010"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x40f2d4f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4090e120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40f31a88"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x4090ab40"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x4090ab40"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40e35098"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40f30220"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40909320"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x40909320"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40e35820"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40f2e460"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40cab968"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40f305b8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40d97b88"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40d97b88"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40db9668"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40f30dd8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d949c8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d949c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40db64b0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40f2f390"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x4095d1f0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x40f2eba0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x4091ed38"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x4091ed38"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x4091aa98"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f2dbb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055e898"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40e86b08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ed1a08"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d93010"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40db6a40"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40f15d50"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40f0f180"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x40e35098"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40e2f6d8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40e88a88"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40e836a0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x4090a010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e37c90"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e37c90"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x40e2f308"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40d94448"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40db9f10"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4090e120"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e09ed8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40e09ed8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e303c0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x4090e860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e375b0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40e375b0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40e30b00"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x4090a3f0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x40e35c00"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x40e35c00"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x40e2e258"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x40e35820"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40e2fe60"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40e84640"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40907c08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40907c08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4091dcc0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40e347d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e08128"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40e08128"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e07740"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40e08898"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f15650"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40f15650"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40f124d0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40f124d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e86090"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40e86090"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e83c88"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40e85a58"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4091e280"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4091e280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4091a360"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e34420"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e86770"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e86770"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e80438"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e84220"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e0adf0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e0adf0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e213d8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e24688"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4091e980"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4091e980"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d5d0b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d5d0b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d59010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409192a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409609f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409609f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4095b9d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x409134a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x4095c2c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x4095c2c0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x409701e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x4092ce80"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40cc0c08"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x4092ce80"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d606c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40d606c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d5a588"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40cc0c08"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40ce0768"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x40927858"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x40cbd0f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x40cbd0f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ce0c60"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x40917030"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40cbd808"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x40cbd808"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40cdf3b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x4092b8f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40d97b88"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40921078"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d949c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40917808"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x407610a0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x409398b0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40e0d338"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40e0d338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b8b100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40917c50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055e898"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x40938b18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x40938308"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x40924aa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x40958290"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x40970cc8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x4096b6c8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x409b7858"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x409b7858"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ac5e78"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4096d100"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x409b9e90"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x409b9e90"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40581a98"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x4096db08"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40abfcd0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40abfcd0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x40582670"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x4096a5a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x40abd128"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x40abd128"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x40583c08"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x40966718"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x40ad8188"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x40ad8188"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x40b2bb80"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40977010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c6f918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40c6f918"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b46340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40979da8"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x40c6c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40c6c010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40978250"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x40c6ca18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40c6ca18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40978ba0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x40c6e880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40c6e880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40978680"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x40c6cd70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40c6cd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x4097aa88"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x40c90db8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40c90db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40967010"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x40c8ef18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40c8ef18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40967518"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x40c8d368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40c8d368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40967a38"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x40c6ae50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40c6ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4097c010"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40c912b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40c912b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40968308"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x40c8ba00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40c8ba00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x4097dd88"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x40c8b5c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40c8b5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4097c520"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x40c90880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40c90880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x4097ca18"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x40c916e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40c916e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4097cf20"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40c90010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40c90010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x40976010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c815c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40c815c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b46340"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x409777c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c96010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40c96010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b46340"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40963740"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40cab968"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x4096b100"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40caa248"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x4098c948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x4098c168"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409b7290"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409ce7f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x409ce7f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ac6bb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40ac5e78"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41923220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x41923220"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4191d9b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x419196a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4191f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4191f010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41915d00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x4191a460"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a71928"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a71928"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a98e60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x41912720"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409deb58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x409deb58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409e62b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x4190f978"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x409f0c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x409d3ae0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x409e3610"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x409ec998"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x409e2348"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x409f0c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x409fd268"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x409f0c10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x409fce60"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x409f0c10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x409f9a78"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x409f7610"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407d8af0"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40a5a220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409deb58"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40aa80e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a8a3a0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a8a3a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a88b30"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40a87d50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409deb58"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40ac0890"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x405882f0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40abf2e8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x40592ea8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x409b94b8"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x4058bce8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40abe730"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x4058c8e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x40ad5a28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40aecd28"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40ad8898"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40ae9a28"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x40ad43e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x409ec998"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40ae8050"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x40afb890"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x40afb890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40b10840"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x40b28250"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x409b94b8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x40adcc30"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40b1ce68"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x40afc6b8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40b15408"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x40af9168"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40b30a08"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x40afd4f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40b19010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x40afb010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40b125e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x40adc3b0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40af7cf0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x40afdd78"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40b17228"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40b06510"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x40af6c80"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40b1b630"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x40af51a0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40b197c8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x40af5618"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40b179e0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x40af5a90"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40b15bc0"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x40af5f08"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40b12da0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x40af4390"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40b0f010"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x40af4808"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40b2f270"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x40af4c80"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x40b27ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40c6ebd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40c8e6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40c8eae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40c88cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40c8ab20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40c6c6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c8a2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40c8c468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40c6e010"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40b46a90"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40b46a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40b439a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40c6b4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40c6b840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40c6bc18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c8a6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40c91b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40c88880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40c88010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40c8c8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40c8be38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40c8d7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40c87190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40b45340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40c6e528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40c6aa18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40c90448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40c8e270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40c6a010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40c6a6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40c6b190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40c8b190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40c88448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40c8ccd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40c6c368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40c8c030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40c8dbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40c6a368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40c87a68"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40b45340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x40b45340"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40b62c28"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x40b45d88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b616a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x40b44600"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b61e48"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b46340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b621f8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b60630"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x40b5e308"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b8ce40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40b8ce40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b8b100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40b60a70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bacbe8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40bacbe8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c61570"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40b5fa80"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40c57330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x40c57330"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40b9dd48"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40b5adc8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40c57668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40c57668"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40bbd648"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40b5eab0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055e898"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x40b57818"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40b8b100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40bab758"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40bbd648"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40bb7d10"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40b9dd48"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40bb7370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40bac8b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b9d9c8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b9d9c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bb7010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubResource" scoped="" ref="0x40c61d30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bbdd98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SS" scoped="" ref="0x40c5e488"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40581a98"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40bbd010"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40bb76f8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40bbdd98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bb6488"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40bb4158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c27d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40c27d40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4195b180"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40bc67b8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40c26898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40c26898"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4195bcc8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40bc94d0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40bb93c8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40bb93c8"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40be47d8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40bc6c38"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x404aa148"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40bda860"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40c04ea0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x404aa148"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40c03658"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40581a98"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40c05050"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x405804b0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40c05a38"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x40580ea8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40c044a0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x4057f8e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40c26490"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4195b8c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x419b9218"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40c26d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x419b9640"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x4195d170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x419b9c38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40ca25c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40c80920"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40ca4af8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40ca1448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40ca1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40c9bb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40c9ca00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40c7f368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c9c190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40ca3448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40ca3cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40c9e2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40ca1cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40c81c78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40b46a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40c7e190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40c7e4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40c7e8c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c9c5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40c7fa18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40ca3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40ca3010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40c805c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40c9b6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40c9ce38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40c9e6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40c9dcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40ca05c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40c9a010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40b45340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40c80270"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40ca46c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40ca2190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40ca0190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40ca2b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40c80c78"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40ca1010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40c7ec18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40ca4368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40c9d880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40c9d448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40c7fd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40c9d010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40c9b2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40c9eb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40c7f010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40ca0e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40c7f6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40ca0a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40ca4010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40c9a8e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40b45340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40cb7e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40c94368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40cb94b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40cb6cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40cb5190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40caf448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40cb02b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40c94d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40cb2a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40cb9d28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40cb75c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40cb4b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40cb55c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40c966c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40b46a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40c93b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40c93ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40c92308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40cb2e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40c934e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40cb7190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40cb98f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40c94010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40caf010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40cb06e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40cb3010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40cb25c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40cb5e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40caf880"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40b45340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40c96be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40cb9080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40cb7a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40cb5a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40cb6468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40c946c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40cb68a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40c92660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40c92d10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40cb2190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40cb3cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40c93840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40cb3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40cb0b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40cb3448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40c94a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40cb46e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40c93190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40cb42b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40c929b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40cae190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40b45340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x40cbc8e0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x40cdfca8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x40cbcd48"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x40cde1b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x40cde778"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x409b7858"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x40cd8d58"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x409b94b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40cd7830"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x409b9e90"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40cd32f0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x40abe730"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x40cd86e0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x40ad5a28"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40cd3d30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d4b7b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40d4b7b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b46340"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40cd24a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40d4be68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40d4be68"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40b46a90"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40cd1c48"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40d4a390"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40d4a390"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40ccf098"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x40d48190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40d48190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40ccf4c8"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x40d484e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40d484e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40ccf8f8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x40d47260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40d47260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40cd1760"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40d45cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40d45cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40cd2a68"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x40d3b8e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40d3b8e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40b45340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40cd1258"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40d3e190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40d3e190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40ccfd38"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40d45010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40d45010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40cce7b0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40d42010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40d42010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40ccecd0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40d42448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40d42448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40cce370"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x40d46080"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40d46080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40cf7bc8"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x40d3c6e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40d3c6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40cf7220"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40d3ea00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40d3ea00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40cf76e8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40d3ee38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40d3ee38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40cf3970"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40d60b60"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40d60b60"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40d5aa28"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40cdb188"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40d97b88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40cdb9c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d949c8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40cda128"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d93668"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40cd8010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40d8f888"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40d8f888"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40db1308"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40cf3e98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055e898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40d445c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40d4aa40"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40d46b68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40d42880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40d3cb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40d45448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40d402b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40d42cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40d475b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40d47990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40d3e5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40d48b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40d45880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40d4a6e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40d406e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40d3fcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40d415c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40d3b010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40b45340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40d46730"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40d44190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40d41190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40d44b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40d4ad98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40d47ce8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40d463d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40d3f880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40d3f448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40d48ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40d3f010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40d3c2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40d40b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40d41e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40d48840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40d41a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40d5d550"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x40d594a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d4e598"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055e898"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40d59880"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x409b9e90"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40d58300"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x40ac0890"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40d58d10"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x40abf2e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40d577e8"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x40ad8898"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40d57ea8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d95ed0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40d95ed0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b46340"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40d56668"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x40df35c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40df35c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40b45340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40d55268"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40dd15b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40dd15b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40d56df0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x40dd1c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40dd1c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40d556a0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40d97b88"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d55ee0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d949c8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40d536e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d93668"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40d54480"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x4095d1f0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40d502b8"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40dfb5c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40dfb5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40d507d8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40dfba00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40dfba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40d51e50"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x40dd03d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40dd03d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40d4f700"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x40df3190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40df3190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40d50ca0"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40df5010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40df5010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40d4f220"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40df5448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40df5448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40d4fc00"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40df6b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40df6b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40d4e130"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40dd4ab8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40dd4ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x40d738d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40dda010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a71928"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x40db01e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40ddb5d8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40db0c38"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4077deb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40dd7378"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40dfcbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40dd3190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40dfd270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40dfbe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40dd3b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40df66e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40dfdae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40dfc368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40df8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40df92b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40dd45a0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40b46a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40dd1910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40dd0080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40dd1260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40dfdf18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40dfd6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40dd4e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40df5cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40df8cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40df62b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40df9b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40dd0de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40dfc7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40df96e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40dfb190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40dd34e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40dd0a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40df7e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40df7a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40df75c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40df5880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40b45d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40df7190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40dd3840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40df8448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40dd3ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40df8010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40b44600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40dd0730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40df3ea0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40b45340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40e04228"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40e08898"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40e048f8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40e06770"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40e06770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b8b100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40e03190"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x407610a0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40e03630"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d949c8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x40e24260"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x40e21800"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e20010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40e24688"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40e203d0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d949c8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40e2e9c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40e347d0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e2d148"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40e34420"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40e2d4e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40d97b88"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40e2dd00"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d949c8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40e2c310"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40e317f0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x40e70eb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40ed1a08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ecdc18"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40e85208"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40efacd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40efacd8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b8b100"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40e7e430"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40e84640"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e7e010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40e84220"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40e80828"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40e85a58"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x40e790e0"/></from>
      <to><interface-ref name="SplitControlState" scoped="" ref="0x40ece0e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x40ece0e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40ed3070"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x40e7c818"/></from>
      <to><interface-ref name="RadioPowerState" scoped="" ref="0x40ece948"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x40ece948"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40ed5e58"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40e7df00"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40efacd8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="OffTimer" scoped="" ref="0x40e799d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ef8010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40ef8010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendDoneTimer" scoped="" ref="0x40e77d38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ef5e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40ef5e18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="PowerCycle" scoped="" ref="0x40e7bd68"/></from>
      <to><interface-ref name="PowerCycle" scoped="" ref="0x40ed14b0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="PowerCycle" scoped="" ref="0x40ed14b0"/></from>
      <to><interface-ref name="PowerCycle" scoped="" ref="0x40ecd6c0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Resend" scoped="" ref="0x40e7f010"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x40cbd0f0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40e7d970"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40909f10"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40e7d3b8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d949c8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x40e7f728"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x4091ed38"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40e73010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x407610a0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e73438"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055e898"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40e72148"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40ef1a78"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="send" scoped="" ref="0x40ea0300"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="startRadio" scoped="" ref="0x40e9e388"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="resend" scoped="" ref="0x40ea0af0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="stopRadio" scoped="" ref="0x40e9eb70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40ed5e58"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b8b100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40ed3070"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b8b100"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x40ec4470"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x40cbc8e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x40ec48d8"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x40cbcd48"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40ec4d50"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x40d5d550"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40ec76c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40907c08"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40ec6ee8"/></from>
      <to><interface-ref name="SendState" scoped="" ref="0x40e85208"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x40ec7d68"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40ed5e58"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x40ec66b8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40ed3070"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="OnTimer" scoped="" ref="0x40eca3e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ed22c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40ed22c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ec56b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055e898"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="startRadio" scoped="" ref="0x40ec2b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="getCca" scoped="" ref="0x40ec03c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="stopRadio" scoped="" ref="0x40ec2350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f000a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f0f938"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40909f10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f91150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ea668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f917e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41a34cc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a27398"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f8f9c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41a303f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41a303f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41a2be68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f8e078"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41a30a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a30a88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41a29510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f8ec70"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41a2f6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41a2f6b0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41a28170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41a2be68"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ea668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a29510"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41a28170"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e9af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x41a27a80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a2b7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41a2b7d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a20800"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x41a25170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408f6e58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41a25728"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40ef1a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41a20ec8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408a4120"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a1e580"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f8c568"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ea668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f8cc00"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41a68678"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a5ea90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f8adf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41a68d10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41a68d10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41a61580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a673f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41a61c18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f88170"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41a66010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41a66010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41a5f870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41a61580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ea668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a61c18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41a5f870"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e9af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x41a5d1a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a64ea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41a64ea0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a59ef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x41a5d858"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408f6e58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41a5de10"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40ef1a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41a565d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408a4120"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a56c68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f87a68"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ea668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f86150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40faf958"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41aa0ba0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41aa0ba0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41aa0090"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40fabb58"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f9f0d8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f9f818"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fd3488"/></from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40fd4478"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41147150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41147150"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41000e58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40fd4478"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41140e20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41140e20"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41000e58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40fd4478"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x4113dab0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x4113dab0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41000e58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40fd4478"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41176788"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41176788"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41000e58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40fd4bd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41005930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41005930"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41000370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40fd4bd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x411406a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x411406a8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41000370"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40fd4bd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x4113d338"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4113d338"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41000370"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40fd4bd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41176010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41176010"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41000370"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40fd3848"/></from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x411467d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40ffd720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x411467d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ffde80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41043010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:/opt/tinyos-2.1.2/tos/chips/at45db/WireBlockStorageP.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x40ff12a8"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x41002b88"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x41002b88"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x41041c70"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4103e648"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4114a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4114a010"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41abf150"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41043010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41109418"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41109418"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41ac05b8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4103ed50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4114a6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4114a6a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41abf7e8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x410630f0"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x4103d988"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x4103d988"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x410ba5b8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x41061748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x41117270"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskSuccess" scoped="" ref="0x4108e3b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskFail" scoped="" ref="0x4108d3b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x410b99e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410ffa00"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x410ffa00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41118860"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x41100170"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x410fc210"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x410fc210"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x410f9758"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x41100488"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x410fc5b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x410fc5b0"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x410f9af8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Select" scoped="" ref="0x410f8330"/></from>
      <to><interface-ref name="PortA3" scoped="" ref="0x40579750"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Clk" scoped="" ref="0x410f8d08"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x4058b2f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="In" scoped="" ref="0x410f6110"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x4058d4b0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Out" scoped="" ref="0x410f7730"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x4058dea8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x410f6c58"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x41117270"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <from><interface-ref name="avail" scoped="" ref="0x4111e728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="granted" scoped="" ref="0x41115368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x41109b58"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41ac0cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41abfca8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4114ab58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41abe170"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41ac2438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41abd358"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40ffd720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x411467d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ffde80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41043010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40ffd720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x411467d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ffde80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41043010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40ffd720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x411467d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ffde80"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41043010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411685e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x411685e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41af4630"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41169540"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41167150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41167150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41af3230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x41168d20"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41af4d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41af36f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41167600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41af3b18"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41af5600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41af2190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41165510"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41add358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41add358"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41ade828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41163150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41ad7820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41ad7820"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41ad9c60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41160150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b4ac18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b4ac18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b4a108"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4115be18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b431b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b431b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b44690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41159aa8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b3e6d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b3e6d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b40b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x4118fb10"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x41b394b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x411a5c50"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x41b37c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x411a1af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41b39010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x411a1020"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x4120b788"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41b364f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055e898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="changedTask" scoped="" ref="0x41b35190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x411a5478"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x411a0680"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x411a0e58"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x411a5c50"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x4119b968"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x411a1020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x4119a498"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x411a1af0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4119a8d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4119c330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4119c330"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41b23350"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x41199010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x411e2798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x411e2798"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408d5c68"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x411993f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x411df1f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x411df1f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41b63ce8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x41199b78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x411dc6c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x411dc6c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408d5c68"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41199ec0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x411d7040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41b23350"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41b7da90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4119c9c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41b239e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41b239e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41b1c580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411e4078"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41b22150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41b22150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41b1cc18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x411e4c70"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41b22d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41b22d48"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41b7e870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41b1c580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ea668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41b1cc18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41b7e870"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e9af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x41b7c1a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41b1fe98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41b1fe98"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41b77ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x41b7c858"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408f6e58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41b7ce10"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40ef1a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41b745d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408a4120"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41b74c68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x411e2ab0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ea668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411e1158"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41b63ce8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41b56398"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x411df890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41b5f3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41b5f3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41b5ae78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411dff28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41b5fa88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41b5fa88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41b58530"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x411deb30"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41b5e6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41b5e6b0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41b57170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41b5ae78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ea668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41b58530"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41b57170"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e9af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x41b56a80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41b5a7e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41b5a7e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41b4f810"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x41b54170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408f6e58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41b54728"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40ef1a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41b4fed8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408a4120"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41b4d580"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x411dc9d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ea668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411db150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x4120b788"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41230878"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x41230878"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41b9e228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41b9e990"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41b97910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41b97910"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x41b9af08"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x407610a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Changed" scoped="" ref="0x41b9a5d0"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x41b911b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pending" scoped="" ref="0x41b9bba8"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x41b939b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41b99310"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055e898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="timerTask" scoped="" ref="0x41b99f28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="IFlash" scoped="" ref="0x41267da0"/></from>
      <to><interface-ref name="InternalFlash" scoped="" ref="0x412505b0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x4128a250"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x40882360"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="ReprogramGuard" scoped="" ref="0x41285560"/></from>
      <to><interface-ref name="ReprogramGuard" scoped="" ref="0x4125f3a8"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/micaz/ReprogramGuardC.nc">
      <from><interface-ref name="ReprogramGuard" scoped="" ref="0x4125f3a8"/></from>
      <to><interface-ref name="ReprogramGuard" scoped="" ref="0x4125fd20"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4128a678"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055e898"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><function-ref name="setAmAddress" scoped="" ref="0x41288798"/></from>
      <to><function-ref name="setAmAddress" scoped="" ref="0x40ca8778"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x41289390"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40955118"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/micaz/ReprogramGuardC.nc">
      <from><interface-ref name="Voltage" scoped="" ref="0x412752f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41276188"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x41276188"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41bc54e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x41bc54e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x412a7220"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41bc3080"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41339638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x412a56c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41bc3080"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x412a5f00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x412a2eb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4129e2d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41bc3558"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x412a7220"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41322750"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x412a3678"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x41320390"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4133c0a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412a5f00"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4131f8b8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x412a56c8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x4134b470"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x413213d8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4131f040"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4129b908"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4129b908"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x41295748"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x41297ac8"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x41295cd0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x412a2eb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412eccf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x412eccf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41bb9578"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x412f33e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4129e2d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x412ca528"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x4129d9f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x4129d9f8"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x412ed6c0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x41293968"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40659968"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x412f1bb0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x412952b8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412f0328"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412f4890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412f4890"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41bb8150"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x412eab38"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x404aa148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x412f4488"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41bb9cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x412f4f28"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41bb87e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41bb8ca8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x412f33e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41bb7170"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x41bba410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41bb6358"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x41c01d88"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x412f1bb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x41c00230"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x412f0010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41c00548"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412f0328"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41c00be0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x412f09c0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x41315010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../Deluge/DelugeP.nc">
      <from><interface-ref name="taskRequest" scoped="" ref="0x413674e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41333848"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x41352910"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x4138f7f0"/></to>
    </wire>
    <wire loc="49:../../Deluge/DelugeMetadataC.nc">
      <from><function-ref name="storageReady" scoped="" ref="0x4138cde0"/></from>
      <to><function-ref name="storageReady" scoped="" ref="0x41393010"/></to>
    </wire>
    <wire loc="50:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4138fc48"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4055caf8"/></to>
    </wire>
    <wire loc="57:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4138d308"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x413910d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x413910d8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40fabb58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4138d308"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x413aece8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x413aece8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40fabb58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4138d308"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x413ac8a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x413ac8a8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40fabb58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4138d308"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x413aa4d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x413aa4d0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40fabb58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4138dd28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x413a6030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x413a6030"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4138dd28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x413a5d20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x413a5d20"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4138dd28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x413a39b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x413a39b8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4138dd28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x413a16a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x413a16a0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41391770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41bf1cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41bf1cf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41bf11e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413ad3f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41beb1b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41beb1b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41bec690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413ab010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41be56d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41be56d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41be6ab8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413aab68"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c46b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c46b20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c46010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413a67a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c3f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c3f010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c404a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413a44d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c3a538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c3a538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c3ba08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413a2150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c34b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c34b20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c34010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413a1e18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c2e148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c2e148"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c2f5f0"/></to>
    </wire>
    <wire loc="46:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41398ef8"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41395c98"/></to>
    </wire>
    <wire loc="52:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x413d5508"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x413d7888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x413d7888"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x413d5508"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x413c6520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x413c6520"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x413d5508"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x413c4250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x413c4250"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x413d4010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x413d6030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413d6030"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c25720"/></to>
    </wire>
    <wire loc="57:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x413d4010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x413c6c98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413c6c98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c20b20"/></to>
    </wire>
    <wire loc="58:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x413d4010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x413c49c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413c49c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c19010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c25720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c27bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c20b20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c20010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c19010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c1a438"/></to>
    </wire>
    <wire loc="43:../../Deluge/SerialStarterC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x415ede88"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x413bef20"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x413bef20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4140a3a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4140a3a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x414022c8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x413b9810"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413fa180"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x413b81f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x413fa8c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x413b7930"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x413f9ee8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x413b8c40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413fabe8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4140a010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41407f18"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41404e80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x413b7e68"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4140e430"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41408288"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4140eae8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4140ac68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x41404978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x415f5ad8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41408288"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x414b84f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4140ac68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x414b8138"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x414b8c88"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x41404978"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x413fc7b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x41404e80"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x414b7cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x41404e80"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x414f2eb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x41404e80"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x414b7230"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x41441bd8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x414b7708"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x413fda80"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x4143ef10"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x414b1238"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x41440500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x414b3e48"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x414b3e48"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x414deb10"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x414f2630"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x414e32f8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x414e32f8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x414df490"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x414537a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x4142da18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x41454010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x41451428"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x414b5970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x414b5da8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x414de110"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x414df010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x414df010"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x414da7b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x414df490"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x414dabc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x414deb10"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x414da398"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x414dff08"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4158a610"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4158a610"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x415f9170"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x414fca70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x414dff08"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x414d9510"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x41533640"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x41533640"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x41530e00"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x414d9948"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x41533b50"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x41533b50"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x4152d368"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x414d9d80"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x41532088"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x41532088"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x4152d880"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x41531760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x4152a390"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x41532c98"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x4152b910"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x41531268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x4152be40"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x41529010"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40659968"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x41529750"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x404aa148"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x415f83b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41584088"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41584088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x415b70c0"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x415fd2f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41583a58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41583a58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41575010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4157ed78"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x41572370"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x4157db28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x41571078"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4157bd50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x4156e010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4157bd50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x4156dc08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4157bd50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x4156a830"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x415b6e60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41583a58"/></to>
    </wire>
    <wire loc="46:../../Deluge/AutoStarterC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x415eaeb8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x415ede88"/></to>
    </wire>
    <wire loc="47:../../Deluge/AutoStarterC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x415eab20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4055caf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41c83b08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41cdf010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41cdf010"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40fabb58"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41c83b08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41cde8b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41cde8b8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40fabb58"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41c83b08"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41cdc230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41cdc230"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40fabb58"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41c83b08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41cdab88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41cdab88"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40fabb58"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41c822c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41cd8448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41cd8448"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41c822c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41cd7ea8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41cd7ea8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41c822c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41cd58b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41cd58b8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41c822c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41cd32c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41cd32c0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c82a50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41ce1f20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41ce1f20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41c81150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41169540"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimeoutTimer" scoped="" ref="0x41c80010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41ce3238"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41ce3238"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SerialAMSender" scoped="" ref="0x41c81568"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41c89aa8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41c89aa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41cc7690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SerialAMReceiver" scoped="" ref="0x41c81c20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41c867c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x41c867c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x413b81f8"/>
      <arguments>
        <value cst="I:83">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41c7e220"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055e898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41c88158"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x413b8550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41c887f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413b8c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41c87410"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x413b7930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41cc7d58"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x415dc448"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41cc64d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413b8c40"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x415dc448"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x415dab10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x415d92f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413b9810"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x415d99a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413b8c40"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x415d85b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x413b8550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x415d8c88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x415d7190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41c86ad8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x413b8550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41c84230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413b8c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41cdf6a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41d48ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41d48ed8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41d483c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41cdd010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41d42358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41d42358"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41d43828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41cdc8c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41d3d820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41d3d820"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41d3ec70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41cd9238"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41d37cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41d37cf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41d371e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41cd8bc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41d311b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41d311b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41d32690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41cd6660"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41d2b6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41d2b6f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41d2dbd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41cd4070"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41d26cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41d26cf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41d261e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41cd3a38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41d1f358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41d1f358"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41d21828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelayTimer" scoped="" ref="0x41d7da90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41d81940"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41d81940"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SerialAMSender" scoped="" ref="0x41d7d010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41d1c900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41d1c900"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41d6b060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SerialAMReceiver" scoped="" ref="0x41d7d6c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41d846e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x41d846e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x413b81f8"/>
      <arguments>
        <value cst="I:84">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41d79150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055e898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x41d7e678"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x416c1538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NetProg" scoped="" ref="0x41d7ad10"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x41260898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x41d78548"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x4068f540"/></to>
    </wire>
    <wire>
      <from><interface-ref name="StorageMap" scoped="" ref="0x41d79dc0"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x40fa3b70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x41d78150"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x41d76cc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x41d76cc0"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x41352910"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41d78b00"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41d748d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41d748d0"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41398ef8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41d78ef8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41d73458"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41d73458"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><function-ref name="stop" scoped="" ref="0x41d775e8"/></from>
      <to><function-ref name="stop" scoped="" ref="0x41370940"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41d1b010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x413b8550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41d1b6a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413b8c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41d1a330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x413b7930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41d6b728"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x415dc448"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41d6bdc0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413b8c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41d849f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x413b8550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41d82150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413b8c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41db5f28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41da8478"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41db25d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41dadef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x416bba88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41db2c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41db2c68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41daa5a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x416ba6b0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41db1878"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41db1878"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41da9250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41dadef8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ea668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41daa5a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41da9250"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e9af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x41da8b60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41dad860"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41dad860"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41da38d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x41da7250"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408f6e58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41da7808"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40ef1a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41da0010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408a4120"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41da06a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x416b8510"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ea668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x416b8ba8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="ReprogrammerBaseP" loc="18:../ReprogrammerBaseP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC" loc="40:../../Deluge/DelugeC.nc">
      <configuration/>
    </component>
    <component qname="ObjectTransferC" loc="40:../../Deluge/ObjectTransferC.nc">
      <configuration/>
    </component>
    <component qname="ObjectTransferP" loc="45:../../Deluge/ObjectTransferP.nc">
      <module/>
    </component>
    <component qname="DelugePageTransferC" loc="37:../../Deluge/DelugePageTransferC.nc">
      <documentation loc="32:../../Deluge/DelugePageTransferC.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugePageTransferP" loc="45:../../Deluge/DelugePageTransferP.nc">
      <documentation loc="33:../../Deluge/BitVecUtils.h">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BitVecUtilsC" loc="41:../../Deluge/BitVecUtilsC.nc">
      <documentation loc="33:../../Deluge/BitVecUtils.h">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugePageTransferC.Timer" loc="44(DelugePageTransferC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40793428"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CrcC" loc="45:/opt/tinyos-2.1.2/tos/system/CrcC.nc">
      <module/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg" loc="47(ObjectTransferC.SendAdvMsg):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC" loc="3(ObjectTransferC.SendAdvMsg.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="0">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC" loc="47(ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="53:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.16 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="TOne" ref="0x404929a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="TOne" ref="0x404929a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="TOne" ref="0x404929a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x40492ea8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="TOne" ref="0x404929a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.2/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.2/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DefaultLplC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; The minimum number of samples that must be taken in CC2420DutyCycleP&#10; that show the channel is not clear before a detection event is issued&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="DefaultLplP" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Tony O'Donovan&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PowerCycleC" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
        <short>&#10; Use this component to duty cycle the radio.</short>
        <long>&#10; Use this component to duty cycle the radio. When a message is heard, &#10; disable DutyCycling.&#10;&#10; @author David Moss dmm@rincon.com&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PowerCycleP" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Tony O'Donovan&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PowerCycleC.RadioPowerStateC" loc="65(PowerCycleC.RadioPowerStateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.SplitControlStateC" loc="65(PowerCycleC.SplitControlStateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.OnTimerC" loc="44(PowerCycleC.OnTimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.CheckTimerC" loc="44(PowerCycleC.CheckTimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.SendStateC" loc="65(DefaultLplC.SendStateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.OffTimerC" loc="44(DefaultLplC.OffTimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.SendDoneTimerC" loc="44(DefaultLplC.SendDoneTimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningC" loc="1:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningC.nc">
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningP" loc="3:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningP.nc">
      <module/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP" loc="1(ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="0">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveAdvMsg" loc="43(ObjectTransferC.ReceiveAdvMsg):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg" loc="47(ObjectTransferC.SendReqMsg):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:81">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC" loc="3(ObjectTransferC.SendReqMsg.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="1">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC" loc="47(ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP" loc="1(ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="1">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveReqMsg" loc="43(ObjectTransferC.ReceiveReqMsg):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:81">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg" loc="47(ObjectTransferC.SendDataMsg):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:82">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC" loc="3(ObjectTransferC.SendDataMsg.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="2">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC" loc="47(ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP" loc="1(ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="2">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveDataMsg" loc="43(ObjectTransferC.ReceiveDataMsg):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:82">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.Timer" loc="44(ObjectTransferC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1" loc="40(DelugeC.BlockReaderDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageManagerC" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageManagerP" loc="37(BlockStorageManagerC.BlockStorageManagerP):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageManagerP"/>
        <arguments>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_Golden" loc="23(BlockStorageManagerC.BlockStorageC_Golden):/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageP" loc="53:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc" safe="">
      <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
        <short>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.</short>
        <long>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.&#10;&#10; @author: Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="At45dbC" loc="22:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. Access to the HAL&#10; is controlled by a parameterised Resource interface - client ids are &#10; obtained with unique(UQ_AT45DB).&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="At45dbP" loc="53:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc" safe="">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
        <short>&#10; Private componenent for the Atmel's AT45DB HAL.</short>
        <long>&#10; Private componenent for the Atmel's AT45DB HAL.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAt45dbC" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
        <short>&#10; AT45DB flash chip HPL for mica family.</short>
        <long>&#10; AT45DB flash chip HPL for mica family. Each family member must provide&#10; and HplAt45dbIOC component implementing the SPIByte and HplAt45dbByte&#10; interfaces required by HplAt45dbByteC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbC.HplAt45dbByteC" loc="25(HplAt45dbC.HplAt45dbByteC):/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAt45dbByteC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbIOC" loc="52:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
        <short>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.</short>
        <long>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbIOP" loc="90:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <documentation loc="75:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
        <short>&#10; Low level hardware access to the onboard AT45DB flash chip.</short>
        <long>&#10; Low level hardware access to the onboard AT45DB flash chip.&#10; &#60;p>&#10; Note: This component includes optimised bit-banging SPI code with the&#10; pins hardwired.  Don't copy it to some other platform without&#10; understanding it (see txByte).&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="HplAt45dbIOC.NoArbiterC" loc="20(HplAt45dbIOC.NoArbiterC):/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoArbiterC"/>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter" loc="89(At45dbC.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:at45db.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="At45dbC.Arbiter.Queue" loc="42(At45dbC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter.Arbiter" loc="52(At45dbC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbStorageManagerC" loc="17:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbStorageManagerC.nc" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbStorageManagerC.nc">
        <short>&#10; HAL component providing information on the flash volumes.</short>
        <long>&#10; HAL component providing information on the flash volumes.&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_1" loc="23(BlockStorageManagerC.BlockStorageC_1):/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_2" loc="23(BlockStorageManagerC.BlockStorageC_2):/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_3" loc="23(BlockStorageManagerC.BlockStorageC_3):/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC.Arbiter" loc="83(BlockStorageLockC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:BlockStorageLock.client">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC.Arbiter.Queue" loc="42(BlockStorageLockC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageLockC.Arbiter.Arbiter" loc="49(BlockStorageLockC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2" loc="40(DelugeC.BlockReaderDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3" loc="40(DelugeC.BlockReaderDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1" loc="40(DelugeC.BlockWriterDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2" loc="40(DelugeC.BlockWriterDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3" loc="40(DelugeC.BlockWriterDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC" loc="49(DelugeC.DisseminatorC):/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x406738b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40672188"/></typename>
          </type-tag>
          <value cst="I:56832">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC.DisseminatorP" loc="45(DelugeC.DisseminatorC.DisseminatorP):/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4118d5d0"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="3(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="3">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP" loc="1(DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="3">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="3(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="4">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP" loc="1(DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="4">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NetProgC" loc="46:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <configuration/>
    </component>
    <component qname="InternalFlashC" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <documentation loc="519:/usr/lib/gcc/avr/4.1.2/../../../../avr/include/avr/eeprom.h">
        <short> \def __EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM.</short>
        <long> \def __EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM. Compatibility define for IAR C.&#9;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="NetProgM" loc="45:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgM.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ReprogramGuardC" loc="1:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/micaz/ReprogramGuardC.nc">
      <configuration/>
    </component>
    <component qname="ReprogramGuardP" loc="1:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/micaz/ReprogramGuardP.nc">
      <module/>
    </component>
    <component qname="ReprogramGuardC.VoltageC" loc="39(ReprogramGuardC.VoltageC):/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogramGuardC.VoltageC.AdcReadClientC" loc="21(ReprogramGuardC.VoltageC.AdcReadClientC):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeP" loc="37:../../Deluge/DelugeP.nc">
      <documentation loc="32:../../Deluge/DelugeP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC.Timer" loc="44(DelugeC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC" loc="37:../../Deluge/DelugeMetadataC.nc">
      <documentation loc="32:../../Deluge/DelugeMetadataC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeMetadataP" loc="39:../../Deluge/DelugeMetadataP.nc">
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage" loc="40(DelugeMetadataC.BlockReaderGoldenImage):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1" loc="40(DelugeMetadataC.BlockReaderDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2" loc="40(DelugeMetadataC.BlockReaderDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3" loc="40(DelugeMetadataC.BlockReaderDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage" loc="40(DelugeMetadataC.BlockWriterGoldenImage):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1" loc="40(DelugeMetadataC.BlockWriterDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2" loc="40(DelugeMetadataC.BlockWriterDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3" loc="40(DelugeMetadataC.BlockWriterDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeMetadataClientC" loc="37(DelugeC.DelugeMetadataClientC):../../Deluge/DelugeMetadataClientC.nc">
      <documentation loc="32:../../Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeMetadataClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeVolumeManagerClientC" loc="37(DelugeC.DelugeVolumeManagerClientC):../../Deluge/DelugeVolumeManagerClientC.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeVolumeManagerClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC" loc="37:../../Deluge/DelugeVolumeManagerC.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerP" loc="37:../../Deluge/DelugeVolumeManagerP.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1" loc="40(DelugeVolumeManagerC.BlockWriterDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2" loc="40(DelugeVolumeManagerC.BlockWriterDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3" loc="40(DelugeVolumeManagerC.BlockWriterDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockStorageLockClientC" loc="37(DelugeC.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404711a8"/>
            <typename><typedef-ref name="TThree" ref="0x40492bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404711a8"/>
            <typename><typedef-ref name="TMicro" ref="0x40471370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404711a8"/>
            <typename><typedef-ref name="TThree" ref="0x40492bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x404911d8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AutoStarterC" loc="37:../../Deluge/AutoStarterC.nc">
      <documentation loc="32:../../Deluge/AutoStarterC.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AutoStarterP" loc="37:../../Deluge/AutoStarterP.nc">
      <documentation loc="32:../../Deluge/AutoStarterP.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC" loc="47(DelugeC.FlashVolumeManagerC.SerialAMSenderC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP" loc="43(DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC" loc="43(DelugeC.FlashVolumeManagerC.SerialAMReceiverC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP" loc="39(DelugeC.FlashVolumeManagerC.FlashVolumeManagerP):/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FlashVolumeManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.TimeoutTimer" loc="44(DelugeC.FlashVolumeManagerC.TimeoutTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC" loc="39(DelugeC.DelugeManagerC):../../Deluge/DelugeManagerC.nc">
      <documentation loc="32:../../Deluge/DelugeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeManagerC"/>
        <arguments>
          <value cst="I:84">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.SerialAMSenderC" loc="47(DelugeC.DelugeManagerC.SerialAMSenderC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP" loc="43(DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.DelugeManagerC.SerialAMReceiverC" loc="43(DelugeC.DelugeManagerC.SerialAMReceiverC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.Timer" loc="44(DelugeC.DelugeManagerC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.DelugeManagerP" loc="39(DelugeC.DelugeManagerC.DelugeManagerP):../../Deluge/DelugeManagerP.nc">
      <documentation loc="32:../../Deluge/DelugeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.DelugeManagerC.DelugeMetadataClientC" loc="37(DelugeC.DelugeManagerC.DelugeMetadataClientC):../../Deluge/DelugeMetadataClientC.nc">
      <documentation loc="32:../../Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DelugeMetadataClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.DelugeVolumeManagerClientC" loc="37(DelugeC.DelugeManagerC.DelugeVolumeManagerClientC):../../Deluge/DelugeVolumeManagerClientC.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DelugeVolumeManagerClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.BlockStorageLockClientC" loc="37(DelugeC.DelugeManagerC.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerBaseC.RadioSenderC" loc="47(ReprogrammerBaseC.RadioSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:153">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerBaseC.RadioSenderC.SenderC" loc="3(ReprogrammerBaseC.RadioSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="5">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC" loc="47(ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ReprogrammerBaseC.RadioSenderC.SenderC.LplAMSenderP" loc="1(ReprogrammerBaseC.RadioSenderC.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="5">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="ReprogrammerBaseC.ReplyReceiverC" loc="43(ReprogrammerBaseC.ReplyReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:152">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerBaseC.RetxTimerC" loc="44(ReprogrammerBaseC.RetxTimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerBaseC.ReplyTimerC" loc="44(ReprogrammerBaseC.ReplyTimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4059edc8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x405a7010" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x405a7228" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x405ab238" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x405ab460" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x405ab688" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x405ab878" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x405fb3d0" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x405fb5f8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x405fb820" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x405fba10" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40793428" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40793428"/></type-var>
        </typedef>
        <constant name="divider" ref="0x407935e8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x4078e6a0" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4078e6a0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x4078e860" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4078d638" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4078d638"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40840d00" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40840d00"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40840ee0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4086e3e8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4086e3e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40894068" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LplAMSenderC" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc" abstract="">
      <parameters>
        <constant name="AMId" ref="0x40892960" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
          <component-ref qname="LplAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x4088c4c8" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x4089d010" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x408a35f8" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40a59478" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40a59478"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40a59698" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40a4d428" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40a4d428"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40a4d870" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40a4d870"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40a4da30" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40a86228" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40a86228"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40a86670" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40a86670"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40a6b618" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40a6b618"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40a6ba78" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40a6ba78"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40a6bce0" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40a6bce0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40a96168" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40a96168"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40a963d0" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40a96858" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40a96858"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40aa4158" loc="52:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40aa4158"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40aa45b8" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40aa45b8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40aa4820" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40aa4820"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40aa4c90" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40aa4c90"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40aa4ef8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x40af8c20" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x40af8e48" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x40b05088" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40b05278" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40c28b48" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40c21940" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="LplAMSenderP" loc="1:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40f96760" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockReaderC" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40fb15c0" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
          <component-ref qname="BlockReaderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VolumeIdC" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40facb50" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
          <component-ref qname="VolumeIdC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageManagerP" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="clients" ref="0x40fa2368" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
          <component-ref qname="BlockStorageManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageC" loc="23:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc" abstract="">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="volid" ref="0x40fd1680" loc="23:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
          <component-ref qname="BlockStorageC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAt45dbByteC" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="sectorSizeLog2" ref="0x410bb598" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
          <component-ref qname="HplAt45dbByteC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoArbiterC" loc="20:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x411085e8" loc="89:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x4113a528" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageLockClientC" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockWriterC" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x411623c8" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
          <component-ref qname="BlockWriterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4118d5d0" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4118d5d0"/></type-var>
        </typedef>
        <constant name="key" ref="0x4118d7c0" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x41187770" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41187770"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x41208948" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x41208b58" loc="52:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x41208d38" loc="53:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x41205010" loc="54:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x41204518" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x41204728" loc="52:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x41204908" loc="53:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x41204b10" loc="54:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x41204d18" loc="55:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x41243340" loc="44:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VoltageC" loc="39:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x412aeef0" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x41307190" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x41323bb0" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x41323bb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DelugeMetadataClientC" loc="37:../../Deluge/DelugeMetadataClientC.nc" abstract="">
      <documentation loc="32:../../Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerClientC" loc="37:../../Deluge/DelugeVolumeManagerClientC.nc" abstract="">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x413bdd90" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x4161d2a0" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FlashVolumeManagerP" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DelugeManagerC" loc="39:../../Deluge/DelugeManagerC.nc" abstract="">
      <documentation loc="32:../../Deluge/DelugeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x41659030" loc="39:../../Deluge/DelugeManagerC.nc">
          <component-ref qname="DelugeManagerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DelugeManagerP" loc="39:../../Deluge/DelugeManagerP.nc" abstract="">
      <documentation loc="32:../../Deluge/DelugeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="ReplyTimer" ref="0x4050d8a8" loc="38:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReplyTimer" scoped="" ref="0x4050d8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405183a8"/>
        <function-ref name="fired" scoped="" ref="0x40519648"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40519d50"/>
        <function-ref name="isOneShot" scoped="" ref="0x40519af8"/>
        <function-ref name="getdt" scoped="" ref="0x40518858"/>
        <function-ref name="gett0" scoped="" ref="0x40518600"/>
        <function-ref name="isRunning" scoped="" ref="0x405198a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4050ded0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40518088"/>
        <function-ref name="startOneShot" scoped="" ref="0x40519170"/>
        <function-ref name="stop" scoped="" ref="0x405193f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x404c88d8" loc="20:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404c88d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404c8ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x4052ec78" loc="53:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4052ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x4052ee50"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x40520010"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x405200f0"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x405201d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40533af0" loc="57:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40533af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4052d200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x40509010" loc="33:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40509010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405091e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405092c8"/>
        <function-ref name="getPayload" scoped="" ref="0x405093a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40509488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40509568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4052f010" loc="55:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4052f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4052f268"/>
        <function-ref name="rand32" scoped="" ref="0x4052f348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendSerialMessage" ref="0x40539b98" loc="99:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendSerialMessage" scoped="" ref="0x40539b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40539d70"/>
        <function-ref name="runTask" scoped="" ref="0x40539e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SeedInit" ref="0x40534380" loc="56:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40534380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405349a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x40503ce8" loc="27:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x40503ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40503ec0"/>
        <function-ref name="getPayload" scoped="" ref="0x404c6010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404c60f0"/>
        <function-ref name="cancel" scoped="" ref="0x404c61d0"/>
        <function-ref name="sendDone" scoped="" ref="0x404c62b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacket" ref="0x4050a0b0" loc="29:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacket" scoped="" ref="0x4050a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4050a288"/>
        <function-ref name="payloadLength" scoped="" ref="0x4050a368"/>
        <function-ref name="getPayload" scoped="" ref="0x4050a448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4050a528"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4050a608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReplyReceive" ref="0x40509790" loc="34:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReplyReceive" scoped="" ref="0x40509790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40509968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxTimer" ref="0x4051b548" loc="37:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxTimer" scoped="" ref="0x4051b548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4050d048"/>
        <function-ref name="fired" scoped="" ref="0x4050f2e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4050f9e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4050f790"/>
        <function-ref name="getdt" scoped="" ref="0x4050d4f8"/>
        <function-ref name="gett0" scoped="" ref="0x4050d2a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4050f538"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4051bb70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4050fd08"/>
        <function-ref name="startOneShot" scoped="" ref="0x4051bdf0"/>
        <function-ref name="stop" scoped="" ref="0x4050f088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChangeChannel" ref="0x40526268" loc="48:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChangeChannel" scoped="" ref="0x40526268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40526440"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40526520"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40526600"/>
        <function-ref name="syncDone" scoped="" ref="0x405266e0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x405267c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x405268a0"/>
        <function-ref name="setChannel" scoped="" ref="0x40526980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40526a60"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40526b40"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40526c20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40526d00"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40526de0"/>
        <function-ref name="sync" scoped="" ref="0x40526ec0"/>
        <function-ref name="getChannel" scoped="" ref="0x40517090"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40517170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x404d2010" loc="28:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReceive" scoped="" ref="0x404d2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404d21e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendRadioMessage" ref="0x40539358" loc="98:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendRadioMessage" scoped="" ref="0x40539358"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40539530"/>
        <function-ref name="runTask" scoped="" ref="0x40539610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404caca8" loc="22:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404caca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404cae80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404c7010"/>
        <function-ref name="led1On" scoped="" ref="0x404c70f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404c71d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404c72b0"/>
        <function-ref name="get" scoped="" ref="0x404c7390"/>
        <function-ref name="led1Off" scoped="" ref="0x404c7470"/>
        <function-ref name="led2Off" scoped="" ref="0x404c77f0"/>
        <function-ref name="set" scoped="" ref="0x404c7550"/>
        <function-ref name="led0On" scoped="" ref="0x404c7630"/>
        <function-ref name="led2On" scoped="" ref="0x404c7710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x4050a818" loc="32:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4050a818"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4050a9f0"/>
        <function-ref name="getPayload" scoped="" ref="0x4050aad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4050abb0"/>
        <function-ref name="cancel" scoped="" ref="0x4050ac90"/>
        <function-ref name="sendDone" scoped="" ref="0x4050ad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4055e898" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4055e898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4055ea70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4055eb50"/>
        <function-ref name="led1On" scoped="" ref="0x4055ec30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4055ed10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4055edf0"/>
        <function-ref name="get" scoped="" ref="0x4055eed0"/>
        <function-ref name="led1Off" scoped="" ref="0x4055b010"/>
        <function-ref name="led2Off" scoped="" ref="0x4055b390"/>
        <function-ref name="set" scoped="" ref="0x4055b0f0"/>
        <function-ref name="led0On" scoped="" ref="0x4055b1d0"/>
        <function-ref name="led2On" scoped="" ref="0x4055b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x4056b6f8" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4056b6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056b8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4056b9b0"/>
        <function-ref name="toggle" scoped="" ref="0x4056ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x4056bb70"/>
        <function-ref name="get" scoped="" ref="0x4056bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056bd30"/>
        <function-ref name="set" scoped="" ref="0x4056be10"/>
        <function-ref name="clr" scoped="" ref="0x4056bef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40562540" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40562540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40562718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40563110" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40563110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405632e8"/>
        <function-ref name="isInput" scoped="" ref="0x405633c8"/>
        <function-ref name="toggle" scoped="" ref="0x405634a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40563588"/>
        <function-ref name="get" scoped="" ref="0x40563668"/>
        <function-ref name="makeOutput" scoped="" ref="0x40563748"/>
        <function-ref name="set" scoped="" ref="0x40563828"/>
        <function-ref name="clr" scoped="" ref="0x40563908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40562888" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40562888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40562a60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40562b40"/>
        <function-ref name="led1On" scoped="" ref="0x40562c20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40562d00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40562de0"/>
        <function-ref name="get" scoped="" ref="0x40562ec0"/>
        <function-ref name="led1Off" scoped="" ref="0x40564010"/>
        <function-ref name="led2Off" scoped="" ref="0x40564390"/>
        <function-ref name="set" scoped="" ref="0x405640f0"/>
        <function-ref name="led0On" scoped="" ref="0x405641d0"/>
        <function-ref name="led2On" scoped="" ref="0x405642b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40563af8" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40563af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40563cd0"/>
        <function-ref name="isInput" scoped="" ref="0x40563db0"/>
        <function-ref name="toggle" scoped="" ref="0x40563e90"/>
        <function-ref name="isOutput" scoped="" ref="0x40561010"/>
        <function-ref name="get" scoped="" ref="0x405610f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405611d0"/>
        <function-ref name="set" scoped="" ref="0x405612b0"/>
        <function-ref name="clr" scoped="" ref="0x40561390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40566ef8" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40566ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405730e0"/>
        <function-ref name="isInput" scoped="" ref="0x405731c0"/>
        <function-ref name="toggle" scoped="" ref="0x405732a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40573380"/>
        <function-ref name="get" scoped="" ref="0x40573460"/>
        <function-ref name="makeOutput" scoped="" ref="0x40573540"/>
        <function-ref name="set" scoped="" ref="0x40573620"/>
        <function-ref name="clr" scoped="" ref="0x40573700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40573910" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40573910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40573ae8"/>
        <function-ref name="isInput" scoped="" ref="0x40573bc8"/>
        <function-ref name="toggle" scoped="" ref="0x40573ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x40573d88"/>
        <function-ref name="get" scoped="" ref="0x40573e68"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057e010"/>
        <function-ref name="set" scoped="" ref="0x4057e0f0"/>
        <function-ref name="clr" scoped="" ref="0x4057e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x4057ed68" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4057ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4057d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x4057e3e0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4057e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057e5b8"/>
        <function-ref name="isInput" scoped="" ref="0x4057e698"/>
        <function-ref name="toggle" scoped="" ref="0x4057e778"/>
        <function-ref name="isOutput" scoped="" ref="0x4057e858"/>
        <function-ref name="get" scoped="" ref="0x4057e938"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057ea18"/>
        <function-ref name="set" scoped="" ref="0x4057eaf8"/>
        <function-ref name="clr" scoped="" ref="0x4057ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x405a24b0" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x405a24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405a2888"/>
        <function-ref name="isInput" scoped="" ref="0x405a2968"/>
        <function-ref name="toggle" scoped="" ref="0x405a2a48"/>
        <function-ref name="isOutput" scoped="" ref="0x405a2b28"/>
        <function-ref name="get" scoped="" ref="0x405a2c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405a2ce8"/>
        <function-ref name="set" scoped="" ref="0x405a2dc8"/>
        <function-ref name="clr" scoped="" ref="0x405a2ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x4058ea28" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x4058ea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058ec00"/>
        <function-ref name="isInput" scoped="" ref="0x4058ece0"/>
        <function-ref name="toggle" scoped="" ref="0x4058edc0"/>
        <function-ref name="isOutput" scoped="" ref="0x4058eea0"/>
        <function-ref name="get" scoped="" ref="0x4058d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058d0f0"/>
        <function-ref name="set" scoped="" ref="0x4058d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4058d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x405930a0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x405930a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40593278"/>
        <function-ref name="isInput" scoped="" ref="0x40593358"/>
        <function-ref name="toggle" scoped="" ref="0x40593438"/>
        <function-ref name="isOutput" scoped="" ref="0x40593518"/>
        <function-ref name="get" scoped="" ref="0x405935f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405936d8"/>
        <function-ref name="set" scoped="" ref="0x405937b8"/>
        <function-ref name="clr" scoped="" ref="0x40593898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x40599210" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x40599210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405993e8"/>
        <function-ref name="isInput" scoped="" ref="0x405994c8"/>
        <function-ref name="toggle" scoped="" ref="0x405995a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40599688"/>
        <function-ref name="get" scoped="" ref="0x40599768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40599848"/>
        <function-ref name="set" scoped="" ref="0x40599928"/>
        <function-ref name="clr" scoped="" ref="0x40599a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x40582670" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x40582670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40582848"/>
        <function-ref name="isInput" scoped="" ref="0x40582928"/>
        <function-ref name="toggle" scoped="" ref="0x40582a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40582ae8"/>
        <function-ref name="get" scoped="" ref="0x40582bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40582ca8"/>
        <function-ref name="set" scoped="" ref="0x40582d88"/>
        <function-ref name="clr" scoped="" ref="0x40582e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x4059cce8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x4059cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4059cec0"/>
        <function-ref name="isInput" scoped="" ref="0x4059b010"/>
        <function-ref name="toggle" scoped="" ref="0x4059b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4059b1d0"/>
        <function-ref name="get" scoped="" ref="0x4059b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4059b390"/>
        <function-ref name="set" scoped="" ref="0x4059b470"/>
        <function-ref name="clr" scoped="" ref="0x4059b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x40581a98" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x40581a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40581c70"/>
        <function-ref name="isInput" scoped="" ref="0x40581d50"/>
        <function-ref name="toggle" scoped="" ref="0x40581e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40581f10"/>
        <function-ref name="get" scoped="" ref="0x40580010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405800f0"/>
        <function-ref name="set" scoped="" ref="0x405801d0"/>
        <function-ref name="clr" scoped="" ref="0x405802b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x40586210" loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x40586210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405863e8"/>
        <function-ref name="isInput" scoped="" ref="0x405864c8"/>
        <function-ref name="toggle" scoped="" ref="0x405865a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40586688"/>
        <function-ref name="get" scoped="" ref="0x40586768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40586848"/>
        <function-ref name="set" scoped="" ref="0x40586928"/>
        <function-ref name="clr" scoped="" ref="0x40586a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x4058c8e0" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x4058c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058cab8"/>
        <function-ref name="isInput" scoped="" ref="0x4058cb98"/>
        <function-ref name="toggle" scoped="" ref="0x4058cc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4058cd58"/>
        <function-ref name="get" scoped="" ref="0x4058ce38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058cf18"/>
        <function-ref name="set" scoped="" ref="0x4058b010"/>
        <function-ref name="clr" scoped="" ref="0x4058b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40592ea8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40592ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405910c0"/>
        <function-ref name="isInput" scoped="" ref="0x405911a0"/>
        <function-ref name="toggle" scoped="" ref="0x40591280"/>
        <function-ref name="isOutput" scoped="" ref="0x40591360"/>
        <function-ref name="get" scoped="" ref="0x40591440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40591520"/>
        <function-ref name="set" scoped="" ref="0x40591600"/>
        <function-ref name="clr" scoped="" ref="0x405916e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x4057a2f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x4057a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057a4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4057a5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4057a688"/>
        <function-ref name="isOutput" scoped="" ref="0x4057a768"/>
        <function-ref name="get" scoped="" ref="0x4057a848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057a928"/>
        <function-ref name="set" scoped="" ref="0x4057aa08"/>
        <function-ref name="clr" scoped="" ref="0x4057aae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x4057f8e0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x4057f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057fab8"/>
        <function-ref name="isInput" scoped="" ref="0x4057fb98"/>
        <function-ref name="toggle" scoped="" ref="0x4057fc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4057fd58"/>
        <function-ref name="get" scoped="" ref="0x4057fe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057ff18"/>
        <function-ref name="set" scoped="" ref="0x4058a010"/>
        <function-ref name="clr" scoped="" ref="0x4058a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x405900a0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x405900a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40590278"/>
        <function-ref name="isInput" scoped="" ref="0x40590358"/>
        <function-ref name="toggle" scoped="" ref="0x40590438"/>
        <function-ref name="isOutput" scoped="" ref="0x40590518"/>
        <function-ref name="get" scoped="" ref="0x405905f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405906d8"/>
        <function-ref name="set" scoped="" ref="0x405907b8"/>
        <function-ref name="clr" scoped="" ref="0x40590898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40596750" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40596750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40596928"/>
        <function-ref name="isInput" scoped="" ref="0x40596a08"/>
        <function-ref name="toggle" scoped="" ref="0x40596ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40596bc8"/>
        <function-ref name="get" scoped="" ref="0x40596ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40596d88"/>
        <function-ref name="set" scoped="" ref="0x40596e68"/>
        <function-ref name="clr" scoped="" ref="0x40595010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x405970a0" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x405970a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40597278"/>
        <function-ref name="isInput" scoped="" ref="0x40597358"/>
        <function-ref name="toggle" scoped="" ref="0x40597438"/>
        <function-ref name="isOutput" scoped="" ref="0x40597518"/>
        <function-ref name="get" scoped="" ref="0x405975f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405976d8"/>
        <function-ref name="set" scoped="" ref="0x405977b8"/>
        <function-ref name="clr" scoped="" ref="0x40597898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x405a0590" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x405a0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405a0768"/>
        <function-ref name="isInput" scoped="" ref="0x405a0848"/>
        <function-ref name="toggle" scoped="" ref="0x405a0928"/>
        <function-ref name="isOutput" scoped="" ref="0x405a0a08"/>
        <function-ref name="get" scoped="" ref="0x405a0ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405a0bc8"/>
        <function-ref name="set" scoped="" ref="0x405a0ca8"/>
        <function-ref name="clr" scoped="" ref="0x405a0d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40595c08" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40595c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40595de0"/>
        <function-ref name="isInput" scoped="" ref="0x40595ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40594010"/>
        <function-ref name="isOutput" scoped="" ref="0x405940f0"/>
        <function-ref name="get" scoped="" ref="0x405941d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405942b0"/>
        <function-ref name="set" scoped="" ref="0x40594390"/>
        <function-ref name="clr" scoped="" ref="0x40594470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x40583210" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x40583210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405833e8"/>
        <function-ref name="isInput" scoped="" ref="0x405834c8"/>
        <function-ref name="toggle" scoped="" ref="0x405835a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40583688"/>
        <function-ref name="get" scoped="" ref="0x40583768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40583848"/>
        <function-ref name="set" scoped="" ref="0x40583928"/>
        <function-ref name="clr" scoped="" ref="0x40583a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40589830" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40589830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40589a08"/>
        <function-ref name="isInput" scoped="" ref="0x40589ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40589bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40589ca8"/>
        <function-ref name="get" scoped="" ref="0x40589d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40589e68"/>
        <function-ref name="set" scoped="" ref="0x40588010"/>
        <function-ref name="clr" scoped="" ref="0x405880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x405a10c0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x405a10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405a1298"/>
        <function-ref name="isInput" scoped="" ref="0x405a1378"/>
        <function-ref name="toggle" scoped="" ref="0x405a1458"/>
        <function-ref name="isOutput" scoped="" ref="0x405a1538"/>
        <function-ref name="get" scoped="" ref="0x405a1618"/>
        <function-ref name="makeOutput" scoped="" ref="0x405a16f8"/>
        <function-ref name="set" scoped="" ref="0x405a17d8"/>
        <function-ref name="clr" scoped="" ref="0x405a18b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40588ce8" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40588ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40588ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40587010"/>
        <function-ref name="toggle" scoped="" ref="0x405870f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405871d0"/>
        <function-ref name="get" scoped="" ref="0x405872b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40587390"/>
        <function-ref name="set" scoped="" ref="0x40587470"/>
        <function-ref name="clr" scoped="" ref="0x40587550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x4058d4b0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x4058d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058d688"/>
        <function-ref name="isInput" scoped="" ref="0x4058d768"/>
        <function-ref name="toggle" scoped="" ref="0x4058d848"/>
        <function-ref name="isOutput" scoped="" ref="0x4058d928"/>
        <function-ref name="get" scoped="" ref="0x4058da08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058dae8"/>
        <function-ref name="set" scoped="" ref="0x4058dbc8"/>
        <function-ref name="clr" scoped="" ref="0x4058dca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x40593a98" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x40593a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40593c70"/>
        <function-ref name="isInput" scoped="" ref="0x40593d50"/>
        <function-ref name="toggle" scoped="" ref="0x40593e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40593f10"/>
        <function-ref name="get" scoped="" ref="0x40592010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405920f0"/>
        <function-ref name="set" scoped="" ref="0x405921d0"/>
        <function-ref name="clr" scoped="" ref="0x405922b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40599c08" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40599c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40599de0"/>
        <function-ref name="isInput" scoped="" ref="0x40599ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40598010"/>
        <function-ref name="isOutput" scoped="" ref="0x405980f0"/>
        <function-ref name="get" scoped="" ref="0x405981d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405982b0"/>
        <function-ref name="set" scoped="" ref="0x40598390"/>
        <function-ref name="clr" scoped="" ref="0x40598470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x405810a0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x405810a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40581278"/>
        <function-ref name="isInput" scoped="" ref="0x40581358"/>
        <function-ref name="toggle" scoped="" ref="0x40581438"/>
        <function-ref name="isOutput" scoped="" ref="0x40581518"/>
        <function-ref name="get" scoped="" ref="0x405815f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405816d8"/>
        <function-ref name="set" scoped="" ref="0x405817b8"/>
        <function-ref name="clr" scoped="" ref="0x40581898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x405804b0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x405804b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40580688"/>
        <function-ref name="isInput" scoped="" ref="0x40580768"/>
        <function-ref name="toggle" scoped="" ref="0x40580848"/>
        <function-ref name="isOutput" scoped="" ref="0x40580928"/>
        <function-ref name="get" scoped="" ref="0x40580a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40580ae8"/>
        <function-ref name="set" scoped="" ref="0x40580bc8"/>
        <function-ref name="clr" scoped="" ref="0x40580ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x40586c08" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x40586c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40586de0"/>
        <function-ref name="isInput" scoped="" ref="0x40586ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40585010"/>
        <function-ref name="isOutput" scoped="" ref="0x405850f0"/>
        <function-ref name="get" scoped="" ref="0x405851d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405852b0"/>
        <function-ref name="set" scoped="" ref="0x40585390"/>
        <function-ref name="clr" scoped="" ref="0x40585470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x4058b2f0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x4058b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058b4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4058b5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4058b688"/>
        <function-ref name="isOutput" scoped="" ref="0x4058b768"/>
        <function-ref name="get" scoped="" ref="0x4058b848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058b928"/>
        <function-ref name="set" scoped="" ref="0x4058ba08"/>
        <function-ref name="clr" scoped="" ref="0x4058bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x405918e0" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x405918e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40591ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40591b98"/>
        <function-ref name="toggle" scoped="" ref="0x40591c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40591d58"/>
        <function-ref name="get" scoped="" ref="0x40591e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40591f18"/>
        <function-ref name="set" scoped="" ref="0x4059c010"/>
        <function-ref name="clr" scoped="" ref="0x4059c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x4057ace8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x4057ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057aec0"/>
        <function-ref name="isInput" scoped="" ref="0x40579010"/>
        <function-ref name="toggle" scoped="" ref="0x405790f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405791d0"/>
        <function-ref name="get" scoped="" ref="0x405792b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40579390"/>
        <function-ref name="set" scoped="" ref="0x40579470"/>
        <function-ref name="clr" scoped="" ref="0x40579550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x4058a2f0" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x4058a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058a548"/>
        <function-ref name="isInput" scoped="" ref="0x4058a628"/>
        <function-ref name="toggle" scoped="" ref="0x4058a708"/>
        <function-ref name="isOutput" scoped="" ref="0x4058a7e8"/>
        <function-ref name="get" scoped="" ref="0x4058a8c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058a9a8"/>
        <function-ref name="set" scoped="" ref="0x4058aa88"/>
        <function-ref name="clr" scoped="" ref="0x4058ab68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x40590a98" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x40590a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40590c70"/>
        <function-ref name="isInput" scoped="" ref="0x40590d50"/>
        <function-ref name="toggle" scoped="" ref="0x40590e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40590f10"/>
        <function-ref name="get" scoped="" ref="0x4058f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058f0f0"/>
        <function-ref name="set" scoped="" ref="0x4058f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4058f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x40597a98" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x40597a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40597c70"/>
        <function-ref name="isInput" scoped="" ref="0x40597d50"/>
        <function-ref name="toggle" scoped="" ref="0x40597e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40597f10"/>
        <function-ref name="get" scoped="" ref="0x405a2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405a20f0"/>
        <function-ref name="set" scoped="" ref="0x405a21d0"/>
        <function-ref name="clr" scoped="" ref="0x405a22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4058fea8" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4058fea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058e208"/>
        <function-ref name="isInput" scoped="" ref="0x4058e2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4058e3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4058e4a8"/>
        <function-ref name="get" scoped="" ref="0x4058e588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058e668"/>
        <function-ref name="set" scoped="" ref="0x4058e748"/>
        <function-ref name="clr" scoped="" ref="0x4058e828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x40594670" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x40594670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40594848"/>
        <function-ref name="isInput" scoped="" ref="0x40594928"/>
        <function-ref name="toggle" scoped="" ref="0x40594a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40594ae8"/>
        <function-ref name="get" scoped="" ref="0x40594bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40594ca8"/>
        <function-ref name="set" scoped="" ref="0x40594d88"/>
        <function-ref name="clr" scoped="" ref="0x40594e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x4059b750" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x4059b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4059b928"/>
        <function-ref name="isInput" scoped="" ref="0x4059ba08"/>
        <function-ref name="toggle" scoped="" ref="0x4059bae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4059bbc8"/>
        <function-ref name="get" scoped="" ref="0x4059bca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4059bd88"/>
        <function-ref name="set" scoped="" ref="0x4059be68"/>
        <function-ref name="clr" scoped="" ref="0x40599010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x4059f010" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x4059f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4059f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4059f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4059f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4059f488"/>
        <function-ref name="get" scoped="" ref="0x4059f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4059f648"/>
        <function-ref name="set" scoped="" ref="0x4059f728"/>
        <function-ref name="clr" scoped="" ref="0x4059f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x40583c08" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x40583c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40583de0"/>
        <function-ref name="isInput" scoped="" ref="0x40583ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40582010"/>
        <function-ref name="isOutput" scoped="" ref="0x405820f0"/>
        <function-ref name="get" scoped="" ref="0x405821d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405822b0"/>
        <function-ref name="set" scoped="" ref="0x40582390"/>
        <function-ref name="clr" scoped="" ref="0x40582470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x405882f0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x405882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405884c8"/>
        <function-ref name="isInput" scoped="" ref="0x405885a8"/>
        <function-ref name="toggle" scoped="" ref="0x40588688"/>
        <function-ref name="isOutput" scoped="" ref="0x40588768"/>
        <function-ref name="get" scoped="" ref="0x40588848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40588928"/>
        <function-ref name="set" scoped="" ref="0x40588a08"/>
        <function-ref name="clr" scoped="" ref="0x40588ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x4059c2f0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x4059c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4059c4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4059c5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4059c688"/>
        <function-ref name="isOutput" scoped="" ref="0x4059c768"/>
        <function-ref name="get" scoped="" ref="0x4059c848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4059c928"/>
        <function-ref name="set" scoped="" ref="0x4059ca08"/>
        <function-ref name="clr" scoped="" ref="0x4059cae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x40587750" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x40587750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40587928"/>
        <function-ref name="isInput" scoped="" ref="0x40587a08"/>
        <function-ref name="toggle" scoped="" ref="0x40587ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40587bc8"/>
        <function-ref name="get" scoped="" ref="0x40587ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40587d88"/>
        <function-ref name="set" scoped="" ref="0x40587e68"/>
        <function-ref name="clr" scoped="" ref="0x40586010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x4058dea8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x4058dea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058c0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4058c1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4058c280"/>
        <function-ref name="isOutput" scoped="" ref="0x4058c360"/>
        <function-ref name="get" scoped="" ref="0x4058c440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058c520"/>
        <function-ref name="set" scoped="" ref="0x4058c600"/>
        <function-ref name="clr" scoped="" ref="0x4058c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x405924b0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x405924b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40592688"/>
        <function-ref name="isInput" scoped="" ref="0x40592768"/>
        <function-ref name="toggle" scoped="" ref="0x40592848"/>
        <function-ref name="isOutput" scoped="" ref="0x40592928"/>
        <function-ref name="get" scoped="" ref="0x40592a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40592ae8"/>
        <function-ref name="set" scoped="" ref="0x40592bc8"/>
        <function-ref name="clr" scoped="" ref="0x40592ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x40598670" loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x40598670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40598848"/>
        <function-ref name="isInput" scoped="" ref="0x40598928"/>
        <function-ref name="toggle" scoped="" ref="0x40598a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40598ae8"/>
        <function-ref name="get" scoped="" ref="0x40598bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40598ca8"/>
        <function-ref name="set" scoped="" ref="0x40598d88"/>
        <function-ref name="clr" scoped="" ref="0x40598e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x4057d8b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x4057d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057da88"/>
        <function-ref name="isInput" scoped="" ref="0x4057db68"/>
        <function-ref name="toggle" scoped="" ref="0x4057dc48"/>
        <function-ref name="isOutput" scoped="" ref="0x4057dd28"/>
        <function-ref name="get" scoped="" ref="0x4057de08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057dee8"/>
        <function-ref name="set" scoped="" ref="0x4057a010"/>
        <function-ref name="clr" scoped="" ref="0x4057a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40580ea8" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40580ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057f0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4057f1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4057f280"/>
        <function-ref name="isOutput" scoped="" ref="0x4057f360"/>
        <function-ref name="get" scoped="" ref="0x4057f440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057f520"/>
        <function-ref name="set" scoped="" ref="0x4057f600"/>
        <function-ref name="clr" scoped="" ref="0x4057f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x40585670" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x40585670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40585848"/>
        <function-ref name="isInput" scoped="" ref="0x40585928"/>
        <function-ref name="toggle" scoped="" ref="0x40585a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40585ae8"/>
        <function-ref name="get" scoped="" ref="0x40585bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40585ca8"/>
        <function-ref name="set" scoped="" ref="0x40585d88"/>
        <function-ref name="clr" scoped="" ref="0x40585e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x4058bce8" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x4058bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058bec0"/>
        <function-ref name="isInput" scoped="" ref="0x40596010"/>
        <function-ref name="toggle" scoped="" ref="0x405960f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405961d0"/>
        <function-ref name="get" scoped="" ref="0x405962b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40596390"/>
        <function-ref name="set" scoped="" ref="0x40596470"/>
        <function-ref name="clr" scoped="" ref="0x40596550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x405a1ab8" loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x405a1ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405a1c90"/>
        <function-ref name="isInput" scoped="" ref="0x405a1d70"/>
        <function-ref name="toggle" scoped="" ref="0x405a1e50"/>
        <function-ref name="isOutput" scoped="" ref="0x405a0010"/>
        <function-ref name="get" scoped="" ref="0x405a00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405a01d0"/>
        <function-ref name="set" scoped="" ref="0x405a02b0"/>
        <function-ref name="clr" scoped="" ref="0x405a0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x40595210" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x40595210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405953e8"/>
        <function-ref name="isInput" scoped="" ref="0x405954c8"/>
        <function-ref name="toggle" scoped="" ref="0x405955a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40595688"/>
        <function-ref name="get" scoped="" ref="0x40595768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40595848"/>
        <function-ref name="set" scoped="" ref="0x40595928"/>
        <function-ref name="clr" scoped="" ref="0x40595a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4058f4b0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4058f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058f688"/>
        <function-ref name="isInput" scoped="" ref="0x4058f768"/>
        <function-ref name="toggle" scoped="" ref="0x4058f848"/>
        <function-ref name="isOutput" scoped="" ref="0x4058f928"/>
        <function-ref name="get" scoped="" ref="0x4058fa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058fae8"/>
        <function-ref name="set" scoped="" ref="0x4058fbc8"/>
        <function-ref name="clr" scoped="" ref="0x4058fca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40579750" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40579750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40579928"/>
        <function-ref name="isInput" scoped="" ref="0x40579a08"/>
        <function-ref name="toggle" scoped="" ref="0x40579ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40579bc8"/>
        <function-ref name="get" scoped="" ref="0x40579ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40579d88"/>
        <function-ref name="set" scoped="" ref="0x40579e68"/>
        <function-ref name="clr" scoped="" ref="0x40583010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x4058ad68" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x4058ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40589010"/>
        <function-ref name="isInput" scoped="" ref="0x405890f0"/>
        <function-ref name="toggle" scoped="" ref="0x405891d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405892b0"/>
        <function-ref name="get" scoped="" ref="0x40589390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40589470"/>
        <function-ref name="set" scoped="" ref="0x40589550"/>
        <function-ref name="clr" scoped="" ref="0x40589630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405cb4f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405cb4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cb6c8"/>
        <function-ref name="isInput" scoped="" ref="0x405cb7a8"/>
        <function-ref name="toggle" scoped="" ref="0x405cb888"/>
        <function-ref name="isOutput" scoped="" ref="0x405cb968"/>
        <function-ref name="get" scoped="" ref="0x405cba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cbb28"/>
        <function-ref name="set" scoped="" ref="0x405cbc08"/>
        <function-ref name="clr" scoped="" ref="0x405cbce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405c9170" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405c9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c9348"/>
        <function-ref name="isInput" scoped="" ref="0x405c9428"/>
        <function-ref name="toggle" scoped="" ref="0x405c9508"/>
        <function-ref name="isOutput" scoped="" ref="0x405c95e8"/>
        <function-ref name="get" scoped="" ref="0x405c96c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c97a8"/>
        <function-ref name="set" scoped="" ref="0x405c9888"/>
        <function-ref name="clr" scoped="" ref="0x405c9968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405cc228" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405cc228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cc400"/>
        <function-ref name="isInput" scoped="" ref="0x405cc4e0"/>
        <function-ref name="toggle" scoped="" ref="0x405cc5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x405cc6a0"/>
        <function-ref name="get" scoped="" ref="0x405cc780"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cc860"/>
        <function-ref name="set" scoped="" ref="0x405cc940"/>
        <function-ref name="clr" scoped="" ref="0x405cca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405cbe48" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405cbe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ca050"/>
        <function-ref name="isInput" scoped="" ref="0x405ca130"/>
        <function-ref name="toggle" scoped="" ref="0x405ca210"/>
        <function-ref name="isOutput" scoped="" ref="0x405ca2f0"/>
        <function-ref name="get" scoped="" ref="0x405ca3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ca4b0"/>
        <function-ref name="set" scoped="" ref="0x405ca590"/>
        <function-ref name="clr" scoped="" ref="0x405ca670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405c9ac8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405c9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c9ca0"/>
        <function-ref name="isInput" scoped="" ref="0x405c9d80"/>
        <function-ref name="toggle" scoped="" ref="0x405c9e60"/>
        <function-ref name="isOutput" scoped="" ref="0x405c8010"/>
        <function-ref name="get" scoped="" ref="0x405c80f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c81d0"/>
        <function-ref name="set" scoped="" ref="0x405c82b0"/>
        <function-ref name="clr" scoped="" ref="0x405c8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405ccb80" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405ccb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ccd58"/>
        <function-ref name="isInput" scoped="" ref="0x405cce38"/>
        <function-ref name="toggle" scoped="" ref="0x405ccf18"/>
        <function-ref name="isOutput" scoped="" ref="0x405cb010"/>
        <function-ref name="get" scoped="" ref="0x405cb0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cb1d0"/>
        <function-ref name="set" scoped="" ref="0x405cb2b0"/>
        <function-ref name="clr" scoped="" ref="0x405cb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405ca7d0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405ca7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ca9a8"/>
        <function-ref name="isInput" scoped="" ref="0x405caa88"/>
        <function-ref name="toggle" scoped="" ref="0x405cab68"/>
        <function-ref name="isOutput" scoped="" ref="0x405cac48"/>
        <function-ref name="get" scoped="" ref="0x405cad28"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cae08"/>
        <function-ref name="set" scoped="" ref="0x405caee8"/>
        <function-ref name="clr" scoped="" ref="0x405c9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405c84f0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405c84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c86c8"/>
        <function-ref name="isInput" scoped="" ref="0x405c87a8"/>
        <function-ref name="toggle" scoped="" ref="0x405c8888"/>
        <function-ref name="isOutput" scoped="" ref="0x405c8968"/>
        <function-ref name="get" scoped="" ref="0x405c8a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c8b28"/>
        <function-ref name="set" scoped="" ref="0x405c8c08"/>
        <function-ref name="clr" scoped="" ref="0x405c8ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416e60f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416e60f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416e62d0"/>
        <function-ref name="isInput" scoped="" ref="0x416e63b0"/>
        <function-ref name="toggle" scoped="" ref="0x416e6490"/>
        <function-ref name="isOutput" scoped="" ref="0x416e6570"/>
        <function-ref name="get" scoped="" ref="0x416e6650"/>
        <function-ref name="makeOutput" scoped="" ref="0x416e6730"/>
        <function-ref name="set" scoped="" ref="0x416e6810"/>
        <function-ref name="clr" scoped="" ref="0x416e68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416e5ac8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416e5ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416e5ca0"/>
        <function-ref name="isInput" scoped="" ref="0x416e5d80"/>
        <function-ref name="toggle" scoped="" ref="0x416e5e60"/>
        <function-ref name="isOutput" scoped="" ref="0x416e4010"/>
        <function-ref name="get" scoped="" ref="0x416e40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x416e41d0"/>
        <function-ref name="set" scoped="" ref="0x416e42b0"/>
        <function-ref name="clr" scoped="" ref="0x416e4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416e3570" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416e3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416e3748"/>
        <function-ref name="isInput" scoped="" ref="0x416e3828"/>
        <function-ref name="toggle" scoped="" ref="0x416e3908"/>
        <function-ref name="isOutput" scoped="" ref="0x416e39e8"/>
        <function-ref name="get" scoped="" ref="0x416e3ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x416e3ba8"/>
        <function-ref name="set" scoped="" ref="0x416e3c88"/>
        <function-ref name="clr" scoped="" ref="0x416e3d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416e1010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416e11e8"/>
        <function-ref name="isInput" scoped="" ref="0x416e12c8"/>
        <function-ref name="toggle" scoped="" ref="0x416e13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x416e1488"/>
        <function-ref name="get" scoped="" ref="0x416e1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x416e1648"/>
        <function-ref name="set" scoped="" ref="0x416e1728"/>
        <function-ref name="clr" scoped="" ref="0x416e1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416df9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416df9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416dfbc0"/>
        <function-ref name="isInput" scoped="" ref="0x416dfca0"/>
        <function-ref name="toggle" scoped="" ref="0x416dfd80"/>
        <function-ref name="isOutput" scoped="" ref="0x416dfe60"/>
        <function-ref name="get" scoped="" ref="0x416de010"/>
        <function-ref name="makeOutput" scoped="" ref="0x416de0f0"/>
        <function-ref name="set" scoped="" ref="0x416de1d0"/>
        <function-ref name="clr" scoped="" ref="0x416de2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416dd538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416dd538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416dd710"/>
        <function-ref name="isInput" scoped="" ref="0x416dd7f0"/>
        <function-ref name="toggle" scoped="" ref="0x416dd8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416dd9b0"/>
        <function-ref name="get" scoped="" ref="0x416dda90"/>
        <function-ref name="makeOutput" scoped="" ref="0x416ddb70"/>
        <function-ref name="set" scoped="" ref="0x416ddc50"/>
        <function-ref name="clr" scoped="" ref="0x416ddd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416db010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416db010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416db1e8"/>
        <function-ref name="isInput" scoped="" ref="0x416db2c8"/>
        <function-ref name="toggle" scoped="" ref="0x416db3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x416db488"/>
        <function-ref name="get" scoped="" ref="0x416db568"/>
        <function-ref name="makeOutput" scoped="" ref="0x416db648"/>
        <function-ref name="set" scoped="" ref="0x416db728"/>
        <function-ref name="clr" scoped="" ref="0x416db808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416da9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416da9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416dabc0"/>
        <function-ref name="isInput" scoped="" ref="0x416daca0"/>
        <function-ref name="toggle" scoped="" ref="0x416dad80"/>
        <function-ref name="isOutput" scoped="" ref="0x416dae60"/>
        <function-ref name="get" scoped="" ref="0x416d9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x416d90f0"/>
        <function-ref name="set" scoped="" ref="0x416d91d0"/>
        <function-ref name="clr" scoped="" ref="0x416d92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405d1e48" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405d1e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d0050"/>
        <function-ref name="isInput" scoped="" ref="0x405d0130"/>
        <function-ref name="toggle" scoped="" ref="0x405d0210"/>
        <function-ref name="isOutput" scoped="" ref="0x405d02f0"/>
        <function-ref name="get" scoped="" ref="0x405d03d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d04b0"/>
        <function-ref name="set" scoped="" ref="0x405d0590"/>
        <function-ref name="clr" scoped="" ref="0x405d0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405cfac8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405cfac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cfca0"/>
        <function-ref name="isInput" scoped="" ref="0x405cfd80"/>
        <function-ref name="toggle" scoped="" ref="0x405cfe60"/>
        <function-ref name="isOutput" scoped="" ref="0x405ce010"/>
        <function-ref name="get" scoped="" ref="0x405ce0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ce1d0"/>
        <function-ref name="set" scoped="" ref="0x405ce2b0"/>
        <function-ref name="clr" scoped="" ref="0x405ce390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405d3b00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405d3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d3cd8"/>
        <function-ref name="isInput" scoped="" ref="0x405d3db8"/>
        <function-ref name="toggle" scoped="" ref="0x405d3e98"/>
        <function-ref name="isOutput" scoped="" ref="0x405d1010"/>
        <function-ref name="get" scoped="" ref="0x405d10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d11d0"/>
        <function-ref name="set" scoped="" ref="0x405d12b0"/>
        <function-ref name="clr" scoped="" ref="0x405d1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405d07d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405d07d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d09a8"/>
        <function-ref name="isInput" scoped="" ref="0x405d0a88"/>
        <function-ref name="toggle" scoped="" ref="0x405d0b68"/>
        <function-ref name="isOutput" scoped="" ref="0x405d0c48"/>
        <function-ref name="get" scoped="" ref="0x405d0d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d0e08"/>
        <function-ref name="set" scoped="" ref="0x405d0ee8"/>
        <function-ref name="clr" scoped="" ref="0x405cf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405ce4f0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405ce4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ce6c8"/>
        <function-ref name="isInput" scoped="" ref="0x405ce7a8"/>
        <function-ref name="toggle" scoped="" ref="0x405ce888"/>
        <function-ref name="isOutput" scoped="" ref="0x405ce968"/>
        <function-ref name="get" scoped="" ref="0x405cea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ceb28"/>
        <function-ref name="set" scoped="" ref="0x405cec08"/>
        <function-ref name="clr" scoped="" ref="0x405cece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405d14f0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405d14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d16c8"/>
        <function-ref name="isInput" scoped="" ref="0x405d17a8"/>
        <function-ref name="toggle" scoped="" ref="0x405d1888"/>
        <function-ref name="isOutput" scoped="" ref="0x405d1968"/>
        <function-ref name="get" scoped="" ref="0x405d1a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d1b28"/>
        <function-ref name="set" scoped="" ref="0x405d1c08"/>
        <function-ref name="clr" scoped="" ref="0x405d1ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405cf170" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405cf170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cf348"/>
        <function-ref name="isInput" scoped="" ref="0x405cf428"/>
        <function-ref name="toggle" scoped="" ref="0x405cf508"/>
        <function-ref name="isOutput" scoped="" ref="0x405cf5e8"/>
        <function-ref name="get" scoped="" ref="0x405cf6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cf7a8"/>
        <function-ref name="set" scoped="" ref="0x405cf888"/>
        <function-ref name="clr" scoped="" ref="0x405cf968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405cee48" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405cee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405db050"/>
        <function-ref name="isInput" scoped="" ref="0x405db130"/>
        <function-ref name="toggle" scoped="" ref="0x405db210"/>
        <function-ref name="isOutput" scoped="" ref="0x405db2f0"/>
        <function-ref name="get" scoped="" ref="0x405db3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405db4b0"/>
        <function-ref name="set" scoped="" ref="0x405db590"/>
        <function-ref name="clr" scoped="" ref="0x405db670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41703de8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41703de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416ff010"/>
        <function-ref name="isInput" scoped="" ref="0x416ff0f0"/>
        <function-ref name="toggle" scoped="" ref="0x416ff1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416ff2b0"/>
        <function-ref name="get" scoped="" ref="0x416ff390"/>
        <function-ref name="makeOutput" scoped="" ref="0x416ff470"/>
        <function-ref name="set" scoped="" ref="0x416ff550"/>
        <function-ref name="clr" scoped="" ref="0x416ff630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416fe7f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416fe7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416fe9d0"/>
        <function-ref name="isInput" scoped="" ref="0x416feab0"/>
        <function-ref name="toggle" scoped="" ref="0x416feb90"/>
        <function-ref name="isOutput" scoped="" ref="0x416fec70"/>
        <function-ref name="get" scoped="" ref="0x416fed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x416fee30"/>
        <function-ref name="set" scoped="" ref="0x416fef10"/>
        <function-ref name="clr" scoped="" ref="0x416fd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416fc228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416fc228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416fc400"/>
        <function-ref name="isInput" scoped="" ref="0x416fc4e0"/>
        <function-ref name="toggle" scoped="" ref="0x416fc5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x416fc6a0"/>
        <function-ref name="get" scoped="" ref="0x416fc780"/>
        <function-ref name="makeOutput" scoped="" ref="0x416fc860"/>
        <function-ref name="set" scoped="" ref="0x416fc940"/>
        <function-ref name="clr" scoped="" ref="0x416fca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416fbc08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416fbc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416fbde0"/>
        <function-ref name="isInput" scoped="" ref="0x416fbec0"/>
        <function-ref name="toggle" scoped="" ref="0x416fa010"/>
        <function-ref name="isOutput" scoped="" ref="0x416fa0f0"/>
        <function-ref name="get" scoped="" ref="0x416fa1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x416fa2b0"/>
        <function-ref name="set" scoped="" ref="0x416fa390"/>
        <function-ref name="clr" scoped="" ref="0x416fa470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416f96c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416f96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416f9898"/>
        <function-ref name="isInput" scoped="" ref="0x416f9978"/>
        <function-ref name="toggle" scoped="" ref="0x416f9a58"/>
        <function-ref name="isOutput" scoped="" ref="0x416f9b38"/>
        <function-ref name="get" scoped="" ref="0x416f9c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x416f9cf8"/>
        <function-ref name="set" scoped="" ref="0x416f9dd8"/>
        <function-ref name="clr" scoped="" ref="0x416f9eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416f70b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416f70b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416f7288"/>
        <function-ref name="isInput" scoped="" ref="0x416f7368"/>
        <function-ref name="toggle" scoped="" ref="0x416f7448"/>
        <function-ref name="isOutput" scoped="" ref="0x416f7528"/>
        <function-ref name="get" scoped="" ref="0x416f7608"/>
        <function-ref name="makeOutput" scoped="" ref="0x416f76e8"/>
        <function-ref name="set" scoped="" ref="0x416f77c8"/>
        <function-ref name="clr" scoped="" ref="0x416f78a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416f6a88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416f6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416f6c60"/>
        <function-ref name="isInput" scoped="" ref="0x416f6d40"/>
        <function-ref name="toggle" scoped="" ref="0x416f6e20"/>
        <function-ref name="isOutput" scoped="" ref="0x416f6f00"/>
        <function-ref name="get" scoped="" ref="0x416f5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x416f50f0"/>
        <function-ref name="set" scoped="" ref="0x416f51d0"/>
        <function-ref name="clr" scoped="" ref="0x416f52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416f4538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416f4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416f4710"/>
        <function-ref name="isInput" scoped="" ref="0x416f47f0"/>
        <function-ref name="toggle" scoped="" ref="0x416f48d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416f49b0"/>
        <function-ref name="get" scoped="" ref="0x416f4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x416f4b70"/>
        <function-ref name="set" scoped="" ref="0x416f4c50"/>
        <function-ref name="clr" scoped="" ref="0x416f4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405d76b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405d76b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d7888"/>
        <function-ref name="isInput" scoped="" ref="0x405d7968"/>
        <function-ref name="toggle" scoped="" ref="0x405d7a48"/>
        <function-ref name="isOutput" scoped="" ref="0x405d7b28"/>
        <function-ref name="get" scoped="" ref="0x405d7c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d7ce8"/>
        <function-ref name="set" scoped="" ref="0x405d7dc8"/>
        <function-ref name="clr" scoped="" ref="0x405d7ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405d5330" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405d5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d5508"/>
        <function-ref name="isInput" scoped="" ref="0x405d55e8"/>
        <function-ref name="toggle" scoped="" ref="0x405d56c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405d57a8"/>
        <function-ref name="get" scoped="" ref="0x405d5888"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d5968"/>
        <function-ref name="set" scoped="" ref="0x405d5a48"/>
        <function-ref name="clr" scoped="" ref="0x405d5b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405d83d8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405d83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d85b0"/>
        <function-ref name="isInput" scoped="" ref="0x405d8690"/>
        <function-ref name="toggle" scoped="" ref="0x405d8770"/>
        <function-ref name="isOutput" scoped="" ref="0x405d8850"/>
        <function-ref name="get" scoped="" ref="0x405d8930"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d8a10"/>
        <function-ref name="set" scoped="" ref="0x405d8af0"/>
        <function-ref name="clr" scoped="" ref="0x405d8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405d6030" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405d6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d6208"/>
        <function-ref name="isInput" scoped="" ref="0x405d62e8"/>
        <function-ref name="toggle" scoped="" ref="0x405d63c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405d64a8"/>
        <function-ref name="get" scoped="" ref="0x405d6588"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d6668"/>
        <function-ref name="set" scoped="" ref="0x405d6748"/>
        <function-ref name="clr" scoped="" ref="0x405d6828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405d5c88" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405d5c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d5e60"/>
        <function-ref name="isInput" scoped="" ref="0x405e1010"/>
        <function-ref name="toggle" scoped="" ref="0x405e10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405e11d0"/>
        <function-ref name="get" scoped="" ref="0x405e12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e1390"/>
        <function-ref name="set" scoped="" ref="0x405e1470"/>
        <function-ref name="clr" scoped="" ref="0x405e1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405d8d30" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405d8d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d8f08"/>
        <function-ref name="isInput" scoped="" ref="0x405d7010"/>
        <function-ref name="toggle" scoped="" ref="0x405d70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405d71d0"/>
        <function-ref name="get" scoped="" ref="0x405d72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d7390"/>
        <function-ref name="set" scoped="" ref="0x405d7470"/>
        <function-ref name="clr" scoped="" ref="0x405d7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405d6988" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405d6988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d6b60"/>
        <function-ref name="isInput" scoped="" ref="0x405d6c40"/>
        <function-ref name="toggle" scoped="" ref="0x405d6d20"/>
        <function-ref name="isOutput" scoped="" ref="0x405d6e00"/>
        <function-ref name="get" scoped="" ref="0x405d6ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d5010"/>
        <function-ref name="set" scoped="" ref="0x405d50f0"/>
        <function-ref name="clr" scoped="" ref="0x405d51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405e16b0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405e16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e1888"/>
        <function-ref name="isInput" scoped="" ref="0x405e1968"/>
        <function-ref name="toggle" scoped="" ref="0x405e1a48"/>
        <function-ref name="isOutput" scoped="" ref="0x405e1b28"/>
        <function-ref name="get" scoped="" ref="0x405e1c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e1ce8"/>
        <function-ref name="set" scoped="" ref="0x405e1dc8"/>
        <function-ref name="clr" scoped="" ref="0x405e1ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4176c938" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4176c938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4176cb10"/>
        <function-ref name="isInput" scoped="" ref="0x4176cbf0"/>
        <function-ref name="toggle" scoped="" ref="0x4176ccd0"/>
        <function-ref name="isOutput" scoped="" ref="0x4176cdb0"/>
        <function-ref name="get" scoped="" ref="0x4176ce90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4176b010"/>
        <function-ref name="set" scoped="" ref="0x4176b0f0"/>
        <function-ref name="clr" scoped="" ref="0x4176b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4176a3b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4176a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4176a588"/>
        <function-ref name="isInput" scoped="" ref="0x4176a668"/>
        <function-ref name="toggle" scoped="" ref="0x4176a748"/>
        <function-ref name="isOutput" scoped="" ref="0x4176a828"/>
        <function-ref name="get" scoped="" ref="0x4176a908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4176a9e8"/>
        <function-ref name="set" scoped="" ref="0x4176aac8"/>
        <function-ref name="clr" scoped="" ref="0x4176aba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41768d70" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41768d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41767010"/>
        <function-ref name="isInput" scoped="" ref="0x417670f0"/>
        <function-ref name="toggle" scoped="" ref="0x417671d0"/>
        <function-ref name="isOutput" scoped="" ref="0x417672b0"/>
        <function-ref name="get" scoped="" ref="0x41767390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41767470"/>
        <function-ref name="set" scoped="" ref="0x41767550"/>
        <function-ref name="clr" scoped="" ref="0x41767630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x417667f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x417667f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x417669d0"/>
        <function-ref name="isInput" scoped="" ref="0x41766ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41766b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41766c70"/>
        <function-ref name="get" scoped="" ref="0x41766d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41766e30"/>
        <function-ref name="set" scoped="" ref="0x41766f10"/>
        <function-ref name="clr" scoped="" ref="0x41765010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41764228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41764228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41764400"/>
        <function-ref name="isInput" scoped="" ref="0x417644e0"/>
        <function-ref name="toggle" scoped="" ref="0x417645c0"/>
        <function-ref name="isOutput" scoped="" ref="0x417646a0"/>
        <function-ref name="get" scoped="" ref="0x41764780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41764860"/>
        <function-ref name="set" scoped="" ref="0x41764940"/>
        <function-ref name="clr" scoped="" ref="0x41764a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41763c08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41763c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41763de0"/>
        <function-ref name="isInput" scoped="" ref="0x41763ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41762010"/>
        <function-ref name="isOutput" scoped="" ref="0x417620f0"/>
        <function-ref name="get" scoped="" ref="0x417621d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x417622b0"/>
        <function-ref name="set" scoped="" ref="0x41762390"/>
        <function-ref name="clr" scoped="" ref="0x41762470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x417616c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x417616c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41761898"/>
        <function-ref name="isInput" scoped="" ref="0x41761978"/>
        <function-ref name="toggle" scoped="" ref="0x41761a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41761b38"/>
        <function-ref name="get" scoped="" ref="0x41761c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41761cf8"/>
        <function-ref name="set" scoped="" ref="0x41761dd8"/>
        <function-ref name="clr" scoped="" ref="0x41761eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4175f0b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4175f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4175f288"/>
        <function-ref name="isInput" scoped="" ref="0x4175f368"/>
        <function-ref name="toggle" scoped="" ref="0x4175f448"/>
        <function-ref name="isOutput" scoped="" ref="0x4175f528"/>
        <function-ref name="get" scoped="" ref="0x4175f608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4175f6e8"/>
        <function-ref name="set" scoped="" ref="0x4175f7c8"/>
        <function-ref name="clr" scoped="" ref="0x4175f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405dc170" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405dc170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dc348"/>
        <function-ref name="isInput" scoped="" ref="0x405dc428"/>
        <function-ref name="toggle" scoped="" ref="0x405dc508"/>
        <function-ref name="isOutput" scoped="" ref="0x405dc5e8"/>
        <function-ref name="get" scoped="" ref="0x405dc6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dc7a8"/>
        <function-ref name="set" scoped="" ref="0x405dc888"/>
        <function-ref name="clr" scoped="" ref="0x405dc968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405e9e48" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405e9e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e8050"/>
        <function-ref name="isInput" scoped="" ref="0x405e8130"/>
        <function-ref name="toggle" scoped="" ref="0x405e8210"/>
        <function-ref name="isOutput" scoped="" ref="0x405e82f0"/>
        <function-ref name="get" scoped="" ref="0x405e83d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e84b0"/>
        <function-ref name="set" scoped="" ref="0x405e8590"/>
        <function-ref name="clr" scoped="" ref="0x405e8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405dedc8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405dedc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dd010"/>
        <function-ref name="isInput" scoped="" ref="0x405dd0f0"/>
        <function-ref name="toggle" scoped="" ref="0x405dd1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405dd2b0"/>
        <function-ref name="get" scoped="" ref="0x405dd390"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dd470"/>
        <function-ref name="set" scoped="" ref="0x405dd550"/>
        <function-ref name="clr" scoped="" ref="0x405dd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405dcac8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405dcac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dcca0"/>
        <function-ref name="isInput" scoped="" ref="0x405dcd80"/>
        <function-ref name="toggle" scoped="" ref="0x405dce60"/>
        <function-ref name="isOutput" scoped="" ref="0x405e9010"/>
        <function-ref name="get" scoped="" ref="0x405e90f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e91d0"/>
        <function-ref name="set" scoped="" ref="0x405e92b0"/>
        <function-ref name="clr" scoped="" ref="0x405e9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405e87d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405e87d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e89a8"/>
        <function-ref name="isInput" scoped="" ref="0x405e8a88"/>
        <function-ref name="toggle" scoped="" ref="0x405e8b68"/>
        <function-ref name="isOutput" scoped="" ref="0x405e8c48"/>
        <function-ref name="get" scoped="" ref="0x405e8d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e8e08"/>
        <function-ref name="set" scoped="" ref="0x405e8ee8"/>
        <function-ref name="clr" scoped="" ref="0x405e7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405dd790" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405dd790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dd968"/>
        <function-ref name="isInput" scoped="" ref="0x405dda48"/>
        <function-ref name="toggle" scoped="" ref="0x405ddb28"/>
        <function-ref name="isOutput" scoped="" ref="0x405ddc08"/>
        <function-ref name="get" scoped="" ref="0x405ddce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dddc8"/>
        <function-ref name="set" scoped="" ref="0x405ddea8"/>
        <function-ref name="clr" scoped="" ref="0x405dc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405e94f0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405e94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e96c8"/>
        <function-ref name="isInput" scoped="" ref="0x405e97a8"/>
        <function-ref name="toggle" scoped="" ref="0x405e9888"/>
        <function-ref name="isOutput" scoped="" ref="0x405e9968"/>
        <function-ref name="get" scoped="" ref="0x405e9a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e9b28"/>
        <function-ref name="set" scoped="" ref="0x405e9c08"/>
        <function-ref name="clr" scoped="" ref="0x405e9ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405e7170" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405e7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e7348"/>
        <function-ref name="isInput" scoped="" ref="0x405e7428"/>
        <function-ref name="toggle" scoped="" ref="0x405e7508"/>
        <function-ref name="isOutput" scoped="" ref="0x405e75e8"/>
        <function-ref name="get" scoped="" ref="0x405e76c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e77a8"/>
        <function-ref name="set" scoped="" ref="0x405e7888"/>
        <function-ref name="clr" scoped="" ref="0x405e7968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41786538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41786538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41786710"/>
        <function-ref name="isInput" scoped="" ref="0x417867f0"/>
        <function-ref name="toggle" scoped="" ref="0x417868d0"/>
        <function-ref name="isOutput" scoped="" ref="0x417869b0"/>
        <function-ref name="get" scoped="" ref="0x41786a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41786b70"/>
        <function-ref name="set" scoped="" ref="0x41786c50"/>
        <function-ref name="clr" scoped="" ref="0x41786d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41784010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41784010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x417841e8"/>
        <function-ref name="isInput" scoped="" ref="0x417842c8"/>
        <function-ref name="toggle" scoped="" ref="0x417843a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41784488"/>
        <function-ref name="get" scoped="" ref="0x41784568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41784648"/>
        <function-ref name="set" scoped="" ref="0x41784728"/>
        <function-ref name="clr" scoped="" ref="0x41784808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x417839e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x417839e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41783bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41783ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41783d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41783e60"/>
        <function-ref name="get" scoped="" ref="0x41782010"/>
        <function-ref name="makeOutput" scoped="" ref="0x417820f0"/>
        <function-ref name="set" scoped="" ref="0x417821d0"/>
        <function-ref name="clr" scoped="" ref="0x417822b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41781538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41781538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41781710"/>
        <function-ref name="isInput" scoped="" ref="0x417817f0"/>
        <function-ref name="toggle" scoped="" ref="0x417818d0"/>
        <function-ref name="isOutput" scoped="" ref="0x417819b0"/>
        <function-ref name="get" scoped="" ref="0x41781a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41781b70"/>
        <function-ref name="set" scoped="" ref="0x41781c50"/>
        <function-ref name="clr" scoped="" ref="0x41781d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4177f010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4177f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4177f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4177f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4177f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4177f488"/>
        <function-ref name="get" scoped="" ref="0x4177f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4177f648"/>
        <function-ref name="set" scoped="" ref="0x4177f728"/>
        <function-ref name="clr" scoped="" ref="0x4177f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4177e9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4177e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4177ebc0"/>
        <function-ref name="isInput" scoped="" ref="0x4177eca0"/>
        <function-ref name="toggle" scoped="" ref="0x4177ed80"/>
        <function-ref name="isOutput" scoped="" ref="0x4177ee60"/>
        <function-ref name="get" scoped="" ref="0x4177d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4177d0f0"/>
        <function-ref name="set" scoped="" ref="0x4177d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4177d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4177c538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4177c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4177c710"/>
        <function-ref name="isInput" scoped="" ref="0x4177c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4177c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4177c9b0"/>
        <function-ref name="get" scoped="" ref="0x4177ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4177cb70"/>
        <function-ref name="set" scoped="" ref="0x4177cc50"/>
        <function-ref name="clr" scoped="" ref="0x4177cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4177a010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4177a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4177a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4177a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4177a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4177a488"/>
        <function-ref name="get" scoped="" ref="0x4177a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4177a648"/>
        <function-ref name="set" scoped="" ref="0x4177a728"/>
        <function-ref name="clr" scoped="" ref="0x4177a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405f09e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405f09e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f0bc0"/>
        <function-ref name="isInput" scoped="" ref="0x405f0ca0"/>
        <function-ref name="toggle" scoped="" ref="0x405f0d80"/>
        <function-ref name="isOutput" scoped="" ref="0x405f0e60"/>
        <function-ref name="get" scoped="" ref="0x405ef010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ef0f0"/>
        <function-ref name="set" scoped="" ref="0x405ef1d0"/>
        <function-ref name="clr" scoped="" ref="0x405ef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405ee790" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405ee790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ee968"/>
        <function-ref name="isInput" scoped="" ref="0x405eea48"/>
        <function-ref name="toggle" scoped="" ref="0x405eeb28"/>
        <function-ref name="isOutput" scoped="" ref="0x405eec08"/>
        <function-ref name="get" scoped="" ref="0x405eece8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405eedc8"/>
        <function-ref name="set" scoped="" ref="0x405eeea8"/>
        <function-ref name="clr" scoped="" ref="0x405ed010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405e36f8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405e36f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e38d0"/>
        <function-ref name="isInput" scoped="" ref="0x405e39b0"/>
        <function-ref name="toggle" scoped="" ref="0x405e3a90"/>
        <function-ref name="isOutput" scoped="" ref="0x405e3b70"/>
        <function-ref name="get" scoped="" ref="0x405e3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e3d30"/>
        <function-ref name="set" scoped="" ref="0x405e3e10"/>
        <function-ref name="clr" scoped="" ref="0x405e3ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405ef410" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405ef410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ef5e8"/>
        <function-ref name="isInput" scoped="" ref="0x405ef6c8"/>
        <function-ref name="toggle" scoped="" ref="0x405ef7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405ef888"/>
        <function-ref name="get" scoped="" ref="0x405ef968"/>
        <function-ref name="makeOutput" scoped="" ref="0x405efa48"/>
        <function-ref name="set" scoped="" ref="0x405efb28"/>
        <function-ref name="clr" scoped="" ref="0x405efc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405ed170" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405ed170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ed348"/>
        <function-ref name="isInput" scoped="" ref="0x405ed428"/>
        <function-ref name="toggle" scoped="" ref="0x405ed508"/>
        <function-ref name="isOutput" scoped="" ref="0x405ed5e8"/>
        <function-ref name="get" scoped="" ref="0x405ed6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ed7a8"/>
        <function-ref name="set" scoped="" ref="0x405ed888"/>
        <function-ref name="clr" scoped="" ref="0x405ed968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405f0090" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405f0090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f0268"/>
        <function-ref name="isInput" scoped="" ref="0x405f0348"/>
        <function-ref name="toggle" scoped="" ref="0x405f0428"/>
        <function-ref name="isOutput" scoped="" ref="0x405f0508"/>
        <function-ref name="get" scoped="" ref="0x405f05e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f06c8"/>
        <function-ref name="set" scoped="" ref="0x405f07a8"/>
        <function-ref name="clr" scoped="" ref="0x405f0888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405efd68" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405efd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ee010"/>
        <function-ref name="isInput" scoped="" ref="0x405ee0f0"/>
        <function-ref name="toggle" scoped="" ref="0x405ee1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405ee2b0"/>
        <function-ref name="get" scoped="" ref="0x405ee390"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ee470"/>
        <function-ref name="set" scoped="" ref="0x405ee550"/>
        <function-ref name="clr" scoped="" ref="0x405ee630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405edac8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405edac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405edca0"/>
        <function-ref name="isInput" scoped="" ref="0x405edd80"/>
        <function-ref name="toggle" scoped="" ref="0x405ede60"/>
        <function-ref name="isOutput" scoped="" ref="0x405ec010"/>
        <function-ref name="get" scoped="" ref="0x405ec0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ec1d0"/>
        <function-ref name="set" scoped="" ref="0x405ec2b0"/>
        <function-ref name="clr" scoped="" ref="0x405ec390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x417a2418" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x417a2418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x417a25f0"/>
        <function-ref name="isInput" scoped="" ref="0x417a26d0"/>
        <function-ref name="toggle" scoped="" ref="0x417a27b0"/>
        <function-ref name="isOutput" scoped="" ref="0x417a2890"/>
        <function-ref name="get" scoped="" ref="0x417a2970"/>
        <function-ref name="makeOutput" scoped="" ref="0x417a2a50"/>
        <function-ref name="set" scoped="" ref="0x417a2b30"/>
        <function-ref name="clr" scoped="" ref="0x417a2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x417a0de0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x417a0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4179f010"/>
        <function-ref name="isInput" scoped="" ref="0x4179f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4179f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4179f2b0"/>
        <function-ref name="get" scoped="" ref="0x4179f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4179f470"/>
        <function-ref name="set" scoped="" ref="0x4179f550"/>
        <function-ref name="clr" scoped="" ref="0x4179f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4179e7f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4179e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4179e9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4179eab0"/>
        <function-ref name="toggle" scoped="" ref="0x4179eb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4179ec70"/>
        <function-ref name="get" scoped="" ref="0x4179ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4179ee30"/>
        <function-ref name="set" scoped="" ref="0x4179ef10"/>
        <function-ref name="clr" scoped="" ref="0x4179d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4179c228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4179c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4179c400"/>
        <function-ref name="isInput" scoped="" ref="0x4179c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4179c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4179c6a0"/>
        <function-ref name="get" scoped="" ref="0x4179c780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4179c860"/>
        <function-ref name="set" scoped="" ref="0x4179c940"/>
        <function-ref name="clr" scoped="" ref="0x4179ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4179bc08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4179bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4179bde0"/>
        <function-ref name="isInput" scoped="" ref="0x4179bec0"/>
        <function-ref name="toggle" scoped="" ref="0x4179a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4179a0f0"/>
        <function-ref name="get" scoped="" ref="0x4179a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4179a2b0"/>
        <function-ref name="set" scoped="" ref="0x4179a390"/>
        <function-ref name="clr" scoped="" ref="0x4179a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x417996c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x417996c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41799898"/>
        <function-ref name="isInput" scoped="" ref="0x41799978"/>
        <function-ref name="toggle" scoped="" ref="0x41799a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41799b38"/>
        <function-ref name="get" scoped="" ref="0x41799c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41799cf8"/>
        <function-ref name="set" scoped="" ref="0x41799dd8"/>
        <function-ref name="clr" scoped="" ref="0x41799eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x417970b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x417970b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41797288"/>
        <function-ref name="isInput" scoped="" ref="0x41797368"/>
        <function-ref name="toggle" scoped="" ref="0x41797448"/>
        <function-ref name="isOutput" scoped="" ref="0x41797528"/>
        <function-ref name="get" scoped="" ref="0x41797608"/>
        <function-ref name="makeOutput" scoped="" ref="0x417976e8"/>
        <function-ref name="set" scoped="" ref="0x417977c8"/>
        <function-ref name="clr" scoped="" ref="0x417978a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x417eaa88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x417eaa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x417eac60"/>
        <function-ref name="isInput" scoped="" ref="0x417ead40"/>
        <function-ref name="toggle" scoped="" ref="0x417eae20"/>
        <function-ref name="isOutput" scoped="" ref="0x417eaf00"/>
        <function-ref name="get" scoped="" ref="0x417e9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x417e90f0"/>
        <function-ref name="set" scoped="" ref="0x417e91d0"/>
        <function-ref name="clr" scoped="" ref="0x417e92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405f5330" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405f5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f5508"/>
        <function-ref name="isInput" scoped="" ref="0x405f55e8"/>
        <function-ref name="toggle" scoped="" ref="0x405f56c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405f57a8"/>
        <function-ref name="get" scoped="" ref="0x405f5888"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f5968"/>
        <function-ref name="set" scoped="" ref="0x405f5a48"/>
        <function-ref name="clr" scoped="" ref="0x405f5b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405f3030" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405f3030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f3208"/>
        <function-ref name="isInput" scoped="" ref="0x405f32e8"/>
        <function-ref name="toggle" scoped="" ref="0x405f33c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405f34a8"/>
        <function-ref name="get" scoped="" ref="0x405f3588"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f3668"/>
        <function-ref name="set" scoped="" ref="0x405f3748"/>
        <function-ref name="clr" scoped="" ref="0x405f3828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405f7010" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f71e8"/>
        <function-ref name="isInput" scoped="" ref="0x405f72c8"/>
        <function-ref name="toggle" scoped="" ref="0x405f73a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405f7488"/>
        <function-ref name="get" scoped="" ref="0x405f7568"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f7648"/>
        <function-ref name="set" scoped="" ref="0x405f7728"/>
        <function-ref name="clr" scoped="" ref="0x405f7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405f5c88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405f5c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f5e60"/>
        <function-ref name="isInput" scoped="" ref="0x405f4010"/>
        <function-ref name="toggle" scoped="" ref="0x405f40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405f41d0"/>
        <function-ref name="get" scoped="" ref="0x405f42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f4390"/>
        <function-ref name="set" scoped="" ref="0x405f4470"/>
        <function-ref name="clr" scoped="" ref="0x405f4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405f3988" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405f3988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f3b60"/>
        <function-ref name="isInput" scoped="" ref="0x405f3c40"/>
        <function-ref name="toggle" scoped="" ref="0x405f3d20"/>
        <function-ref name="isOutput" scoped="" ref="0x405f3e00"/>
        <function-ref name="get" scoped="" ref="0x405f3ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f2010"/>
        <function-ref name="set" scoped="" ref="0x405f20f0"/>
        <function-ref name="clr" scoped="" ref="0x405f21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405f7968" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405f7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f7b40"/>
        <function-ref name="isInput" scoped="" ref="0x405f7c20"/>
        <function-ref name="toggle" scoped="" ref="0x405f7d00"/>
        <function-ref name="isOutput" scoped="" ref="0x405f7de0"/>
        <function-ref name="get" scoped="" ref="0x405f7ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f5010"/>
        <function-ref name="set" scoped="" ref="0x405f50f0"/>
        <function-ref name="clr" scoped="" ref="0x405f51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405f46b0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405f46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f4888"/>
        <function-ref name="isInput" scoped="" ref="0x405f4968"/>
        <function-ref name="toggle" scoped="" ref="0x405f4a48"/>
        <function-ref name="isOutput" scoped="" ref="0x405f4b28"/>
        <function-ref name="get" scoped="" ref="0x405f4c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f4ce8"/>
        <function-ref name="set" scoped="" ref="0x405f4dc8"/>
        <function-ref name="clr" scoped="" ref="0x405f4ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405f2330" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405f2330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f2508"/>
        <function-ref name="isInput" scoped="" ref="0x405f25e8"/>
        <function-ref name="toggle" scoped="" ref="0x405f26c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405f27a8"/>
        <function-ref name="get" scoped="" ref="0x405f2888"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f2968"/>
        <function-ref name="set" scoped="" ref="0x405f2a48"/>
        <function-ref name="clr" scoped="" ref="0x405f2b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x417c1de8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x417c1de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41812010"/>
        <function-ref name="isInput" scoped="" ref="0x418120f0"/>
        <function-ref name="toggle" scoped="" ref="0x418121d0"/>
        <function-ref name="isOutput" scoped="" ref="0x418122b0"/>
        <function-ref name="get" scoped="" ref="0x41812390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41812470"/>
        <function-ref name="set" scoped="" ref="0x41812550"/>
        <function-ref name="clr" scoped="" ref="0x41812630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x418117f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x418117f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x418119d0"/>
        <function-ref name="isInput" scoped="" ref="0x41811ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41811b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41811c70"/>
        <function-ref name="get" scoped="" ref="0x41811d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41811e30"/>
        <function-ref name="set" scoped="" ref="0x41811f10"/>
        <function-ref name="clr" scoped="" ref="0x41810010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4180f228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4180f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4180f400"/>
        <function-ref name="isInput" scoped="" ref="0x4180f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4180f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4180f6a0"/>
        <function-ref name="get" scoped="" ref="0x4180f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4180f860"/>
        <function-ref name="set" scoped="" ref="0x4180f940"/>
        <function-ref name="clr" scoped="" ref="0x4180fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4180ec08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4180ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4180ede0"/>
        <function-ref name="isInput" scoped="" ref="0x4180eec0"/>
        <function-ref name="toggle" scoped="" ref="0x4180d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4180d0f0"/>
        <function-ref name="get" scoped="" ref="0x4180d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4180d2b0"/>
        <function-ref name="set" scoped="" ref="0x4180d390"/>
        <function-ref name="clr" scoped="" ref="0x4180d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4180c6c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4180c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4180c898"/>
        <function-ref name="isInput" scoped="" ref="0x4180c978"/>
        <function-ref name="toggle" scoped="" ref="0x4180ca58"/>
        <function-ref name="isOutput" scoped="" ref="0x4180cb38"/>
        <function-ref name="get" scoped="" ref="0x4180cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4180ccf8"/>
        <function-ref name="set" scoped="" ref="0x4180cdd8"/>
        <function-ref name="clr" scoped="" ref="0x4180ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4180a0b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4180a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4180a288"/>
        <function-ref name="isInput" scoped="" ref="0x4180a368"/>
        <function-ref name="toggle" scoped="" ref="0x4180a448"/>
        <function-ref name="isOutput" scoped="" ref="0x4180a528"/>
        <function-ref name="get" scoped="" ref="0x4180a608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4180a6e8"/>
        <function-ref name="set" scoped="" ref="0x4180a7c8"/>
        <function-ref name="clr" scoped="" ref="0x4180a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41809a88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41809a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41809c60"/>
        <function-ref name="isInput" scoped="" ref="0x41809d40"/>
        <function-ref name="toggle" scoped="" ref="0x41809e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41809f00"/>
        <function-ref name="get" scoped="" ref="0x41808010"/>
        <function-ref name="makeOutput" scoped="" ref="0x418080f0"/>
        <function-ref name="set" scoped="" ref="0x418081d0"/>
        <function-ref name="clr" scoped="" ref="0x418082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41807538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41807538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41807710"/>
        <function-ref name="isInput" scoped="" ref="0x418077f0"/>
        <function-ref name="toggle" scoped="" ref="0x418078d0"/>
        <function-ref name="isOutput" scoped="" ref="0x418079b0"/>
        <function-ref name="get" scoped="" ref="0x41807a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41807b70"/>
        <function-ref name="set" scoped="" ref="0x41807c50"/>
        <function-ref name="clr" scoped="" ref="0x41807d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405fd2d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405fd2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405fd4a8"/>
        <function-ref name="isInput" scoped="" ref="0x405fd588"/>
        <function-ref name="toggle" scoped="" ref="0x405fd668"/>
        <function-ref name="isOutput" scoped="" ref="0x405fd748"/>
        <function-ref name="get" scoped="" ref="0x405fd828"/>
        <function-ref name="makeOutput" scoped="" ref="0x405fd908"/>
        <function-ref name="set" scoped="" ref="0x405fd9e8"/>
        <function-ref name="clr" scoped="" ref="0x405fdac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4060a8a0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4060a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4060aa78"/>
        <function-ref name="isInput" scoped="" ref="0x4060ab58"/>
        <function-ref name="toggle" scoped="" ref="0x4060ac38"/>
        <function-ref name="isOutput" scoped="" ref="0x4060ad18"/>
        <function-ref name="get" scoped="" ref="0x4060adf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4060aed8"/>
        <function-ref name="set" scoped="" ref="0x40609010"/>
        <function-ref name="clr" scoped="" ref="0x406090f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40607ec0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40607ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406060c0"/>
        <function-ref name="isInput" scoped="" ref="0x406061a0"/>
        <function-ref name="toggle" scoped="" ref="0x40606280"/>
        <function-ref name="isOutput" scoped="" ref="0x40606360"/>
        <function-ref name="get" scoped="" ref="0x40606440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40606520"/>
        <function-ref name="set" scoped="" ref="0x40606600"/>
        <function-ref name="clr" scoped="" ref="0x406066e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40612538" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40612538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40612710"/>
        <function-ref name="isInput" scoped="" ref="0x406127f0"/>
        <function-ref name="toggle" scoped="" ref="0x406128d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406129b0"/>
        <function-ref name="get" scoped="" ref="0x40612a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40612b70"/>
        <function-ref name="set" scoped="" ref="0x40612c50"/>
        <function-ref name="clr" scoped="" ref="0x40612d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40610b68" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40610b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40610d40"/>
        <function-ref name="isInput" scoped="" ref="0x40610e20"/>
        <function-ref name="toggle" scoped="" ref="0x40610f00"/>
        <function-ref name="isOutput" scoped="" ref="0x4060e010"/>
        <function-ref name="get" scoped="" ref="0x4060e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4060e1d0"/>
        <function-ref name="set" scoped="" ref="0x4060e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4060e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4061a228" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4061a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061a400"/>
        <function-ref name="isInput" scoped="" ref="0x4061a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4061a5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4061a6a0"/>
        <function-ref name="get" scoped="" ref="0x4061a780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061a860"/>
        <function-ref name="set" scoped="" ref="0x4061a940"/>
        <function-ref name="clr" scoped="" ref="0x4061aa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406188f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406188f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40618ac8"/>
        <function-ref name="isInput" scoped="" ref="0x40618ba8"/>
        <function-ref name="toggle" scoped="" ref="0x40618c88"/>
        <function-ref name="isOutput" scoped="" ref="0x40618d68"/>
        <function-ref name="get" scoped="" ref="0x40618e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40618f28"/>
        <function-ref name="set" scoped="" ref="0x40617018"/>
        <function-ref name="clr" scoped="" ref="0x406170f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40615ec0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40615ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406140c0"/>
        <function-ref name="isInput" scoped="" ref="0x406141a0"/>
        <function-ref name="toggle" scoped="" ref="0x40614280"/>
        <function-ref name="isOutput" scoped="" ref="0x40614360"/>
        <function-ref name="get" scoped="" ref="0x40614440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40614520"/>
        <function-ref name="set" scoped="" ref="0x40614600"/>
        <function-ref name="clr" scoped="" ref="0x406146e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406203e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406203e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406205c0"/>
        <function-ref name="isInput" scoped="" ref="0x406206a0"/>
        <function-ref name="toggle" scoped="" ref="0x40620780"/>
        <function-ref name="isOutput" scoped="" ref="0x40620860"/>
        <function-ref name="get" scoped="" ref="0x40620940"/>
        <function-ref name="makeOutput" scoped="" ref="0x40620a20"/>
        <function-ref name="set" scoped="" ref="0x40620b00"/>
        <function-ref name="clr" scoped="" ref="0x40620be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4061e8f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4061e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061eac8"/>
        <function-ref name="isInput" scoped="" ref="0x4061eba8"/>
        <function-ref name="toggle" scoped="" ref="0x4061ec88"/>
        <function-ref name="isOutput" scoped="" ref="0x4061ed68"/>
        <function-ref name="get" scoped="" ref="0x4061ee48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061ef28"/>
        <function-ref name="set" scoped="" ref="0x4061d018"/>
        <function-ref name="clr" scoped="" ref="0x4061d0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4061bdd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4061bdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40628010"/>
        <function-ref name="isInput" scoped="" ref="0x406280f0"/>
        <function-ref name="toggle" scoped="" ref="0x406281d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406282b0"/>
        <function-ref name="get" scoped="" ref="0x40628390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40628470"/>
        <function-ref name="set" scoped="" ref="0x40628550"/>
        <function-ref name="clr" scoped="" ref="0x40628630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406263b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406263b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40626588"/>
        <function-ref name="isInput" scoped="" ref="0x40626668"/>
        <function-ref name="toggle" scoped="" ref="0x40626748"/>
        <function-ref name="isOutput" scoped="" ref="0x40626828"/>
        <function-ref name="get" scoped="" ref="0x40626908"/>
        <function-ref name="makeOutput" scoped="" ref="0x406269e8"/>
        <function-ref name="set" scoped="" ref="0x40626ac8"/>
        <function-ref name="clr" scoped="" ref="0x40626ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406238a0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406238a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40623a78"/>
        <function-ref name="isInput" scoped="" ref="0x40623b58"/>
        <function-ref name="toggle" scoped="" ref="0x40623c38"/>
        <function-ref name="isOutput" scoped="" ref="0x40623d18"/>
        <function-ref name="get" scoped="" ref="0x40623df8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40623ed8"/>
        <function-ref name="set" scoped="" ref="0x40622010"/>
        <function-ref name="clr" scoped="" ref="0x406220f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40645440" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40645440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40645618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40645060" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40645060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40645238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40645848" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40645848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40645a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4055cf00" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4055cf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406510f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4055caf8" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4055caf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4055ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4064d0f8" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4064d0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4064d2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4064e060" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4064e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4064e238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40659968" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40659968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40659b40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40659c20"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40659d00"/>
        <function-ref name="actualMicro" scoped="" ref="0x40659de0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40659ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40657010" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40657010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406571e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4064dbf8" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4064dbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4064ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40654a00" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40654a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40654bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x40654010" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x40654010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406541e8"/>
        <function-ref name="isInput" scoped="" ref="0x406542c8"/>
        <function-ref name="toggle" scoped="" ref="0x406543a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40654488"/>
        <function-ref name="get" scoped="" ref="0x40654568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40654648"/>
        <function-ref name="set" scoped="" ref="0x40654728"/>
        <function-ref name="clr" scoped="" ref="0x40654808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40657b98" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40657b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40657d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4065fdb0" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4065fdb0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x404197d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x404197d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4065e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4065e1e8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4065e1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4065e3c0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4065e4a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4065e580"/>
        <function-ref name="actualMicro" scoped="" ref="0x4065e660"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4065e740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4066c508" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4066c508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4066c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40650780" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40650780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40650958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x4066c100" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4066c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4066c2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40650b18" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40650b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40650cf0"/>
        <function-ref name="taskLoop" scoped="" ref="0x40650dd0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40650eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40422600" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40422600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404227d8"/>
        <function-ref name="runTask" scoped="" ref="0x404228b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4041ced8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4041ced8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404180c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x404181a0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40418280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40497d30" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40497d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40497f08"/>
        <function-ref name="runTask" scoped="" ref="0x40495010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x404959b8" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x404959b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40495b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x404974f8" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x404974f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404976d0"/>
        <function-ref name="taskLoop" scoped="" ref="0x404977b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40497890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x404aaf10" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x404aaf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x404ac108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40496438" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40496438"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40496610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x404aa148" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x404aa148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x404aa320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406818f8" loc="41:../../Deluge/DelugeC.nc">
      <component-ref qname="DelugeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406818f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40681ad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40681bb0"/>
        <function-ref name="led1On" scoped="" ref="0x40681c90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40681d70"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40681e50"/>
        <function-ref name="get" scoped="" ref="0x40680010"/>
        <function-ref name="led1Off" scoped="" ref="0x406800f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40680470"/>
        <function-ref name="set" scoped="" ref="0x406801d0"/>
        <function-ref name="led0On" scoped="" ref="0x406802b0"/>
        <function-ref name="led2On" scoped="" ref="0x40680390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x40682100" loc="44:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40682100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406822d8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x406823b8"/>
        <function-ref name="computeCrc" scoped="" ref="0x40682498"/>
        <function-ref name="getSize" scoped="" ref="0x40682578"/>
        <function-ref name="readDone" scoped="" ref="0x40682658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x4069d6e8" loc="45:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4069d6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4069d8c0"/>
        <function-ref name="writeDone" scoped="" ref="0x4069d9a0"/>
        <function-ref name="erase" scoped="" ref="0x4069da80"/>
        <function-ref name="eraseDone" scoped="" ref="0x4069db60"/>
        <function-ref name="write" scoped="" ref="0x4069dc40"/>
        <function-ref name="sync" scoped="" ref="0x4069dd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4069de90" loc="46:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4069de90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40691080"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40691160"/>
        <function-ref name="led1On" scoped="" ref="0x40691240"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40691320"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40691400"/>
        <function-ref name="get" scoped="" ref="0x406914e0"/>
        <function-ref name="led1Off" scoped="" ref="0x406915c0"/>
        <function-ref name="led2Off" scoped="" ref="0x40691940"/>
        <function-ref name="set" scoped="" ref="0x406916a0"/>
        <function-ref name="led0On" scoped="" ref="0x40691780"/>
        <function-ref name="led2On" scoped="" ref="0x40691860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x4068f540" loc="42:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x4068f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4068f718"/>
        <function-ref name="receiveDone" scoped="" ref="0x4068f7f8"/>
        <function-ref name="publish" scoped="" ref="0x4068f8d8"/>
        <function-ref name="stop" scoped="" ref="0x4068f9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x406a6168" loc="50:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406a6168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406a5c70"/>
        <function-ref name="fired" scoped="" ref="0x406a6ee8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406a5630"/>
        <function-ref name="isOneShot" scoped="" ref="0x406a53d8"/>
        <function-ref name="getdt" scoped="" ref="0x406a4150"/>
        <function-ref name="gett0" scoped="" ref="0x406a5ec8"/>
        <function-ref name="isRunning" scoped="" ref="0x406a5180"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406a6790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406a5950"/>
        <function-ref name="startOneShot" scoped="" ref="0x406a6a10"/>
        <function-ref name="stop" scoped="" ref="0x406a6c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendAdvMsg" ref="0x406acc70" loc="54:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendAdvMsg" scoped="" ref="0x406acc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406ace48"/>
        <function-ref name="getPayload" scoped="" ref="0x406acf28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406a3018"/>
        <function-ref name="cancel" scoped="" ref="0x406a30f8"/>
        <function-ref name="sendDone" scoped="" ref="0x406a31d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x406a8bd0" loc="49:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x406a8bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x406a8da8"/>
        <function-ref name="rand32" scoped="" ref="0x406a8e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveAdvMsg" ref="0x406a3408" loc="55:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x406a3408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406a35e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x406a3a98" loc="57:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x406a3a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x406a3c70"/>
        <function-ref name="writeDone" scoped="" ref="0x406a3d50"/>
        <function-ref name="erase" scoped="" ref="0x406a3e30"/>
        <function-ref name="eraseDone" scoped="" ref="0x406a3f10"/>
        <function-ref name="write" scoped="" ref="0x406a2010"/>
        <function-ref name="sync" scoped="" ref="0x406a20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalObjRecvDone" ref="0x406b4dd8" loc="111:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalObjRecvDone" scoped="" ref="0x406b4dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406b3010"/>
        <function-ref name="runTask" scoped="" ref="0x406b30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406a2260" loc="59:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406a2260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x406a2438"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406a2518"/>
        <function-ref name="led1On" scoped="" ref="0x406a25f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x406a26d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x406a27b8"/>
        <function-ref name="get" scoped="" ref="0x406a2898"/>
        <function-ref name="led1Off" scoped="" ref="0x406a2978"/>
        <function-ref name="led2Off" scoped="" ref="0x406a2cf8"/>
        <function-ref name="set" scoped="" ref="0x406a2a58"/>
        <function-ref name="led0On" scoped="" ref="0x406a2b38"/>
        <function-ref name="led2On" scoped="" ref="0x406a2c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugePageTransfer" ref="0x406ae178" loc="51:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x406ae178"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x406ae890"/>
        <function-ref name="dataAvailable" scoped="" ref="0x406ae430"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x406ae510"/>
        <function-ref name="receivedPage" scoped="" ref="0x406ae5f0"/>
        <function-ref name="setImgNum" scoped="" ref="0x406ae6d0"/>
        <function-ref name="isTransferring" scoped="" ref="0x406ae7b0"/>
        <function-ref name="stop" scoped="" ref="0x406ae350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x406ac7b0" loc="52:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x406ac7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x406ac988"/>
        <function-ref name="crc16" scoped="" ref="0x406aca68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x406a85a8" loc="47:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x406a85a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406a8780"/>
        <function-ref name="receiveDone" scoped="" ref="0x406a8860"/>
        <function-ref name="publish" scoped="" ref="0x406a8940"/>
        <function-ref name="stop" scoped="" ref="0x406a8a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x406e50c8" loc="47:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x406e50c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406e52a0"/>
        <function-ref name="getPayload" scoped="" ref="0x406e5380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406e5460"/>
        <function-ref name="cancel" scoped="" ref="0x406e5540"/>
        <function-ref name="sendDone" scoped="" ref="0x406e5620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x406e8e80" loc="41:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x406e8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406e7070"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x406e7150"/>
        <function-ref name="computeCrc" scoped="" ref="0x406e7230"/>
        <function-ref name="getSize" scoped="" ref="0x406e7310"/>
        <function-ref name="readDone" scoped="" ref="0x406e73f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x406e78a8" loc="42:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x406e78a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x406e7a80"/>
        <function-ref name="writeDone" scoped="" ref="0x406e7b60"/>
        <function-ref name="erase" scoped="" ref="0x406e7c40"/>
        <function-ref name="eraseDone" scoped="" ref="0x406e7d20"/>
        <function-ref name="write" scoped="" ref="0x406e7e00"/>
        <function-ref name="sync" scoped="" ref="0x406e7ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x406e6158" loc="44:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x406e6158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x406e6560" loc="45:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x406e6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e6738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x406e6948" loc="46:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x406e6948"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406e6b20"/>
        <function-ref name="getPayload" scoped="" ref="0x406e6c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406e6ce0"/>
        <function-ref name="cancel" scoped="" ref="0x406e6dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x406e6ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x406e8288" loc="39:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x406e8288"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x406e89a0"/>
        <function-ref name="dataAvailable" scoped="" ref="0x406e8540"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x406e8620"/>
        <function-ref name="receivedPage" scoped="" ref="0x406e8700"/>
        <function-ref name="setImgNum" scoped="" ref="0x406e87e0"/>
        <function-ref name="isTransferring" scoped="" ref="0x406e88c0"/>
        <function-ref name="stop" scoped="" ref="0x406e8460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x406f8308" loc="49:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406f8308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x406f84e0"/>
        <function-ref name="noAck" scoped="" ref="0x406f85c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x406f86a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406f8810" loc="50:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406f8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x406f89e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406f8ac8"/>
        <function-ref name="led1On" scoped="" ref="0x406f8ba8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x406f8c88"/>
        <function-ref name="led2Toggle" scoped="" ref="0x406f8d68"/>
        <function-ref name="get" scoped="" ref="0x406f8e48"/>
        <function-ref name="led1Off" scoped="" ref="0x406f8f28"/>
        <function-ref name="led2Off" scoped="" ref="0x406f62b8"/>
        <function-ref name="set" scoped="" ref="0x406f6018"/>
        <function-ref name="led0On" scoped="" ref="0x406f60f8"/>
        <function-ref name="led2On" scoped="" ref="0x406f61d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x406fc140" loc="48:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406fc140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406fc318"/>
        <function-ref name="source" scoped="" ref="0x406fc3f8"/>
        <function-ref name="address" scoped="" ref="0x406fc4d8"/>
        <function-ref name="destination" scoped="" ref="0x406fc5b8"/>
        <function-ref name="setSource" scoped="" ref="0x406fc698"/>
        <function-ref name="setDestination" scoped="" ref="0x406fc778"/>
        <function-ref name="type" scoped="" ref="0x406fc858"/>
        <function-ref name="setType" scoped="" ref="0x406fc938"/>
        <function-ref name="isForMe" scoped="" ref="0x406fca18"/>
        <function-ref name="setGroup" scoped="" ref="0x406fcaf8"/>
        <function-ref name="localGroup" scoped="" ref="0x406fcbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x407103a0" loc="60:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x407103a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40710578"/>
        <function-ref name="rand32" scoped="" ref="0x40710658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x40702770" loc="56:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x40702770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40702948"/>
        <function-ref name="getPayload" scoped="" ref="0x40702a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40702b08"/>
        <function-ref name="cancel" scoped="" ref="0x40702be8"/>
        <function-ref name="sendDone" scoped="" ref="0x40702cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x407084c0" loc="50:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x407084c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40708698"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40708778"/>
        <function-ref name="computeCrc" scoped="" ref="0x40708858"/>
        <function-ref name="getSize" scoped="" ref="0x40708938"/>
        <function-ref name="readDone" scoped="" ref="0x40708a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitVecUtils" ref="0x40704c28" loc="49:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x40704c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x40704e00"/>
        <function-ref name="printBitVec" scoped="" ref="0x40704ee0"/>
        <function-ref name="countOnes" scoped="" ref="0x40708010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40708ed0" loc="51:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40708ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x407070c0"/>
        <function-ref name="writeDone" scoped="" ref="0x407071a0"/>
        <function-ref name="erase" scoped="" ref="0x40707280"/>
        <function-ref name="eraseDone" scoped="" ref="0x40707360"/>
        <function-ref name="write" scoped="" ref="0x40707440"/>
        <function-ref name="sync" scoped="" ref="0x40707520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x40707758" loc="53:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40707758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40707930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x40707b60" loc="54:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40707b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40707d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x40702010" loc="55:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x40702010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407021e8"/>
        <function-ref name="getPayload" scoped="" ref="0x407022c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407023a8"/>
        <function-ref name="cancel" scoped="" ref="0x40702488"/>
        <function-ref name="sendDone" scoped="" ref="0x40702568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407107c8" loc="62:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407107c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40710a20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40710b00"/>
        <function-ref name="led1On" scoped="" ref="0x40710be0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40710cc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40710da0"/>
        <function-ref name="get" scoped="" ref="0x40710e80"/>
        <function-ref name="led1Off" scoped="" ref="0x4070f010"/>
        <function-ref name="led2Off" scoped="" ref="0x4070f390"/>
        <function-ref name="set" scoped="" ref="0x4070f0f0"/>
        <function-ref name="led0On" scoped="" ref="0x4070f1d0"/>
        <function-ref name="led2On" scoped="" ref="0x4070f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x406f6af0" loc="47:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x406f6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x406f72b0"/>
        <function-ref name="dataAvailable" scoped="" ref="0x406f6da8"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x406f6e88"/>
        <function-ref name="receivedPage" scoped="" ref="0x406f7010"/>
        <function-ref name="setImgNum" scoped="" ref="0x406f70f0"/>
        <function-ref name="isTransferring" scoped="" ref="0x406f71d0"/>
        <function-ref name="stop" scoped="" ref="0x406f6cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40701b30" loc="58:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40701b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40701d08"/>
        <function-ref name="noAck" scoped="" ref="0x40701de8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40701ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40702e60" loc="57:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40702e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40701050"/>
        <function-ref name="source" scoped="" ref="0x40701130"/>
        <function-ref name="address" scoped="" ref="0x40701210"/>
        <function-ref name="destination" scoped="" ref="0x407012f0"/>
        <function-ref name="setSource" scoped="" ref="0x407013d0"/>
        <function-ref name="setDestination" scoped="" ref="0x407014b0"/>
        <function-ref name="type" scoped="" ref="0x40701590"/>
        <function-ref name="setType" scoped="" ref="0x40701670"/>
        <function-ref name="isForMe" scoped="" ref="0x40701750"/>
        <function-ref name="setGroup" scoped="" ref="0x40701830"/>
        <function-ref name="localGroup" scoped="" ref="0x40701910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40700188" loc="59:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40700188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40711c70"/>
        <function-ref name="fired" scoped="" ref="0x40700f08"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40711630"/>
        <function-ref name="isOneShot" scoped="" ref="0x407113d8"/>
        <function-ref name="getdt" scoped="" ref="0x40710150"/>
        <function-ref name="gett0" scoped="" ref="0x40711ec8"/>
        <function-ref name="isRunning" scoped="" ref="0x40711180"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407007b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40711950"/>
        <function-ref name="startOneShot" scoped="" ref="0x40700a30"/>
        <function-ref name="stop" scoped="" ref="0x40700cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x407610a0" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x407610a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40761278"/>
        <function-ref name="rand32" scoped="" ref="0x40761358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40764798" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40764798"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40764dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40764278" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40764278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40764450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4075eb08" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4075eb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4075ece0"/>
        <function-ref name="rand32" scoped="" ref="0x4075edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4075e248" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4075e248"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4075e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40761cf8" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40761cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40761ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVecUtils" ref="0x40763918" loc="42:../../Deluge/BitVecUtilsC.nc">
      <component-ref qname="BitVecUtilsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x40763918"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x40763af0"/>
        <function-ref name="printBitVec" scoped="" ref="0x40763bd0"/>
        <function-ref name="countOnes" scoped="" ref="0x40763cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40762660" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugePageTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40762660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40771170"/>
        <function-ref name="fired" scoped="" ref="0x4075f3f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4075fb00"/>
        <function-ref name="isOneShot" scoped="" ref="0x4075f8a8"/>
        <function-ref name="getdt" scoped="" ref="0x40771620"/>
        <function-ref name="gett0" scoped="" ref="0x407713c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4075f650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40762c88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4075fe20"/>
        <function-ref name="startOneShot" scoped="" ref="0x40762f08"/>
        <function-ref name="stop" scoped="" ref="0x4075f1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40773ab0" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40773ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40783650"/>
        <function-ref name="fired" scoped="" ref="0x40770858"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40783010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40770d08"/>
        <function-ref name="getdt" scoped="" ref="0x40783b00"/>
        <function-ref name="gett0" scoped="" ref="0x407838a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40770ab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40770100"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40783330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40770380"/>
        <function-ref name="stop" scoped="" ref="0x40770600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40781b40" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40781b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4077d6a8"/>
        <function-ref name="fired" scoped="" ref="0x4077e938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4077d068"/>
        <function-ref name="isOneShot" scoped="" ref="0x4077ede8"/>
        <function-ref name="getdt" scoped="" ref="0x4077db58"/>
        <function-ref name="gett0" scoped="" ref="0x4077d900"/>
        <function-ref name="isRunning" scoped="" ref="0x4077eb90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4077e1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4077d388"/>
        <function-ref name="startOneShot" scoped="" ref="0x4077e460"/>
        <function-ref name="stop" scoped="" ref="0x4077e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4077deb8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4077deb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4077b520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40781390" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40781390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40781568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x407958c8" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x407958c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40785048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40785538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407852c0"/>
        <function-ref name="overflow" scoped="" ref="0x407857b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4077a5a0" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4077a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4077a778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40786eb0" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40786eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4078a388"/>
        <function-ref name="fired" scoped="" ref="0x4078bb28"/>
        <function-ref name="startAt" scoped="" ref="0x4078a048"/>
        <function-ref name="isRunning" scoped="" ref="0x4078bda0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4078a600"/>
        <function-ref name="start" scoped="" ref="0x4078b610"/>
        <function-ref name="stop" scoped="" ref="0x4078b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4081ebc8" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4081ebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4081b0a8"/>
        <function-ref name="fired" scoped="" ref="0x4081c858"/>
        <function-ref name="startAt" scoped="" ref="0x4081cd48"/>
        <function-ref name="isRunning" scoped="" ref="0x4081cad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4081b320"/>
        <function-ref name="start" scoped="" ref="0x4081c340"/>
        <function-ref name="stop" scoped="" ref="0x4081c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4081e790" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4081e790"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x404195d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x404195d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4081e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4081b650" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4081b650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4081bda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4081a2c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4081a048"/>
        <function-ref name="overflow" scoped="" ref="0x4081a538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x41895b60" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41895b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x41895d38"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41895e18"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41895ef8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x41894010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x418940f0"/>
        <function-ref name="setControl" scoped="" ref="0x418941d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4189ccf0" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4189ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x418991e8"/>
        <function-ref name="fired" scoped="" ref="0x4189a990"/>
        <function-ref name="startAt" scoped="" ref="0x4189ae80"/>
        <function-ref name="isRunning" scoped="" ref="0x4189ac08"/>
        <function-ref name="getAlarm" scoped="" ref="0x41899460"/>
        <function-ref name="start" scoped="" ref="0x4189a478"/>
        <function-ref name="stop" scoped="" ref="0x4189a718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4189c8b8" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4189c8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4189ca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41899790" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41899790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41899ee0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x418983e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41898170"/>
        <function-ref name="overflow" scoped="" ref="0x41898660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x41893dc0" loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x41893dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x41891010"/>
        <function-ref name="compareBusy" scoped="" ref="0x418910f0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x418911d0"/>
        <function-ref name="countBusy" scoped="" ref="0x418912b0"/>
        <function-ref name="getAssr" scoped="" ref="0x41891390"/>
        <function-ref name="setAssr" scoped="" ref="0x41891470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x418943c0" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x418943c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41893918"/>
        <function-ref name="fired" scoped="" ref="0x41894f20"/>
        <function-ref name="get" scoped="" ref="0x41894a08"/>
        <function-ref name="reset" scoped="" ref="0x418931b0"/>
        <function-ref name="isOn" scoped="" ref="0x41893b90"/>
        <function-ref name="set" scoped="" ref="0x41894c80"/>
        <function-ref name="start" scoped="" ref="0x41893428"/>
        <function-ref name="stop" scoped="" ref="0x418936a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41898950" loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41898950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41895418"/>
        <function-ref name="test" scoped="" ref="0x41896f08"/>
        <function-ref name="get" scoped="" ref="0x41896010"/>
        <function-ref name="setScale" scoped="" ref="0x41895690"/>
        <function-ref name="getScale" scoped="" ref="0x41895930"/>
        <function-ref name="reset" scoped="" ref="0x418967a0"/>
        <function-ref name="overflow" scoped="" ref="0x41896528"/>
        <function-ref name="isOn" scoped="" ref="0x418951a0"/>
        <function-ref name="set" scoped="" ref="0x41896288"/>
        <function-ref name="start" scoped="" ref="0x41896a18"/>
        <function-ref name="stop" scoped="" ref="0x41896c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407d8af0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407d8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x407d8cc8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407d8da8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407d8e88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407d7010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407d70f0"/>
        <function-ref name="setControl" scoped="" ref="0x407d71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x407d5030" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407d5030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x407d5208"/>
        <function-ref name="compareBusy" scoped="" ref="0x407d52e8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x407d53c8"/>
        <function-ref name="countBusy" scoped="" ref="0x407d54a8"/>
        <function-ref name="getAssr" scoped="" ref="0x407d5588"/>
        <function-ref name="setAssr" scoped="" ref="0x407d5668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407d74f8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407d74f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407d6a48"/>
        <function-ref name="fired" scoped="" ref="0x407d6068"/>
        <function-ref name="get" scoped="" ref="0x407d7b40"/>
        <function-ref name="reset" scoped="" ref="0x407d62e0"/>
        <function-ref name="isOn" scoped="" ref="0x407d6cc0"/>
        <function-ref name="set" scoped="" ref="0x407d7db8"/>
        <function-ref name="start" scoped="" ref="0x407d6558"/>
        <function-ref name="stop" scoped="" ref="0x407d67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407dd7c0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407dd7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407d8288"/>
        <function-ref name="test" scoped="" ref="0x407dad28"/>
        <function-ref name="get" scoped="" ref="0x407dde08"/>
        <function-ref name="setScale" scoped="" ref="0x407d8500"/>
        <function-ref name="getScale" scoped="" ref="0x407d87a0"/>
        <function-ref name="reset" scoped="" ref="0x407da5c0"/>
        <function-ref name="overflow" scoped="" ref="0x407da348"/>
        <function-ref name="isOn" scoped="" ref="0x407d8010"/>
        <function-ref name="set" scoped="" ref="0x407da0a8"/>
        <function-ref name="start" scoped="" ref="0x407da838"/>
        <function-ref name="stop" scoped="" ref="0x407daab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407e5600" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407e5600"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x407e57d8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407e58b8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407e5998"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407e5a78"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407e5b58"/>
        <function-ref name="setControl" scoped="" ref="0x407e5c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407e3aa8" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407e3aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407e3c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x407e3f08" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407e3f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x407e10f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x407e11d0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x407e12b0"/>
        <function-ref name="countBusy" scoped="" ref="0x407e1390"/>
        <function-ref name="getAssr" scoped="" ref="0x407e1470"/>
        <function-ref name="setAssr" scoped="" ref="0x407e1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407e4010" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407e4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407e3578"/>
        <function-ref name="fired" scoped="" ref="0x407e4b70"/>
        <function-ref name="get" scoped="" ref="0x407e4658"/>
        <function-ref name="reset" scoped="" ref="0x407e4de8"/>
        <function-ref name="isOn" scoped="" ref="0x407e37f0"/>
        <function-ref name="set" scoped="" ref="0x407e48d0"/>
        <function-ref name="start" scoped="" ref="0x407e3088"/>
        <function-ref name="stop" scoped="" ref="0x407e3300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407e8308" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407e8308"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407e6d68"/>
        <function-ref name="test" scoped="" ref="0x407e6878"/>
        <function-ref name="get" scoped="" ref="0x407e8950"/>
        <function-ref name="setScale" scoped="" ref="0x407e5010"/>
        <function-ref name="getScale" scoped="" ref="0x407e52b0"/>
        <function-ref name="reset" scoped="" ref="0x407e6110"/>
        <function-ref name="overflow" scoped="" ref="0x407e8e68"/>
        <function-ref name="isOn" scoped="" ref="0x407e6af0"/>
        <function-ref name="set" scoped="" ref="0x407e8bc8"/>
        <function-ref name="start" scoped="" ref="0x407e6388"/>
        <function-ref name="stop" scoped="" ref="0x407e6600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x408429a8" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x408429a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40842b80"/>
        <function-ref name="runTask" scoped="" ref="0x40842c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4082d010" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4082d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408424e0"/>
        <function-ref name="fired" scoped="" ref="0x4082dc78"/>
        <function-ref name="startAt" scoped="" ref="0x408421a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4082def0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40842758"/>
        <function-ref name="start" scoped="" ref="0x4082d760"/>
        <function-ref name="stop" scoped="" ref="0x4082da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4078cc60" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4078cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4082e790"/>
        <function-ref name="fired" scoped="" ref="0x40818a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4082e150"/>
        <function-ref name="isOneShot" scoped="" ref="0x40818ed0"/>
        <function-ref name="getdt" scoped="" ref="0x4082ec40"/>
        <function-ref name="gett0" scoped="" ref="0x4082e9e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40818c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408182c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4082e470"/>
        <function-ref name="startOneShot" scoped="" ref="0x40818548"/>
        <function-ref name="stop" scoped="" ref="0x408187c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40871050" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40871050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40871228"/>
        <function-ref name="runTask" scoped="" ref="0x40871308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x4085de30" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x4085de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4085a920"/>
        <function-ref name="fired" scoped="" ref="0x4085cbc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4085a2e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4085a088"/>
        <function-ref name="getdt" scoped="" ref="0x4085add0"/>
        <function-ref name="gett0" scoped="" ref="0x4085ab78"/>
        <function-ref name="isRunning" scoped="" ref="0x4085ce18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4085c468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4085a600"/>
        <function-ref name="startOneShot" scoped="" ref="0x4085c6e8"/>
        <function-ref name="stop" scoped="" ref="0x4085c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4083ea60" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4083ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4085d670"/>
        <function-ref name="fired" scoped="" ref="0x4085f840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4085d010"/>
        <function-ref name="isOneShot" scoped="" ref="0x4085fd10"/>
        <function-ref name="getdt" scoped="" ref="0x4085db40"/>
        <function-ref name="gett0" scoped="" ref="0x4085d8d8"/>
        <function-ref name="isRunning" scoped="" ref="0x4085faa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4085f0b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4085d340"/>
        <function-ref name="startOneShot" scoped="" ref="0x4085f348"/>
        <function-ref name="stop" scoped="" ref="0x4085f5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40870460" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40870460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40870aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40870df8" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40870df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4086f570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4086fa60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4086f7e8"/>
        <function-ref name="overflow" scoped="" ref="0x4086fcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Crc" ref="0x40882360" loc="46:/opt/tinyos-2.1.2/tos/system/CrcC.nc">
      <component-ref qname="CrcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x40882360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x40882538"/>
        <function-ref name="crc16" scoped="" ref="0x40882618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40879a28" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40879a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40879c00"/>
        <function-ref name="getPayload" scoped="" ref="0x40879ce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40879dc0"/>
        <function-ref name="cancel" scoped="" ref="0x40879ea0"/>
        <function-ref name="sendDone" scoped="" ref="0x40895010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40895150" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40895150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40895328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40895408"/>
        <function-ref name="getPayload" scoped="" ref="0x408954e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408955c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408956a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408957e8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408957e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408959c0"/>
        <function-ref name="source" scoped="" ref="0x40895aa0"/>
        <function-ref name="address" scoped="" ref="0x40895b80"/>
        <function-ref name="destination" scoped="" ref="0x40895c60"/>
        <function-ref name="setSource" scoped="" ref="0x40895d40"/>
        <function-ref name="setDestination" scoped="" ref="0x40895e20"/>
        <function-ref name="type" scoped="" ref="0x40895f00"/>
        <function-ref name="setType" scoped="" ref="0x40f97010"/>
        <function-ref name="isForMe" scoped="" ref="0x40f970f0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f971d0"/>
        <function-ref name="localGroup" scoped="" ref="0x40f972b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f97410" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f97410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f975e8"/>
        <function-ref name="noAck" scoped="" ref="0x40f976c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f977a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x418b9dd0" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x418b9dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418b6010"/>
        <function-ref name="getPayload" scoped="" ref="0x418b60f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418b61d0"/>
        <function-ref name="cancel" scoped="" ref="0x418b62b0"/>
        <function-ref name="sendDone" scoped="" ref="0x418b6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x418b64d0" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x418b64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x418b66a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x418b6788"/>
        <function-ref name="getPayload" scoped="" ref="0x418b6868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418b6948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x418b6a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x418b6b68" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x418b6b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x418b6d40"/>
        <function-ref name="source" scoped="" ref="0x418b6e20"/>
        <function-ref name="address" scoped="" ref="0x418b6f00"/>
        <function-ref name="destination" scoped="" ref="0x418b5010"/>
        <function-ref name="setSource" scoped="" ref="0x418b50f0"/>
        <function-ref name="setDestination" scoped="" ref="0x418b51d0"/>
        <function-ref name="type" scoped="" ref="0x418b52b0"/>
        <function-ref name="setType" scoped="" ref="0x418b5390"/>
        <function-ref name="isForMe" scoped="" ref="0x418b5470"/>
        <function-ref name="setGroup" scoped="" ref="0x418b5550"/>
        <function-ref name="localGroup" scoped="" ref="0x418b5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x418b5790" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x418b5790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x418b5968"/>
        <function-ref name="noAck" scoped="" ref="0x418b5a48"/>
        <function-ref name="wasAcked" scoped="" ref="0x418b5b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x418b18c0" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x418b18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418b1a98"/>
        <function-ref name="getPayload" scoped="" ref="0x418b1b78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418b1c58"/>
        <function-ref name="cancel" scoped="" ref="0x418b1d38"/>
        <function-ref name="sendDone" scoped="" ref="0x418b1e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x418ae010" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x418ae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x418ae1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x418ae2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x418ae3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418ae488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x418ae568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x418ae6a8" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x418ae6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x418ae880"/>
        <function-ref name="source" scoped="" ref="0x418ae960"/>
        <function-ref name="address" scoped="" ref="0x418aea40"/>
        <function-ref name="destination" scoped="" ref="0x418aeb20"/>
        <function-ref name="setSource" scoped="" ref="0x418aec00"/>
        <function-ref name="setDestination" scoped="" ref="0x418aece0"/>
        <function-ref name="type" scoped="" ref="0x418aedc0"/>
        <function-ref name="setType" scoped="" ref="0x418aeea0"/>
        <function-ref name="isForMe" scoped="" ref="0x418ad010"/>
        <function-ref name="setGroup" scoped="" ref="0x418ad0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x418ad1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x418ad330" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x418ad330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x418ad508"/>
        <function-ref name="noAck" scoped="" ref="0x418ad5e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x418ad6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x418a7af8" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x418a7af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418a7cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x418a7db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418a7e90"/>
        <function-ref name="cancel" scoped="" ref="0x418a3010"/>
        <function-ref name="sendDone" scoped="" ref="0x418a30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x418a3260" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x418a3260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418a3438"/>
        <function-ref name="getPayload" scoped="" ref="0x418a3518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418a35f8"/>
        <function-ref name="cancel" scoped="" ref="0x418a36d8"/>
        <function-ref name="sendDone" scoped="" ref="0x418a37b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x418a38f8" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x418a38f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x418a3ad0"/>
        <function-ref name="source" scoped="" ref="0x418a3bb0"/>
        <function-ref name="address" scoped="" ref="0x418a3c90"/>
        <function-ref name="destination" scoped="" ref="0x418a3d70"/>
        <function-ref name="setSource" scoped="" ref="0x418a3e50"/>
        <function-ref name="setDestination" scoped="" ref="0x418a2010"/>
        <function-ref name="type" scoped="" ref="0x418a20f0"/>
        <function-ref name="setType" scoped="" ref="0x418a21d0"/>
        <function-ref name="isForMe" scoped="" ref="0x418a22b0"/>
        <function-ref name="setGroup" scoped="" ref="0x418a2390"/>
        <function-ref name="localGroup" scoped="" ref="0x418a2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408a4120" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408a4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a42f8"/>
        <function-ref name="getPayload" scoped="" ref="0x408a43d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408a44b8"/>
        <function-ref name="cancel" scoped="" ref="0x408a4598"/>
        <function-ref name="sendDone" scoped="" ref="0x408a4678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x408db780" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408db780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408db968"/>
        <function-ref name="getPayload" scoped="" ref="0x408dba48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408dbb28"/>
        <function-ref name="cancel" scoped="" ref="0x408dbc08"/>
        <function-ref name="sendDone" scoped="" ref="0x408dbce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408db010" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408db010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408db1f8"/>
        <function-ref name="getPayload" scoped="" ref="0x408db2d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408db3b8"/>
        <function-ref name="cancel" scoped="" ref="0x408db498"/>
        <function-ref name="sendDone" scoped="" ref="0x408db578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x408daa50" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408daa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408dac28"/>
        <function-ref name="payloadLength" scoped="" ref="0x408dad08"/>
        <function-ref name="getPayload" scoped="" ref="0x408dade8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408daec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408d9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x408d9190" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x408d9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408d9368"/>
        <function-ref name="runTask" scoped="" ref="0x408d9448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x408d95c8" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x408d95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408d97a0"/>
        <function-ref name="runTask" scoped="" ref="0x408d9880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x408dbe28" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408dbe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408da050"/>
        <function-ref name="source" scoped="" ref="0x408da130"/>
        <function-ref name="address" scoped="" ref="0x408da210"/>
        <function-ref name="destination" scoped="" ref="0x408da2f0"/>
        <function-ref name="setSource" scoped="" ref="0x408da3d0"/>
        <function-ref name="setDestination" scoped="" ref="0x408da4b0"/>
        <function-ref name="type" scoped="" ref="0x408da590"/>
        <function-ref name="setType" scoped="" ref="0x408da670"/>
        <function-ref name="isForMe" scoped="" ref="0x408da750"/>
        <function-ref name="setGroup" scoped="" ref="0x408da830"/>
        <function-ref name="localGroup" scoped="" ref="0x408da910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408eb9b8" loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408eb9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408ebb90"/>
        <function-ref name="stopDone" scoped="" ref="0x408ebc70"/>
        <function-ref name="start" scoped="" ref="0x408ebd50"/>
        <function-ref name="stop" scoped="" ref="0x408ebe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408d52a8" loc="57:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408d52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d5480"/>
        <function-ref name="getPayload" scoped="" ref="0x408d5560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d5640"/>
        <function-ref name="cancel" scoped="" ref="0x408d5720"/>
        <function-ref name="sendDone" scoped="" ref="0x408d5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408ea310" loc="59:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408ea310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408ea4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408ea668" loc="61:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408ea668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408ea840"/>
        <function-ref name="payloadLength" scoped="" ref="0x408ea920"/>
        <function-ref name="getPayload" scoped="" ref="0x408eaa00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408eaae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408eabc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x408e14a0" loc="64:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408e14a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408e7010"/>
        <function-ref name="clear" scoped="" ref="0x408e73c0"/>
        <function-ref name="isValid" scoped="" ref="0x408e1bf0"/>
        <function-ref name="set" scoped="" ref="0x408e7770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408f6e58" loc="66:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408f6e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408df050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408df130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408df210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408df2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408d5c68" loc="58:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408d5c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408e9af0" loc="63:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408e9cc8"/>
        <function-ref name="noAck" scoped="" ref="0x408e9da8"/>
        <function-ref name="wasAcked" scoped="" ref="0x408e9e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408ead58" loc="62:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408ead58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408e9010"/>
        <function-ref name="source" scoped="" ref="0x408e90f0"/>
        <function-ref name="address" scoped="" ref="0x408e91d0"/>
        <function-ref name="destination" scoped="" ref="0x408e92b0"/>
        <function-ref name="setSource" scoped="" ref="0x408e9390"/>
        <function-ref name="setDestination" scoped="" ref="0x408e9470"/>
        <function-ref name="type" scoped="" ref="0x408e9550"/>
        <function-ref name="setType" scoped="" ref="0x408e9630"/>
        <function-ref name="isForMe" scoped="" ref="0x408e9710"/>
        <function-ref name="setGroup" scoped="" ref="0x408e97f0"/>
        <function-ref name="localGroup" scoped="" ref="0x408e98d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x408e7ea8" loc="65:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408e7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408e29c0"/>
        <function-ref name="clear" scoped="" ref="0x408e2d70"/>
        <function-ref name="isValid" scoped="" ref="0x408e2610"/>
        <function-ref name="set" scoped="" ref="0x408e0150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408dfcb0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408dfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408dfe88"/>
        <function-ref name="stopDone" scoped="" ref="0x408f3010"/>
        <function-ref name="start" scoped="" ref="0x408f30f0"/>
        <function-ref name="stop" scoped="" ref="0x408f31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x408fe6d0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x408fe6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x408fe8a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x408fe988"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x408fea68"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x408feb48"/>
        <function-ref name="setCca" scoped="" ref="0x408fec28"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x408fed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4090f3f8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4090f3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4090f650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408f16d0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408f16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408f18a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408f1988"/>
        <function-ref name="getPayload" scoped="" ref="0x408f1a68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f1b48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408f1c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408f3630" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408f3630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408f3808"/>
        <function-ref name="getPayload" scoped="" ref="0x408f38e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f39c8"/>
        <function-ref name="cancel" scoped="" ref="0x408f3aa8"/>
        <function-ref name="sendDone" scoped="" ref="0x408f3b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408f26a8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408f26a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40905eb0" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40905eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x408f00c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x408f01a0"/>
        <function-ref name="getRssi" scoped="" ref="0x408f0280"/>
        <function-ref name="getNetwork" scoped="" ref="0x408f0360"/>
        <function-ref name="getPower" scoped="" ref="0x408f0440"/>
        <function-ref name="getLqi" scoped="" ref="0x408f0520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408feef8" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408feef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x409040e0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x409041c0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x409042a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40904380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408f2010" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f21e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408f0740" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408f0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408f0918"/>
        <function-ref name="noAck" scoped="" ref="0x408f09f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x408f0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x408f98f8" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x408f98f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x408f9ad0"/>
        <function-ref name="setRetries" scoped="" ref="0x408f9bb0"/>
        <function-ref name="getRetries" scoped="" ref="0x408f9c90"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x408f9d70"/>
        <function-ref name="wasDelivered" scoped="" ref="0x408f9e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408f2a18" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408f2a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408f2bf0"/>
        <function-ref name="source" scoped="" ref="0x408f2cd0"/>
        <function-ref name="address" scoped="" ref="0x408f2db0"/>
        <function-ref name="destination" scoped="" ref="0x408f2e90"/>
        <function-ref name="setSource" scoped="" ref="0x408f1010"/>
        <function-ref name="setDestination" scoped="" ref="0x408f10f0"/>
        <function-ref name="type" scoped="" ref="0x408f11d0"/>
        <function-ref name="setType" scoped="" ref="0x408f12b0"/>
        <function-ref name="isForMe" scoped="" ref="0x408f1390"/>
        <function-ref name="setGroup" scoped="" ref="0x408f1470"/>
        <function-ref name="localGroup" scoped="" ref="0x408f1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40903b38" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40903b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40903d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408fd5a8" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408fd5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408fd780"/>
        <function-ref name="stopDone" scoped="" ref="0x408fd860"/>
        <function-ref name="start" scoped="" ref="0x408fd940"/>
        <function-ref name="stop" scoped="" ref="0x408fda20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x409084c0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409084c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40908698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40908ea8" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40908ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x409070c0"/>
        <function-ref name="setRetries" scoped="" ref="0x409071a0"/>
        <function-ref name="getRetries" scoped="" ref="0x40907280"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40907360"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40907440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x409096b8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x409096b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40909890"/>
        <function-ref name="setNetwork" scoped="" ref="0x40909970"/>
        <function-ref name="getRssi" scoped="" ref="0x40909a50"/>
        <function-ref name="getNetwork" scoped="" ref="0x40909b30"/>
        <function-ref name="getPower" scoped="" ref="0x40909c10"/>
        <function-ref name="getLqi" scoped="" ref="0x40909cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x4090ab40" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x4090ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090ad18"/>
        <function-ref name="getPayload" scoped="" ref="0x4090adf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090aed8"/>
        <function-ref name="cancel" scoped="" ref="0x40909010"/>
        <function-ref name="sendDone" scoped="" ref="0x409090f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40908888" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40908888"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40908a60"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40908b40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40908c20"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40908d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x4090a010" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x4090a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40909f10" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40909f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40908108"/>
        <function-ref name="noAck" scoped="" ref="0x409081e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x409082c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4090e120" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4090e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4090e2f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4090e3d8"/>
        <function-ref name="request" scoped="" ref="0x4090e4b8"/>
        <function-ref name="granted" scoped="" ref="0x4090e598"/>
        <function-ref name="isOwner" scoped="" ref="0x4090e678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x4090e860" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x4090e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090ea38"/>
        <function-ref name="getPayload" scoped="" ref="0x4090eb18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090ebf8"/>
        <function-ref name="cancel" scoped="" ref="0x4090ecd8"/>
        <function-ref name="sendDone" scoped="" ref="0x4090edb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x4090a3f0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x4090a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4090a5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4090a6a8"/>
        <function-ref name="getPayload" scoped="" ref="0x4090a788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090a868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4090a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40909320" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40909320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409094f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40907c08" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40907c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40907de0"/>
        <function-ref name="stopDone" scoped="" ref="0x40907ec0"/>
        <function-ref name="start" scoped="" ref="0x4091e010"/>
        <function-ref name="stop" scoped="" ref="0x4091e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x4091ed38" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x4091ed38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4091ef10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4091d010"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4091d0f0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4091d1d0"/>
        <function-ref name="setCca" scoped="" ref="0x4091d2b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4091d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4091e280" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4091e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4091e458"/>
        <function-ref name="getPayload" scoped="" ref="0x4091e538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4091e618"/>
        <function-ref name="cancel" scoped="" ref="0x4091e6f8"/>
        <function-ref name="sendDone" scoped="" ref="0x4091e7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4091e980" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4091e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4091eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4091dcc0" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4091dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4091de98"/>
        <function-ref name="stopDone" scoped="" ref="0x4091a010"/>
        <function-ref name="start" scoped="" ref="0x4091a0f0"/>
        <function-ref name="stop" scoped="" ref="0x4091a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x4091aa98" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x4091aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4091ac70"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4091ad50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4091ae30"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4091af10"/>
        <function-ref name="setCca" scoped="" ref="0x40919010"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x409190f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x40917030" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x40917030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40917208"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x409172e8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x409173c8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x409174a8"/>
        <function-ref name="setCca" scoped="" ref="0x40917588"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40917668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x4092b8f0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x4092b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x4092bac8"/>
        <function-ref name="setNetwork" scoped="" ref="0x4092bba8"/>
        <function-ref name="getRssi" scoped="" ref="0x4092bc88"/>
        <function-ref name="getNetwork" scoped="" ref="0x4092bd68"/>
        <function-ref name="getPower" scoped="" ref="0x4092be48"/>
        <function-ref name="getLqi" scoped="" ref="0x4092bf28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x40927858" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x40927858"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40927a30"/>
        <function-ref name="cancel" scoped="" ref="0x40927b10"/>
        <function-ref name="modify" scoped="" ref="0x40927bf0"/>
        <function-ref name="sendDone" scoped="" ref="0x40927cd0"/>
        <function-ref name="resend" scoped="" ref="0x40927db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4091a360" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4091a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4091a538"/>
        <function-ref name="getPayload" scoped="" ref="0x4091a618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4091a6f8"/>
        <function-ref name="cancel" scoped="" ref="0x4091a7d8"/>
        <function-ref name="sendDone" scoped="" ref="0x4091a8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40917808" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40917808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409179e0"/>
        <function-ref name="rand32" scoped="" ref="0x40917ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4092ce80" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4092ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40918070"/>
        <function-ref name="stop" scoped="" ref="0x40918150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40921078" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40921078"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40921250"/>
        <function-ref name="getHeader" scoped="" ref="0x40921330"/>
        <function-ref name="getMetadata" scoped="" ref="0x40921410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x409134a0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x409134a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40913678"/>
        <function-ref name="rfOff" scoped="" ref="0x40913758"/>
        <function-ref name="rxOn" scoped="" ref="0x40913838"/>
        <function-ref name="startVReg" scoped="" ref="0x40913918"/>
        <function-ref name="stopVReg" scoped="" ref="0x409139f8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40913ad8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x40913bb8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40913c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40917c50" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40917c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40917e28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40917f08"/>
        <function-ref name="led1On" scoped="" ref="0x4092b010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4092b0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4092b1d0"/>
        <function-ref name="get" scoped="" ref="0x4092b2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x4092b390"/>
        <function-ref name="led2Off" scoped="" ref="0x4092b710"/>
        <function-ref name="set" scoped="" ref="0x4092b470"/>
        <function-ref name="led0On" scoped="" ref="0x4092b550"/>
        <function-ref name="led2On" scoped="" ref="0x4092b630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x409192a8" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409192a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40919480"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40919560"/>
        <function-ref name="request" scoped="" ref="0x40919640"/>
        <function-ref name="granted" scoped="" ref="0x40919720"/>
        <function-ref name="isOwner" scoped="" ref="0x40919800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x409398b0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x409398b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40939b08"/>
        <function-ref name="toIdle" scoped="" ref="0x40939be8"/>
        <function-ref name="isState" scoped="" ref="0x40939cc8"/>
        <function-ref name="isIdle" scoped="" ref="0x40939da8"/>
        <function-ref name="requestState" scoped="" ref="0x40939e88"/>
        <function-ref name="forceState" scoped="" ref="0x40925010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x40938b18" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x40938b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40938cf0"/>
        <function-ref name="runTask" scoped="" ref="0x40938dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x40938308" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x40938308"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409384e0"/>
        <function-ref name="runTask" scoped="" ref="0x409385c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x40924aa0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x40924aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40924c78"/>
        <function-ref name="runTask" scoped="" ref="0x40924d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x4095d1f0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x4095d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x4095d3c8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x4095d4a8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x4095d588"/>
        <function-ref name="syncDone" scoped="" ref="0x4095d668"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x4095d748"/>
        <function-ref name="setShortAddr" scoped="" ref="0x4095d828"/>
        <function-ref name="setChannel" scoped="" ref="0x4095d908"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x4095d9e8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x4095dac8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x4095dba8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x4095dc88"/>
        <function-ref name="getShortAddr" scoped="" ref="0x4095dd68"/>
        <function-ref name="sync" scoped="" ref="0x4095de48"/>
        <function-ref name="getChannel" scoped="" ref="0x4095c010"/>
        <function-ref name="getPanAddr" scoped="" ref="0x4095c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x40958290" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x40958290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409588b8"/>
        <function-ref name="readDone" scoped="" ref="0x40958b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x4095c2c0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x4095c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x4095c498"/>
        <function-ref name="rfOff" scoped="" ref="0x4095c578"/>
        <function-ref name="rxOn" scoped="" ref="0x4095c658"/>
        <function-ref name="startVReg" scoped="" ref="0x4095c738"/>
        <function-ref name="stopVReg" scoped="" ref="0x4095c818"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4095c8f8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4095c9d8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4095cab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409609f0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409609f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40960bc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40960ca8"/>
        <function-ref name="request" scoped="" ref="0x40960d88"/>
        <function-ref name="granted" scoped="" ref="0x40960e68"/>
        <function-ref name="isOwner" scoped="" ref="0x4095d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40955118" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40955118"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x409552f0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x409553d0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x409554b0"/>
        <function-ref name="syncDone" scoped="" ref="0x40955590"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40955670"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40955750"/>
        <function-ref name="setChannel" scoped="" ref="0x40955830"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40955910"/>
        <function-ref name="setPanAddr" scoped="" ref="0x409559f0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40955ad0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40955bb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40955c90"/>
        <function-ref name="sync" scoped="" ref="0x40955d70"/>
        <function-ref name="getChannel" scoped="" ref="0x40955ed0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40970010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x4097c520" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4097c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097c6f8"/>
        <function-ref name="write" scoped="" ref="0x4097c7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x4096b100" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x4096b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x4096b2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x4096b6c8" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x4096b6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4096eb80"/>
        <function-ref name="fired" scoped="" ref="0x4096e350"/>
        <function-ref name="startAt" scoped="" ref="0x4096e840"/>
        <function-ref name="isRunning" scoped="" ref="0x4096e5c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x4096edf8"/>
        <function-ref name="start" scoped="" ref="0x4096be18"/>
        <function-ref name="stop" scoped="" ref="0x4096e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x40967a38" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40967a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40967c10"/>
        <function-ref name="write" scoped="" ref="0x40967cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x4096db08" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x4096db08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4096dce0"/>
        <function-ref name="isInput" scoped="" ref="0x4096ddc0"/>
        <function-ref name="toggle" scoped="" ref="0x4096dea0"/>
        <function-ref name="isOutput" scoped="" ref="0x4096a010"/>
        <function-ref name="get" scoped="" ref="0x4096a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4096a1d0"/>
        <function-ref name="set" scoped="" ref="0x4096a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4096a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x40970cc8" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x40970cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4096f310"/>
        <function-ref name="readDone" scoped="" ref="0x4096f568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x4098c948" loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x4098c948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4098cb20"/>
        <function-ref name="runTask" scoped="" ref="0x4098cc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x4097ca18" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4097ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097cbf0"/>
        <function-ref name="write" scoped="" ref="0x4097ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x4097cf20" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x4097cf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40979110"/>
        <function-ref name="write" scoped="" ref="0x409791f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x40967010" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40967010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409671e8"/>
        <function-ref name="write" scoped="" ref="0x409672c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40963740" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40963740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40963918"/>
        <function-ref name="changed" scoped="" ref="0x409639f8"/>
        <function-ref name="amGroup" scoped="" ref="0x40963ad8"/>
        <function-ref name="setAddress" scoped="" ref="0x40963bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x4096d100" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4096d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4096d2d8"/>
        <function-ref name="isInput" scoped="" ref="0x4096d3b8"/>
        <function-ref name="toggle" scoped="" ref="0x4096d498"/>
        <function-ref name="isOutput" scoped="" ref="0x4096d578"/>
        <function-ref name="get" scoped="" ref="0x4096d658"/>
        <function-ref name="makeOutput" scoped="" ref="0x4096d738"/>
        <function-ref name="set" scoped="" ref="0x4096d818"/>
        <function-ref name="clr" scoped="" ref="0x4096d8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x40978680" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40978680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40978958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x4096a5a0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x4096a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4096a778"/>
        <function-ref name="isInput" scoped="" ref="0x4096a858"/>
        <function-ref name="toggle" scoped="" ref="0x4096a938"/>
        <function-ref name="isOutput" scoped="" ref="0x4096aa18"/>
        <function-ref name="get" scoped="" ref="0x4096aaf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4096abd8"/>
        <function-ref name="set" scoped="" ref="0x4096acb8"/>
        <function-ref name="clr" scoped="" ref="0x4096ad98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4095b640" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4095b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4095b818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x4097c010" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4097c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097c1e8"/>
        <function-ref name="write" scoped="" ref="0x4097c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x40978ba0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40978ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40978d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40977010" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40977010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409771e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409772c8"/>
        <function-ref name="request" scoped="" ref="0x409773a8"/>
        <function-ref name="granted" scoped="" ref="0x40977488"/>
        <function-ref name="isOwner" scoped="" ref="0x40977568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x40976010" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x40976010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409761e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409762c8"/>
        <function-ref name="request" scoped="" ref="0x409763a8"/>
        <function-ref name="granted" scoped="" ref="0x40976488"/>
        <function-ref name="isOwner" scoped="" ref="0x40976568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x409701e0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x409701e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x409703b8"/>
        <function-ref name="rfOff" scoped="" ref="0x40970498"/>
        <function-ref name="rxOn" scoped="" ref="0x40970578"/>
        <function-ref name="startVReg" scoped="" ref="0x40970658"/>
        <function-ref name="stopVReg" scoped="" ref="0x40970738"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40970818"/>
        <function-ref name="stopOscillator" scoped="" ref="0x409708f8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x409709d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x40967518" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40967518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409676f0"/>
        <function-ref name="write" scoped="" ref="0x409677d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x4097aa88" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x4097aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097ac60"/>
        <function-ref name="write" scoped="" ref="0x4097ad40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x40979da8" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40979da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40978010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409766f8" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409766f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409768d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409769b0"/>
        <function-ref name="led1On" scoped="" ref="0x40976a90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40976b70"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40976c50"/>
        <function-ref name="get" scoped="" ref="0x40976d30"/>
        <function-ref name="led1Off" scoped="" ref="0x40976e10"/>
        <function-ref name="led2Off" scoped="" ref="0x409751d0"/>
        <function-ref name="set" scoped="" ref="0x40976ef0"/>
        <function-ref name="led0On" scoped="" ref="0x40975010"/>
        <function-ref name="led2On" scoped="" ref="0x409750f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x4098c168" loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x4098c168"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4098c340"/>
        <function-ref name="runTask" scoped="" ref="0x4098c420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4095b9d0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4095b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4095bba8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4095bc88"/>
        <function-ref name="request" scoped="" ref="0x4095bd68"/>
        <function-ref name="granted" scoped="" ref="0x4095be48"/>
        <function-ref name="isOwner" scoped="" ref="0x4095bf28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x40968308" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40968308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409684e0"/>
        <function-ref name="write" scoped="" ref="0x409685c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x4097dd88" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x4097dd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40968010"/>
        <function-ref name="write" scoped="" ref="0x409680f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x40966718" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x40966718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409668f0"/>
        <function-ref name="disable" scoped="" ref="0x409669d0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40966ab0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40966b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x409777c0" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x409777c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40977998"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40977a78"/>
        <function-ref name="request" scoped="" ref="0x40977b58"/>
        <function-ref name="granted" scoped="" ref="0x40977c38"/>
        <function-ref name="isOwner" scoped="" ref="0x40977d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x40978250" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40978250"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40978428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409b7290" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409b7290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409b7468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x409b7858" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x409b7858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409d2d58"/>
        <function-ref name="fired" scoped="" ref="0x409d2528"/>
        <function-ref name="startAt" scoped="" ref="0x409d2a18"/>
        <function-ref name="isRunning" scoped="" ref="0x409d27a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x409d0010"/>
        <function-ref name="start" scoped="" ref="0x409d2010"/>
        <function-ref name="stop" scoped="" ref="0x409d22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40ac5e78" loc="86:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ac5e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409ce350"/>
        <function-ref name="fired" scoped="" ref="0x409cfaf8"/>
        <function-ref name="startAt" scoped="" ref="0x409ce010"/>
        <function-ref name="isRunning" scoped="" ref="0x409cfd70"/>
        <function-ref name="getAlarm" scoped="" ref="0x409ce5c8"/>
        <function-ref name="start" scoped="" ref="0x409cf5e0"/>
        <function-ref name="stop" scoped="" ref="0x409cf880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409ce7f8" loc="87:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409ce7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409ce9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41923220" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41923220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x419226c8"/>
        <function-ref name="fired" scoped="" ref="0x41923e88"/>
        <function-ref name="startAt" scoped="" ref="0x41922388"/>
        <function-ref name="isRunning" scoped="" ref="0x41922110"/>
        <function-ref name="getAlarm" scoped="" ref="0x41922940"/>
        <function-ref name="start" scoped="" ref="0x41923970"/>
        <function-ref name="stop" scoped="" ref="0x41923c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4191f010" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4191f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="TOne" ref="0x404929a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4191e4e0"/>
        <function-ref name="fired" scoped="" ref="0x4191fc78"/>
        <function-ref name="startAt" scoped="" ref="0x4191e1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4191fef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4191e758"/>
        <function-ref name="start" scoped="" ref="0x4191f760"/>
        <function-ref name="stop" scoped="" ref="0x4191fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x409d3ae0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x409d3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x409d3cb8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x409d3d98"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x409d3e78"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x409d9010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x409d90f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x409d91d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x409d92b0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x409d9390"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x409d9470"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x409d9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x409ec998" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x409ec998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x409f0500"/>
        <function-ref name="test" scoped="" ref="0x409f0010"/>
        <function-ref name="get" scoped="" ref="0x409d8010"/>
        <function-ref name="captured" scoped="" ref="0x409d8528"/>
        <function-ref name="reset" scoped="" ref="0x409d87c8"/>
        <function-ref name="isOn" scoped="" ref="0x409f0288"/>
        <function-ref name="set" scoped="" ref="0x409d8288"/>
        <function-ref name="start" scoped="" ref="0x409d8a40"/>
        <function-ref name="stop" scoped="" ref="0x409d8cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x409f0c10" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x409f0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x409e91a0"/>
        <function-ref name="fired" scoped="" ref="0x409ea790"/>
        <function-ref name="get" scoped="" ref="0x409ea278"/>
        <function-ref name="reset" scoped="" ref="0x409eaa08"/>
        <function-ref name="isOn" scoped="" ref="0x409e9418"/>
        <function-ref name="set" scoped="" ref="0x409ea4f0"/>
        <function-ref name="start" scoped="" ref="0x409eac80"/>
        <function-ref name="stop" scoped="" ref="0x409eaef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409deb58" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409deb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x409da600"/>
        <function-ref name="test" scoped="" ref="0x409da110"/>
        <function-ref name="get" scoped="" ref="0x409db200"/>
        <function-ref name="setScale" scoped="" ref="0x409da878"/>
        <function-ref name="getScale" scoped="" ref="0x409dab18"/>
        <function-ref name="reset" scoped="" ref="0x409db990"/>
        <function-ref name="overflow" scoped="" ref="0x409db718"/>
        <function-ref name="isOn" scoped="" ref="0x409da388"/>
        <function-ref name="set" scoped="" ref="0x409db478"/>
        <function-ref name="start" scoped="" ref="0x409dbc08"/>
        <function-ref name="stop" scoped="" ref="0x409dbe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x409e3610" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x409e3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x409e37e8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x409e38c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x409e39a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x409e3a88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x409e3b68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x409e3c48"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x409e3d28"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x409e3e08"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x409e3ee8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x409e2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x409f7610" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x409f7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x409f77e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x409f78c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x409f79a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x409f7a88"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x409f7b68"/>
        <function-ref name="setControl" scoped="" ref="0x409f7c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x409fd268" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x409fd268"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x409fc7d0"/>
        <function-ref name="fired" scoped="" ref="0x409fddc8"/>
        <function-ref name="get" scoped="" ref="0x409fd8b0"/>
        <function-ref name="reset" scoped="" ref="0x409fc068"/>
        <function-ref name="isOn" scoped="" ref="0x409fca48"/>
        <function-ref name="set" scoped="" ref="0x409fdb28"/>
        <function-ref name="start" scoped="" ref="0x409fc2e0"/>
        <function-ref name="stop" scoped="" ref="0x409fc558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x409e2348" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x409e2348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x409ffdc8"/>
        <function-ref name="test" scoped="" ref="0x409ff8d8"/>
        <function-ref name="get" scoped="" ref="0x409e2990"/>
        <function-ref name="captured" scoped="" ref="0x409e2ea8"/>
        <function-ref name="reset" scoped="" ref="0x409ff170"/>
        <function-ref name="isOn" scoped="" ref="0x409ffb50"/>
        <function-ref name="set" scoped="" ref="0x409e2c08"/>
        <function-ref name="start" scoped="" ref="0x409ff3e8"/>
        <function-ref name="stop" scoped="" ref="0x409ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x409fce60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x409fce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x409f93e8"/>
        <function-ref name="fired" scoped="" ref="0x409fb9f0"/>
        <function-ref name="get" scoped="" ref="0x409fb4d8"/>
        <function-ref name="reset" scoped="" ref="0x409fbc68"/>
        <function-ref name="isOn" scoped="" ref="0x409f9660"/>
        <function-ref name="set" scoped="" ref="0x409fb750"/>
        <function-ref name="start" scoped="" ref="0x409fbee0"/>
        <function-ref name="stop" scoped="" ref="0x409f9170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x409f9a78" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x409f9a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x409f7010"/>
        <function-ref name="fired" scoped="" ref="0x409f85f0"/>
        <function-ref name="get" scoped="" ref="0x409f80d8"/>
        <function-ref name="reset" scoped="" ref="0x409f8868"/>
        <function-ref name="isOn" scoped="" ref="0x409f7288"/>
        <function-ref name="set" scoped="" ref="0x409f8350"/>
        <function-ref name="start" scoped="" ref="0x409f8ae0"/>
        <function-ref name="stop" scoped="" ref="0x409f8d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409e62b8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409e62b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x409e4d00"/>
        <function-ref name="test" scoped="" ref="0x409e4810"/>
        <function-ref name="get" scoped="" ref="0x409e6900"/>
        <function-ref name="setScale" scoped="" ref="0x409e3010"/>
        <function-ref name="getScale" scoped="" ref="0x409e32b0"/>
        <function-ref name="reset" scoped="" ref="0x409e40a8"/>
        <function-ref name="overflow" scoped="" ref="0x409e6e18"/>
        <function-ref name="isOn" scoped="" ref="0x409e4a88"/>
        <function-ref name="set" scoped="" ref="0x409e6b78"/>
        <function-ref name="start" scoped="" ref="0x409e4320"/>
        <function-ref name="stop" scoped="" ref="0x409e4598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a3cdb8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a3cdb8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x404195d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x404195d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a5a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40a5a220" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a5a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40a52c68"/>
        <function-ref name="test" scoped="" ref="0x40a52778"/>
        <function-ref name="get" scoped="" ref="0x40a5a868"/>
        <function-ref name="setScale" scoped="" ref="0x40a52ee0"/>
        <function-ref name="getScale" scoped="" ref="0x40a511c0"/>
        <function-ref name="reset" scoped="" ref="0x40a52010"/>
        <function-ref name="overflow" scoped="" ref="0x40a5ad80"/>
        <function-ref name="isOn" scoped="" ref="0x40a529f0"/>
        <function-ref name="set" scoped="" ref="0x40a5aae0"/>
        <function-ref name="start" scoped="" ref="0x40a52288"/>
        <function-ref name="stop" scoped="" ref="0x40a52500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41915d00" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41915d00"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x404193d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x404193d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="TOne" ref="0x404929a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x419121e8"/>
        <function-ref name="fired" scoped="" ref="0x41913990"/>
        <function-ref name="startAt" scoped="" ref="0x41913e80"/>
        <function-ref name="isRunning" scoped="" ref="0x41913c08"/>
        <function-ref name="getAlarm" scoped="" ref="0x41912460"/>
        <function-ref name="start" scoped="" ref="0x41913478"/>
        <function-ref name="stop" scoped="" ref="0x41913718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x4190f978" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x4190f978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4190ef08"/>
        <function-ref name="fired" scoped="" ref="0x4190e528"/>
        <function-ref name="get" scoped="" ref="0x4190e010"/>
        <function-ref name="reset" scoped="" ref="0x4190e7a0"/>
        <function-ref name="isOn" scoped="" ref="0x4190d1a0"/>
        <function-ref name="set" scoped="" ref="0x4190e288"/>
        <function-ref name="start" scoped="" ref="0x4190ea18"/>
        <function-ref name="stop" scoped="" ref="0x4190ec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x41912720" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x41912720"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4190f1a0"/>
        <function-ref name="test" scoped="" ref="0x41911c90"/>
        <function-ref name="get" scoped="" ref="0x41912d68"/>
        <function-ref name="setScale" scoped="" ref="0x4190f418"/>
        <function-ref name="getScale" scoped="" ref="0x4190f6b8"/>
        <function-ref name="reset" scoped="" ref="0x41911528"/>
        <function-ref name="overflow" scoped="" ref="0x419112b0"/>
        <function-ref name="isOn" scoped="" ref="0x41911f08"/>
        <function-ref name="set" scoped="" ref="0x41911010"/>
        <function-ref name="start" scoped="" ref="0x419117a0"/>
        <function-ref name="stop" scoped="" ref="0x41911a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a71928" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a71928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a6d088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a6d578"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a6d300"/>
        <function-ref name="overflow" scoped="" ref="0x40a6d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a8a3a0" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a8a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="TOne" ref="0x404929a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a8aaf0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a89010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a8ad68"/>
        <function-ref name="overflow" scoped="" ref="0x40a89288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a88b30" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a88b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="TOne" ref="0x404929a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a87308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a877f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a87580"/>
        <function-ref name="overflow" scoped="" ref="0x40a87a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40a87d50" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a87d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40a7b7f0"/>
        <function-ref name="test" scoped="" ref="0x40a7b300"/>
        <function-ref name="get" scoped="" ref="0x40a7c3e0"/>
        <function-ref name="setScale" scoped="" ref="0x40a7ba68"/>
        <function-ref name="getScale" scoped="" ref="0x40a7bd08"/>
        <function-ref name="reset" scoped="" ref="0x40a7cb70"/>
        <function-ref name="overflow" scoped="" ref="0x40a7c8f8"/>
        <function-ref name="isOn" scoped="" ref="0x40a7b578"/>
        <function-ref name="set" scoped="" ref="0x40a7c658"/>
        <function-ref name="start" scoped="" ref="0x40a7cde8"/>
        <function-ref name="stop" scoped="" ref="0x40a7b088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40aa80e0" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40aa80e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="TOne" ref="0x404929a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40aa8830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40aa8d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40aa8aa8"/>
        <function-ref name="overflow" scoped="" ref="0x40aa7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a98e60" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a98e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a975e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a97ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a97858"/>
        <function-ref name="overflow" scoped="" ref="0x40a97d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4191d9b0" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4191d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4191ce68"/>
        <function-ref name="fired" scoped="" ref="0x4191c638"/>
        <function-ref name="startAt" scoped="" ref="0x4191cb28"/>
        <function-ref name="isRunning" scoped="" ref="0x4191c8b0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4191a110"/>
        <function-ref name="start" scoped="" ref="0x4191c120"/>
        <function-ref name="stop" scoped="" ref="0x4191c3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x419196a0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x419196a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="TOne" ref="0x404929a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41918b50"/>
        <function-ref name="fired" scoped="" ref="0x41918320"/>
        <function-ref name="startAt" scoped="" ref="0x41918810"/>
        <function-ref name="isRunning" scoped="" ref="0x41918598"/>
        <function-ref name="getAlarm" scoped="" ref="0x41918dc8"/>
        <function-ref name="start" scoped="" ref="0x41919df0"/>
        <function-ref name="stop" scoped="" ref="0x419180a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4191a460" loc="68:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4191a460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4191abb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x419190b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4191ae28"/>
        <function-ref name="overflow" scoped="" ref="0x41919330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ac6bb0" loc="18:/opt/tinyos-2.1.2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ac6bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ac6d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x40ac0890" loc="87:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40ac0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac0a68"/>
        <function-ref name="isInput" scoped="" ref="0x40ac0b48"/>
        <function-ref name="toggle" scoped="" ref="0x40ac0c28"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac0d08"/>
        <function-ref name="get" scoped="" ref="0x40ac0de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac0ec8"/>
        <function-ref name="set" scoped="" ref="0x40abf010"/>
        <function-ref name="clr" scoped="" ref="0x40abf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x40abf2e8" loc="88:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40abf2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40abf4c0"/>
        <function-ref name="isInput" scoped="" ref="0x40abf5a0"/>
        <function-ref name="toggle" scoped="" ref="0x40abf680"/>
        <function-ref name="isOutput" scoped="" ref="0x40abf760"/>
        <function-ref name="get" scoped="" ref="0x40abf840"/>
        <function-ref name="makeOutput" scoped="" ref="0x40abf920"/>
        <function-ref name="set" scoped="" ref="0x40abfa00"/>
        <function-ref name="clr" scoped="" ref="0x40abfae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40abfcd0" loc="89:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40abfcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40abfea8"/>
        <function-ref name="isInput" scoped="" ref="0x40abe010"/>
        <function-ref name="toggle" scoped="" ref="0x40abe0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40abe1d0"/>
        <function-ref name="get" scoped="" ref="0x40abe2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40abe390"/>
        <function-ref name="set" scoped="" ref="0x40abe470"/>
        <function-ref name="clr" scoped="" ref="0x40abe550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x409b9e90" loc="86:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x409b9e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac0080"/>
        <function-ref name="isInput" scoped="" ref="0x40ac0160"/>
        <function-ref name="toggle" scoped="" ref="0x40ac0240"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac0320"/>
        <function-ref name="get" scoped="" ref="0x40ac0400"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac04e0"/>
        <function-ref name="set" scoped="" ref="0x40ac05c0"/>
        <function-ref name="clr" scoped="" ref="0x40ac06a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x40abd128" loc="91:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x40abd128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40abd300"/>
        <function-ref name="isInput" scoped="" ref="0x40abd3e0"/>
        <function-ref name="toggle" scoped="" ref="0x40abd4c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40abd5a0"/>
        <function-ref name="get" scoped="" ref="0x40abd680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40abd760"/>
        <function-ref name="set" scoped="" ref="0x40abd840"/>
        <function-ref name="clr" scoped="" ref="0x40abd920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x409b94b8" loc="85:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x409b94b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409b9690"/>
        <function-ref name="isInput" scoped="" ref="0x409b9770"/>
        <function-ref name="toggle" scoped="" ref="0x409b9850"/>
        <function-ref name="isOutput" scoped="" ref="0x409b9930"/>
        <function-ref name="get" scoped="" ref="0x409b9a10"/>
        <function-ref name="makeOutput" scoped="" ref="0x409b9af0"/>
        <function-ref name="set" scoped="" ref="0x409b9bd0"/>
        <function-ref name="clr" scoped="" ref="0x409b9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x40abe730" loc="90:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40abe730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40abe908"/>
        <function-ref name="isInput" scoped="" ref="0x40abe9e8"/>
        <function-ref name="toggle" scoped="" ref="0x40abeac8"/>
        <function-ref name="isOutput" scoped="" ref="0x40abeba8"/>
        <function-ref name="get" scoped="" ref="0x40abec88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40abed68"/>
        <function-ref name="set" scoped="" ref="0x40abee48"/>
        <function-ref name="clr" scoped="" ref="0x40abef28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x40ad5a28" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x40ad5a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40ad5c00"/>
        <function-ref name="disable" scoped="" ref="0x40ad5ce0"/>
        <function-ref name="captured" scoped="" ref="0x40ad5dc0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40ad5ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x40ad8188" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x40ad8188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ad8360"/>
        <function-ref name="disable" scoped="" ref="0x40ad8440"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40ad8520"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40ad8600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x40ad8898" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40ad8898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ad8a70"/>
        <function-ref name="disable" scoped="" ref="0x40ad8b50"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40ad8c30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40ad8d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40aecd28" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40aecd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40aecf00"/>
        <function-ref name="disable" scoped="" ref="0x40ad4010"/>
        <function-ref name="captured" scoped="" ref="0x40ad40f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40ad41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x40ad43e0" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x40ad43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40ad3f08"/>
        <function-ref name="test" scoped="" ref="0x40ad3a18"/>
        <function-ref name="get" scoped="" ref="0x40ad4a28"/>
        <function-ref name="captured" scoped="" ref="0x40ad3010"/>
        <function-ref name="reset" scoped="" ref="0x40ad32b0"/>
        <function-ref name="isOn" scoped="" ref="0x40ad3c90"/>
        <function-ref name="set" scoped="" ref="0x40ad4ca0"/>
        <function-ref name="start" scoped="" ref="0x40ad3528"/>
        <function-ref name="stop" scoped="" ref="0x40ad37a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40ae8050" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40ae8050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ae8228"/>
        <function-ref name="fired" scoped="" ref="0x40ae8308"/>
        <function-ref name="disable" scoped="" ref="0x40ae83e8"/>
        <function-ref name="edge" scoped="" ref="0x40ae84c8"/>
        <function-ref name="enable" scoped="" ref="0x40ae85a8"/>
        <function-ref name="getValue" scoped="" ref="0x40ae8688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40ae9a28" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40ae9a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ae9c00"/>
        <function-ref name="disable" scoped="" ref="0x40ae9ce0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40ae9dc0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40ae9ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x40afb890" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x40afb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40afba68"/>
        <function-ref name="fired" scoped="" ref="0x40afbb48"/>
        <function-ref name="disable" scoped="" ref="0x40afbc28"/>
        <function-ref name="edge" scoped="" ref="0x40afbd08"/>
        <function-ref name="enable" scoped="" ref="0x40afbde8"/>
        <function-ref name="getValue" scoped="" ref="0x40afbec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x40adcc30" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x40adcc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40adce08"/>
        <function-ref name="fired" scoped="" ref="0x40adcee8"/>
        <function-ref name="disable" scoped="" ref="0x40afd010"/>
        <function-ref name="edge" scoped="" ref="0x40afd0f0"/>
        <function-ref name="enable" scoped="" ref="0x40afd1d0"/>
        <function-ref name="getValue" scoped="" ref="0x40afd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x40afc6b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x40afc6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40afc890"/>
        <function-ref name="fired" scoped="" ref="0x40afc970"/>
        <function-ref name="disable" scoped="" ref="0x40afca50"/>
        <function-ref name="edge" scoped="" ref="0x40afcb30"/>
        <function-ref name="enable" scoped="" ref="0x40afcc10"/>
        <function-ref name="getValue" scoped="" ref="0x40afccf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x40af9168" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x40af9168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40af9340"/>
        <function-ref name="fired" scoped="" ref="0x40af9420"/>
        <function-ref name="disable" scoped="" ref="0x40af9500"/>
        <function-ref name="edge" scoped="" ref="0x40af95e0"/>
        <function-ref name="enable" scoped="" ref="0x40af96c0"/>
        <function-ref name="getValue" scoped="" ref="0x40af97a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x40afd4f8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x40afd4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40afd6d0"/>
        <function-ref name="fired" scoped="" ref="0x40afd7b0"/>
        <function-ref name="disable" scoped="" ref="0x40afd890"/>
        <function-ref name="edge" scoped="" ref="0x40afd970"/>
        <function-ref name="enable" scoped="" ref="0x40afda50"/>
        <function-ref name="getValue" scoped="" ref="0x40afdb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x40afb010" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x40afb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40afb1e8"/>
        <function-ref name="fired" scoped="" ref="0x40afb2c8"/>
        <function-ref name="disable" scoped="" ref="0x40afb3a8"/>
        <function-ref name="edge" scoped="" ref="0x40afb488"/>
        <function-ref name="enable" scoped="" ref="0x40afb568"/>
        <function-ref name="getValue" scoped="" ref="0x40afb648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x40adc3b0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x40adc3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40adc588"/>
        <function-ref name="fired" scoped="" ref="0x40adc668"/>
        <function-ref name="disable" scoped="" ref="0x40adc748"/>
        <function-ref name="edge" scoped="" ref="0x40adc828"/>
        <function-ref name="enable" scoped="" ref="0x40adc908"/>
        <function-ref name="getValue" scoped="" ref="0x40adc9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x40afdd78" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x40afdd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40afc010"/>
        <function-ref name="fired" scoped="" ref="0x40afc0f0"/>
        <function-ref name="disable" scoped="" ref="0x40afc1d0"/>
        <function-ref name="edge" scoped="" ref="0x40afc2b0"/>
        <function-ref name="enable" scoped="" ref="0x40afc390"/>
        <function-ref name="getValue" scoped="" ref="0x40afc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x40af4808" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x40af4808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40af49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x40af51a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x40af51a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40af5378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x40af5f08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x40af5f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40af40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x40af4c80" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x40af4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40af4e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x40af5618" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x40af5618"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40af57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x40af4390" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x40af4390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40af4568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x40af6c80" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x40af6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40af6e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x40af5a90" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x40af5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40af5c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40af7cf0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40af7cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40af7ec8"/>
        <function-ref name="fired" scoped="" ref="0x40b06010"/>
        <function-ref name="disable" scoped="" ref="0x40b060f0"/>
        <function-ref name="edge" scoped="" ref="0x40b061d0"/>
        <function-ref name="enable" scoped="" ref="0x40b062b0"/>
        <function-ref name="getValue" scoped="" ref="0x40b06390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40b06510" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40b06510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b066e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40b1ce68" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40b1ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b1b050"/>
        <function-ref name="fired" scoped="" ref="0x40b1b130"/>
        <function-ref name="disable" scoped="" ref="0x40b1b210"/>
        <function-ref name="edge" scoped="" ref="0x40b1b2f0"/>
        <function-ref name="enable" scoped="" ref="0x40b1b3d0"/>
        <function-ref name="getValue" scoped="" ref="0x40b1b4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40b1b630" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40b1b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b1b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40b19010" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40b19010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b191e8"/>
        <function-ref name="fired" scoped="" ref="0x40b192c8"/>
        <function-ref name="disable" scoped="" ref="0x40b193a8"/>
        <function-ref name="edge" scoped="" ref="0x40b19488"/>
        <function-ref name="enable" scoped="" ref="0x40b19568"/>
        <function-ref name="getValue" scoped="" ref="0x40b19648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40b197c8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40b197c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b199a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40b17228" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40b17228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b17400"/>
        <function-ref name="fired" scoped="" ref="0x40b174e0"/>
        <function-ref name="disable" scoped="" ref="0x40b175c0"/>
        <function-ref name="edge" scoped="" ref="0x40b176a0"/>
        <function-ref name="enable" scoped="" ref="0x40b17780"/>
        <function-ref name="getValue" scoped="" ref="0x40b17860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40b179e0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40b179e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b17bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40b15408" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40b15408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b155e0"/>
        <function-ref name="fired" scoped="" ref="0x40b156c0"/>
        <function-ref name="disable" scoped="" ref="0x40b157a0"/>
        <function-ref name="edge" scoped="" ref="0x40b15880"/>
        <function-ref name="enable" scoped="" ref="0x40b15960"/>
        <function-ref name="getValue" scoped="" ref="0x40b15a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40b15bc0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40b15bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b15d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40b125e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40b125e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b127c0"/>
        <function-ref name="fired" scoped="" ref="0x40b128a0"/>
        <function-ref name="disable" scoped="" ref="0x40b12980"/>
        <function-ref name="edge" scoped="" ref="0x40b12a60"/>
        <function-ref name="enable" scoped="" ref="0x40b12b40"/>
        <function-ref name="getValue" scoped="" ref="0x40b12c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40b12da0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40b12da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b11010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40b10840" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40b10840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b10a18"/>
        <function-ref name="fired" scoped="" ref="0x40b10af8"/>
        <function-ref name="disable" scoped="" ref="0x40b10bd8"/>
        <function-ref name="edge" scoped="" ref="0x40b10cb8"/>
        <function-ref name="enable" scoped="" ref="0x40b10d98"/>
        <function-ref name="getValue" scoped="" ref="0x40b10e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40b0f010" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40b0f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b0f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40b30a08" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40b30a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b30be0"/>
        <function-ref name="fired" scoped="" ref="0x40b30cc0"/>
        <function-ref name="disable" scoped="" ref="0x40b30da0"/>
        <function-ref name="edge" scoped="" ref="0x40b30e80"/>
        <function-ref name="enable" scoped="" ref="0x40b2f010"/>
        <function-ref name="getValue" scoped="" ref="0x40b2f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40b2f270" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40b2f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b2f448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x40b28250" loc="51:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x40b28250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b28428"/>
        <function-ref name="isInput" scoped="" ref="0x40b28508"/>
        <function-ref name="toggle" scoped="" ref="0x40b285e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b286c8"/>
        <function-ref name="get" scoped="" ref="0x40b287a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b28888"/>
        <function-ref name="set" scoped="" ref="0x40b28968"/>
        <function-ref name="clr" scoped="" ref="0x40b28a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x40b2bb80" loc="47:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40b2bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b2bd58"/>
        <function-ref name="disable" scoped="" ref="0x40b2be38"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40b2bf18"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40b28010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x40b27ac0" loc="69:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x40b27ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b27c98"/>
        <function-ref name="runTask" scoped="" ref="0x40b27d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40c90880" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40c90880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c90b58"/>
        <function-ref name="write" scoped="" ref="0x40c90c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40c6ebd8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40c6ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6edb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40c6ae50" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40c6ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c91050"/>
        <function-ref name="write" scoped="" ref="0x40c91130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40c8e6a8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40c8e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8e880"/>
        <function-ref name="write" scoped="" ref="0x40c8e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40c8eae0" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40c8eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8ecb8"/>
        <function-ref name="write" scoped="" ref="0x40c8ed98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40c88cb8" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40c88cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c88e90"/>
        <function-ref name="write" scoped="" ref="0x40c87010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40c8ab20" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40c8ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8acf8"/>
        <function-ref name="write" scoped="" ref="0x40c8add8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40c6c6c0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40c6c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40c8a2b0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c8a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8a488"/>
        <function-ref name="write" scoped="" ref="0x40c8a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40c916e8" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40c916e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c918c0"/>
        <function-ref name="write" scoped="" ref="0x40c919a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40c90010" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40c90010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c901e8"/>
        <function-ref name="write" scoped="" ref="0x40c902c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40c8c468" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40c8c468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8c640"/>
        <function-ref name="write" scoped="" ref="0x40c8c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40c8ef18" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40c8ef18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8d108"/>
        <function-ref name="write" scoped="" ref="0x40c8d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40c6e010" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40c6e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40c6e1e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40c6e2c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40c6e3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40c6b4e8" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40c6b4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40c6b840" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40c6b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6ba98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40c6bc18" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40c6bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40c8a6e8" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c8a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8a8c0"/>
        <function-ref name="write" scoped="" ref="0x40c8a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40c6cd70" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40c6cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40c91b20" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40c91b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c91cf8"/>
        <function-ref name="write" scoped="" ref="0x40c91dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40c912b0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40c912b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c91488"/>
        <function-ref name="write" scoped="" ref="0x40c91568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40c6e880" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40c6e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6ea58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40c88880" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40c88880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c88a58"/>
        <function-ref name="write" scoped="" ref="0x40c88b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40c88010" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40c88010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c881e8"/>
        <function-ref name="write" scoped="" ref="0x40c882c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40c8c8a0" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40c8c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8ca78"/>
        <function-ref name="write" scoped="" ref="0x40c8cb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40c8be38" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40c8be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8a050"/>
        <function-ref name="write" scoped="" ref="0x40c8a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40c8d7a0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40c8d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8d978"/>
        <function-ref name="write" scoped="" ref="0x40c8da58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40c87190" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40c87190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c87568"/>
        <function-ref name="writeDone" scoped="" ref="0x40c87648"/>
        <function-ref name="write" scoped="" ref="0x40c87728"/>
        <function-ref name="beginRead" scoped="" ref="0x40c87808"/>
        <function-ref name="readDone" scoped="" ref="0x40c878e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40c6e528" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40c6e528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40c6aa18" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40c6aa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c6abf0"/>
        <function-ref name="write" scoped="" ref="0x40c6acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40c90448" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40c90448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c90620"/>
        <function-ref name="write" scoped="" ref="0x40c90700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40c8d368" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40c8d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8d540"/>
        <function-ref name="write" scoped="" ref="0x40c8d620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40c90db8" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40c90db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8e010"/>
        <function-ref name="write" scoped="" ref="0x40c8e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40c6c010" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40c6c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40c8e270" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40c8e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8e448"/>
        <function-ref name="write" scoped="" ref="0x40c8e528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c6f918" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c6f918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c6faf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c6fbd0"/>
        <function-ref name="request" scoped="" ref="0x40c6fcb0"/>
        <function-ref name="granted" scoped="" ref="0x40c6fd90"/>
        <function-ref name="isOwner" scoped="" ref="0x40c6fe70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40c6a010" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40c6a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40c6a6c0" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40c6a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40c8ba00" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40c8ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8bbd8"/>
        <function-ref name="write" scoped="" ref="0x40c8bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40c8b5c8" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40c8b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8b7a0"/>
        <function-ref name="write" scoped="" ref="0x40c8b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40c6b190" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40c6b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6b368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40c8b190" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40c8b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8b368"/>
        <function-ref name="write" scoped="" ref="0x40c8b448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40c88448" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40c88448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c88620"/>
        <function-ref name="write" scoped="" ref="0x40c88700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40c8ccd8" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40c8ccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8ceb0"/>
        <function-ref name="write" scoped="" ref="0x40c8b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40c6c368" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40c6c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6c540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40c8c030" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40c8c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8c208"/>
        <function-ref name="write" scoped="" ref="0x40c8c2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40c6ca18" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40c6ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40c8dbd8" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40c8dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c8ddb0"/>
        <function-ref name="write" scoped="" ref="0x40c8de90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40c6a368" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40c6a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c6a540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40c87a68" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40c87a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c87c40"/>
        <function-ref name="writeDone" scoped="" ref="0x40c87d20"/>
        <function-ref name="write" scoped="" ref="0x40c87e00"/>
        <function-ref name="beginRead" scoped="" ref="0x40c87ee0"/>
        <function-ref name="readDone" scoped="" ref="0x40c86010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40b45340" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40b45340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b45518"/>
        <function-ref name="writeDone" scoped="" ref="0x40b455f8"/>
        <function-ref name="write" scoped="" ref="0x40b456d8"/>
        <function-ref name="beginRead" scoped="" ref="0x40b457b8"/>
        <function-ref name="readDone" scoped="" ref="0x40b45898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40b46a90" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40b46a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40b46c68"/>
        <function-ref name="abortRelease" scoped="" ref="0x40b46d48"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40b46e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40b45d88" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40b45d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b44010"/>
        <function-ref name="write" scoped="" ref="0x40b440f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x40b44600" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x40b44600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b447d8"/>
        <function-ref name="write" scoped="" ref="0x40b448b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b46340" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b46340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b46518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b465f8"/>
        <function-ref name="request" scoped="" ref="0x40b466d8"/>
        <function-ref name="granted" scoped="" ref="0x40b467b8"/>
        <function-ref name="isOwner" scoped="" ref="0x40b46898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x40b44dd8" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x40b44dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b43010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x40b5adc8" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40b5adc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b5e010"/>
        <function-ref name="sendDone" scoped="" ref="0x40b5e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40b62c28" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40b62c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b62e00"/>
        <function-ref name="writeDone" scoped="" ref="0x40b62ee0"/>
        <function-ref name="write" scoped="" ref="0x40b61010"/>
        <function-ref name="beginRead" scoped="" ref="0x40b610f0"/>
        <function-ref name="readDone" scoped="" ref="0x40b611d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40b439a8" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40b439a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40b43b80"/>
        <function-ref name="abortRelease" scoped="" ref="0x40b43c60"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40b43d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x40b5fa80" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40b5fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40b5fc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x40b5e308" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x40b5e308"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b5e4e0"/>
        <function-ref name="toIdle" scoped="" ref="0x40b5e5c0"/>
        <function-ref name="isState" scoped="" ref="0x40b5e6a0"/>
        <function-ref name="isIdle" scoped="" ref="0x40b5e780"/>
        <function-ref name="requestState" scoped="" ref="0x40b5e860"/>
        <function-ref name="forceState" scoped="" ref="0x40b5e940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40b60a70" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40b60a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b60c48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b60d28"/>
        <function-ref name="request" scoped="" ref="0x40b60e08"/>
        <function-ref name="granted" scoped="" ref="0x40b60ee8"/>
        <function-ref name="isOwner" scoped="" ref="0x40b5f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40b616a0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40b616a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b61878"/>
        <function-ref name="write" scoped="" ref="0x40b61958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x40b61e48" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x40b61e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b60050"/>
        <function-ref name="write" scoped="" ref="0x40b60130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40b5eab0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b5eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b5ec88"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b5ed68"/>
        <function-ref name="led1On" scoped="" ref="0x40b5ee48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b5ef28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b5d018"/>
        <function-ref name="get" scoped="" ref="0x40b5d0f8"/>
        <function-ref name="led1Off" scoped="" ref="0x40b5d1d8"/>
        <function-ref name="led2Off" scoped="" ref="0x40b5d558"/>
        <function-ref name="set" scoped="" ref="0x40b5d2b8"/>
        <function-ref name="led0On" scoped="" ref="0x40b5d398"/>
        <function-ref name="led2On" scoped="" ref="0x40b5d478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b621f8" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b621f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b623d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b624b0"/>
        <function-ref name="request" scoped="" ref="0x40b62590"/>
        <function-ref name="granted" scoped="" ref="0x40b62670"/>
        <function-ref name="isOwner" scoped="" ref="0x40b62750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x40b57818" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x40b57818"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b579f0"/>
        <function-ref name="runTask" scoped="" ref="0x40b57ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x40b60630" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x40b60630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b60808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40b8ce40" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40b8ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b91050"/>
        <function-ref name="toIdle" scoped="" ref="0x40b91130"/>
        <function-ref name="isState" scoped="" ref="0x40b91210"/>
        <function-ref name="isIdle" scoped="" ref="0x40b912f0"/>
        <function-ref name="requestState" scoped="" ref="0x40b913d0"/>
        <function-ref name="forceState" scoped="" ref="0x40b914b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40b8b100" loc="66:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40b8b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b8b2d8"/>
        <function-ref name="toIdle" scoped="" ref="0x40b8b3b8"/>
        <function-ref name="isState" scoped="" ref="0x40b8b498"/>
        <function-ref name="isIdle" scoped="" ref="0x40b8b578"/>
        <function-ref name="requestState" scoped="" ref="0x40b8b658"/>
        <function-ref name="forceState" scoped="" ref="0x40b8b738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bab128" loc="66:/opt/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bab128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bab300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40bab758" loc="67:/opt/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40bab758"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40bab930"/>
        <function-ref name="toIdle" scoped="" ref="0x40baba10"/>
        <function-ref name="isState" scoped="" ref="0x40babaf0"/>
        <function-ref name="isIdle" scoped="" ref="0x40babbd0"/>
        <function-ref name="requestState" scoped="" ref="0x40babcb0"/>
        <function-ref name="forceState" scoped="" ref="0x40babd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40c57668" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40c57668"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c57840"/>
        <function-ref name="sendDone" scoped="" ref="0x40c57920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40c57330" loc="42:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40c57330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40c57508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bac8b0" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bac8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40baca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40bacbe8" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40bacbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bacdc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bacea0"/>
        <function-ref name="request" scoped="" ref="0x40c57010"/>
        <function-ref name="granted" scoped="" ref="0x40c570f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c571d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40bbd648" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40bbd648"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bbd820"/>
        <function-ref name="sendDone" scoped="" ref="0x40bbd900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40b9dd48" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40b9dd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40b9df20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b9d9c8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b9d9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b9dba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40bbd010" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40bbd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40bbd1e8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40bbd2c8"/>
        <function-ref name="splitRead" scoped="" ref="0x40bbd3a8"/>
        <function-ref name="write" scoped="" ref="0x40bbd488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40bbdd98" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40bbdd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bbc010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bbc0f0"/>
        <function-ref name="request" scoped="" ref="0x40bbc1d0"/>
        <function-ref name="granted" scoped="" ref="0x40bbc2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40bbc390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40bda860" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40bda860"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bdaa38"/>
        <function-ref name="runTask" scoped="" ref="0x40bdab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40bb7d10" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40bb7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bb7ee8"/>
        <function-ref name="sendDone" scoped="" ref="0x40bb6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40bb4158" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40bb4158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bb4330"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bb4410"/>
        <function-ref name="request" scoped="" ref="0x40bb44f0"/>
        <function-ref name="granted" scoped="" ref="0x40bb45d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40bb46b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40bb7370" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40bb7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40bb7548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bb7010" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bb7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bb71e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40bc94d0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40bc94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40bc96a8"/>
        <function-ref name="sleep" scoped="" ref="0x40bb5b10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40bc9868"/>
        <function-ref name="dataReady" scoped="" ref="0x40bb5bf0"/>
        <function-ref name="initMaster" scoped="" ref="0x40bc9a28"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40bc9b08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40bc9be8"/>
        <function-ref name="read" scoped="" ref="0x40bc9cc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40bc9da8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40bc9e88"/>
        <function-ref name="setClock" scoped="" ref="0x40bb5010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40bb50f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40bb51d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40bb5330"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40bb5410"/>
        <function-ref name="write" scoped="" ref="0x40bb54f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40bb55d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40bb56b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40bb5790"/>
        <function-ref name="getClock" scoped="" ref="0x40bb5870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40bb5950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40bc9788"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40bc9948"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40bb5a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40bb76f8" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40bb76f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40bb78d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40bb79b0"/>
        <function-ref name="splitRead" scoped="" ref="0x40bb7a90"/>
        <function-ref name="write" scoped="" ref="0x40bb7b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40bb6488" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40bb6488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bb6660"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bb6740"/>
        <function-ref name="request" scoped="" ref="0x40bb6820"/>
        <function-ref name="granted" scoped="" ref="0x40bb6900"/>
        <function-ref name="isOwner" scoped="" ref="0x40bb69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40bc67b8" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40bc67b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40bc6990"/>
        <function-ref name="userId" scoped="" ref="0x40bc6a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40bc6c38" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40bc6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40bc6e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40bb93c8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40bb93c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40bb95a0"/>
        <function-ref name="sleep" scoped="" ref="0x40be6a30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40bb9760"/>
        <function-ref name="dataReady" scoped="" ref="0x40be6b10"/>
        <function-ref name="initMaster" scoped="" ref="0x40bb9920"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40bb9a00"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40bb9ae0"/>
        <function-ref name="read" scoped="" ref="0x40bb9bc0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40bb9ca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40bb9d80"/>
        <function-ref name="setClock" scoped="" ref="0x40bb9e60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40be6010"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40be60f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40be6250"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40be6330"/>
        <function-ref name="write" scoped="" ref="0x40be6410"/>
        <function-ref name="enableSpi" scoped="" ref="0x40be64f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40be65d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40be66b0"/>
        <function-ref name="getClock" scoped="" ref="0x40be6790"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40be6870"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40bb9680"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40bb9840"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40be6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40c044a0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40c044a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c04678"/>
        <function-ref name="isInput" scoped="" ref="0x40c04758"/>
        <function-ref name="toggle" scoped="" ref="0x40c04838"/>
        <function-ref name="isOutput" scoped="" ref="0x40c04918"/>
        <function-ref name="get" scoped="" ref="0x40c049f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c04ad8"/>
        <function-ref name="set" scoped="" ref="0x40c04bb8"/>
        <function-ref name="clr" scoped="" ref="0x40c04c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40c05050" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40c05050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c05228"/>
        <function-ref name="isInput" scoped="" ref="0x40c05308"/>
        <function-ref name="toggle" scoped="" ref="0x40c053e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c054c8"/>
        <function-ref name="get" scoped="" ref="0x40c055a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c05688"/>
        <function-ref name="set" scoped="" ref="0x40c05768"/>
        <function-ref name="clr" scoped="" ref="0x40c05848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40c03658" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40c03658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c03830"/>
        <function-ref name="isInput" scoped="" ref="0x40c03910"/>
        <function-ref name="toggle" scoped="" ref="0x40c039f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c03ad0"/>
        <function-ref name="get" scoped="" ref="0x40c03bb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c03c90"/>
        <function-ref name="set" scoped="" ref="0x40c03d70"/>
        <function-ref name="clr" scoped="" ref="0x40c03e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40c03198" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40c03198"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c03370"/>
        <function-ref name="stop" scoped="" ref="0x40c03450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40c04ea0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40c04ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40c020c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40be47d8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40be47d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40be49b0"/>
        <function-ref name="sleep" scoped="" ref="0x40c07db0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40be4b70"/>
        <function-ref name="dataReady" scoped="" ref="0x40c07e90"/>
        <function-ref name="initMaster" scoped="" ref="0x40be4d30"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40be4e10"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40be4ef0"/>
        <function-ref name="read" scoped="" ref="0x40c07010"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40c070f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40c071d0"/>
        <function-ref name="setClock" scoped="" ref="0x40c072b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40c07390"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40c07470"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40c075d0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40c076b0"/>
        <function-ref name="write" scoped="" ref="0x40c07790"/>
        <function-ref name="enableSpi" scoped="" ref="0x40c07870"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40c07950"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40c07a30"/>
        <function-ref name="getClock" scoped="" ref="0x40c07b10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40c07bf0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40be4a90"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40be4c50"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40c07cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40c05a38" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40c05a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c05c10"/>
        <function-ref name="isInput" scoped="" ref="0x40c05cf0"/>
        <function-ref name="toggle" scoped="" ref="0x40c05dd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c05eb0"/>
        <function-ref name="get" scoped="" ref="0x40c04010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c040f0"/>
        <function-ref name="set" scoped="" ref="0x40c041d0"/>
        <function-ref name="clr" scoped="" ref="0x40c042b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40c26490" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40c26490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40c26678"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c26758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40c26d48" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40c26d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40c63010"/>
        <function-ref name="configure" scoped="" ref="0x40c630f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c27d40" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c27d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c27f28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c26018"/>
        <function-ref name="request" scoped="" ref="0x40c260f8"/>
        <function-ref name="granted" scoped="" ref="0x40c261d8"/>
        <function-ref name="isOwner" scoped="" ref="0x40c262b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40c26898" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40c26898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40c26a70"/>
        <function-ref name="userId" scoped="" ref="0x40c26b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4195fdf0" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4195fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4195d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x4195d170" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x4195d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4195d348"/>
        <function-ref name="isEmpty" scoped="" ref="0x4195d428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4195d508"/>
        <function-ref name="dequeue" scoped="" ref="0x4195d5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4195b8c0" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4195b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4195baa8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4195bb88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x419b9218" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x419b9218"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x419b9400"/>
        <function-ref name="configure" scoped="" ref="0x419b94e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x419b9640" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x419b9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x419b9818"/>
        <function-ref name="isEmpty" scoped="" ref="0x419b98f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x419b99d8"/>
        <function-ref name="dequeue" scoped="" ref="0x419b9ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4195b180" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4195b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4195b368"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4195b448"/>
        <function-ref name="request" scoped="" ref="0x4195b528"/>
        <function-ref name="granted" scoped="" ref="0x4195b608"/>
        <function-ref name="isOwner" scoped="" ref="0x4195b6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4195bcc8" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4195bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4195bea0"/>
        <function-ref name="userId" scoped="" ref="0x419b9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x419b9c38" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x419b9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x419b9e10"/>
        <function-ref name="runTask" scoped="" ref="0x419b9ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40c5e488" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40c5e488"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c5e660"/>
        <function-ref name="isInput" scoped="" ref="0x40c5e740"/>
        <function-ref name="toggle" scoped="" ref="0x40c5e820"/>
        <function-ref name="isOutput" scoped="" ref="0x40c5e900"/>
        <function-ref name="get" scoped="" ref="0x40c5e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c5eac0"/>
        <function-ref name="set" scoped="" ref="0x40c5eba0"/>
        <function-ref name="clr" scoped="" ref="0x40c5ec80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c61570" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c61570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c61748"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c61828"/>
        <function-ref name="request" scoped="" ref="0x40c61908"/>
        <function-ref name="granted" scoped="" ref="0x40c619e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40c61ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x40c61d30" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x40c61d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c61f08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c5e010"/>
        <function-ref name="request" scoped="" ref="0x40c5e0f0"/>
        <function-ref name="granted" scoped="" ref="0x40c5e1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c5e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40ca25c8" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40ca25c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca28a0"/>
        <function-ref name="write" scoped="" ref="0x40ca2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40c80920" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40c80920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c80af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40ca4af8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40ca4af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca4cd0"/>
        <function-ref name="write" scoped="" ref="0x40ca4db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40ca1448" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40ca1448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca1620"/>
        <function-ref name="write" scoped="" ref="0x40ca1700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40ca1880" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40ca1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca1a58"/>
        <function-ref name="write" scoped="" ref="0x40ca1b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40c9bb20" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40c9bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9bcf8"/>
        <function-ref name="write" scoped="" ref="0x40c9bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40c9ca00" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40c9ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9cbd8"/>
        <function-ref name="write" scoped="" ref="0x40c9ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40c7f368" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40c7f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c7f540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40c9c190" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c9c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9c368"/>
        <function-ref name="write" scoped="" ref="0x40c9c448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40ca3448" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40ca3448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca3620"/>
        <function-ref name="write" scoped="" ref="0x40ca3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40ca3cb8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40ca3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca3e90"/>
        <function-ref name="write" scoped="" ref="0x40ca2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40c9e2b0" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40c9e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9e488"/>
        <function-ref name="write" scoped="" ref="0x40c9e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40ca1cb8" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40ca1cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca1e90"/>
        <function-ref name="write" scoped="" ref="0x40ca0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40c81c78" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40c81c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40c81e50"/>
        <function-ref name="abortRelease" scoped="" ref="0x40c80010"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40c800f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40c7e190" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40c7e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c7e368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40c7e4e8" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40c7e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c7e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40c7e8c0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40c7e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c7ea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40c9c5c8" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c9c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9c7a0"/>
        <function-ref name="write" scoped="" ref="0x40c9c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40c7fa18" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40c7fa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c7fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40ca3880" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40ca3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca3a58"/>
        <function-ref name="write" scoped="" ref="0x40ca3b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40ca3010" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40ca3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca31e8"/>
        <function-ref name="write" scoped="" ref="0x40ca32c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40c805c8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40c805c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c807a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40c9b6e8" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40c9b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9b8c0"/>
        <function-ref name="write" scoped="" ref="0x40c9b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40c9ce38" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40c9ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9b050"/>
        <function-ref name="write" scoped="" ref="0x40c9b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40c9e6e8" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40c9e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9e8c0"/>
        <function-ref name="write" scoped="" ref="0x40c9e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40c9dcb8" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40c9dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9de90"/>
        <function-ref name="write" scoped="" ref="0x40c9c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40ca05c8" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40ca05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca07a0"/>
        <function-ref name="write" scoped="" ref="0x40ca0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40c9a010" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40c9a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c9a3e8"/>
        <function-ref name="writeDone" scoped="" ref="0x40c9a4c8"/>
        <function-ref name="write" scoped="" ref="0x40c9a5a8"/>
        <function-ref name="beginRead" scoped="" ref="0x40c9a688"/>
        <function-ref name="readDone" scoped="" ref="0x40c9a768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40c80270" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40c80270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c80448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40ca46c0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40ca46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca4898"/>
        <function-ref name="write" scoped="" ref="0x40ca4978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40ca2190" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40ca2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca2368"/>
        <function-ref name="write" scoped="" ref="0x40ca2448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40ca0190" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40ca0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca0368"/>
        <function-ref name="write" scoped="" ref="0x40ca0448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40ca2b00" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40ca2b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca2cd8"/>
        <function-ref name="write" scoped="" ref="0x40ca2db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40c80c78" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40c80c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c80e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40ca1010" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40ca1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca11e8"/>
        <function-ref name="write" scoped="" ref="0x40ca12c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c815c0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c815c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c81798"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c81878"/>
        <function-ref name="request" scoped="" ref="0x40c81958"/>
        <function-ref name="granted" scoped="" ref="0x40c81a38"/>
        <function-ref name="isOwner" scoped="" ref="0x40c81b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40c7ec18" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40c7ec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c7edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40ca4368" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40ca4368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ca4540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40c9d880" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40c9d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9da58"/>
        <function-ref name="write" scoped="" ref="0x40c9db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40c9d448" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40c9d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9d620"/>
        <function-ref name="write" scoped="" ref="0x40c9d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40c7fd70" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40c7fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c7e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40c9d010" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40c9d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9d1e8"/>
        <function-ref name="write" scoped="" ref="0x40c9d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40c9b2b0" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40c9b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9b488"/>
        <function-ref name="write" scoped="" ref="0x40c9b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40c9eb20" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40c9eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9ecf8"/>
        <function-ref name="write" scoped="" ref="0x40c9edd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40c7f010" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40c7f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c7f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40ca0e38" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40ca0e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9e050"/>
        <function-ref name="write" scoped="" ref="0x40c9e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40c7f6c0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40c7f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c7f898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40ca0a00" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40ca0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca0bd8"/>
        <function-ref name="write" scoped="" ref="0x40ca0cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40ca4010" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40ca4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ca41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40c9a8e8" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40c9a8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c9aac0"/>
        <function-ref name="writeDone" scoped="" ref="0x40c9aba0"/>
        <function-ref name="write" scoped="" ref="0x40c9ac80"/>
        <function-ref name="beginRead" scoped="" ref="0x40c9ad60"/>
        <function-ref name="readDone" scoped="" ref="0x40c9ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40cb7e38" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40cb7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb6208"/>
        <function-ref name="write" scoped="" ref="0x40cb62e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40c94368" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40c94368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c94540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40cb94b8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40cb94b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb9690"/>
        <function-ref name="write" scoped="" ref="0x40cb9770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40cb6cd8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40cb6cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb6eb0"/>
        <function-ref name="write" scoped="" ref="0x40cb5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40cb5190" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40cb5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb5368"/>
        <function-ref name="write" scoped="" ref="0x40cb5448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40caf448" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40caf448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40caf620"/>
        <function-ref name="write" scoped="" ref="0x40caf700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40cb02b0" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40cb02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb0488"/>
        <function-ref name="write" scoped="" ref="0x40cb0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40c94d70" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40c94d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c93010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40cb2a00" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40cb2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb2bd8"/>
        <function-ref name="write" scoped="" ref="0x40cb2cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40cb9d28" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40cb9d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb9f00"/>
        <function-ref name="write" scoped="" ref="0x40cb7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40cb75c8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40cb75c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb77a0"/>
        <function-ref name="write" scoped="" ref="0x40cb7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40cb4b20" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40cb4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb4cf8"/>
        <function-ref name="write" scoped="" ref="0x40cb4dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40cb55c8" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40cb55c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb57a0"/>
        <function-ref name="write" scoped="" ref="0x40cb5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40c966c8" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40c966c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40c968a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x40c96980"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40c96a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40c93b98" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40c93b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c93d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40c93ef0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40c93ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c92188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40c92308" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40c92308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c924e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40cb2e38" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40cb2e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb0050"/>
        <function-ref name="write" scoped="" ref="0x40cb0130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40c934e8" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40c934e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c936c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40cb7190" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40cb7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb7368"/>
        <function-ref name="write" scoped="" ref="0x40cb7448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40cb98f0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40cb98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb9ac8"/>
        <function-ref name="write" scoped="" ref="0x40cb9ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40c94010" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40c94010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c941e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40caf010" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40caf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40caf1e8"/>
        <function-ref name="write" scoped="" ref="0x40caf2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40cb06e8" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40cb06e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb08c0"/>
        <function-ref name="write" scoped="" ref="0x40cb09a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40cb3010" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40cb3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb31e8"/>
        <function-ref name="write" scoped="" ref="0x40cb32c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40cb25c8" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40cb25c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb27a0"/>
        <function-ref name="write" scoped="" ref="0x40cb2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40cb5e38" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40cb5e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb4050"/>
        <function-ref name="write" scoped="" ref="0x40cb4130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40caf880" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40caf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40cafc58"/>
        <function-ref name="writeDone" scoped="" ref="0x40cafd38"/>
        <function-ref name="write" scoped="" ref="0x40cafe18"/>
        <function-ref name="beginRead" scoped="" ref="0x40cafef8"/>
        <function-ref name="readDone" scoped="" ref="0x40cae010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40c96be0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40c96be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c96db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40cb9080" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40cb9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb9258"/>
        <function-ref name="write" scoped="" ref="0x40cb9338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40cb7a00" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40cb7a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb7bd8"/>
        <function-ref name="write" scoped="" ref="0x40cb7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40cb5a00" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40cb5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb5bd8"/>
        <function-ref name="write" scoped="" ref="0x40cb5cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40cb6468" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40cb6468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb6640"/>
        <function-ref name="write" scoped="" ref="0x40cb6720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40c946c0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40c946c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c94898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40cb68a0" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40cb68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb6a78"/>
        <function-ref name="write" scoped="" ref="0x40cb6b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c96010" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c96010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c961e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c962c8"/>
        <function-ref name="request" scoped="" ref="0x40c963a8"/>
        <function-ref name="granted" scoped="" ref="0x40c96488"/>
        <function-ref name="isOwner" scoped="" ref="0x40c96568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40c92660" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40c92660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c92838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40c92d10" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40c92d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c92ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40cb2190" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40cb2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb2368"/>
        <function-ref name="write" scoped="" ref="0x40cb2448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40cb3cb8" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40cb3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb3e90"/>
        <function-ref name="write" scoped="" ref="0x40cb2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40c93840" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40c93840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c93a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40cb3880" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40cb3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb3a58"/>
        <function-ref name="write" scoped="" ref="0x40cb3b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40cb0b20" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40cb0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb0cf8"/>
        <function-ref name="write" scoped="" ref="0x40cb0dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40cb3448" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40cb3448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb3620"/>
        <function-ref name="write" scoped="" ref="0x40cb3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40c94a18" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40c94a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c94bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40cb46e8" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40cb46e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb48c0"/>
        <function-ref name="write" scoped="" ref="0x40cb49a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40c93190" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40c93190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c93368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40cb42b0" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40cb42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb4488"/>
        <function-ref name="write" scoped="" ref="0x40cb4568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40c929b8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40c929b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c92b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40cae190" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40cae190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40cae368"/>
        <function-ref name="writeDone" scoped="" ref="0x40cae448"/>
        <function-ref name="write" scoped="" ref="0x40cae528"/>
        <function-ref name="beginRead" scoped="" ref="0x40cae608"/>
        <function-ref name="readDone" scoped="" ref="0x40cae6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40cab968" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40cab968"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40cabb40"/>
        <function-ref name="changed" scoped="" ref="0x40cabc20"/>
        <function-ref name="amGroup" scoped="" ref="0x40cabd00"/>
        <function-ref name="setAddress" scoped="" ref="0x40cabde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x40caa248" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40caa248"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x40caa420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40cbd808" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40cbd808"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40cbd9e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40cbdac0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40cbdba0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40cbdc80"/>
        <function-ref name="setCca" scoped="" ref="0x40cbdd60"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40cbde40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40cbc8e0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40cbc8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40cbcab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x40cbd0f0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x40cbd0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cbd2c8"/>
        <function-ref name="cancel" scoped="" ref="0x40cbd3a8"/>
        <function-ref name="modify" scoped="" ref="0x40cbd488"/>
        <function-ref name="sendDone" scoped="" ref="0x40cbd568"/>
        <function-ref name="resend" scoped="" ref="0x40cbd648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40cc0c08" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40cc0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cc0de0"/>
        <function-ref name="stop" scoped="" ref="0x40cc0ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40cbcd48" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40cbcd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40cbcf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40cdf3b0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40cdf3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40cdf588"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40cdf668"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40cdf748"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40cdf828"/>
        <function-ref name="setCca" scoped="" ref="0x40cdf908"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40cdf9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40cda128" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40cda128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40cdac28"/>
        <function-ref name="clear" scoped="" ref="0x40cd9010"/>
        <function-ref name="isValid" scoped="" ref="0x40cda878"/>
        <function-ref name="set" scoped="" ref="0x40cd93c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40ccecd0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40ccecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cceea8"/>
        <function-ref name="write" scoped="" ref="0x40cf7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40cf7220" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40cf7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cf73f8"/>
        <function-ref name="write" scoped="" ref="0x40cf74d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40cdfca8" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40cdfca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40cdfe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x40ccf4c8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40ccf4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ccf6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x40cd86e0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x40cd86e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40cd88b8"/>
        <function-ref name="disable" scoped="" ref="0x40cd8998"/>
        <function-ref name="captured" scoped="" ref="0x40cd8a78"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40cd8b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x40cde778" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x40cde778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cddc38"/>
        <function-ref name="fired" scoped="" ref="0x40cdd408"/>
        <function-ref name="startAt" scoped="" ref="0x40cdd8f8"/>
        <function-ref name="isRunning" scoped="" ref="0x40cdd680"/>
        <function-ref name="getAlarm" scoped="" ref="0x40cddeb0"/>
        <function-ref name="start" scoped="" ref="0x40cdeec8"/>
        <function-ref name="stop" scoped="" ref="0x40cdd190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40cdb188" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40cdb188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40cdb360"/>
        <function-ref name="setNetwork" scoped="" ref="0x40cdb440"/>
        <function-ref name="getRssi" scoped="" ref="0x40cdb520"/>
        <function-ref name="getNetwork" scoped="" ref="0x40cdb600"/>
        <function-ref name="getPower" scoped="" ref="0x40cdb6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x40cdb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x40cd1258" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40cd1258"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd1430"/>
        <function-ref name="write" scoped="" ref="0x40cd1510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x40cd1760" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40cd1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd1938"/>
        <function-ref name="write" scoped="" ref="0x40cd1a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x40cf3970" loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40cf3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cf3b48"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40cf3c28"/>
        <function-ref name="sfd" scoped="" ref="0x40cf3d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ce0c60" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ce0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ce0e38"/>
        <function-ref name="cancel" scoped="" ref="0x40ce0f18"/>
        <function-ref name="modify" scoped="" ref="0x40cdf010"/>
        <function-ref name="sendDone" scoped="" ref="0x40cdf0f0"/>
        <function-ref name="resend" scoped="" ref="0x40cdf1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x40cd24a8" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40cd24a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40cd2680"/>
        <function-ref name="abortRelease" scoped="" ref="0x40cd2760"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40cd2840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x40ccf8f8" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40ccf8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ccfad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40cd7830" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40cd7830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cd7a08"/>
        <function-ref name="isInput" scoped="" ref="0x40cd7ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40cd7bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40cd7ca8"/>
        <function-ref name="get" scoped="" ref="0x40cd7d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cd7e68"/>
        <function-ref name="set" scoped="" ref="0x40cd3010"/>
        <function-ref name="clr" scoped="" ref="0x40cd30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ce03c8" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ce03c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ce05a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40cdb9c8" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40cdb9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40cdbba0"/>
        <function-ref name="getHeader" scoped="" ref="0x40cdbc80"/>
        <function-ref name="getMetadata" scoped="" ref="0x40cdbd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40cd8010" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40cd8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cd81e8"/>
        <function-ref name="isSet" scoped="" ref="0x40cd82c8"/>
        <function-ref name="cancel" scoped="" ref="0x40cd83a8"/>
        <function-ref name="set" scoped="" ref="0x40cd8488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40ccfd38" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40ccfd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cce050"/>
        <function-ref name="write" scoped="" ref="0x40cce130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40cd3d30" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40cd3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cd3f08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cd2010"/>
        <function-ref name="request" scoped="" ref="0x40cd20f0"/>
        <function-ref name="granted" scoped="" ref="0x40cd21d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40cd22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x40cd8d58" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40cd8d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cd7010"/>
        <function-ref name="isInput" scoped="" ref="0x40cd70f0"/>
        <function-ref name="toggle" scoped="" ref="0x40cd71d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cd72b0"/>
        <function-ref name="get" scoped="" ref="0x40cd7390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cd7470"/>
        <function-ref name="set" scoped="" ref="0x40cd7550"/>
        <function-ref name="clr" scoped="" ref="0x40cd7630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x40cf76e8" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40cf76e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cf78c0"/>
        <function-ref name="write" scoped="" ref="0x40cf79a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x40cf7bc8" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40cf7bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cf7da0"/>
        <function-ref name="write" scoped="" ref="0x40cf7e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40cd1c48" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40cd1c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cd1e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x40cd32f0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40cd32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cd34c8"/>
        <function-ref name="isInput" scoped="" ref="0x40cd35a8"/>
        <function-ref name="toggle" scoped="" ref="0x40cd3688"/>
        <function-ref name="isOutput" scoped="" ref="0x40cd3768"/>
        <function-ref name="get" scoped="" ref="0x40cd3848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cd3928"/>
        <function-ref name="set" scoped="" ref="0x40cd3a08"/>
        <function-ref name="clr" scoped="" ref="0x40cd3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40cf3e98" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40cf3e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40cf50c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40cf51a0"/>
        <function-ref name="led1On" scoped="" ref="0x40cf5280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40cf5360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40cf5440"/>
        <function-ref name="get" scoped="" ref="0x40cf5520"/>
        <function-ref name="led1Off" scoped="" ref="0x40cf5600"/>
        <function-ref name="led2Off" scoped="" ref="0x40cf5980"/>
        <function-ref name="set" scoped="" ref="0x40cf56e0"/>
        <function-ref name="led0On" scoped="" ref="0x40cf57c0"/>
        <function-ref name="led2On" scoped="" ref="0x40cf58a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40cce7b0" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40cce7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cce988"/>
        <function-ref name="write" scoped="" ref="0x40ccea68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40ce0768" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40ce0768"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ce0940"/>
        <function-ref name="stop" scoped="" ref="0x40ce0a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x40cd2a68" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40cd2a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40cd2c40"/>
        <function-ref name="writeDone" scoped="" ref="0x40cd2d20"/>
        <function-ref name="write" scoped="" ref="0x40cd2e00"/>
        <function-ref name="beginRead" scoped="" ref="0x40cd2ee0"/>
        <function-ref name="readDone" scoped="" ref="0x40cd1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x40ccf098" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40ccf098"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ccf270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x40cce370" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40cce370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cce548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40cde1b0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40cde1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40cde388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40d445c8" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40d445c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d448a0"/>
        <function-ref name="write" scoped="" ref="0x40d44980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40d4aa40" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40d4aa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4ac18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40d46b68" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40d46b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d46d40"/>
        <function-ref name="write" scoped="" ref="0x40d46e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40d42448" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40d42448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d42620"/>
        <function-ref name="write" scoped="" ref="0x40d42700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40d42880" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40d42880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d42a58"/>
        <function-ref name="write" scoped="" ref="0x40d42b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40d3cb20" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40d3cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3ccf8"/>
        <function-ref name="write" scoped="" ref="0x40d3cdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40d3ea00" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40d3ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3ebd8"/>
        <function-ref name="write" scoped="" ref="0x40d3ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40d484e8" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40d484e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d486c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40d3e190" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40d3e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3e368"/>
        <function-ref name="write" scoped="" ref="0x40d3e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40d45448" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40d45448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d45620"/>
        <function-ref name="write" scoped="" ref="0x40d45700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40d45cb8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40d45cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d45e90"/>
        <function-ref name="write" scoped="" ref="0x40d44010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40d402b0" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40d402b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d40488"/>
        <function-ref name="write" scoped="" ref="0x40d40568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40d42cb8" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40d42cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d42e90"/>
        <function-ref name="write" scoped="" ref="0x40d41010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40d4be68" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40d4be68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40d4a050"/>
        <function-ref name="abortRelease" scoped="" ref="0x40d4a130"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40d4a210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40d47260" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40d47260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d47438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40d475b8" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40d475b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d47810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40d47990" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40d47990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d47b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40d3e5c8" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40d3e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3e7a0"/>
        <function-ref name="write" scoped="" ref="0x40d3e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40d48b98" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40d48b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d48d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40d45880" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40d45880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d45a58"/>
        <function-ref name="write" scoped="" ref="0x40d45b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40d45010" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40d45010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d451e8"/>
        <function-ref name="write" scoped="" ref="0x40d452c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40d4a6e8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40d4a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4a8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40d3c6e8" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40d3c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3c8c0"/>
        <function-ref name="write" scoped="" ref="0x40d3c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40d3ee38" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40d3ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3c050"/>
        <function-ref name="write" scoped="" ref="0x40d3c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40d406e8" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40d406e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d408c0"/>
        <function-ref name="write" scoped="" ref="0x40d409a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40d3fcb8" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40d3fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3fe90"/>
        <function-ref name="write" scoped="" ref="0x40d3e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40d415c8" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40d415c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d417a0"/>
        <function-ref name="write" scoped="" ref="0x40d41880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40d3b010" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40d3b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40d3b3e8"/>
        <function-ref name="writeDone" scoped="" ref="0x40d3b4c8"/>
        <function-ref name="write" scoped="" ref="0x40d3b5a8"/>
        <function-ref name="beginRead" scoped="" ref="0x40d3b688"/>
        <function-ref name="readDone" scoped="" ref="0x40d3b768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40d4a390" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40d4a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40d46730" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40d46730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d46908"/>
        <function-ref name="write" scoped="" ref="0x40d469e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40d44190" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40d44190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d44368"/>
        <function-ref name="write" scoped="" ref="0x40d44448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40d41190" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40d41190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d41368"/>
        <function-ref name="write" scoped="" ref="0x40d41448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40d44b00" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40d44b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d44cd8"/>
        <function-ref name="write" scoped="" ref="0x40d44db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40d4ad98" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40d4ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d48010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40d42010" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40d42010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d421e8"/>
        <function-ref name="write" scoped="" ref="0x40d422c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d4b7b0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d4b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d4b988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d4ba68"/>
        <function-ref name="request" scoped="" ref="0x40d4bb48"/>
        <function-ref name="granted" scoped="" ref="0x40d4bc28"/>
        <function-ref name="isOwner" scoped="" ref="0x40d4bd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40d47ce8" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40d47ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d47ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40d463d8" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40d463d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d465b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40d3f880" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40d3f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3fa58"/>
        <function-ref name="write" scoped="" ref="0x40d3fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40d3f448" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40d3f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3f620"/>
        <function-ref name="write" scoped="" ref="0x40d3f700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40d48ef0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40d48ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d470e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40d3f010" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40d3f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3f1e8"/>
        <function-ref name="write" scoped="" ref="0x40d3f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40d3c2b0" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40d3c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3c488"/>
        <function-ref name="write" scoped="" ref="0x40d3c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40d40b20" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40d40b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d40cf8"/>
        <function-ref name="write" scoped="" ref="0x40d40dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40d48190" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40d48190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d48368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40d41e38" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40d41e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d40050"/>
        <function-ref name="write" scoped="" ref="0x40d40130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40d48840" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40d48840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d48a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40d41a00" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40d41a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d41bd8"/>
        <function-ref name="write" scoped="" ref="0x40d41cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40d46080" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40d46080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d46258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40d3b8e8" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40d3b8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40d3bac0"/>
        <function-ref name="writeDone" scoped="" ref="0x40d3bba0"/>
        <function-ref name="write" scoped="" ref="0x40d3bc80"/>
        <function-ref name="beginRead" scoped="" ref="0x40d3bd60"/>
        <function-ref name="readDone" scoped="" ref="0x40d3be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40d60b60" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40d60b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d60d38"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40d60e18"/>
        <function-ref name="sfd" scoped="" ref="0x40d60ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d5d0b8" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d5d0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d5d290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40d5d550" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40d5d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40d5d728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d606c0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d606c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d60898"/>
        <function-ref name="stop" scoped="" ref="0x40d60978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x40d58300" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40d58300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d584d8"/>
        <function-ref name="isInput" scoped="" ref="0x40d585b8"/>
        <function-ref name="toggle" scoped="" ref="0x40d58698"/>
        <function-ref name="isOutput" scoped="" ref="0x40d58778"/>
        <function-ref name="get" scoped="" ref="0x40d58858"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d58938"/>
        <function-ref name="set" scoped="" ref="0x40d58a18"/>
        <function-ref name="clr" scoped="" ref="0x40d58af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40d54480" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40d54480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40d54658"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40d54738"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40d54818"/>
        <function-ref name="syncDone" scoped="" ref="0x40d548f8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40d549d8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40d54ab8"/>
        <function-ref name="setChannel" scoped="" ref="0x40d54b98"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40d54c78"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40d54d58"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40d54e38"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40d54f18"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40d53010"/>
        <function-ref name="sync" scoped="" ref="0x40d530f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40d53250"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40d53330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x40d738d0" loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x40d738d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d73aa8"/>
        <function-ref name="runTask" scoped="" ref="0x40d73b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40d536e0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40d536e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d511f8"/>
        <function-ref name="clear" scoped="" ref="0x40d515a8"/>
        <function-ref name="isValid" scoped="" ref="0x40d53e30"/>
        <function-ref name="set" scoped="" ref="0x40d51958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x40d58d10" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40d58d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d58ee8"/>
        <function-ref name="isInput" scoped="" ref="0x40d57010"/>
        <function-ref name="toggle" scoped="" ref="0x40d570f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d571d0"/>
        <function-ref name="get" scoped="" ref="0x40d572b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d57390"/>
        <function-ref name="set" scoped="" ref="0x40d57470"/>
        <function-ref name="clr" scoped="" ref="0x40d57550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40d507d8" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40d507d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d509b0"/>
        <function-ref name="write" scoped="" ref="0x40d50a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40d50ca0" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40d50ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d50e78"/>
        <function-ref name="write" scoped="" ref="0x40d4f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x40d4f700" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40d4f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d4f8d8"/>
        <function-ref name="write" scoped="" ref="0x40d4f9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40d556a0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40d556a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40d55878"/>
        <function-ref name="setNetwork" scoped="" ref="0x40d55958"/>
        <function-ref name="getRssi" scoped="" ref="0x40d55a38"/>
        <function-ref name="getNetwork" scoped="" ref="0x40d55b18"/>
        <function-ref name="getPower" scoped="" ref="0x40d55bf8"/>
        <function-ref name="getLqi" scoped="" ref="0x40d55cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40d5aa28" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40d5aa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d5ac00"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40d5ace0"/>
        <function-ref name="sfd" scoped="" ref="0x40d5adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x40d56df0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40d56df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d55010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40d59880" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40d59880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d59a58"/>
        <function-ref name="isInput" scoped="" ref="0x40d59b38"/>
        <function-ref name="toggle" scoped="" ref="0x40d59c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40d59cf8"/>
        <function-ref name="get" scoped="" ref="0x40d59dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d59eb8"/>
        <function-ref name="set" scoped="" ref="0x40d58010"/>
        <function-ref name="clr" scoped="" ref="0x40d580f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x40d4fc00" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40d4fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d4fdd8"/>
        <function-ref name="write" scoped="" ref="0x40d4feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d5a1e8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d5a1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d5a3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40d55ee0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d55ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40d540e0"/>
        <function-ref name="getHeader" scoped="" ref="0x40d541c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40d542a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d59010" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d59010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d591e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40d57ea8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40d57ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d560c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d561a0"/>
        <function-ref name="request" scoped="" ref="0x40d56280"/>
        <function-ref name="granted" scoped="" ref="0x40d56360"/>
        <function-ref name="isOwner" scoped="" ref="0x40d56440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x40d4f220" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40d4f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d4f3f8"/>
        <function-ref name="write" scoped="" ref="0x40d4f4d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x40d56668" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40d56668"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40d56840"/>
        <function-ref name="writeDone" scoped="" ref="0x40d56920"/>
        <function-ref name="write" scoped="" ref="0x40d56a00"/>
        <function-ref name="beginRead" scoped="" ref="0x40d56ae0"/>
        <function-ref name="readDone" scoped="" ref="0x40d56bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40d4e130" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40d4e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4e408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40d594a8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40d594a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40d59680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d4e598" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d4e598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d4e770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d4e850"/>
        <function-ref name="led1On" scoped="" ref="0x40d4e930"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d4ea10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d4eaf0"/>
        <function-ref name="get" scoped="" ref="0x40d4ebd0"/>
        <function-ref name="led1Off" scoped="" ref="0x40d4ecb0"/>
        <function-ref name="led2Off" scoped="" ref="0x40d4d0f0"/>
        <function-ref name="set" scoped="" ref="0x40d4ed90"/>
        <function-ref name="led0On" scoped="" ref="0x40d4ee70"/>
        <function-ref name="led2On" scoped="" ref="0x40d4d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40d502b8" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40d502b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d50490"/>
        <function-ref name="write" scoped="" ref="0x40d50570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x40d51e50" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40d51e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d50050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x40d577e8" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40d577e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d579c0"/>
        <function-ref name="disable" scoped="" ref="0x40d57aa0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40d57b80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40d57c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40d55268" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40d55268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d554c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d5a588" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d5a588"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d5a760"/>
        <function-ref name="stop" scoped="" ref="0x40d5a840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40d93010" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d93010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40d931e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40d97b88" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40d97b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40d97d60"/>
        <function-ref name="setNetwork" scoped="" ref="0x40d97e40"/>
        <function-ref name="getRssi" scoped="" ref="0x40d97f20"/>
        <function-ref name="getNetwork" scoped="" ref="0x40d94018"/>
        <function-ref name="getPower" scoped="" ref="0x40d940f8"/>
        <function-ref name="getLqi" scoped="" ref="0x40d941d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40d93668" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d93668"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d91198"/>
        <function-ref name="clear" scoped="" ref="0x40d91548"/>
        <function-ref name="isValid" scoped="" ref="0x40d93db8"/>
        <function-ref name="set" scoped="" ref="0x40d918f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40d949c8" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d949c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40d94ba0"/>
        <function-ref name="getHeader" scoped="" ref="0x40d94c80"/>
        <function-ref name="getMetadata" scoped="" ref="0x40d94d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40d8f888" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40d8f888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d8fa60"/>
        <function-ref name="isSet" scoped="" ref="0x40d8fb40"/>
        <function-ref name="cancel" scoped="" ref="0x40d8fc20"/>
        <function-ref name="set" scoped="" ref="0x40d8fd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40d90100" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d90100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d90c00"/>
        <function-ref name="clear" scoped="" ref="0x40d8f010"/>
        <function-ref name="isValid" scoped="" ref="0x40d90850"/>
        <function-ref name="set" scoped="" ref="0x40d8f3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d94448" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d94448"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d94620"/>
        <function-ref name="noAck" scoped="" ref="0x40d94700"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d947e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40db6a40" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40db6a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40db6c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40db9668" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40db9668"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40db9840"/>
        <function-ref name="setNetwork" scoped="" ref="0x40db9920"/>
        <function-ref name="getRssi" scoped="" ref="0x40db9a00"/>
        <function-ref name="getNetwork" scoped="" ref="0x40db9ae0"/>
        <function-ref name="getPower" scoped="" ref="0x40db9bc0"/>
        <function-ref name="getLqi" scoped="" ref="0x40db9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40db1930" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40db1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40db1b08"/>
        <function-ref name="payloadLength" scoped="" ref="0x40db1be8"/>
        <function-ref name="getPayload" scoped="" ref="0x40db1cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db1da8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40db1e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40db5100" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40db5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40db5c00"/>
        <function-ref name="clear" scoped="" ref="0x40db4010"/>
        <function-ref name="isValid" scoped="" ref="0x40db5850"/>
        <function-ref name="set" scoped="" ref="0x40db43c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40db64b0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40db64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40db6688"/>
        <function-ref name="getHeader" scoped="" ref="0x40db6768"/>
        <function-ref name="getMetadata" scoped="" ref="0x40db6848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40db1308" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40db1308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40db14e0"/>
        <function-ref name="isSet" scoped="" ref="0x40db15c0"/>
        <function-ref name="cancel" scoped="" ref="0x40db16a0"/>
        <function-ref name="set" scoped="" ref="0x40db1780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x40db01e0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x40db01e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40db0828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40db0c38" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40db0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40daf298"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40db4af8" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40db4af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40db36b8"/>
        <function-ref name="clear" scoped="" ref="0x40db3a68"/>
        <function-ref name="isValid" scoped="" ref="0x40db3308"/>
        <function-ref name="set" scoped="" ref="0x40db3e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40db9f10" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40db9f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40db6108"/>
        <function-ref name="noAck" scoped="" ref="0x40db61e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40db62c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40ddb5d8" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40ddb5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ddbc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40dda010" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40dda010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40472f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40dda760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ddac50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40dda9d8"/>
        <function-ref name="overflow" scoped="" ref="0x40ddaec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40dd7378" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dd7378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dd6e58"/>
        <function-ref name="fired" scoped="" ref="0x40dd6110"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40dd6818"/>
        <function-ref name="isOneShot" scoped="" ref="0x40dd65c0"/>
        <function-ref name="getdt" scoped="" ref="0x40dd5348"/>
        <function-ref name="gett0" scoped="" ref="0x40dd50f0"/>
        <function-ref name="isRunning" scoped="" ref="0x40dd6368"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40dd79a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40dd6b38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40dd7c20"/>
        <function-ref name="stop" scoped="" ref="0x40dd7ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40dfcbd8" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40dfcbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dfceb0"/>
        <function-ref name="write" scoped="" ref="0x40dfb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40dd3190" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40dd3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd3368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40dfd270" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40dfd270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dfd448"/>
        <function-ref name="write" scoped="" ref="0x40dfd528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40dfba00" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40dfba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dfbbd8"/>
        <function-ref name="write" scoped="" ref="0x40dfbcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40dfbe38" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40dfbe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df9050"/>
        <function-ref name="write" scoped="" ref="0x40df9130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40df3190" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40df3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df3368"/>
        <function-ref name="write" scoped="" ref="0x40df3448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40df5010" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40df5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df51e8"/>
        <function-ref name="write" scoped="" ref="0x40df52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40dd3b98" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40dd3b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd3d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40df66e8" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40df66e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df68c0"/>
        <function-ref name="write" scoped="" ref="0x40df69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40dfdae0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40dfdae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dfdcb8"/>
        <function-ref name="write" scoped="" ref="0x40dfdd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40dfc368" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40dfc368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dfc540"/>
        <function-ref name="write" scoped="" ref="0x40dfc620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40df8880" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40df8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df8a58"/>
        <function-ref name="write" scoped="" ref="0x40df8b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40df92b0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40df92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df9488"/>
        <function-ref name="write" scoped="" ref="0x40df9568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40dd45a0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40dd45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40dd4778"/>
        <function-ref name="abortRelease" scoped="" ref="0x40dd4858"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40dd4938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40dd1910" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40dd1910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd1ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40dd1c68" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40dd1c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd1ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40dd0080" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40dd0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd0258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40df6b20" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40df6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df6cf8"/>
        <function-ref name="write" scoped="" ref="0x40df6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40dd1260" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40dd1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd1438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40dfdf18" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40dfdf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dfc108"/>
        <function-ref name="write" scoped="" ref="0x40dfc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40dfd6a8" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40dfd6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dfd880"/>
        <function-ref name="write" scoped="" ref="0x40dfd960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40dd4e10" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40dd4e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40df5cb8" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40df5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df5e90"/>
        <function-ref name="write" scoped="" ref="0x40df3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40df5448" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40df5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df5620"/>
        <function-ref name="write" scoped="" ref="0x40df5700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40df8cb8" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40df8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df8e90"/>
        <function-ref name="write" scoped="" ref="0x40df7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40df62b0" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40df62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df6488"/>
        <function-ref name="write" scoped="" ref="0x40df6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40df9b20" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40df9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df9cf8"/>
        <function-ref name="write" scoped="" ref="0x40df9dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40df35c8" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40df35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40df39a0"/>
        <function-ref name="writeDone" scoped="" ref="0x40df3a80"/>
        <function-ref name="write" scoped="" ref="0x40df3b60"/>
        <function-ref name="beginRead" scoped="" ref="0x40df3c40"/>
        <function-ref name="readDone" scoped="" ref="0x40df3d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40dd4ab8" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40dd4ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd4c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40dd0de0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40dd0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dfd010"/>
        <function-ref name="write" scoped="" ref="0x40dfd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40dfc7a0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40dfc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dfc978"/>
        <function-ref name="write" scoped="" ref="0x40dfca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40df96e8" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40df96e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df98c0"/>
        <function-ref name="write" scoped="" ref="0x40df99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40dfb190" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40dfb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dfb368"/>
        <function-ref name="write" scoped="" ref="0x40dfb448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40dd34e8" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40dd34e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40dfb5c8" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40dfb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dfb7a0"/>
        <function-ref name="write" scoped="" ref="0x40dfb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d95ed0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d95ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40dd40c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40dd41a0"/>
        <function-ref name="request" scoped="" ref="0x40dd4280"/>
        <function-ref name="granted" scoped="" ref="0x40dd4360"/>
        <function-ref name="isOwner" scoped="" ref="0x40dd4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40dd03d8" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40dd03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40dd0a88" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40dd0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40df7e38" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40df7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df6050"/>
        <function-ref name="write" scoped="" ref="0x40df6130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40df7a00" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40df7a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df7bd8"/>
        <function-ref name="write" scoped="" ref="0x40df7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40dd15b8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40dd15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd1790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40df75c8" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40df75c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df77a0"/>
        <function-ref name="write" scoped="" ref="0x40df7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40df5880" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40df5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df5a58"/>
        <function-ref name="write" scoped="" ref="0x40df5b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40df7190" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40df7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df7368"/>
        <function-ref name="write" scoped="" ref="0x40df7448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40dd3840" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40dd3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd3a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40df8448" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40df8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df8620"/>
        <function-ref name="write" scoped="" ref="0x40df8700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40dd3ef0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40dd3ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd10e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40df8010" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40df8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df81e8"/>
        <function-ref name="write" scoped="" ref="0x40df82c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40dd0730" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40dd0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40dd0908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40df3ea0" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40df3ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40df20c0"/>
        <function-ref name="writeDone" scoped="" ref="0x40df21a0"/>
        <function-ref name="write" scoped="" ref="0x40df2280"/>
        <function-ref name="beginRead" scoped="" ref="0x40df2360"/>
        <function-ref name="readDone" scoped="" ref="0x40df2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40e0d338" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40e0d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e0d510"/>
        <function-ref name="toIdle" scoped="" ref="0x40e0d5f0"/>
        <function-ref name="isState" scoped="" ref="0x40e0d6d0"/>
        <function-ref name="isIdle" scoped="" ref="0x40e0d7b0"/>
        <function-ref name="requestState" scoped="" ref="0x40e0d890"/>
        <function-ref name="forceState" scoped="" ref="0x40e0d970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e08898" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e08898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e08a70"/>
        <function-ref name="getPayload" scoped="" ref="0x40e08b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e08c30"/>
        <function-ref name="cancel" scoped="" ref="0x40e08d10"/>
        <function-ref name="sendDone" scoped="" ref="0x40e08df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e08128" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e08128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e08300"/>
        <function-ref name="getPayload" scoped="" ref="0x40e083e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e084c0"/>
        <function-ref name="cancel" scoped="" ref="0x40e085a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e08680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e04228" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e04228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e04400"/>
        <function-ref name="getPayload" scoped="" ref="0x40e044e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e045c0"/>
        <function-ref name="cancel" scoped="" ref="0x40e046a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e04780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e07740" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e07740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e07918"/>
        <function-ref name="getPayload" scoped="" ref="0x40e079f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e07ad8"/>
        <function-ref name="cancel" scoped="" ref="0x40e07bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e07c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40e03190" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40e03190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40e03368"/>
        <function-ref name="rand32" scoped="" ref="0x40e03448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e07e08" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e07e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e04010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40e03630" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40e03630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40e03808"/>
        <function-ref name="getHeader" scoped="" ref="0x40e038e8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40e039c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x40e048f8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40e048f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e04ad0"/>
        <function-ref name="toIdle" scoped="" ref="0x40e04bb0"/>
        <function-ref name="isState" scoped="" ref="0x40e04c90"/>
        <function-ref name="isIdle" scoped="" ref="0x40e04d70"/>
        <function-ref name="requestState" scoped="" ref="0x40e04e50"/>
        <function-ref name="forceState" scoped="" ref="0x40e03010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40e06770" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40e06770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e06948"/>
        <function-ref name="toIdle" scoped="" ref="0x40e06a28"/>
        <function-ref name="isState" scoped="" ref="0x40e06b08"/>
        <function-ref name="isIdle" scoped="" ref="0x40e06be8"/>
        <function-ref name="requestState" scoped="" ref="0x40e06cc8"/>
        <function-ref name="forceState" scoped="" ref="0x40e06da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e24688" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e24688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e24860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e0adf0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e0adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e24010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40e24260" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40e24260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e24438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e20010" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e20010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e201e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e21b48" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e21b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e21d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e213d8" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e213d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e215b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40e203d0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40e203d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40e205a8"/>
        <function-ref name="getHeader" scoped="" ref="0x40e20688"/>
        <function-ref name="getMetadata" scoped="" ref="0x40e20768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40e21800" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40e21800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e219d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e34420" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e34420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e345f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e347d0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e347d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e349a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e34a88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e34b68"/>
        <function-ref name="cancel" scoped="" ref="0x40e34c48"/>
        <function-ref name="sendDone" scoped="" ref="0x40e34d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e375b0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e375b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e37788"/>
        <function-ref name="getPayload" scoped="" ref="0x40e37868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e37948"/>
        <function-ref name="cancel" scoped="" ref="0x40e37a28"/>
        <function-ref name="sendDone" scoped="" ref="0x40e37b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40e35098" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40e35098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e35270"/>
        <function-ref name="getPayload" scoped="" ref="0x40e35350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e35430"/>
        <function-ref name="cancel" scoped="" ref="0x40e35510"/>
        <function-ref name="sendDone" scoped="" ref="0x40e355f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e37c90" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e37c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e37e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e09ed8" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e09ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e370c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e371a0"/>
        <function-ref name="request" scoped="" ref="0x40e37280"/>
        <function-ref name="granted" scoped="" ref="0x40e37360"/>
        <function-ref name="isOwner" scoped="" ref="0x40e37440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40e35820" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40e35820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e359f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x40e35c00" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x40e35c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e35dd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e35eb8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e34010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e340f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e341d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e2e9c8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e2e9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e2eba0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e2ec80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e2ed60"/>
        <function-ref name="cancel" scoped="" ref="0x40e2ee40"/>
        <function-ref name="sendDone" scoped="" ref="0x40e2ef20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e2d148" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e2d148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e2d320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x40e70eb0" loc="180:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x40e70eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e6f0c0"/>
        <function-ref name="runTask" scoped="" ref="0x40e6f1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40e2d4e0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40e2d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40e2d6b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x40e2d798"/>
        <function-ref name="getRssi" scoped="" ref="0x40e2d878"/>
        <function-ref name="getNetwork" scoped="" ref="0x40e2d958"/>
        <function-ref name="getPower" scoped="" ref="0x40e2da38"/>
        <function-ref name="getLqi" scoped="" ref="0x40e2db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40e2f6d8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40e2f6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e2f8b0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e2f990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e2fa70"/>
        <function-ref name="cancel" scoped="" ref="0x40e2fb50"/>
        <function-ref name="sendDone" scoped="" ref="0x40e2fc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40e2c310" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40e2c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e2c4e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e2c5c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e2c6a8"/>
        <function-ref name="dequeue" scoped="" ref="0x40e2c788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40e2dd00" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40e2dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40e2ded8"/>
        <function-ref name="getHeader" scoped="" ref="0x40e2c010"/>
        <function-ref name="getMetadata" scoped="" ref="0x40e2c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40e2f308" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40e2f308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e2f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e303c0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e303c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e30598"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e30678"/>
        <function-ref name="request" scoped="" ref="0x40e30758"/>
        <function-ref name="granted" scoped="" ref="0x40e30838"/>
        <function-ref name="isOwner" scoped="" ref="0x40e30918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40e30b00" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40e30b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e30cd8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e30db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e30e98"/>
        <function-ref name="cancel" scoped="" ref="0x40e2f010"/>
        <function-ref name="sendDone" scoped="" ref="0x40e2f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40e2fe60" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40e2fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e2e050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x40e2e258" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x40e2e258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e2e430"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e2e510"/>
        <function-ref name="getPayload" scoped="" ref="0x40e2e5f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e2e6d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e2e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e314b8" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e314b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e31690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40e317f0" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40e317f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e319c8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e31aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e31b88"/>
        <function-ref name="dequeue" scoped="" ref="0x40e31c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40e86b08" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40e86b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e86ce0"/>
        <function-ref name="stopDone" scoped="" ref="0x40e86dc0"/>
        <function-ref name="start" scoped="" ref="0x40e86ea0"/>
        <function-ref name="stop" scoped="" ref="0x40e85010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e85a58" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e85a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e85c30"/>
        <function-ref name="getPayload" scoped="" ref="0x40e85d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e85df0"/>
        <function-ref name="cancel" scoped="" ref="0x40e85ed0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e84010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e84220" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e84220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e843f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e86090" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e86090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e86268"/>
        <function-ref name="getPayload" scoped="" ref="0x40e86348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e86428"/>
        <function-ref name="cancel" scoped="" ref="0x40e86508"/>
        <function-ref name="sendDone" scoped="" ref="0x40e865e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40e88a88" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40e88a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40e88c60"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40e88d40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40e88e20"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40e88f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x40e85208" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40e85208"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e853e0"/>
        <function-ref name="toIdle" scoped="" ref="0x40e854c0"/>
        <function-ref name="isState" scoped="" ref="0x40e855a0"/>
        <function-ref name="isIdle" scoped="" ref="0x40e85680"/>
        <function-ref name="requestState" scoped="" ref="0x40e85760"/>
        <function-ref name="forceState" scoped="" ref="0x40e85840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40e84640" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40e84640"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e84818"/>
        <function-ref name="stopDone" scoped="" ref="0x40e848f8"/>
        <function-ref name="start" scoped="" ref="0x40e849d8"/>
        <function-ref name="stop" scoped="" ref="0x40e84ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e86770" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e86770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e86948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e7e010" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e7e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e7e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e80828" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e80828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e80a00"/>
        <function-ref name="getPayload" scoped="" ref="0x40e80ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e80bc0"/>
        <function-ref name="cancel" scoped="" ref="0x40e80ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e80d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x40ea0300" loc="109:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x40ea0300"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ea04d8"/>
        <function-ref name="runTask" scoped="" ref="0x40ea05b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioBackoff" ref="0x40e7f728" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40e7f728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40e7f900"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40e7f9e0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40e7fac0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40e7fba0"/>
        <function-ref name="setCca" scoped="" ref="0x40e7fc80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40e7fd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x40e72148" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40e72148"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x40e72320"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x40e72400"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x40e724e0"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x40e725c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OffTimer" ref="0x40e799d8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OffTimer" scoped="" ref="0x40e799d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e774c8"/>
        <function-ref name="fired" scoped="" ref="0x40e78768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e78e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e78c18"/>
        <function-ref name="getdt" scoped="" ref="0x40e77978"/>
        <function-ref name="gett0" scoped="" ref="0x40e77720"/>
        <function-ref name="isRunning" scoped="" ref="0x40e789c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e78010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e771a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e78290"/>
        <function-ref name="stop" scoped="" ref="0x40e78510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e83c88" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e83c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e83e60"/>
        <function-ref name="getPayload" scoped="" ref="0x40e80010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e800f0"/>
        <function-ref name="cancel" scoped="" ref="0x40e801d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e802b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40e836a0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40e836a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40e83878"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40e83958"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40e83a38"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40e83b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x40e7df00" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40e7df00"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e7c188"/>
        <function-ref name="toIdle" scoped="" ref="0x40e7c268"/>
        <function-ref name="isState" scoped="" ref="0x40e7c348"/>
        <function-ref name="isIdle" scoped="" ref="0x40e7c428"/>
        <function-ref name="requestState" scoped="" ref="0x40e7c508"/>
        <function-ref name="forceState" scoped="" ref="0x40e7c5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40e73010" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40e73010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40e731e8"/>
        <function-ref name="rand32" scoped="" ref="0x40e732c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resend" ref="0x40e7f010" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resend" scoped="" ref="0x40e7f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e7f1e8"/>
        <function-ref name="cancel" scoped="" ref="0x40e7f2c8"/>
        <function-ref name="modify" scoped="" ref="0x40e7f3a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e7f488"/>
        <function-ref name="resend" scoped="" ref="0x40e7f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e832d8" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e832d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e834b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40e7e430" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40e7e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e7e608"/>
        <function-ref name="stopDone" scoped="" ref="0x40e7e6e8"/>
        <function-ref name="start" scoped="" ref="0x40e7e7c8"/>
        <function-ref name="stop" scoped="" ref="0x40e7e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e80438" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e80438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e80610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40e7d3b8" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40e7d3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40e7d590"/>
        <function-ref name="getHeader" scoped="" ref="0x40e7d670"/>
        <function-ref name="getMetadata" scoped="" ref="0x40e7d750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPowerState" ref="0x40e7c818" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPowerState" scoped="" ref="0x40e7c818"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e7c9f0"/>
        <function-ref name="toIdle" scoped="" ref="0x40e7cad0"/>
        <function-ref name="isState" scoped="" ref="0x40e7cbb0"/>
        <function-ref name="isIdle" scoped="" ref="0x40e7cc90"/>
        <function-ref name="requestState" scoped="" ref="0x40e7cd70"/>
        <function-ref name="forceState" scoped="" ref="0x40e7ce50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startRadio" ref="0x40e9e388" loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startRadio" scoped="" ref="0x40e9e388"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e9e560"/>
        <function-ref name="runTask" scoped="" ref="0x40e9e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e73438" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e73438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e73610"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e736f0"/>
        <function-ref name="led1On" scoped="" ref="0x40e737d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e738b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e73990"/>
        <function-ref name="get" scoped="" ref="0x40e73a70"/>
        <function-ref name="led1Off" scoped="" ref="0x40e73b50"/>
        <function-ref name="led2Off" scoped="" ref="0x40e73ed0"/>
        <function-ref name="set" scoped="" ref="0x40e73c30"/>
        <function-ref name="led0On" scoped="" ref="0x40e73d10"/>
        <function-ref name="led2On" scoped="" ref="0x40e73df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDoneTimer" ref="0x40e77d38" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDoneTimer" scoped="" ref="0x40e77d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e748a8"/>
        <function-ref name="fired" scoped="" ref="0x40e75ac8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e74268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e74010"/>
        <function-ref name="getdt" scoped="" ref="0x40e74d58"/>
        <function-ref name="gett0" scoped="" ref="0x40e74b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40e75d20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e75370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e74588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e755f0"/>
        <function-ref name="stop" scoped="" ref="0x40e75870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40e7d970" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40e7d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40e7db48"/>
        <function-ref name="noAck" scoped="" ref="0x40e7dc28"/>
        <function-ref name="wasAcked" scoped="" ref="0x40e7dd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x40e790e0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x40e790e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e792b8"/>
        <function-ref name="toIdle" scoped="" ref="0x40e79398"/>
        <function-ref name="isState" scoped="" ref="0x40e79478"/>
        <function-ref name="isIdle" scoped="" ref="0x40e79558"/>
        <function-ref name="requestState" scoped="" ref="0x40e79638"/>
        <function-ref name="forceState" scoped="" ref="0x40e79718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="resend" ref="0x40ea0af0" loc="110:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="resend" scoped="" ref="0x40ea0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ea0cc8"/>
        <function-ref name="runTask" scoped="" ref="0x40ea0da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerCycle" ref="0x40e7bd68" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerCycle" scoped="" ref="0x40e7bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x40e7d010"/>
        <function-ref name="detected" scoped="" ref="0x40e7d0f0"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x40e7d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopRadio" ref="0x40e9eb70" loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopRadio" scoped="" ref="0x40e9eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e9ed48"/>
        <function-ref name="runTask" scoped="" ref="0x40e9ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ed1a08" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ed1a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ed1be0"/>
        <function-ref name="stopDone" scoped="" ref="0x40ed1cc0"/>
        <function-ref name="start" scoped="" ref="0x40ed1da0"/>
        <function-ref name="stop" scoped="" ref="0x40ed1e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPowerState" ref="0x40ece948" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPowerState" scoped="" ref="0x40ece948"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40eceb20"/>
        <function-ref name="toIdle" scoped="" ref="0x40ecec00"/>
        <function-ref name="isState" scoped="" ref="0x40ecece0"/>
        <function-ref name="isIdle" scoped="" ref="0x40ecedc0"/>
        <function-ref name="requestState" scoped="" ref="0x40eceea0"/>
        <function-ref name="forceState" scoped="" ref="0x40ecd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControlState" ref="0x40ece0e0" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x40ece0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40ece2b8"/>
        <function-ref name="toIdle" scoped="" ref="0x40ece398"/>
        <function-ref name="isState" scoped="" ref="0x40ece478"/>
        <function-ref name="isIdle" scoped="" ref="0x40ece558"/>
        <function-ref name="requestState" scoped="" ref="0x40ece638"/>
        <function-ref name="forceState" scoped="" ref="0x40ece718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerCycle" ref="0x40ed14b0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerCycle" scoped="" ref="0x40ed14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x40ed1688"/>
        <function-ref name="detected" scoped="" ref="0x40ed1768"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x40ed1848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ecdc18" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ecdc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ecddf0"/>
        <function-ref name="stopDone" scoped="" ref="0x40ecded0"/>
        <function-ref name="start" scoped="" ref="0x40eca010"/>
        <function-ref name="stop" scoped="" ref="0x40eca0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteIndicator" ref="0x40ec48d8" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40ec48d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40ec4ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnergyIndicator" ref="0x40ec4470" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40ec4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40ec4648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x40ec6ee8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40ec6ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40ec50e0"/>
        <function-ref name="toIdle" scoped="" ref="0x40ec51c0"/>
        <function-ref name="isState" scoped="" ref="0x40ec52a0"/>
        <function-ref name="isIdle" scoped="" ref="0x40ec5380"/>
        <function-ref name="requestState" scoped="" ref="0x40ec5460"/>
        <function-ref name="forceState" scoped="" ref="0x40ec5540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startRadio" ref="0x40ec2b70" loc="96:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startRadio" scoped="" ref="0x40ec2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ec2dc8"/>
        <function-ref name="runTask" scoped="" ref="0x40ec2ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40ec76c0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40ec76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ec7898"/>
        <function-ref name="stopDone" scoped="" ref="0x40ec7978"/>
        <function-ref name="start" scoped="" ref="0x40ec7a58"/>
        <function-ref name="stop" scoped="" ref="0x40ec7b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPowerState" ref="0x40ec7d68" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPowerState" scoped="" ref="0x40ec7d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40ec6010"/>
        <function-ref name="toIdle" scoped="" ref="0x40ec60f0"/>
        <function-ref name="isState" scoped="" ref="0x40ec61d0"/>
        <function-ref name="isIdle" scoped="" ref="0x40ec62b0"/>
        <function-ref name="requestState" scoped="" ref="0x40ec6390"/>
        <function-ref name="forceState" scoped="" ref="0x40ec6470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketIndicator" ref="0x40ec4d50" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40ec4d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40ec4f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ec56b0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ec56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ec5888"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ec5968"/>
        <function-ref name="led1On" scoped="" ref="0x40ec5a48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ec5b28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ec5c08"/>
        <function-ref name="get" scoped="" ref="0x40ec5ce8"/>
        <function-ref name="led1Off" scoped="" ref="0x40ec5dc8"/>
        <function-ref name="led2Off" scoped="" ref="0x40ec41d0"/>
        <function-ref name="set" scoped="" ref="0x40ec5ea8"/>
        <function-ref name="led0On" scoped="" ref="0x40ec4010"/>
        <function-ref name="led2On" scoped="" ref="0x40ec40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="getCca" ref="0x40ec03c8" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="getCca" scoped="" ref="0x40ec03c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ec05a0"/>
        <function-ref name="runTask" scoped="" ref="0x40ec0680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x40ec66b8" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x40ec66b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40ec6890"/>
        <function-ref name="toIdle" scoped="" ref="0x40ec6970"/>
        <function-ref name="isState" scoped="" ref="0x40ec6a50"/>
        <function-ref name="isIdle" scoped="" ref="0x40ec6b30"/>
        <function-ref name="requestState" scoped="" ref="0x40ec6c10"/>
        <function-ref name="forceState" scoped="" ref="0x40ec6cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OnTimer" ref="0x40eca3e0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OnTimer" scoped="" ref="0x40eca3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ec8ec8"/>
        <function-ref name="fired" scoped="" ref="0x40ec8180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ec8888"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ec8630"/>
        <function-ref name="getdt" scoped="" ref="0x40ec73a8"/>
        <function-ref name="gett0" scoped="" ref="0x40ec7150"/>
        <function-ref name="isRunning" scoped="" ref="0x40ec83d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ecaa08"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ec8ba8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ecac88"/>
        <function-ref name="stop" scoped="" ref="0x40ecaf08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerCycle" ref="0x40ecd6c0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerCycle" scoped="" ref="0x40ecd6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x40ecd898"/>
        <function-ref name="detected" scoped="" ref="0x40ecd978"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x40ecda58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopRadio" ref="0x40ec2350" loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopRadio" scoped="" ref="0x40ec2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ec2528"/>
        <function-ref name="runTask" scoped="" ref="0x40ec2608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40ed5e58" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="PowerCycleC.RadioPowerStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40ed5e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40ed4050"/>
        <function-ref name="toIdle" scoped="" ref="0x40ed4130"/>
        <function-ref name="isState" scoped="" ref="0x40ed4210"/>
        <function-ref name="isIdle" scoped="" ref="0x40ed42f0"/>
        <function-ref name="requestState" scoped="" ref="0x40ed43d0"/>
        <function-ref name="forceState" scoped="" ref="0x40ed44b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40ed3070" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="PowerCycleC.SplitControlStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40ed3070"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40ed3248"/>
        <function-ref name="toIdle" scoped="" ref="0x40ed3328"/>
        <function-ref name="isState" scoped="" ref="0x40ed3408"/>
        <function-ref name="isIdle" scoped="" ref="0x40ed34e8"/>
        <function-ref name="requestState" scoped="" ref="0x40ed35c8"/>
        <function-ref name="forceState" scoped="" ref="0x40ed36a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ed22c0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="PowerCycleC.OnTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ed22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f03db0"/>
        <function-ref name="fired" scoped="" ref="0x40f03068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f03770"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f03518"/>
        <function-ref name="getdt" scoped="" ref="0x40f022a0"/>
        <function-ref name="gett0" scoped="" ref="0x40f02048"/>
        <function-ref name="isRunning" scoped="" ref="0x40f032c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ed28e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f03a90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ed2b68"/>
        <function-ref name="stop" scoped="" ref="0x40ed2de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f000a0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="PowerCycleC.CheckTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f000a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40effb88"/>
        <function-ref name="fired" scoped="" ref="0x40f00e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40eff548"/>
        <function-ref name="isOneShot" scoped="" ref="0x40eff2f0"/>
        <function-ref name="getdt" scoped="" ref="0x40efe048"/>
        <function-ref name="gett0" scoped="" ref="0x40effde0"/>
        <function-ref name="isRunning" scoped="" ref="0x40eff098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f006c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40eff868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f00948"/>
        <function-ref name="stop" scoped="" ref="0x40f00bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40efacd8" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="DefaultLplC.SendStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40efacd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40efaeb0"/>
        <function-ref name="toIdle" scoped="" ref="0x40ef9010"/>
        <function-ref name="isState" scoped="" ref="0x40ef90f0"/>
        <function-ref name="isIdle" scoped="" ref="0x40ef91d0"/>
        <function-ref name="requestState" scoped="" ref="0x40ef92b0"/>
        <function-ref name="forceState" scoped="" ref="0x40ef9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ef8010" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DefaultLplC.OffTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ef8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ef6b00"/>
        <function-ref name="fired" scoped="" ref="0x40ef8d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ef64c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ef6268"/>
        <function-ref name="getdt" scoped="" ref="0x40ef5010"/>
        <function-ref name="gett0" scoped="" ref="0x40ef6d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40ef6010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ef8638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ef67e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ef88b8"/>
        <function-ref name="stop" scoped="" ref="0x40ef8b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ef5e18" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DefaultLplC.SendDoneTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ef5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ef3920"/>
        <function-ref name="fired" scoped="" ref="0x40ef4bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ef32e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ef3088"/>
        <function-ref name="getdt" scoped="" ref="0x40ef3dd0"/>
        <function-ref name="gett0" scoped="" ref="0x40ef3b78"/>
        <function-ref name="isRunning" scoped="" ref="0x40ef4e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ef4468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ef3600"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ef46e8"/>
        <function-ref name="stop" scoped="" ref="0x40ef4968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x40ef1a78" loc="3:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningC.nc">
      <component-ref qname="SystemLowPowerListeningC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40ef1a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x40ef1c50"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x40ef1d30"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x40ef1e10"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x40ef1ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x40eee6e0" loc="5:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningP.nc">
      <component-ref qname="SystemLowPowerListeningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40eee6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x40eee8b8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x40eee998"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x40eeea78"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x40eeeb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40f124d0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40f124d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f126a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f12788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f12868"/>
        <function-ref name="cancel" scoped="" ref="0x40f12948"/>
        <function-ref name="sendDone" scoped="" ref="0x40f12a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f15650" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f15650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f15828"/>
        <function-ref name="getPayload" scoped="" ref="0x40f15908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f159e8"/>
        <function-ref name="cancel" scoped="" ref="0x40f15ac8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f15ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40f15d50" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40f15d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40f15f28"/>
        <function-ref name="setRetries" scoped="" ref="0x40f12018"/>
        <function-ref name="getRetries" scoped="" ref="0x40f120f8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40f121d8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40f122b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40f0f938" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f0f938"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f0fb10"/>
        <function-ref name="noAck" scoped="" ref="0x40f0fbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f0fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40f0f180" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40f0f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40f0f358"/>
        <function-ref name="setRetries" scoped="" ref="0x40f0f438"/>
        <function-ref name="getRetries" scoped="" ref="0x40f0f518"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40f0f5f8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40f0f6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40f30220" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40f30220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f303f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40f31a88" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40f31a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f31c60"/>
        <function-ref name="getPayload" scoped="" ref="0x40f31d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f31e20"/>
        <function-ref name="cancel" scoped="" ref="0x40f31f00"/>
        <function-ref name="sendDone" scoped="" ref="0x40f30010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40f2f390" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40f2f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40f2f568"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40f2f648"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40f2f728"/>
        <function-ref name="syncDone" scoped="" ref="0x40f2f808"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40f2f8e8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40f2f9c8"/>
        <function-ref name="setChannel" scoped="" ref="0x40f2faa8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40f2fb88"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40f2fc68"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40f2fd48"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40f2fe28"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40f2ff08"/>
        <function-ref name="sync" scoped="" ref="0x40f2e010"/>
        <function-ref name="getChannel" scoped="" ref="0x40f2e170"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40f2e250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40f31238" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40f31238"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40f31410"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40f314f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40f315d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40f316b0"/>
        <function-ref name="setCca" scoped="" ref="0x40f31790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40f31870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40f32b88" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40f32b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40f32d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x40f2eba0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x40f2eba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40f2ed78"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40f2ee58"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40f2d010"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40f2d0f0"/>
        <function-ref name="setCca" scoped="" ref="0x40f2d1d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40f2d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f32190" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f32190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f32368"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f32448"/>
        <function-ref name="getPayload" scoped="" ref="0x40f32528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f32608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f326e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f35100" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f35100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f352d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f353b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f35498"/>
        <function-ref name="cancel" scoped="" ref="0x40f35578"/>
        <function-ref name="sendDone" scoped="" ref="0x40f35658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40f33178" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40f33178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f33350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40f305b8" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40f305b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40f30790"/>
        <function-ref name="setNetwork" scoped="" ref="0x40f30870"/>
        <function-ref name="getRssi" scoped="" ref="0x40f30950"/>
        <function-ref name="getNetwork" scoped="" ref="0x40f30a30"/>
        <function-ref name="getPower" scoped="" ref="0x40f30b10"/>
        <function-ref name="getLqi" scoped="" ref="0x40f30bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40f2e460" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40f2e460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40f2e6b8"/>
        <function-ref name="changed" scoped="" ref="0x40f2e798"/>
        <function-ref name="amGroup" scoped="" ref="0x40f2e878"/>
        <function-ref name="setAddress" scoped="" ref="0x40f2e958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40f30dd8" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40f30dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40f2f010"/>
        <function-ref name="getHeader" scoped="" ref="0x40f2f0f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40f2f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f35ac0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f35ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f35c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f2dbb8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f2dbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f2dd90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f2de70"/>
        <function-ref name="led1On" scoped="" ref="0x40f2c010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f2c0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f2c1d0"/>
        <function-ref name="get" scoped="" ref="0x40f2c2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40f2c390"/>
        <function-ref name="led2Off" scoped="" ref="0x40f2c710"/>
        <function-ref name="set" scoped="" ref="0x40f2c470"/>
        <function-ref name="led0On" scoped="" ref="0x40f2c550"/>
        <function-ref name="led2On" scoped="" ref="0x40f2c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f334e8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f334e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f336c0"/>
        <function-ref name="source" scoped="" ref="0x40f337a0"/>
        <function-ref name="address" scoped="" ref="0x40f33880"/>
        <function-ref name="destination" scoped="" ref="0x40f33960"/>
        <function-ref name="setSource" scoped="" ref="0x40f33a40"/>
        <function-ref name="setDestination" scoped="" ref="0x40f33b20"/>
        <function-ref name="type" scoped="" ref="0x40f33c00"/>
        <function-ref name="setType" scoped="" ref="0x40f33ce0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f33dc0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f33ea0"/>
        <function-ref name="localGroup" scoped="" ref="0x40f32010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x40f2d4f0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x40f2d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f2d6c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f2d7a8"/>
        <function-ref name="request" scoped="" ref="0x40f2d888"/>
        <function-ref name="granted" scoped="" ref="0x40f2d968"/>
        <function-ref name="isOwner" scoped="" ref="0x40f2da48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x418acc38" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x418acc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418ace10"/>
        <function-ref name="getPayload" scoped="" ref="0x418acef0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418ab010"/>
        <function-ref name="cancel" scoped="" ref="0x418ab0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x418ab1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x418ab8e8" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x418ab8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x418abac0"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x418abba0"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x418abc80"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x418abd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x418ac550" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x418ac550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418ac728"/>
        <function-ref name="getPayload" scoped="" ref="0x418ac808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418ac8e8"/>
        <function-ref name="cancel" scoped="" ref="0x418ac9c8"/>
        <function-ref name="sendDone" scoped="" ref="0x418acaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x418ab330" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x418ab330"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x418ab508"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x418ab5e8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x418ab6c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x418ab7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f91150" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f91150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f91328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f91408"/>
        <function-ref name="getPayload" scoped="" ref="0x40f914e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f915c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f916a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f95e10" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f95e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f91010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f917e8" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f917e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f919c0"/>
        <function-ref name="source" scoped="" ref="0x40f91aa0"/>
        <function-ref name="address" scoped="" ref="0x40f91b80"/>
        <function-ref name="destination" scoped="" ref="0x40f91c60"/>
        <function-ref name="setSource" scoped="" ref="0x40f91d40"/>
        <function-ref name="setDestination" scoped="" ref="0x40f91e20"/>
        <function-ref name="type" scoped="" ref="0x40f91f00"/>
        <function-ref name="setType" scoped="" ref="0x40f90010"/>
        <function-ref name="isForMe" scoped="" ref="0x40f900f0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f901d0"/>
        <function-ref name="localGroup" scoped="" ref="0x40f902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f8f330" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f8f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f8f508"/>
        <function-ref name="getPayload" scoped="" ref="0x40f8f5e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f8f6c8"/>
        <function-ref name="cancel" scoped="" ref="0x40f8f7a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f8f888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f8f9c8" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f8f9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f8fba0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f8fc80"/>
        <function-ref name="getPayload" scoped="" ref="0x40f8fd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f8fe40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f8ff20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f8e078" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f8e078"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f8e250"/>
        <function-ref name="source" scoped="" ref="0x40f8e330"/>
        <function-ref name="address" scoped="" ref="0x40f8e410"/>
        <function-ref name="destination" scoped="" ref="0x40f8e4f0"/>
        <function-ref name="setSource" scoped="" ref="0x40f8e5d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40f8e6b0"/>
        <function-ref name="type" scoped="" ref="0x40f8e790"/>
        <function-ref name="setType" scoped="" ref="0x40f8e870"/>
        <function-ref name="isForMe" scoped="" ref="0x40f8e950"/>
        <function-ref name="setGroup" scoped="" ref="0x40f8ea30"/>
        <function-ref name="localGroup" scoped="" ref="0x40f8eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f8ec70" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f8ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f8ee48"/>
        <function-ref name="noAck" scoped="" ref="0x40f8ef28"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f8d018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a34cc0" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a34cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a34e98"/>
        <function-ref name="getPayload" scoped="" ref="0x41a30010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a300f0"/>
        <function-ref name="cancel" scoped="" ref="0x41a301d0"/>
        <function-ref name="sendDone" scoped="" ref="0x41a302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41a303f0" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41a303f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41a305c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41a306a8"/>
        <function-ref name="getPayload" scoped="" ref="0x41a30788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a30868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41a30948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41a30a88" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a30a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a30c60"/>
        <function-ref name="source" scoped="" ref="0x41a30d40"/>
        <function-ref name="address" scoped="" ref="0x41a30e20"/>
        <function-ref name="destination" scoped="" ref="0x41a30f00"/>
        <function-ref name="setSource" scoped="" ref="0x41a2f010"/>
        <function-ref name="setDestination" scoped="" ref="0x41a2f0f0"/>
        <function-ref name="type" scoped="" ref="0x41a2f1d0"/>
        <function-ref name="setType" scoped="" ref="0x41a2f2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x41a2f390"/>
        <function-ref name="setGroup" scoped="" ref="0x41a2f470"/>
        <function-ref name="localGroup" scoped="" ref="0x41a2f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41a2f6b0" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41a2f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41a2f888"/>
        <function-ref name="noAck" scoped="" ref="0x41a2f968"/>
        <function-ref name="wasAcked" scoped="" ref="0x41a2fa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a2b7d0" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a2b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a2b9a8"/>
        <function-ref name="getPayload" scoped="" ref="0x41a2ba88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a2bb68"/>
        <function-ref name="cancel" scoped="" ref="0x41a2bc48"/>
        <function-ref name="sendDone" scoped="" ref="0x41a2bd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41a2be68" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41a2be68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41a29050"/>
        <function-ref name="payloadLength" scoped="" ref="0x41a29130"/>
        <function-ref name="getPayload" scoped="" ref="0x41a29210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a292f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41a293d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41a29510" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a29510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a296e8"/>
        <function-ref name="source" scoped="" ref="0x41a297c8"/>
        <function-ref name="address" scoped="" ref="0x41a298a8"/>
        <function-ref name="destination" scoped="" ref="0x41a29988"/>
        <function-ref name="setSource" scoped="" ref="0x41a29a68"/>
        <function-ref name="setDestination" scoped="" ref="0x41a29b48"/>
        <function-ref name="type" scoped="" ref="0x41a29c28"/>
        <function-ref name="setType" scoped="" ref="0x41a29d08"/>
        <function-ref name="isForMe" scoped="" ref="0x41a29de8"/>
        <function-ref name="setGroup" scoped="" ref="0x41a29ec8"/>
        <function-ref name="localGroup" scoped="" ref="0x41a28010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41a28170" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41a28170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41a28348"/>
        <function-ref name="noAck" scoped="" ref="0x41a28428"/>
        <function-ref name="wasAcked" scoped="" ref="0x41a28508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a20800" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a20800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a209d8"/>
        <function-ref name="getPayload" scoped="" ref="0x41a20ab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a20b98"/>
        <function-ref name="cancel" scoped="" ref="0x41a20c78"/>
        <function-ref name="sendDone" scoped="" ref="0x41a20d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41a20ec8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41a20ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a1e0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x41a1e1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a1e280"/>
        <function-ref name="cancel" scoped="" ref="0x41a1e360"/>
        <function-ref name="sendDone" scoped="" ref="0x41a1e440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41a1e580" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a1e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a1e758"/>
        <function-ref name="source" scoped="" ref="0x41a1e838"/>
        <function-ref name="address" scoped="" ref="0x41a1e918"/>
        <function-ref name="destination" scoped="" ref="0x41a1e9f8"/>
        <function-ref name="setSource" scoped="" ref="0x41a1ead8"/>
        <function-ref name="setDestination" scoped="" ref="0x41a1ebb8"/>
        <function-ref name="type" scoped="" ref="0x41a1ec98"/>
        <function-ref name="setType" scoped="" ref="0x41a1ed78"/>
        <function-ref name="isForMe" scoped="" ref="0x41a1ee58"/>
        <function-ref name="setGroup" scoped="" ref="0x41a1d010"/>
        <function-ref name="localGroup" scoped="" ref="0x41a1d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x41a27a80" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x41a27a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a27c58"/>
        <function-ref name="getPayload" scoped="" ref="0x41a27d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a27e18"/>
        <function-ref name="cancel" scoped="" ref="0x41a27ef8"/>
        <function-ref name="sendDone" scoped="" ref="0x41a25010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x41a25728" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41a25728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x41a25900"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x41a259e0"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x41a25ac0"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x41a25ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a27398" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a27398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a27570"/>
        <function-ref name="getPayload" scoped="" ref="0x41a27650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a27730"/>
        <function-ref name="cancel" scoped="" ref="0x41a27810"/>
        <function-ref name="sendDone" scoped="" ref="0x41a278f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x41a25170" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x41a25170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41a25348"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41a25428"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41a25508"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41a255e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f8c568" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f8c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f8c740"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f8c820"/>
        <function-ref name="getPayload" scoped="" ref="0x40f8c900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f8c9e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f8cac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f8c250" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f8c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f8c428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f8cc00" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f8cc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f8cdd8"/>
        <function-ref name="source" scoped="" ref="0x40f8ceb8"/>
        <function-ref name="address" scoped="" ref="0x40f8b010"/>
        <function-ref name="destination" scoped="" ref="0x40f8b0f0"/>
        <function-ref name="setSource" scoped="" ref="0x40f8b1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40f8b2b0"/>
        <function-ref name="type" scoped="" ref="0x40f8b390"/>
        <function-ref name="setType" scoped="" ref="0x40f8b470"/>
        <function-ref name="isForMe" scoped="" ref="0x40f8b550"/>
        <function-ref name="setGroup" scoped="" ref="0x40f8b630"/>
        <function-ref name="localGroup" scoped="" ref="0x40f8b710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f8a760" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f8a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f8a938"/>
        <function-ref name="getPayload" scoped="" ref="0x40f8aa18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f8aaf8"/>
        <function-ref name="cancel" scoped="" ref="0x40f8abd8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f8acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f8adf8" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f8adf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f89010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f890f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f891d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f892b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f89390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f894d0" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f894d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f896a8"/>
        <function-ref name="source" scoped="" ref="0x40f89788"/>
        <function-ref name="address" scoped="" ref="0x40f89868"/>
        <function-ref name="destination" scoped="" ref="0x40f89948"/>
        <function-ref name="setSource" scoped="" ref="0x40f89a28"/>
        <function-ref name="setDestination" scoped="" ref="0x40f89b08"/>
        <function-ref name="type" scoped="" ref="0x40f89be8"/>
        <function-ref name="setType" scoped="" ref="0x40f89cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x40f89da8"/>
        <function-ref name="setGroup" scoped="" ref="0x40f89e88"/>
        <function-ref name="localGroup" scoped="" ref="0x40f88010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f88170" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f88170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f88348"/>
        <function-ref name="noAck" scoped="" ref="0x40f88428"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f88508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a68678" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a68678"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a68850"/>
        <function-ref name="getPayload" scoped="" ref="0x41a68930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a68a10"/>
        <function-ref name="cancel" scoped="" ref="0x41a68af0"/>
        <function-ref name="sendDone" scoped="" ref="0x41a68bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41a68d10" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41a68d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41a68ee8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41a67010"/>
        <function-ref name="getPayload" scoped="" ref="0x41a670f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a671d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41a672b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41a673f0" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a673f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a675c8"/>
        <function-ref name="source" scoped="" ref="0x41a676a8"/>
        <function-ref name="address" scoped="" ref="0x41a67788"/>
        <function-ref name="destination" scoped="" ref="0x41a67868"/>
        <function-ref name="setSource" scoped="" ref="0x41a67948"/>
        <function-ref name="setDestination" scoped="" ref="0x41a67a28"/>
        <function-ref name="type" scoped="" ref="0x41a67b08"/>
        <function-ref name="setType" scoped="" ref="0x41a67be8"/>
        <function-ref name="isForMe" scoped="" ref="0x41a67cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x41a67da8"/>
        <function-ref name="localGroup" scoped="" ref="0x41a67e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41a66010" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41a66010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41a661e8"/>
        <function-ref name="noAck" scoped="" ref="0x41a662c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41a663a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a64ea0" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a64ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a610c0"/>
        <function-ref name="getPayload" scoped="" ref="0x41a611a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a61280"/>
        <function-ref name="cancel" scoped="" ref="0x41a61360"/>
        <function-ref name="sendDone" scoped="" ref="0x41a61440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41a61580" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41a61580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41a61758"/>
        <function-ref name="payloadLength" scoped="" ref="0x41a61838"/>
        <function-ref name="getPayload" scoped="" ref="0x41a61918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a619f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41a61ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41a61c18" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a61c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a61df0"/>
        <function-ref name="source" scoped="" ref="0x41a61ed0"/>
        <function-ref name="address" scoped="" ref="0x41a5f010"/>
        <function-ref name="destination" scoped="" ref="0x41a5f0f0"/>
        <function-ref name="setSource" scoped="" ref="0x41a5f1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x41a5f2b0"/>
        <function-ref name="type" scoped="" ref="0x41a5f390"/>
        <function-ref name="setType" scoped="" ref="0x41a5f470"/>
        <function-ref name="isForMe" scoped="" ref="0x41a5f550"/>
        <function-ref name="setGroup" scoped="" ref="0x41a5f630"/>
        <function-ref name="localGroup" scoped="" ref="0x41a5f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41a5f870" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41a5f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41a5fa48"/>
        <function-ref name="noAck" scoped="" ref="0x41a5fb28"/>
        <function-ref name="wasAcked" scoped="" ref="0x41a5fc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a59ef0" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a59ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a560e0"/>
        <function-ref name="getPayload" scoped="" ref="0x41a561c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a562a0"/>
        <function-ref name="cancel" scoped="" ref="0x41a56380"/>
        <function-ref name="sendDone" scoped="" ref="0x41a56460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41a565d0" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41a565d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a567a8"/>
        <function-ref name="getPayload" scoped="" ref="0x41a56888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a56968"/>
        <function-ref name="cancel" scoped="" ref="0x41a56a48"/>
        <function-ref name="sendDone" scoped="" ref="0x41a56b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41a56c68" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a56c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a56e40"/>
        <function-ref name="source" scoped="" ref="0x41a56f20"/>
        <function-ref name="address" scoped="" ref="0x41a55018"/>
        <function-ref name="destination" scoped="" ref="0x41a550f8"/>
        <function-ref name="setSource" scoped="" ref="0x41a551d8"/>
        <function-ref name="setDestination" scoped="" ref="0x41a552b8"/>
        <function-ref name="type" scoped="" ref="0x41a55398"/>
        <function-ref name="setType" scoped="" ref="0x41a55478"/>
        <function-ref name="isForMe" scoped="" ref="0x41a55558"/>
        <function-ref name="setGroup" scoped="" ref="0x41a55638"/>
        <function-ref name="localGroup" scoped="" ref="0x41a55718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x41a5d1a0" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x41a5d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a5d378"/>
        <function-ref name="getPayload" scoped="" ref="0x41a5d458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a5d538"/>
        <function-ref name="cancel" scoped="" ref="0x41a5d618"/>
        <function-ref name="sendDone" scoped="" ref="0x41a5d6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x41a5de10" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41a5de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x41a5c010"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x41a5c0f0"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x41a5c1d0"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x41a5c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a5ea90" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a5ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a5ec68"/>
        <function-ref name="getPayload" scoped="" ref="0x41a5ed48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a5ee28"/>
        <function-ref name="cancel" scoped="" ref="0x41a5ef08"/>
        <function-ref name="sendDone" scoped="" ref="0x41a5d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x41a5d858" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x41a5d858"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41a5da30"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41a5db10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41a5dbf0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41a5dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f87a68" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f87a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f87c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f87d20"/>
        <function-ref name="getPayload" scoped="" ref="0x40f87e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f87ee0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f86010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f87750" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f87750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f87928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f86150" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f86150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f86328"/>
        <function-ref name="source" scoped="" ref="0x40f86408"/>
        <function-ref name="address" scoped="" ref="0x40f864e8"/>
        <function-ref name="destination" scoped="" ref="0x40f865c8"/>
        <function-ref name="setSource" scoped="" ref="0x40f866a8"/>
        <function-ref name="setDestination" scoped="" ref="0x40f86788"/>
        <function-ref name="type" scoped="" ref="0x40f86868"/>
        <function-ref name="setType" scoped="" ref="0x40f86948"/>
        <function-ref name="isForMe" scoped="" ref="0x40f86a28"/>
        <function-ref name="setGroup" scoped="" ref="0x40f86b08"/>
        <function-ref name="localGroup" scoped="" ref="0x40f86be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40fb65a8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="ObjectTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40fb65a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40fb40d8"/>
        <function-ref name="fired" scoped="" ref="0x40fb5368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40fb5a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40fb5818"/>
        <function-ref name="getdt" scoped="" ref="0x40fb4588"/>
        <function-ref name="gett0" scoped="" ref="0x40fb4330"/>
        <function-ref name="isRunning" scoped="" ref="0x40fb55c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40fb6bd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40fb5d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40fb6e50"/>
        <function-ref name="stop" scoped="" ref="0x40fb5110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40faf2c0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40faf2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40faf498"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40faf578"/>
        <function-ref name="computeCrc" scoped="" ref="0x40faf658"/>
        <function-ref name="getSize" scoped="" ref="0x40faf738"/>
        <function-ref name="readDone" scoped="" ref="0x40faf818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40faf958" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40faf958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fafb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fafc10"/>
        <function-ref name="request" scoped="" ref="0x40fafcf0"/>
        <function-ref name="granted" scoped="" ref="0x40fafdd0"/>
        <function-ref name="isOwner" scoped="" ref="0x40fafeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41aa0090" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41aa0090"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41aa0268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40fabb58" loc="42:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40fabb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fabd30"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40fabe10"/>
        <function-ref name="computeCrc" scoped="" ref="0x40fabef0"/>
        <function-ref name="getSize" scoped="" ref="0x40fa6010"/>
        <function-ref name="readDone" scoped="" ref="0x40fa60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40fa65a0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40fa65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40fa6778"/>
        <function-ref name="writeDone" scoped="" ref="0x40fa6858"/>
        <function-ref name="erase" scoped="" ref="0x40fa6938"/>
        <function-ref name="eraseDone" scoped="" ref="0x40fa6a18"/>
        <function-ref name="write" scoped="" ref="0x40fa6af8"/>
        <function-ref name="sync" scoped="" ref="0x40fa6bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeId" ref="0x40fa4260" loc="46:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x40fa4260"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40fa4438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StorageMap" ref="0x40fa3b70" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x40fa3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x40fa3d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40f9f0d8" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40f9f0d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f9f2c0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f9f3a0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f9f480"/>
        <function-ref name="getSize" scoped="" ref="0x40f9f560"/>
        <function-ref name="readDone" scoped="" ref="0x40f9f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40f9f818" loc="41:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40f9f818"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f9fa00"/>
        <function-ref name="writeDone" scoped="" ref="0x40f9fae0"/>
        <function-ref name="erase" scoped="" ref="0x40f9fbc0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f9fca0"/>
        <function-ref name="write" scoped="" ref="0x40f9fd80"/>
        <function-ref name="sync" scoped="" ref="0x40f9fe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeId" ref="0x40fd3488" loc="47:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x40fd3488"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40fd3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StorageMap" ref="0x40fd4068" loc="42:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x40fd4068"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x40fd4250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockRead" ref="0x40fd4478" loc="45:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockRead" scoped="" ref="0x40fd4478"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fd4660"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40fd4740"/>
        <function-ref name="computeCrc" scoped="" ref="0x40fd4820"/>
        <function-ref name="getSize" scoped="" ref="0x40fd4900"/>
        <function-ref name="readDone" scoped="" ref="0x40fd49e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockWrite" ref="0x40fd4bd8" loc="46:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockWrite" scoped="" ref="0x40fd4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40fd4dc0"/>
        <function-ref name="writeDone" scoped="" ref="0x40fd4ea0"/>
        <function-ref name="erase" scoped="" ref="0x40fd3010"/>
        <function-ref name="eraseDone" scoped="" ref="0x40fd30f0"/>
        <function-ref name="write" scoped="" ref="0x40fd31d0"/>
        <function-ref name="sync" scoped="" ref="0x40fd32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x40fd3848" loc="51:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x40fd3848"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x40fd3a30"/>
        <function-ref name="remap" scoped="" ref="0x40fd3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41005930" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41005930"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41005b08"/>
        <function-ref name="writeDone" scoped="" ref="0x41005be8"/>
        <function-ref name="erase" scoped="" ref="0x41005cc8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41005da8"/>
        <function-ref name="write" scoped="" ref="0x41005e88"/>
        <function-ref name="sync" scoped="" ref="0x41147010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41147150" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41147150"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41147328"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41147408"/>
        <function-ref name="computeCrc" scoped="" ref="0x411474e8"/>
        <function-ref name="getSize" scoped="" ref="0x411475c8"/>
        <function-ref name="readDone" scoped="" ref="0x411476a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45db" ref="0x40ff12a8" loc="59:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x40ff12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x40ffd250"/>
        <function-ref name="syncDone" scoped="" ref="0x40ff1560"/>
        <function-ref name="flushDone" scoped="" ref="0x40ff1640"/>
        <function-ref name="read" scoped="" ref="0x40ff1720"/>
        <function-ref name="writeDone" scoped="" ref="0x40ff1800"/>
        <function-ref name="copyPage" scoped="" ref="0x40ff18e0"/>
        <function-ref name="erase" scoped="" ref="0x40ff19c0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40ff1aa0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40ff1b80"/>
        <function-ref name="flush" scoped="" ref="0x40ff1c60"/>
        <function-ref name="syncAll" scoped="" ref="0x40ff1d40"/>
        <function-ref name="flushAll" scoped="" ref="0x40ff1e20"/>
        <function-ref name="write" scoped="" ref="0x40ff1f00"/>
        <function-ref name="sync" scoped="" ref="0x40ffd090"/>
        <function-ref name="computeCrc" scoped="" ref="0x40ffd170"/>
        <function-ref name="readDone" scoped="" ref="0x40ff1480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41000370" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41000370"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41000548"/>
        <function-ref name="writeDone" scoped="" ref="0x41000628"/>
        <function-ref name="erase" scoped="" ref="0x41000708"/>
        <function-ref name="eraseDone" scoped="" ref="0x410007e8"/>
        <function-ref name="write" scoped="" ref="0x410008c8"/>
        <function-ref name="sync" scoped="" ref="0x410009a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41000e58" loc="56:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41000e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ffe050"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40ffe130"/>
        <function-ref name="computeCrc" scoped="" ref="0x40ffe210"/>
        <function-ref name="getSize" scoped="" ref="0x40ffe2f0"/>
        <function-ref name="readDone" scoped="" ref="0x40ffe3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BConfig" ref="0x40fedcd8" loc="62:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BConfig" scoped="" ref="0x40fedcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbBlockConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="npages" scoped="" ref="0x40fedeb0"/>
        <function-ref name="flipped" scoped="" ref="0x40ff0010"/>
        <function-ref name="isConfig" scoped="" ref="0x40ff00f0"/>
        <function-ref name="writeHook" scoped="" ref="0x40ff01d0"/>
        <function-ref name="remap" scoped="" ref="0x40ff02b0"/>
        <function-ref name="writeContinue" scoped="" ref="0x40ff0390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x40ffd720" loc="60:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x40ffd720"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x40ffd8f8"/>
        <function-ref name="remap" scoped="" ref="0x40ffd9d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40ffde80" loc="61:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ffde80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ffc070"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ffc150"/>
        <function-ref name="request" scoped="" ref="0x40ffc230"/>
        <function-ref name="granted" scoped="" ref="0x40ffc310"/>
        <function-ref name="isOwner" scoped="" ref="0x40ffc3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x41002b88" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x41002b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x41044b18"/>
        <function-ref name="syncDone" scoped="" ref="0x41002e40"/>
        <function-ref name="flushDone" scoped="" ref="0x41002f20"/>
        <function-ref name="read" scoped="" ref="0x41044018"/>
        <function-ref name="writeDone" scoped="" ref="0x410440f8"/>
        <function-ref name="copyPage" scoped="" ref="0x410441d8"/>
        <function-ref name="erase" scoped="" ref="0x410442b8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41044398"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41044478"/>
        <function-ref name="flush" scoped="" ref="0x41044558"/>
        <function-ref name="syncAll" scoped="" ref="0x41044638"/>
        <function-ref name="flushAll" scoped="" ref="0x41044718"/>
        <function-ref name="write" scoped="" ref="0x410447f8"/>
        <function-ref name="sync" scoped="" ref="0x41044958"/>
        <function-ref name="computeCrc" scoped="" ref="0x41044a38"/>
        <function-ref name="readDone" scoped="" ref="0x41002d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4103e648" loc="27:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4103e648"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4103e820"/>
        <function-ref name="requested" scoped="" ref="0x4103e900"/>
        <function-ref name="granted" scoped="" ref="0x4103e9e0"/>
        <function-ref name="isOwner" scoped="" ref="0x4103eac0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4103eba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41043010" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41043010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410431e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410432c8"/>
        <function-ref name="request" scoped="" ref="0x410433a8"/>
        <function-ref name="granted" scoped="" ref="0x41043488"/>
        <function-ref name="isOwner" scoped="" ref="0x41043568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4103ed50" loc="28:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4103ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4103ef28"/>
        <function-ref name="userId" scoped="" ref="0x41041018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45db" ref="0x410630f0" loc="59:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x410630f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x41072390"/>
        <function-ref name="waitCompare" scoped="" ref="0x410633a8"/>
        <function-ref name="crcDone" scoped="" ref="0x41063488"/>
        <function-ref name="flushDone" scoped="" ref="0x41063568"/>
        <function-ref name="read" scoped="" ref="0x41063648"/>
        <function-ref name="erase" scoped="" ref="0x41063728"/>
        <function-ref name="writeDone" scoped="" ref="0x41063808"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x410638e8"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x410639c8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41063aa8"/>
        <function-ref name="waitIdle" scoped="" ref="0x41063b88"/>
        <function-ref name="flush" scoped="" ref="0x41063c68"/>
        <function-ref name="write" scoped="" ref="0x41063d48"/>
        <function-ref name="compareDone" scoped="" ref="0x41063ea8"/>
        <function-ref name="compare" scoped="" ref="0x41072010"/>
        <function-ref name="crc" scoped="" ref="0x410720f0"/>
        <function-ref name="readBuffer" scoped="" ref="0x410721d0"/>
        <function-ref name="fillDone" scoped="" ref="0x410722b0"/>
        <function-ref name="readDone" scoped="" ref="0x410632c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x41041c70" loc="56:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x41041c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x41073bf8"/>
        <function-ref name="syncDone" scoped="" ref="0x41041f28"/>
        <function-ref name="flushDone" scoped="" ref="0x41073018"/>
        <function-ref name="read" scoped="" ref="0x410730f8"/>
        <function-ref name="writeDone" scoped="" ref="0x410731d8"/>
        <function-ref name="copyPage" scoped="" ref="0x410732b8"/>
        <function-ref name="erase" scoped="" ref="0x41073398"/>
        <function-ref name="eraseDone" scoped="" ref="0x41073478"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41073558"/>
        <function-ref name="flush" scoped="" ref="0x41073638"/>
        <function-ref name="syncAll" scoped="" ref="0x41073718"/>
        <function-ref name="flushAll" scoped="" ref="0x410737f8"/>
        <function-ref name="write" scoped="" ref="0x410738d8"/>
        <function-ref name="sync" scoped="" ref="0x41073a38"/>
        <function-ref name="computeCrc" scoped="" ref="0x41073b18"/>
        <function-ref name="readDone" scoped="" ref="0x41041e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x41061748" loc="60:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x41061748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404711a8"/>
            <typename><typedef-ref name="TMicro" ref="0x40471370"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x41061e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskSuccess" ref="0x4108e3b0" loc="145:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskSuccess" scoped="" ref="0x4108e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4108e588"/>
        <function-ref name="runTask" scoped="" ref="0x4108e668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskFail" ref="0x4108d3b0" loc="148:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskFail" scoped="" ref="0x4108d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4108d588"/>
        <function-ref name="runTask" scoped="" ref="0x4108d668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41041918" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41041918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41041af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x4103d988" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <component-ref qname="HplAt45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x4103d988"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x404193d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x404193d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x410bcbf0"/>
        <function-ref name="waitCompare" scoped="" ref="0x4103dc40"/>
        <function-ref name="crcDone" scoped="" ref="0x4103dd20"/>
        <function-ref name="flushDone" scoped="" ref="0x4103de00"/>
        <function-ref name="read" scoped="" ref="0x4103dee0"/>
        <function-ref name="erase" scoped="" ref="0x410bc010"/>
        <function-ref name="writeDone" scoped="" ref="0x410bc0f0"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x410bc1d0"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x410bc2b0"/>
        <function-ref name="eraseDone" scoped="" ref="0x410bc390"/>
        <function-ref name="waitIdle" scoped="" ref="0x410bc470"/>
        <function-ref name="flush" scoped="" ref="0x410bc550"/>
        <function-ref name="write" scoped="" ref="0x410bc630"/>
        <function-ref name="compareDone" scoped="" ref="0x410bc790"/>
        <function-ref name="compare" scoped="" ref="0x410bc870"/>
        <function-ref name="crc" scoped="" ref="0x410bc950"/>
        <function-ref name="readBuffer" scoped="" ref="0x410bca30"/>
        <function-ref name="fillDone" scoped="" ref="0x410bcb10"/>
        <function-ref name="readDone" scoped="" ref="0x4103db60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x410ba5b8" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x410ba5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0x410b9870"/>
        <function-ref name="waitCompare" scoped="" ref="0x410ba870"/>
        <function-ref name="crcDone" scoped="" ref="0x410ba950"/>
        <function-ref name="flushDone" scoped="" ref="0x410baa30"/>
        <function-ref name="read" scoped="" ref="0x410bab10"/>
        <function-ref name="erase" scoped="" ref="0x410babf0"/>
        <function-ref name="writeDone" scoped="" ref="0x410bacd0"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x410badb0"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x410bae90"/>
        <function-ref name="eraseDone" scoped="" ref="0x410b9010"/>
        <function-ref name="waitIdle" scoped="" ref="0x410b90f0"/>
        <function-ref name="flush" scoped="" ref="0x410b91d0"/>
        <function-ref name="write" scoped="" ref="0x410b92b0"/>
        <function-ref name="compareDone" scoped="" ref="0x410b9410"/>
        <function-ref name="compare" scoped="" ref="0x410b94f0"/>
        <function-ref name="crc" scoped="" ref="0x410b95d0"/>
        <function-ref name="readBuffer" scoped="" ref="0x410b96b0"/>
        <function-ref name="fillDone" scoped="" ref="0x410b9790"/>
        <function-ref name="fill" scoped="" ref="0x410ba790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45dbByte" ref="0x41100488" loc="30:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x41100488"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x41100660"/>
        <function-ref name="waitIdle" scoped="" ref="0x41100740"/>
        <function-ref name="idle" scoped="" ref="0x41100820"/>
        <function-ref name="select" scoped="" ref="0x41100900"/>
        <function-ref name="deselect" scoped="" ref="0x411009e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x410b99e0" loc="28:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410b99e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410b9bb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410b9c98"/>
        <function-ref name="request" scoped="" ref="0x410b9d78"/>
        <function-ref name="granted" scoped="" ref="0x410b9e58"/>
        <function-ref name="isOwner" scoped="" ref="0x41100010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlashSpi" ref="0x41100170" loc="29:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x41100170"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x41100348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x410fc5b0" loc="56:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x410fc5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x410fc788"/>
        <function-ref name="waitIdle" scoped="" ref="0x410fc868"/>
        <function-ref name="idle" scoped="" ref="0x410fc948"/>
        <function-ref name="select" scoped="" ref="0x410fca28"/>
        <function-ref name="deselect" scoped="" ref="0x410fcb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410ffa00" loc="54:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410ffa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410ffbd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410ffcb8"/>
        <function-ref name="request" scoped="" ref="0x410ffd98"/>
        <function-ref name="granted" scoped="" ref="0x410ffe78"/>
        <function-ref name="isOwner" scoped="" ref="0x410fc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x410fc210" loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x410fc210"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x410fc3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="In" ref="0x410f6110" loc="100:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="In" scoped="" ref="0x410f6110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410f62e8"/>
        <function-ref name="isInput" scoped="" ref="0x410f63c8"/>
        <function-ref name="toggle" scoped="" ref="0x410f64a8"/>
        <function-ref name="isOutput" scoped="" ref="0x410f6588"/>
        <function-ref name="get" scoped="" ref="0x410f6668"/>
        <function-ref name="makeOutput" scoped="" ref="0x410f6748"/>
        <function-ref name="set" scoped="" ref="0x410f6828"/>
        <function-ref name="clr" scoped="" ref="0x410f6908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x410f6c58" loc="101:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x410f6c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404711a8"/>
            <typename><typedef-ref name="TMicro" ref="0x40471370"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x410f53f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Out" ref="0x410f7730" loc="99:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Out" scoped="" ref="0x410f7730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410f7908"/>
        <function-ref name="isInput" scoped="" ref="0x410f79e8"/>
        <function-ref name="toggle" scoped="" ref="0x410f7ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x410f7ba8"/>
        <function-ref name="get" scoped="" ref="0x410f7c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x410f7d68"/>
        <function-ref name="set" scoped="" ref="0x410f7e48"/>
        <function-ref name="clr" scoped="" ref="0x410f7f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Select" ref="0x410f8330" loc="97:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Select" scoped="" ref="0x410f8330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410f8508"/>
        <function-ref name="isInput" scoped="" ref="0x410f85e8"/>
        <function-ref name="toggle" scoped="" ref="0x410f86c8"/>
        <function-ref name="isOutput" scoped="" ref="0x410f87a8"/>
        <function-ref name="get" scoped="" ref="0x410f8888"/>
        <function-ref name="makeOutput" scoped="" ref="0x410f8968"/>
        <function-ref name="set" scoped="" ref="0x410f8a48"/>
        <function-ref name="clr" scoped="" ref="0x410f8b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x410f9af8" loc="94:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x410f9af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x410f9cd0"/>
        <function-ref name="waitIdle" scoped="" ref="0x410f9db0"/>
        <function-ref name="idle" scoped="" ref="0x410f9e90"/>
        <function-ref name="select" scoped="" ref="0x410f8010"/>
        <function-ref name="deselect" scoped="" ref="0x410f80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Clk" ref="0x410f8d08" loc="98:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Clk" scoped="" ref="0x410f8d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410f8ee0"/>
        <function-ref name="isInput" scoped="" ref="0x410f7010"/>
        <function-ref name="toggle" scoped="" ref="0x410f70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x410f71d0"/>
        <function-ref name="get" scoped="" ref="0x410f72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x410f7390"/>
        <function-ref name="set" scoped="" ref="0x410f7470"/>
        <function-ref name="clr" scoped="" ref="0x410f7550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="avail" ref="0x4111e728" loc="163:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="avail" scoped="" ref="0x4111e728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4111e900"/>
        <function-ref name="runTask" scoped="" ref="0x4111e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410f9380" loc="92:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410f9380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410f9558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x410f9758" loc="93:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x410f9758"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x410f9930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x41117270" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x41117270"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404711a8"/>
            <typename><typedef-ref name="TMicro" ref="0x40471370"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x411179c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41118f18" loc="22:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41118f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41115108"/>
        <function-ref name="configure" scoped="" ref="0x411151e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41118860" loc="21:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41118860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41118a38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41118b18"/>
        <function-ref name="request" scoped="" ref="0x41118bf8"/>
        <function-ref name="granted" scoped="" ref="0x41118cd8"/>
        <function-ref name="isOwner" scoped="" ref="0x41118db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="granted" ref="0x41115368" loc="25:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="granted" scoped="" ref="0x41115368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41115540"/>
        <function-ref name="runTask" scoped="" ref="0x41115620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41109b58" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41109b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41109d40"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41109e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4114ab58" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4114ab58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4114ad40"/>
        <function-ref name="configure" scoped="" ref="0x4114ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4114a010" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4114a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4114a1e8"/>
        <function-ref name="requested" scoped="" ref="0x4114a2c8"/>
        <function-ref name="granted" scoped="" ref="0x4114a3a8"/>
        <function-ref name="isOwner" scoped="" ref="0x4114a488"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4114a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41109418" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41109418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41109600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411096e0"/>
        <function-ref name="request" scoped="" ref="0x411097c0"/>
        <function-ref name="granted" scoped="" ref="0x411098a0"/>
        <function-ref name="isOwner" scoped="" ref="0x41109980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4114a6a8" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4114a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4114a880"/>
        <function-ref name="userId" scoped="" ref="0x4114a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41ac2100" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41ac2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41ac22d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41ac2438" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41ac2438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41ac2610"/>
        <function-ref name="isEmpty" scoped="" ref="0x41ac26f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41ac27d0"/>
        <function-ref name="dequeue" scoped="" ref="0x41ac28b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41ac0cf8" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41ac0cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41ac0ee0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41abf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41abfca8" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41abfca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41abfe90"/>
        <function-ref name="configure" scoped="" ref="0x41abe010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41abe170" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41abe170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41abe348"/>
        <function-ref name="isEmpty" scoped="" ref="0x41abe428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41abe508"/>
        <function-ref name="dequeue" scoped="" ref="0x41abe5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41abf150" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41abf150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41abf328"/>
        <function-ref name="requested" scoped="" ref="0x41abf408"/>
        <function-ref name="granted" scoped="" ref="0x41abf4e8"/>
        <function-ref name="isOwner" scoped="" ref="0x41abf5c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41abf6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41abe728" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41abe728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41abe900"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41abe9e0"/>
        <function-ref name="led1On" scoped="" ref="0x41abeac0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41abeba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41abec80"/>
        <function-ref name="get" scoped="" ref="0x41abed60"/>
        <function-ref name="led1Off" scoped="" ref="0x41abee40"/>
        <function-ref name="led0On" scoped="" ref="0x41abd1d8"/>
        <function-ref name="set" scoped="" ref="0x41abd018"/>
        <function-ref name="led2On" scoped="" ref="0x41abef20"/>
        <function-ref name="led2Off" scoped="" ref="0x41abd0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41ac05b8" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41ac05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41ac07a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41ac0880"/>
        <function-ref name="request" scoped="" ref="0x41ac0960"/>
        <function-ref name="granted" scoped="" ref="0x41ac0a40"/>
        <function-ref name="isOwner" scoped="" ref="0x41ac0b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41abf7e8" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41abf7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41abf9c0"/>
        <function-ref name="userId" scoped="" ref="0x41abfaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41abd358" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41abd358"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41abd530"/>
        <function-ref name="runTask" scoped="" ref="0x41abd610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbVolume" ref="0x411467d0" loc="18:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbStorageManagerC.nc">
      <component-ref qname="At45dbStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x411467d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x411469a8"/>
        <function-ref name="remap" scoped="" ref="0x41146a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x411406a8" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x411406a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41140880"/>
        <function-ref name="writeDone" scoped="" ref="0x41140960"/>
        <function-ref name="erase" scoped="" ref="0x41140a40"/>
        <function-ref name="eraseDone" scoped="" ref="0x41140b20"/>
        <function-ref name="write" scoped="" ref="0x41140c00"/>
        <function-ref name="sync" scoped="" ref="0x41140ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41140e20" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41140e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4113e010"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4113e0f0"/>
        <function-ref name="computeCrc" scoped="" ref="0x4113e1d0"/>
        <function-ref name="getSize" scoped="" ref="0x4113e2b0"/>
        <function-ref name="readDone" scoped="" ref="0x4113e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x4113d338" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4113d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4113d510"/>
        <function-ref name="writeDone" scoped="" ref="0x4113d5f0"/>
        <function-ref name="erase" scoped="" ref="0x4113d6d0"/>
        <function-ref name="eraseDone" scoped="" ref="0x4113d7b0"/>
        <function-ref name="write" scoped="" ref="0x4113d890"/>
        <function-ref name="sync" scoped="" ref="0x4113d970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x4113dab0" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4113dab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4113dc88"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4113dd68"/>
        <function-ref name="computeCrc" scoped="" ref="0x4113de48"/>
        <function-ref name="getSize" scoped="" ref="0x4113df28"/>
        <function-ref name="readDone" scoped="" ref="0x4113c018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41176010" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41176010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x411761e8"/>
        <function-ref name="writeDone" scoped="" ref="0x411762c8"/>
        <function-ref name="erase" scoped="" ref="0x411763a8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41176488"/>
        <function-ref name="write" scoped="" ref="0x41176568"/>
        <function-ref name="sync" scoped="" ref="0x41176648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41176788" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41176788"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41176960"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41176a40"/>
        <function-ref name="computeCrc" scoped="" ref="0x41176b20"/>
        <function-ref name="getSize" scoped="" ref="0x41176c00"/>
        <function-ref name="readDone" scoped="" ref="0x41176ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41aa0ba0" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41aa0ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41aa0d78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41aa0e58"/>
        <function-ref name="request" scoped="" ref="0x41a9f010"/>
        <function-ref name="granted" scoped="" ref="0x41a9f0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x41a9f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4116cdf0" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <component-ref qname="BlockStorageLockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4116cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41169010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411690f0"/>
        <function-ref name="request" scoped="" ref="0x411691d0"/>
        <function-ref name="granted" scoped="" ref="0x411692b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41169390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41169540" loc="41:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <component-ref qname="BlockStorageLockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41169540"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41169718"/>
        <function-ref name="userId" scoped="" ref="0x411697f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41168d20" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41168d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41168f08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41167010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41167600" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41167600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411677e8"/>
        <function-ref name="configure" scoped="" ref="0x411678c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411685e0" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411685e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411687c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411688a8"/>
        <function-ref name="request" scoped="" ref="0x41168988"/>
        <function-ref name="granted" scoped="" ref="0x41168a68"/>
        <function-ref name="isOwner" scoped="" ref="0x41168b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41167150" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41167150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41167328"/>
        <function-ref name="userId" scoped="" ref="0x41167408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41af52c8" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41af52c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41af54a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41af5600" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41af5600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41af57d8"/>
        <function-ref name="isEmpty" scoped="" ref="0x41af58b8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41af5998"/>
        <function-ref name="dequeue" scoped="" ref="0x41af5a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41af4d70" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41af4d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41af3010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41af30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41af36f0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41af36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41af38d8"/>
        <function-ref name="configure" scoped="" ref="0x41af39b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41af3b18" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41af3b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41af3cf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x41af3dd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41af3eb0"/>
        <function-ref name="dequeue" scoped="" ref="0x41af2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41af4630" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41af4630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41af4818"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41af48f8"/>
        <function-ref name="request" scoped="" ref="0x41af49d8"/>
        <function-ref name="granted" scoped="" ref="0x41af4ab8"/>
        <function-ref name="isOwner" scoped="" ref="0x41af4b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41af3230" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41af3230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41af3408"/>
        <function-ref name="userId" scoped="" ref="0x41af34e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41af2190" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41af2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41af2368"/>
        <function-ref name="runTask" scoped="" ref="0x41af2448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x4116ae30" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4116ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41165050"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41165130"/>
        <function-ref name="computeCrc" scoped="" ref="0x41165210"/>
        <function-ref name="getSize" scoped="" ref="0x411652f0"/>
        <function-ref name="readDone" scoped="" ref="0x411653d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41165510" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41165510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411656e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411657c8"/>
        <function-ref name="request" scoped="" ref="0x411658a8"/>
        <function-ref name="granted" scoped="" ref="0x41165988"/>
        <function-ref name="isOwner" scoped="" ref="0x41165a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41ade828" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41ade828"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41adea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41add358" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41add358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41add530"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41add610"/>
        <function-ref name="request" scoped="" ref="0x41add6f0"/>
        <function-ref name="granted" scoped="" ref="0x41add7d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41add8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x411649d8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x411649d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41164bb0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41164c90"/>
        <function-ref name="computeCrc" scoped="" ref="0x41164d70"/>
        <function-ref name="getSize" scoped="" ref="0x41164e50"/>
        <function-ref name="readDone" scoped="" ref="0x41163010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41163150" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41163150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41163328"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41163408"/>
        <function-ref name="request" scoped="" ref="0x411634e8"/>
        <function-ref name="granted" scoped="" ref="0x411635c8"/>
        <function-ref name="isOwner" scoped="" ref="0x411636a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41ad9c60" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41ad9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41ad9e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41ad7820" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41ad7820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41ad79f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41ad7ad8"/>
        <function-ref name="request" scoped="" ref="0x41ad7bb8"/>
        <function-ref name="granted" scoped="" ref="0x41ad7c98"/>
        <function-ref name="isOwner" scoped="" ref="0x41ad7d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41161958" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41161958"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41161b30"/>
        <function-ref name="writeDone" scoped="" ref="0x41161c10"/>
        <function-ref name="erase" scoped="" ref="0x41161cf0"/>
        <function-ref name="eraseDone" scoped="" ref="0x41161dd0"/>
        <function-ref name="write" scoped="" ref="0x41161eb0"/>
        <function-ref name="sync" scoped="" ref="0x41160010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41160150" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41160150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41160328"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41160408"/>
        <function-ref name="request" scoped="" ref="0x411604e8"/>
        <function-ref name="granted" scoped="" ref="0x411605c8"/>
        <function-ref name="isOwner" scoped="" ref="0x411606a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b4a108" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b4a108"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b4a2e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b4ac18" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b4ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b4adf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b4aed0"/>
        <function-ref name="request" scoped="" ref="0x41b49010"/>
        <function-ref name="granted" scoped="" ref="0x41b490f0"/>
        <function-ref name="isOwner" scoped="" ref="0x41b491d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x4115b6a0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4115b6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4115b878"/>
        <function-ref name="writeDone" scoped="" ref="0x4115b958"/>
        <function-ref name="erase" scoped="" ref="0x4115ba38"/>
        <function-ref name="eraseDone" scoped="" ref="0x4115bb18"/>
        <function-ref name="write" scoped="" ref="0x4115bbf8"/>
        <function-ref name="sync" scoped="" ref="0x4115bcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4115be18" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4115be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4115a010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4115a0f0"/>
        <function-ref name="request" scoped="" ref="0x4115a1d0"/>
        <function-ref name="granted" scoped="" ref="0x4115a2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x4115a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b44690" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b44690"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b44868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b431b8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b431b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b43390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b43470"/>
        <function-ref name="request" scoped="" ref="0x41b43550"/>
        <function-ref name="granted" scoped="" ref="0x41b43630"/>
        <function-ref name="isOwner" scoped="" ref="0x41b43710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41159330" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41159330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41159508"/>
        <function-ref name="writeDone" scoped="" ref="0x411595e8"/>
        <function-ref name="erase" scoped="" ref="0x411596c8"/>
        <function-ref name="eraseDone" scoped="" ref="0x411597a8"/>
        <function-ref name="write" scoped="" ref="0x41159888"/>
        <function-ref name="sync" scoped="" ref="0x41159968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41159aa8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41159aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41159c80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41159d60"/>
        <function-ref name="request" scoped="" ref="0x41159e40"/>
        <function-ref name="granted" scoped="" ref="0x41159f20"/>
        <function-ref name="isOwner" scoped="" ref="0x41193018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b40b98" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b40b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b40d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b3e6d8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b3e6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b3e8b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b3e990"/>
        <function-ref name="request" scoped="" ref="0x41b3ea70"/>
        <function-ref name="granted" scoped="" ref="0x41b3eb50"/>
        <function-ref name="isOwner" scoped="" ref="0x41b3ec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x4122e9d8" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x4122e9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x406738b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40672188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x4126c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x4118fb10" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x4118fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x406738b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40672188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x4122e718"/>
        <function-ref name="get" scoped="" ref="0x4122e200"/>
        <function-ref name="set" scoped="" ref="0x4122e478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x41b35190" loc="62:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x41b35190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41b35368"/>
        <function-ref name="runTask" scoped="" ref="0x41b35448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x41b37c88" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x41b37c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x41b36010"/>
        <function-ref name="storeData" scoped="" ref="0x41b36390"/>
        <function-ref name="newData" scoped="" ref="0x41b360f0"/>
        <function-ref name="start" scoped="" ref="0x41b361d0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x41b362b0"/>
        <function-ref name="stop" scoped="" ref="0x41b37e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x41b37308" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x41b37308"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x406738b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40672188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x41b37930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41b364f0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41b364f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41b366c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41b367a8"/>
        <function-ref name="led1On" scoped="" ref="0x41b36888"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41b36968"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41b36a48"/>
        <function-ref name="get" scoped="" ref="0x41b36b28"/>
        <function-ref name="led1Off" scoped="" ref="0x41b36c08"/>
        <function-ref name="led0On" scoped="" ref="0x41b35010"/>
        <function-ref name="set" scoped="" ref="0x41b36dc8"/>
        <function-ref name="led2On" scoped="" ref="0x41b36ce8"/>
        <function-ref name="led2Off" scoped="" ref="0x41b36ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x41b394b8" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x41b394b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x406738b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40672188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x41b37048"/>
        <function-ref name="get" scoped="" ref="0x41b39b00"/>
        <function-ref name="set" scoped="" ref="0x41b39d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41b39010" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41b39010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41b391e8"/>
        <function-ref name="stop" scoped="" ref="0x41b392c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x411a1020" loc="52:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x411a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411a11f8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x411a12d8"/>
        <function-ref name="reset" scoped="" ref="0x411a13b8"/>
        <function-ref name="start" scoped="" ref="0x411a1498"/>
        <function-ref name="stop" scoped="" ref="0x411a1578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x411a5c50" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x411a5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x411a5f08"/>
        <function-ref name="stop" scoped="" ref="0x411a22b0"/>
        <function-ref name="newData" scoped="" ref="0x411a2010"/>
        <function-ref name="start" scoped="" ref="0x411a20f0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x411a21d0"/>
        <function-ref name="requestData" scoped="" ref="0x411a5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x411a5478" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x411a5478"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411a5650"/>
        <function-ref name="stop" scoped="" ref="0x411a5730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x411a1af0" loc="53:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x411a1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411a1cc8"/>
        <function-ref name="stop" scoped="" ref="0x411a1da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x41199b78" loc="57:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x41199b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41199d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x411993f8" loc="56:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x411993f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411995d0"/>
        <function-ref name="getPayload" scoped="" ref="0x411996b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41199790"/>
        <function-ref name="cancel" scoped="" ref="0x41199870"/>
        <function-ref name="sendDone" scoped="" ref="0x41199950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x4119a8d0" loc="53:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4119a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4119aaa8"/>
        <function-ref name="getPayload" scoped="" ref="0x4119ab88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4119ac68"/>
        <function-ref name="cancel" scoped="" ref="0x4119ad48"/>
        <function-ref name="sendDone" scoped="" ref="0x4119ae28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x4119b968" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x4119b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4119bb40"/>
        <function-ref name="incrementCounter" scoped="" ref="0x4119bc20"/>
        <function-ref name="reset" scoped="" ref="0x4119bd00"/>
        <function-ref name="start" scoped="" ref="0x4119bde0"/>
        <function-ref name="stop" scoped="" ref="0x4119bec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x411a0e58" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x411a0e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x4119b130"/>
        <function-ref name="stop" scoped="" ref="0x4119b4b0"/>
        <function-ref name="newData" scoped="" ref="0x4119b210"/>
        <function-ref name="start" scoped="" ref="0x4119b2f0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x4119b3d0"/>
        <function-ref name="requestData" scoped="" ref="0x4119b050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x41199010" loc="54:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41199010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411991e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41199ec0" loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41199ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x411980c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411981a0"/>
        <function-ref name="led1On" scoped="" ref="0x41198280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41198360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41198440"/>
        <function-ref name="get" scoped="" ref="0x41198520"/>
        <function-ref name="led1Off" scoped="" ref="0x41198600"/>
        <function-ref name="led2Off" scoped="" ref="0x41198980"/>
        <function-ref name="set" scoped="" ref="0x411986e0"/>
        <function-ref name="led0On" scoped="" ref="0x411987c0"/>
        <function-ref name="led2On" scoped="" ref="0x411988a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x411a0680" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x411a0680"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411a0858"/>
        <function-ref name="stop" scoped="" ref="0x411a0938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x4119a498" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x4119a498"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4119a670"/>
        <function-ref name="stop" scoped="" ref="0x4119a750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4119c330" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4119c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4119c508"/>
        <function-ref name="getPayload" scoped="" ref="0x4119c5e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4119c6c8"/>
        <function-ref name="cancel" scoped="" ref="0x4119c7a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4119c888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4119c9c8" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4119c9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4119cba0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4119cc80"/>
        <function-ref name="getPayload" scoped="" ref="0x4119cd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4119ce40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4119cf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411e4078" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411e4078"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411e4250"/>
        <function-ref name="source" scoped="" ref="0x411e4330"/>
        <function-ref name="address" scoped="" ref="0x411e4410"/>
        <function-ref name="destination" scoped="" ref="0x411e44f0"/>
        <function-ref name="setSource" scoped="" ref="0x411e45d0"/>
        <function-ref name="setDestination" scoped="" ref="0x411e46b0"/>
        <function-ref name="type" scoped="" ref="0x411e4790"/>
        <function-ref name="setType" scoped="" ref="0x411e4870"/>
        <function-ref name="isForMe" scoped="" ref="0x411e4950"/>
        <function-ref name="setGroup" scoped="" ref="0x411e4a30"/>
        <function-ref name="localGroup" scoped="" ref="0x411e4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x411e4c70" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x411e4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x411e4e48"/>
        <function-ref name="noAck" scoped="" ref="0x411e4f28"/>
        <function-ref name="wasAcked" scoped="" ref="0x411e3018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41b23350" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41b23350"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b23528"/>
        <function-ref name="getPayload" scoped="" ref="0x41b23608"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b236e8"/>
        <function-ref name="cancel" scoped="" ref="0x41b237c8"/>
        <function-ref name="sendDone" scoped="" ref="0x41b238a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41b239e8" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41b239e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41b23bc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41b23ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x41b23d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b23e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41b22010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41b22150" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41b22150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41b22328"/>
        <function-ref name="source" scoped="" ref="0x41b22408"/>
        <function-ref name="address" scoped="" ref="0x41b224e8"/>
        <function-ref name="destination" scoped="" ref="0x41b225c8"/>
        <function-ref name="setSource" scoped="" ref="0x41b226a8"/>
        <function-ref name="setDestination" scoped="" ref="0x41b22788"/>
        <function-ref name="type" scoped="" ref="0x41b22868"/>
        <function-ref name="setType" scoped="" ref="0x41b22948"/>
        <function-ref name="isForMe" scoped="" ref="0x41b22a28"/>
        <function-ref name="setGroup" scoped="" ref="0x41b22b08"/>
        <function-ref name="localGroup" scoped="" ref="0x41b22be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41b22d48" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41b22d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41b22f20"/>
        <function-ref name="noAck" scoped="" ref="0x41b21018"/>
        <function-ref name="wasAcked" scoped="" ref="0x41b210f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41b1fe98" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41b1fe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b1c0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x41b1c1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b1c280"/>
        <function-ref name="cancel" scoped="" ref="0x41b1c360"/>
        <function-ref name="sendDone" scoped="" ref="0x41b1c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41b1c580" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41b1c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41b1c758"/>
        <function-ref name="payloadLength" scoped="" ref="0x41b1c838"/>
        <function-ref name="getPayload" scoped="" ref="0x41b1c918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b1c9f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41b1cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41b1cc18" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41b1cc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41b1cdf0"/>
        <function-ref name="source" scoped="" ref="0x41b1ced0"/>
        <function-ref name="address" scoped="" ref="0x41b7e010"/>
        <function-ref name="destination" scoped="" ref="0x41b7e0f0"/>
        <function-ref name="setSource" scoped="" ref="0x41b7e1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x41b7e2b0"/>
        <function-ref name="type" scoped="" ref="0x41b7e390"/>
        <function-ref name="setType" scoped="" ref="0x41b7e470"/>
        <function-ref name="isForMe" scoped="" ref="0x41b7e550"/>
        <function-ref name="setGroup" scoped="" ref="0x41b7e630"/>
        <function-ref name="localGroup" scoped="" ref="0x41b7e710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41b7e870" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41b7e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41b7ea48"/>
        <function-ref name="noAck" scoped="" ref="0x41b7eb28"/>
        <function-ref name="wasAcked" scoped="" ref="0x41b7ec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41b77ef8" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41b77ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b740e0"/>
        <function-ref name="getPayload" scoped="" ref="0x41b741c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b742a0"/>
        <function-ref name="cancel" scoped="" ref="0x41b74380"/>
        <function-ref name="sendDone" scoped="" ref="0x41b74460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41b745d0" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41b745d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b747a8"/>
        <function-ref name="getPayload" scoped="" ref="0x41b74888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b74968"/>
        <function-ref name="cancel" scoped="" ref="0x41b74a48"/>
        <function-ref name="sendDone" scoped="" ref="0x41b74b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41b74c68" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41b74c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41b74e40"/>
        <function-ref name="source" scoped="" ref="0x41b74f20"/>
        <function-ref name="address" scoped="" ref="0x41b73018"/>
        <function-ref name="destination" scoped="" ref="0x41b730f8"/>
        <function-ref name="setSource" scoped="" ref="0x41b731d8"/>
        <function-ref name="setDestination" scoped="" ref="0x41b732b8"/>
        <function-ref name="type" scoped="" ref="0x41b73398"/>
        <function-ref name="setType" scoped="" ref="0x41b73478"/>
        <function-ref name="isForMe" scoped="" ref="0x41b73558"/>
        <function-ref name="setGroup" scoped="" ref="0x41b73638"/>
        <function-ref name="localGroup" scoped="" ref="0x41b73718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x41b7c1a0" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x41b7c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b7c378"/>
        <function-ref name="getPayload" scoped="" ref="0x41b7c458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b7c538"/>
        <function-ref name="cancel" scoped="" ref="0x41b7c618"/>
        <function-ref name="sendDone" scoped="" ref="0x41b7c6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x41b7ce10" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41b7ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x41b7a010"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x41b7a0f0"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x41b7a1d0"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x41b7a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41b7da90" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41b7da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b7dc68"/>
        <function-ref name="getPayload" scoped="" ref="0x41b7dd48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b7de28"/>
        <function-ref name="cancel" scoped="" ref="0x41b7df08"/>
        <function-ref name="sendDone" scoped="" ref="0x41b7c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x41b7c858" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x41b7c858"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41b7ca30"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41b7cb10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41b7cbf0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41b7ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411e2ab0" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411e2ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411e2c88"/>
        <function-ref name="payloadLength" scoped="" ref="0x411e2d68"/>
        <function-ref name="getPayload" scoped="" ref="0x411e2e48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411e2f28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411e1018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x411e2798" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x411e2798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411e2970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411e1158" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411e1158"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411e1330"/>
        <function-ref name="source" scoped="" ref="0x411e1410"/>
        <function-ref name="address" scoped="" ref="0x411e14f0"/>
        <function-ref name="destination" scoped="" ref="0x411e15d0"/>
        <function-ref name="setSource" scoped="" ref="0x411e16b0"/>
        <function-ref name="setDestination" scoped="" ref="0x411e1790"/>
        <function-ref name="type" scoped="" ref="0x411e1870"/>
        <function-ref name="setType" scoped="" ref="0x411e1950"/>
        <function-ref name="isForMe" scoped="" ref="0x411e1a30"/>
        <function-ref name="setGroup" scoped="" ref="0x411e1b10"/>
        <function-ref name="localGroup" scoped="" ref="0x411e1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x411df1f8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x411df1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411df3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x411df4b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411df590"/>
        <function-ref name="cancel" scoped="" ref="0x411df670"/>
        <function-ref name="sendDone" scoped="" ref="0x411df750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411df890" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411df890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411dfa68"/>
        <function-ref name="payloadLength" scoped="" ref="0x411dfb48"/>
        <function-ref name="getPayload" scoped="" ref="0x411dfc28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411dfd08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411dfde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411dff28" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411dff28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411de110"/>
        <function-ref name="source" scoped="" ref="0x411de1f0"/>
        <function-ref name="address" scoped="" ref="0x411de2d0"/>
        <function-ref name="destination" scoped="" ref="0x411de3b0"/>
        <function-ref name="setSource" scoped="" ref="0x411de490"/>
        <function-ref name="setDestination" scoped="" ref="0x411de570"/>
        <function-ref name="type" scoped="" ref="0x411de650"/>
        <function-ref name="setType" scoped="" ref="0x411de730"/>
        <function-ref name="isForMe" scoped="" ref="0x411de810"/>
        <function-ref name="setGroup" scoped="" ref="0x411de8f0"/>
        <function-ref name="localGroup" scoped="" ref="0x411de9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x411deb30" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x411deb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x411ded08"/>
        <function-ref name="noAck" scoped="" ref="0x411dede8"/>
        <function-ref name="wasAcked" scoped="" ref="0x411deec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41b63ce8" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41b63ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b63ec0"/>
        <function-ref name="getPayload" scoped="" ref="0x41b5f010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b5f0f0"/>
        <function-ref name="cancel" scoped="" ref="0x41b5f1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x41b5f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41b5f3f0" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41b5f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41b5f5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41b5f6a8"/>
        <function-ref name="getPayload" scoped="" ref="0x41b5f788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b5f868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41b5f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41b5fa88" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41b5fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41b5fc60"/>
        <function-ref name="source" scoped="" ref="0x41b5fd40"/>
        <function-ref name="address" scoped="" ref="0x41b5fe20"/>
        <function-ref name="destination" scoped="" ref="0x41b5ff00"/>
        <function-ref name="setSource" scoped="" ref="0x41b5e010"/>
        <function-ref name="setDestination" scoped="" ref="0x41b5e0f0"/>
        <function-ref name="type" scoped="" ref="0x41b5e1d0"/>
        <function-ref name="setType" scoped="" ref="0x41b5e2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x41b5e390"/>
        <function-ref name="setGroup" scoped="" ref="0x41b5e470"/>
        <function-ref name="localGroup" scoped="" ref="0x41b5e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41b5e6b0" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41b5e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41b5e888"/>
        <function-ref name="noAck" scoped="" ref="0x41b5e968"/>
        <function-ref name="wasAcked" scoped="" ref="0x41b5ea48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41b5a7e0" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41b5a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b5a9b8"/>
        <function-ref name="getPayload" scoped="" ref="0x41b5aa98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b5ab78"/>
        <function-ref name="cancel" scoped="" ref="0x41b5ac58"/>
        <function-ref name="sendDone" scoped="" ref="0x41b5ad38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41b5ae78" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41b5ae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41b58070"/>
        <function-ref name="payloadLength" scoped="" ref="0x41b58150"/>
        <function-ref name="getPayload" scoped="" ref="0x41b58230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b58310"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41b583f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41b58530" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41b58530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41b58708"/>
        <function-ref name="source" scoped="" ref="0x41b587e8"/>
        <function-ref name="address" scoped="" ref="0x41b588c8"/>
        <function-ref name="destination" scoped="" ref="0x41b589a8"/>
        <function-ref name="setSource" scoped="" ref="0x41b58a88"/>
        <function-ref name="setDestination" scoped="" ref="0x41b58b68"/>
        <function-ref name="type" scoped="" ref="0x41b58c48"/>
        <function-ref name="setType" scoped="" ref="0x41b58d28"/>
        <function-ref name="isForMe" scoped="" ref="0x41b58e08"/>
        <function-ref name="setGroup" scoped="" ref="0x41b58ee8"/>
        <function-ref name="localGroup" scoped="" ref="0x41b57010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41b57170" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41b57170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41b57348"/>
        <function-ref name="noAck" scoped="" ref="0x41b57428"/>
        <function-ref name="wasAcked" scoped="" ref="0x41b57508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41b4f810" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41b4f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b4f9e8"/>
        <function-ref name="getPayload" scoped="" ref="0x41b4fac8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b4fba8"/>
        <function-ref name="cancel" scoped="" ref="0x41b4fc88"/>
        <function-ref name="sendDone" scoped="" ref="0x41b4fd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41b4fed8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41b4fed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b4d0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x41b4d1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b4d280"/>
        <function-ref name="cancel" scoped="" ref="0x41b4d360"/>
        <function-ref name="sendDone" scoped="" ref="0x41b4d440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41b4d580" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41b4d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41b4d758"/>
        <function-ref name="source" scoped="" ref="0x41b4d838"/>
        <function-ref name="address" scoped="" ref="0x41b4d918"/>
        <function-ref name="destination" scoped="" ref="0x41b4d9f8"/>
        <function-ref name="setSource" scoped="" ref="0x41b4dad8"/>
        <function-ref name="setDestination" scoped="" ref="0x41b4dbb8"/>
        <function-ref name="type" scoped="" ref="0x41b4dc98"/>
        <function-ref name="setType" scoped="" ref="0x41b4dd78"/>
        <function-ref name="isForMe" scoped="" ref="0x41b4de58"/>
        <function-ref name="setGroup" scoped="" ref="0x41bb0010"/>
        <function-ref name="localGroup" scoped="" ref="0x41bb00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x41b56a80" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x41b56a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b56c58"/>
        <function-ref name="getPayload" scoped="" ref="0x41b56d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b56e18"/>
        <function-ref name="cancel" scoped="" ref="0x41b56ef8"/>
        <function-ref name="sendDone" scoped="" ref="0x41b54010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x41b54728" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41b54728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x41b54900"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x41b549e0"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x41b54ac0"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x41b54ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41b56398" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41b56398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b56570"/>
        <function-ref name="getPayload" scoped="" ref="0x41b56650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b56730"/>
        <function-ref name="cancel" scoped="" ref="0x41b56810"/>
        <function-ref name="sendDone" scoped="" ref="0x41b568f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x41b54170" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x41b54170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41b54348"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41b54428"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41b54508"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41b545e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411dc9d8" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411dc9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411dcbb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x411dcc90"/>
        <function-ref name="getPayload" scoped="" ref="0x411dcd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411dce50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411db010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x411dc6c0" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x411dc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411dc898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411db150" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411db150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411db328"/>
        <function-ref name="source" scoped="" ref="0x411db408"/>
        <function-ref name="address" scoped="" ref="0x411db4e8"/>
        <function-ref name="destination" scoped="" ref="0x411db5c8"/>
        <function-ref name="setSource" scoped="" ref="0x411db6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x411db788"/>
        <function-ref name="type" scoped="" ref="0x411db868"/>
        <function-ref name="setType" scoped="" ref="0x411db948"/>
        <function-ref name="isForMe" scoped="" ref="0x411dba28"/>
        <function-ref name="setGroup" scoped="" ref="0x411dbb08"/>
        <function-ref name="localGroup" scoped="" ref="0x411dbbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411dacc0" loc="46:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411dacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411dae98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x411d7040" loc="47:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x411d7040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x411d7218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411d72f8"/>
        <function-ref name="led1On" scoped="" ref="0x411d73d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x411d74b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x411d7598"/>
        <function-ref name="get" scoped="" ref="0x411d7678"/>
        <function-ref name="led1Off" scoped="" ref="0x411d7758"/>
        <function-ref name="led2Off" scoped="" ref="0x411d7ad8"/>
        <function-ref name="set" scoped="" ref="0x411d7838"/>
        <function-ref name="led0On" scoped="" ref="0x411d7918"/>
        <function-ref name="led2On" scoped="" ref="0x411d79f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x4120b788" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x4120b788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4120b960"/>
        <function-ref name="incrementCounter" scoped="" ref="0x4120ba40"/>
        <function-ref name="reset" scoped="" ref="0x4120bb20"/>
        <function-ref name="start" scoped="" ref="0x4120bc00"/>
        <function-ref name="stop" scoped="" ref="0x4120bce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x41230878" loc="55:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41230878"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41230a60"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41230b40"/>
        <function-ref name="reset" scoped="" ref="0x41230c20"/>
        <function-ref name="start" scoped="" ref="0x41230d00"/>
        <function-ref name="stop" scoped="" ref="0x41230de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x41b9bba8" loc="62:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x41b9bba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41b9bd80"/>
        <function-ref name="clear" scoped="" ref="0x41b9be60"/>
        <function-ref name="toggle" scoped="" ref="0x41b9a010"/>
        <function-ref name="get" scoped="" ref="0x41b9a0f0"/>
        <function-ref name="assign" scoped="" ref="0x41b9a1d0"/>
        <function-ref name="setAll" scoped="" ref="0x41b9a2b0"/>
        <function-ref name="set" scoped="" ref="0x41b9a390"/>
        <function-ref name="size" scoped="" ref="0x41b9a470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x41b9a5d0" loc="63:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x41b9a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41b9a7a8"/>
        <function-ref name="clear" scoped="" ref="0x41b9a888"/>
        <function-ref name="toggle" scoped="" ref="0x41b9a968"/>
        <function-ref name="get" scoped="" ref="0x41b9aa48"/>
        <function-ref name="assign" scoped="" ref="0x41b9ab28"/>
        <function-ref name="setAll" scoped="" ref="0x41b9ac08"/>
        <function-ref name="set" scoped="" ref="0x41b9ace8"/>
        <function-ref name="size" scoped="" ref="0x41b9adc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41b9af08" loc="64:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41b9af08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41b990f0"/>
        <function-ref name="rand32" scoped="" ref="0x41b991d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x41b9e228" loc="58:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41b9e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41b9e410"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41b9e4f0"/>
        <function-ref name="reset" scoped="" ref="0x41b9e5d0"/>
        <function-ref name="start" scoped="" ref="0x41b9e6b0"/>
        <function-ref name="stop" scoped="" ref="0x41b9e790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41ba0e50" loc="57:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41ba0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41b9e050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x41b99f28" loc="154:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x41b99f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41b98110"/>
        <function-ref name="runTask" scoped="" ref="0x41b981f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41b99310" loc="65:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41b99310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41b994e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41b995c8"/>
        <function-ref name="led1On" scoped="" ref="0x41b996a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41b99788"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41b99868"/>
        <function-ref name="get" scoped="" ref="0x41b99948"/>
        <function-ref name="led1Off" scoped="" ref="0x41b99a28"/>
        <function-ref name="led0On" scoped="" ref="0x41b99da8"/>
        <function-ref name="set" scoped="" ref="0x41b99be8"/>
        <function-ref name="led2On" scoped="" ref="0x41b99b08"/>
        <function-ref name="led2Off" scoped="" ref="0x41b99cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41b9e990" loc="61:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41b9e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41b9b4c8"/>
        <function-ref name="fired" scoped="" ref="0x41b9d768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41b9de70"/>
        <function-ref name="isOneShot" scoped="" ref="0x41b9dc18"/>
        <function-ref name="getdt" scoped="" ref="0x41b9b978"/>
        <function-ref name="gett0" scoped="" ref="0x41b9b720"/>
        <function-ref name="isRunning" scoped="" ref="0x41b9d9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41b9d010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41b9b1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x41b9d290"/>
        <function-ref name="stop" scoped="" ref="0x41b9d510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41b97910" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41b97910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41b954c8"/>
        <function-ref name="fired" scoped="" ref="0x41b96768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41b96e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x41b96c18"/>
        <function-ref name="getdt" scoped="" ref="0x41b95978"/>
        <function-ref name="gett0" scoped="" ref="0x41b95720"/>
        <function-ref name="isRunning" scoped="" ref="0x41b969c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41b96010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41b951a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x41b96290"/>
        <function-ref name="stop" scoped="" ref="0x41b96510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41b93678" loc="46:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41b93678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41b93850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x41b939b0" loc="47:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x41b939b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41b93b88"/>
        <function-ref name="clear" scoped="" ref="0x41b93c68"/>
        <function-ref name="toggle" scoped="" ref="0x41b93d48"/>
        <function-ref name="get" scoped="" ref="0x41b93e28"/>
        <function-ref name="assign" scoped="" ref="0x41b93f08"/>
        <function-ref name="setAll" scoped="" ref="0x41b92010"/>
        <function-ref name="set" scoped="" ref="0x41b920f0"/>
        <function-ref name="size" scoped="" ref="0x41b921d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41b92e28" loc="46:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41b92e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41b91050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x41b911b0" loc="47:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x41b911b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41b91388"/>
        <function-ref name="clear" scoped="" ref="0x41b91468"/>
        <function-ref name="toggle" scoped="" ref="0x41b91548"/>
        <function-ref name="get" scoped="" ref="0x41b91628"/>
        <function-ref name="assign" scoped="" ref="0x41b91708"/>
        <function-ref name="setAll" scoped="" ref="0x41b917e8"/>
        <function-ref name="set" scoped="" ref="0x41b918c8"/>
        <function-ref name="size" scoped="" ref="0x41b919a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4126cc68" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4126cc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4126ce40"/>
        <function-ref name="stop" scoped="" ref="0x4126cf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x41260898" loc="48:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgC.nc">
      <component-ref qname="NetProgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x41260898"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x41260a70"/>
        <function-ref name="reboot" scoped="" ref="0x41260b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InternalFlash" ref="0x412505b0" loc="45:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <component-ref qname="InternalFlashC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InternalFlash" scoped="" ref="0x412505b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41250788"/>
        <function-ref name="write" scoped="" ref="0x41250868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x41267538" loc="47:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x41267538"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x41267710"/>
        <function-ref name="reboot" scoped="" ref="0x412677f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x41289390" loc="55:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x41289390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x41289568"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x41289648"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x41289728"/>
        <function-ref name="syncDone" scoped="" ref="0x41289808"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x412898e8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x412899c8"/>
        <function-ref name="setChannel" scoped="" ref="0x41289aa8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x41289b88"/>
        <function-ref name="setPanAddr" scoped="" ref="0x41289c68"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x41289d48"/>
        <function-ref name="getExtAddr" scoped="" ref="0x41289e28"/>
        <function-ref name="getShortAddr" scoped="" ref="0x41289f08"/>
        <function-ref name="sync" scoped="" ref="0x41288010"/>
        <function-ref name="getChannel" scoped="" ref="0x41288170"/>
        <function-ref name="getPanAddr" scoped="" ref="0x41288250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReprogramGuard" ref="0x41285560" loc="58:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReprogramGuard" scoped="" ref="0x41285560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReprogramGuard"/>
      </instance>
      <interface-functions>
        <function-ref name="okToProgramDone" scoped="" ref="0x41285738"/>
        <function-ref name="okToProgram" scoped="" ref="0x41285818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IFlash" ref="0x41267da0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IFlash" scoped="" ref="0x41267da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4128a010"/>
        <function-ref name="write" scoped="" ref="0x4128a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41267960" loc="48:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41267960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41267b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4128a678" loc="53:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4128a678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4128a850"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4128a930"/>
        <function-ref name="led1On" scoped="" ref="0x4128aa10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4128aaf0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4128abd0"/>
        <function-ref name="get" scoped="" ref="0x4128acb0"/>
        <function-ref name="led1Off" scoped="" ref="0x4128ad90"/>
        <function-ref name="led2Off" scoped="" ref="0x412891d0"/>
        <function-ref name="set" scoped="" ref="0x4128ae70"/>
        <function-ref name="led0On" scoped="" ref="0x41289010"/>
        <function-ref name="led2On" scoped="" ref="0x412890f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x4128a250" loc="52:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x4128a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x4128a428"/>
        <function-ref name="crc16" scoped="" ref="0x4128a508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReprogramGuard" ref="0x4125f3a8" loc="3:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/micaz/ReprogramGuardC.nc">
      <component-ref qname="ReprogramGuardC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReprogramGuard" scoped="" ref="0x4125f3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReprogramGuard"/>
      </instance>
      <interface-functions>
        <function-ref name="okToProgramDone" scoped="" ref="0x4125f580"/>
        <function-ref name="okToProgram" scoped="" ref="0x4125f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReprogramGuard" ref="0x4125fd20" loc="3:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/micaz/ReprogramGuardP.nc">
      <component-ref qname="ReprogramGuardP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReprogramGuard" scoped="" ref="0x4125fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReprogramGuard"/>
      </instance>
      <interface-functions>
        <function-ref name="okToProgramDone" scoped="" ref="0x4125fef8"/>
        <function-ref name="okToProgram" scoped="" ref="0x41275010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Voltage" ref="0x412752f0" loc="4:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/micaz/ReprogramGuardP.nc">
      <component-ref qname="ReprogramGuardP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Voltage" scoped="" ref="0x412752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41275918"/>
        <function-ref name="readDone" scoped="" ref="0x41275b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41276188" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="ReprogramGuardC.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41276188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412767b0"/>
        <function-ref name="readDone" scoped="" ref="0x41276a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41bc3558" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="ReprogramGuardC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41bc3558"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41bc3730"/>
        <function-ref name="configure" scoped="" ref="0x41bc3810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41bc54e0" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="ReprogramGuardC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41bc54e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41bc5b08"/>
        <function-ref name="readDone" scoped="" ref="0x41bc5d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x41bc3080" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="ReprogramGuardC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41bc3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x41bc3258"/>
        <function-ref name="getChannel" scoped="" ref="0x41bc3338"/>
        <function-ref name="getPrescaler" scoped="" ref="0x41bc3418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x412a7220" loc="18:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x412a7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412a7848"/>
        <function-ref name="readDone" scoped="" ref="0x412a7aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x412a3678" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x412a3678"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412a3cc0"/>
        <function-ref name="readDone" scoped="" ref="0x412a5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x412a56c8" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x412a56c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x412a58a0"/>
        <function-ref name="getChannel" scoped="" ref="0x412a5980"/>
        <function-ref name="getPrescaler" scoped="" ref="0x412a5a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x412a5f00" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412a5f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412a20f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412a21d0"/>
        <function-ref name="request" scoped="" ref="0x412a22b0"/>
        <function-ref name="granted" scoped="" ref="0x412a2390"/>
        <function-ref name="isOwner" scoped="" ref="0x412a2470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4129e2d0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4129e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4129e4a8"/>
        <function-ref name="configure" scoped="" ref="0x4129e588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x41297ac8" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x41297ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x41297ca0"/>
        <function-ref name="dataReady" scoped="" ref="0x41297d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x4129b908" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4129b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4129bae0"/>
        <function-ref name="cancel" scoped="" ref="0x4129bbc0"/>
        <function-ref name="dataReady" scoped="" ref="0x4129bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412a2eb8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412a2eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4129f0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4129f1a0"/>
        <function-ref name="request" scoped="" ref="0x4129f280"/>
        <function-ref name="granted" scoped="" ref="0x4129f360"/>
        <function-ref name="isOwner" scoped="" ref="0x4129f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4129eee0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4129eee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412950e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x41295cd0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x41295cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x41295ea8"/>
        <function-ref name="dataReady" scoped="" ref="0x41294010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x41295748" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x41295748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x41295920"/>
        <function-ref name="cancel" scoped="" ref="0x41295a00"/>
        <function-ref name="dataReady" scoped="" ref="0x41295ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x412ca528" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x412ca528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x412ca700"/>
        <function-ref name="getAdmux" scoped="" ref="0x412ca7e0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x412ca8c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x412ca9a0"/>
        <function-ref name="enableAdc" scoped="" ref="0x412caa80"/>
        <function-ref name="setAdmux" scoped="" ref="0x412cab60"/>
        <function-ref name="enableInterruption" scoped="" ref="0x412cac40"/>
        <function-ref name="isComplete" scoped="" ref="0x412cad20"/>
        <function-ref name="cancel" scoped="" ref="0x412cae00"/>
        <function-ref name="disableAdc" scoped="" ref="0x412caee0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x41293010"/>
        <function-ref name="disableInterruption" scoped="" ref="0x412930f0"/>
        <function-ref name="startConversion" scoped="" ref="0x412931d0"/>
        <function-ref name="isStarted" scoped="" ref="0x41293330"/>
        <function-ref name="setAdcsra" scoped="" ref="0x41293410"/>
        <function-ref name="setContinuous" scoped="" ref="0x412934f0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x412935d0"/>
        <function-ref name="getValue" scoped="" ref="0x412936b0"/>
        <function-ref name="dataReady" scoped="" ref="0x41293790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x412952b8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x412952b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41295490"/>
        <function-ref name="stop" scoped="" ref="0x41295570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x41293968" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x41293968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x41293b40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x41293c20"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x41293d00"/>
        <function-ref name="actualMicro" scoped="" ref="0x41293de0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x41293ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x4129d9f8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x4129d9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x4129dbd0"/>
        <function-ref name="getAdmux" scoped="" ref="0x4129dcb0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x4129dd90"/>
        <function-ref name="isEnabled" scoped="" ref="0x4129de70"/>
        <function-ref name="enableAdc" scoped="" ref="0x412ad010"/>
        <function-ref name="setAdmux" scoped="" ref="0x412ad0f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x412ad1d0"/>
        <function-ref name="isComplete" scoped="" ref="0x412ad2b0"/>
        <function-ref name="cancel" scoped="" ref="0x412ad390"/>
        <function-ref name="disableAdc" scoped="" ref="0x412ad470"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x412ad550"/>
        <function-ref name="disableInterruption" scoped="" ref="0x412ad630"/>
        <function-ref name="startConversion" scoped="" ref="0x412ad710"/>
        <function-ref name="isStarted" scoped="" ref="0x412ad870"/>
        <function-ref name="setAdcsra" scoped="" ref="0x412ad950"/>
        <function-ref name="setContinuous" scoped="" ref="0x412ada30"/>
        <function-ref name="getAdcsra" scoped="" ref="0x412adb10"/>
        <function-ref name="getValue" scoped="" ref="0x412adbf0"/>
        <function-ref name="dataReady" scoped="" ref="0x412adcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x412ed6c0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x412ed6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x412ed898"/>
        <function-ref name="getAdmux" scoped="" ref="0x412ed978"/>
        <function-ref name="setPrescaler" scoped="" ref="0x412eda58"/>
        <function-ref name="isEnabled" scoped="" ref="0x412edb38"/>
        <function-ref name="enableAdc" scoped="" ref="0x412edc18"/>
        <function-ref name="setAdmux" scoped="" ref="0x412edcf8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x412eddd8"/>
        <function-ref name="isComplete" scoped="" ref="0x412edeb8"/>
        <function-ref name="cancel" scoped="" ref="0x412ea010"/>
        <function-ref name="disableAdc" scoped="" ref="0x412ea0f0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x412ea1d0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x412ea2b0"/>
        <function-ref name="startConversion" scoped="" ref="0x412ea390"/>
        <function-ref name="isStarted" scoped="" ref="0x412ea4f0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x412ea5d0"/>
        <function-ref name="setContinuous" scoped="" ref="0x412ea6b0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x412ea790"/>
        <function-ref name="getValue" scoped="" ref="0x412ea870"/>
        <function-ref name="dataReady" scoped="" ref="0x412ea950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x412eab38" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x412eab38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x412ead10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x412f4488" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x412f4488"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x412f4670"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412f4750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x412f33e8" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x412f33e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x412f35d0"/>
        <function-ref name="configure" scoped="" ref="0x412f36b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x412f4890" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412f4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412f4a68"/>
        <function-ref name="requested" scoped="" ref="0x412f4b48"/>
        <function-ref name="granted" scoped="" ref="0x412f4c28"/>
        <function-ref name="isOwner" scoped="" ref="0x412f4d08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412f4de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412eccf0" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412eccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412eced8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412f4010"/>
        <function-ref name="request" scoped="" ref="0x412f40f0"/>
        <function-ref name="granted" scoped="" ref="0x412f41d0"/>
        <function-ref name="isOwner" scoped="" ref="0x412f42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x412f4f28" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412f4f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412f3110"/>
        <function-ref name="userId" scoped="" ref="0x412f31f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41bba0d8" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41bba0d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41bba2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x41bba410" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x41bba410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41bba5e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x41bba6c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41bba7a8"/>
        <function-ref name="dequeue" scoped="" ref="0x41bba888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41bb9cb8" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41bb9cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41bb9ea0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41bb8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41bb8ca8" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41bb8ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41bb8e90"/>
        <function-ref name="configure" scoped="" ref="0x41bb7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41bb7170" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41bb7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41bb7348"/>
        <function-ref name="isEmpty" scoped="" ref="0x41bb7428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41bb7508"/>
        <function-ref name="dequeue" scoped="" ref="0x41bb75e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41bb8150" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41bb8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41bb8328"/>
        <function-ref name="requested" scoped="" ref="0x41bb8408"/>
        <function-ref name="granted" scoped="" ref="0x41bb84e8"/>
        <function-ref name="isOwner" scoped="" ref="0x41bb85c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41bb86a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41bb7728" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41bb7728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41bb7900"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41bb79e0"/>
        <function-ref name="led1On" scoped="" ref="0x41bb7ac0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41bb7ba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41bb7c80"/>
        <function-ref name="get" scoped="" ref="0x41bb7d60"/>
        <function-ref name="led1Off" scoped="" ref="0x41bb7e40"/>
        <function-ref name="led0On" scoped="" ref="0x41bb61d8"/>
        <function-ref name="set" scoped="" ref="0x41bb6018"/>
        <function-ref name="led2On" scoped="" ref="0x41bb7f20"/>
        <function-ref name="led2Off" scoped="" ref="0x41bb60f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41bb9578" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41bb9578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41bb9760"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41bb9840"/>
        <function-ref name="request" scoped="" ref="0x41bb9920"/>
        <function-ref name="granted" scoped="" ref="0x41bb9a00"/>
        <function-ref name="isOwner" scoped="" ref="0x41bb9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41bb87e8" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41bb87e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41bb89c0"/>
        <function-ref name="userId" scoped="" ref="0x41bb8aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41bb6358" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41bb6358"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41bb6530"/>
        <function-ref name="runTask" scoped="" ref="0x41bb6610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x412f0010" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x412f0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x412f01e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x412f0328" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412f0328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412f0500"/>
        <function-ref name="requested" scoped="" ref="0x412f05e0"/>
        <function-ref name="granted" scoped="" ref="0x412f06c0"/>
        <function-ref name="isOwner" scoped="" ref="0x412f07a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412f0880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x412f1bb0" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x412f1bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x412f1d88"/>
        <function-ref name="stop" scoped="" ref="0x412f1e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x412f09c0" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412f09c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412f0b98"/>
        <function-ref name="userId" scoped="" ref="0x412f0c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41c00230" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41c00230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41c00408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41c00548" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41c00548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c00720"/>
        <function-ref name="requested" scoped="" ref="0x41c00800"/>
        <function-ref name="granted" scoped="" ref="0x41c008e0"/>
        <function-ref name="isOwner" scoped="" ref="0x41c009c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41c00aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x41c01d88" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x41c01d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41c00010"/>
        <function-ref name="stop" scoped="" ref="0x41c000f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41c00be0" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41c00be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41c00db8"/>
        <function-ref name="userId" scoped="" ref="0x41c00e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x413213d8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x413213d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41321a00"/>
        <function-ref name="readDone" scoped="" ref="0x41321c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x41320390" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x41320390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413209d8"/>
        <function-ref name="readDone" scoped="" ref="0x41320c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4131f8b8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4131f8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4131fa90"/>
        <function-ref name="getChannel" scoped="" ref="0x4131fb70"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4131fc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x4131f040" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4131f040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4131f218"/>
        <function-ref name="cancel" scoped="" ref="0x4131f2f8"/>
        <function-ref name="dataReady" scoped="" ref="0x4131f3d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x41315010" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x41315010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413151e8"/>
        <function-ref name="runTask" scoped="" ref="0x413152c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41322750" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41322750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41322d88"/>
        <function-ref name="readDone" scoped="" ref="0x4134b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x4134b470" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x4134b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4134baa8"/>
        <function-ref name="readDone" scoped="" ref="0x4134bd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4133c0a8" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4133c0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4133c290"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4133c370"/>
        <function-ref name="request" scoped="" ref="0x4133c450"/>
        <function-ref name="granted" scoped="" ref="0x4133c530"/>
        <function-ref name="isOwner" scoped="" ref="0x4133c610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x41339638" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41339638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x41339810"/>
        <function-ref name="getChannel" scoped="" ref="0x413398f0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x413399d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskRequest" ref="0x413674e8" loc="97:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskRequest" scoped="" ref="0x413674e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413676c0"/>
        <function-ref name="runTask" scoped="" ref="0x413677a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NetProg" ref="0x41372630" loc="46:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x41372630"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x41372808"/>
        <function-ref name="reboot" scoped="" ref="0x413728e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSplitControl" ref="0x41372030" loc="45:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSplitControl" scoped="" ref="0x41372030"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41372208"/>
        <function-ref name="stopDone" scoped="" ref="0x413722e8"/>
        <function-ref name="start" scoped="" ref="0x413723c8"/>
        <function-ref name="stop" scoped="" ref="0x413724a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x4126a4c0" loc="40:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4126a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4126a698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationStdControl" ref="0x41330490" loc="43:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationStdControl" scoped="" ref="0x41330490"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41330668"/>
        <function-ref name="stop" scoped="" ref="0x41330748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x41372db0" loc="47:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x41372db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x41371010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeMetadata" ref="0x4136e4d8" loc="48:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x4136e4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4136e6b0"/>
        <function-ref name="readDone" scoped="" ref="0x4136e790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4126a808" loc="41:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4126a808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4126a9e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4126aac0"/>
        <function-ref name="led1On" scoped="" ref="0x4126aba0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4126ac80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4126ad60"/>
        <function-ref name="get" scoped="" ref="0x4126ae40"/>
        <function-ref name="led1Off" scoped="" ref="0x4126af20"/>
        <function-ref name="led2Off" scoped="" ref="0x413322b8"/>
        <function-ref name="set" scoped="" ref="0x41332018"/>
        <function-ref name="led0On" scoped="" ref="0x413320f8"/>
        <function-ref name="led2On" scoped="" ref="0x413321d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4136dc60" loc="50:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4136dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4136de38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4136df18"/>
        <function-ref name="request" scoped="" ref="0x41370010"/>
        <function-ref name="granted" scoped="" ref="0x413700f0"/>
        <function-ref name="isOwner" scoped="" ref="0x413701d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationValue" ref="0x413325a0" loc="42:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x413325a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x406738b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40672188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x41330110"/>
        <function-ref name="get" scoped="" ref="0x41332be8"/>
        <function-ref name="set" scoped="" ref="0x41332e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeVolumeManager" ref="0x4136d810" loc="49:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4136d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x4136d9e8"/>
        <function-ref name="eraseDone" scoped="" ref="0x4136dac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ObjectTransfer" ref="0x41330918" loc="44:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x41330918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41330af0"/>
        <function-ref name="receiveDone" scoped="" ref="0x41330bd0"/>
        <function-ref name="publish" scoped="" ref="0x41330cb0"/>
        <function-ref name="stop" scoped="" ref="0x41330d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41333848" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41333848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41353368"/>
        <function-ref name="fired" scoped="" ref="0x413555e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41355cf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41355a98"/>
        <function-ref name="getdt" scoped="" ref="0x41353818"/>
        <function-ref name="gett0" scoped="" ref="0x413535c0"/>
        <function-ref name="isRunning" scoped="" ref="0x41355840"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41333e70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41353048"/>
        <function-ref name="startOneShot" scoped="" ref="0x41355110"/>
        <function-ref name="stop" scoped="" ref="0x41355390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x41352910" loc="39:../../Deluge/DelugeMetadataC.nc">
      <component-ref qname="DelugeMetadataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x41352910"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41352ae8"/>
        <function-ref name="readDone" scoped="" ref="0x41352bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x4138fc48" loc="43:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4138fc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4138fe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x4138d308" loc="44:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4138d308"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4138d4e0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4138d5c0"/>
        <function-ref name="computeCrc" scoped="" ref="0x4138d6a0"/>
        <function-ref name="getSize" scoped="" ref="0x4138d780"/>
        <function-ref name="readDone" scoped="" ref="0x4138d860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x4138dd28" loc="45:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4138dd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4138df00"/>
        <function-ref name="writeDone" scoped="" ref="0x4138c010"/>
        <function-ref name="erase" scoped="" ref="0x4138c0f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x4138c1d0"/>
        <function-ref name="write" scoped="" ref="0x4138c2b0"/>
        <function-ref name="sync" scoped="" ref="0x4138c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x4138f7f0" loc="41:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x4138f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4138f9c8"/>
        <function-ref name="readDone" scoped="" ref="0x4138faa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x4138c858" loc="46:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x4138c858"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x4138ca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x413910d8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x413910d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413912b0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41391390"/>
        <function-ref name="computeCrc" scoped="" ref="0x41391470"/>
        <function-ref name="getSize" scoped="" ref="0x41391550"/>
        <function-ref name="readDone" scoped="" ref="0x41391630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41391770" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41391770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41391948"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41391a28"/>
        <function-ref name="request" scoped="" ref="0x41391b08"/>
        <function-ref name="granted" scoped="" ref="0x41391be8"/>
        <function-ref name="isOwner" scoped="" ref="0x41391cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41bf11e8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41bf11e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41bf13c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41bf1cf8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41bf1cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41bf1ed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41bf0010"/>
        <function-ref name="request" scoped="" ref="0x41bf00f0"/>
        <function-ref name="granted" scoped="" ref="0x41bf01d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41bf02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x413aece8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x413aece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413aeec0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x413ad010"/>
        <function-ref name="computeCrc" scoped="" ref="0x413ad0f0"/>
        <function-ref name="getSize" scoped="" ref="0x413ad1d0"/>
        <function-ref name="readDone" scoped="" ref="0x413ad2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413ad3f0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413ad3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413ad5c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413ad6a8"/>
        <function-ref name="request" scoped="" ref="0x413ad788"/>
        <function-ref name="granted" scoped="" ref="0x413ad868"/>
        <function-ref name="isOwner" scoped="" ref="0x413ad948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41bec690" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41bec690"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41bec868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41beb1b8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41beb1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41beb390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41beb470"/>
        <function-ref name="request" scoped="" ref="0x41beb550"/>
        <function-ref name="granted" scoped="" ref="0x41beb630"/>
        <function-ref name="isOwner" scoped="" ref="0x41beb710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x413ac8a8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x413ac8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413aca80"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x413acb60"/>
        <function-ref name="computeCrc" scoped="" ref="0x413acc40"/>
        <function-ref name="getSize" scoped="" ref="0x413acd20"/>
        <function-ref name="readDone" scoped="" ref="0x413ace00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413ab010" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413ab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413ab1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413ab2c8"/>
        <function-ref name="request" scoped="" ref="0x413ab3a8"/>
        <function-ref name="granted" scoped="" ref="0x413ab488"/>
        <function-ref name="isOwner" scoped="" ref="0x413ab568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41be6ab8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41be6ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41be6c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41be56d8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41be56d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41be58b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41be5990"/>
        <function-ref name="request" scoped="" ref="0x41be5a70"/>
        <function-ref name="granted" scoped="" ref="0x41be5b50"/>
        <function-ref name="isOwner" scoped="" ref="0x41be5c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x413aa4d0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x413aa4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413aa6a8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x413aa788"/>
        <function-ref name="computeCrc" scoped="" ref="0x413aa868"/>
        <function-ref name="getSize" scoped="" ref="0x413aa948"/>
        <function-ref name="readDone" scoped="" ref="0x413aaa28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413aab68" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413aab68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413aad40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413aae20"/>
        <function-ref name="request" scoped="" ref="0x413aaf00"/>
        <function-ref name="granted" scoped="" ref="0x413a9010"/>
        <function-ref name="isOwner" scoped="" ref="0x413a90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c46010" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c46010"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c461e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c46b20" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c46b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c46cf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c46dd8"/>
        <function-ref name="request" scoped="" ref="0x41c46eb8"/>
        <function-ref name="granted" scoped="" ref="0x41c45010"/>
        <function-ref name="isOwner" scoped="" ref="0x41c450f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x413a6030" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x413a6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x413a6208"/>
        <function-ref name="writeDone" scoped="" ref="0x413a62e8"/>
        <function-ref name="erase" scoped="" ref="0x413a63c8"/>
        <function-ref name="eraseDone" scoped="" ref="0x413a64a8"/>
        <function-ref name="write" scoped="" ref="0x413a6588"/>
        <function-ref name="sync" scoped="" ref="0x413a6668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413a67a8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413a67a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413a6980"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413a6a60"/>
        <function-ref name="request" scoped="" ref="0x413a6b40"/>
        <function-ref name="granted" scoped="" ref="0x413a6c20"/>
        <function-ref name="isOwner" scoped="" ref="0x413a6d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c404a0" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c404a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c40678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c3f010" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c3f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c3f1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c3f2c8"/>
        <function-ref name="request" scoped="" ref="0x41c3f3a8"/>
        <function-ref name="granted" scoped="" ref="0x41c3f488"/>
        <function-ref name="isOwner" scoped="" ref="0x41c3f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x413a5d20" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x413a5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x413a5ef8"/>
        <function-ref name="writeDone" scoped="" ref="0x413a4010"/>
        <function-ref name="erase" scoped="" ref="0x413a40f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x413a41d0"/>
        <function-ref name="write" scoped="" ref="0x413a42b0"/>
        <function-ref name="sync" scoped="" ref="0x413a4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413a44d0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413a44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413a46a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413a4788"/>
        <function-ref name="request" scoped="" ref="0x413a4868"/>
        <function-ref name="granted" scoped="" ref="0x413a4948"/>
        <function-ref name="isOwner" scoped="" ref="0x413a4a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c3ba08" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c3ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c3bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c3a538" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c3a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c3a710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c3a7f0"/>
        <function-ref name="request" scoped="" ref="0x41c3a8d0"/>
        <function-ref name="granted" scoped="" ref="0x41c3a9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41c3aa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x413a39b8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x413a39b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x413a3b90"/>
        <function-ref name="writeDone" scoped="" ref="0x413a3c70"/>
        <function-ref name="erase" scoped="" ref="0x413a3d50"/>
        <function-ref name="eraseDone" scoped="" ref="0x413a3e30"/>
        <function-ref name="write" scoped="" ref="0x413a3f10"/>
        <function-ref name="sync" scoped="" ref="0x413a2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413a2150" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413a2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413a2328"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413a2408"/>
        <function-ref name="request" scoped="" ref="0x413a24e8"/>
        <function-ref name="granted" scoped="" ref="0x413a25c8"/>
        <function-ref name="isOwner" scoped="" ref="0x413a26a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c34010" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c34010"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c341e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c34b20" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c34b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c34cf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c34dd8"/>
        <function-ref name="request" scoped="" ref="0x41c34eb8"/>
        <function-ref name="granted" scoped="" ref="0x41c33010"/>
        <function-ref name="isOwner" scoped="" ref="0x41c330f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x413a16a0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x413a16a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x413a1878"/>
        <function-ref name="writeDone" scoped="" ref="0x413a1958"/>
        <function-ref name="erase" scoped="" ref="0x413a1a38"/>
        <function-ref name="eraseDone" scoped="" ref="0x413a1b18"/>
        <function-ref name="write" scoped="" ref="0x413a1bf8"/>
        <function-ref name="sync" scoped="" ref="0x413a1cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413a1e18" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413a1e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413a0010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413a00f0"/>
        <function-ref name="request" scoped="" ref="0x413a01d0"/>
        <function-ref name="granted" scoped="" ref="0x413a02b0"/>
        <function-ref name="isOwner" scoped="" ref="0x413a0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c2f5f0" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c2f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c2f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c2e148" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c2e148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c2e320"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c2e400"/>
        <function-ref name="request" scoped="" ref="0x41c2e4e0"/>
        <function-ref name="granted" scoped="" ref="0x41c2e5c0"/>
        <function-ref name="isOwner" scoped="" ref="0x41c2e6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x4139acc0" loc="39:../../Deluge/DelugeMetadataClientC.nc">
      <component-ref qname="DelugeC.DelugeMetadataClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x4139acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4139ae98"/>
        <function-ref name="readDone" scoped="" ref="0x4139d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x413c1e48" loc="39:../../Deluge/DelugeVolumeManagerClientC.nc">
      <component-ref qname="DelugeC.DelugeVolumeManagerClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x413c1e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x4139c050"/>
        <function-ref name="eraseDone" scoped="" ref="0x4139c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x41398ef8" loc="39:../../Deluge/DelugeVolumeManagerC.nc">
      <component-ref qname="DelugeVolumeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41398ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x413950e0"/>
        <function-ref name="eraseDone" scoped="" ref="0x413951c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x413d5508" loc="41:../../Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x413d5508"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x413d56e0"/>
        <function-ref name="writeDone" scoped="" ref="0x413d57c0"/>
        <function-ref name="erase" scoped="" ref="0x413d58a0"/>
        <function-ref name="eraseDone" scoped="" ref="0x413d5980"/>
        <function-ref name="write" scoped="" ref="0x413d5a60"/>
        <function-ref name="sync" scoped="" ref="0x413d5b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x413d4010" loc="42:../../Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413d4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413d41e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413d42c8"/>
        <function-ref name="request" scoped="" ref="0x413d43a8"/>
        <function-ref name="granted" scoped="" ref="0x413d4488"/>
        <function-ref name="isOwner" scoped="" ref="0x413d4568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x41395c98" loc="39:../../Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41395c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x41395e70"/>
        <function-ref name="eraseDone" scoped="" ref="0x413d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x413d7888" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x413d7888"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x413d7a60"/>
        <function-ref name="writeDone" scoped="" ref="0x413d7b40"/>
        <function-ref name="erase" scoped="" ref="0x413d7c20"/>
        <function-ref name="eraseDone" scoped="" ref="0x413d7d00"/>
        <function-ref name="write" scoped="" ref="0x413d7de0"/>
        <function-ref name="sync" scoped="" ref="0x413d7ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413d6030" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413d6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413d6208"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413d62e8"/>
        <function-ref name="request" scoped="" ref="0x413d63c8"/>
        <function-ref name="granted" scoped="" ref="0x413d64a8"/>
        <function-ref name="isOwner" scoped="" ref="0x413d6588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c27bf8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c27bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c27dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c25720" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c25720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c258f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c259d8"/>
        <function-ref name="request" scoped="" ref="0x41c25ab8"/>
        <function-ref name="granted" scoped="" ref="0x41c25b98"/>
        <function-ref name="isOwner" scoped="" ref="0x41c25c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x413c6520" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x413c6520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x413c66f8"/>
        <function-ref name="writeDone" scoped="" ref="0x413c67d8"/>
        <function-ref name="erase" scoped="" ref="0x413c68b8"/>
        <function-ref name="eraseDone" scoped="" ref="0x413c6998"/>
        <function-ref name="write" scoped="" ref="0x413c6a78"/>
        <function-ref name="sync" scoped="" ref="0x413c6b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413c6c98" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413c6c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413c6e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413c5010"/>
        <function-ref name="request" scoped="" ref="0x413c50f0"/>
        <function-ref name="granted" scoped="" ref="0x413c51d0"/>
        <function-ref name="isOwner" scoped="" ref="0x413c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c20010" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c20010"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c201e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c20b20" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c20b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c20cf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c20dd8"/>
        <function-ref name="request" scoped="" ref="0x41c20eb8"/>
        <function-ref name="granted" scoped="" ref="0x41c1e010"/>
        <function-ref name="isOwner" scoped="" ref="0x41c1e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x413c4250" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x413c4250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x413c4428"/>
        <function-ref name="writeDone" scoped="" ref="0x413c4508"/>
        <function-ref name="erase" scoped="" ref="0x413c45e8"/>
        <function-ref name="eraseDone" scoped="" ref="0x413c46c8"/>
        <function-ref name="write" scoped="" ref="0x413c47a8"/>
        <function-ref name="sync" scoped="" ref="0x413c4888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413c49c8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413c49c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413c4ba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413c4c80"/>
        <function-ref name="request" scoped="" ref="0x413c4d60"/>
        <function-ref name="granted" scoped="" ref="0x413c4e40"/>
        <function-ref name="isOwner" scoped="" ref="0x413c4f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c1a438" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c1a438"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c1a610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c19010" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c19010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c191e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c192c8"/>
        <function-ref name="request" scoped="" ref="0x41c193a8"/>
        <function-ref name="granted" scoped="" ref="0x41c19488"/>
        <function-ref name="isOwner" scoped="" ref="0x41c19568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4139cba8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4139cba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4139cd80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4139ce60"/>
        <function-ref name="request" scoped="" ref="0x413c0010"/>
        <function-ref name="granted" scoped="" ref="0x413c00f0"/>
        <function-ref name="isOwner" scoped="" ref="0x413c01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x413bef20" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x413bef20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413b9110"/>
        <function-ref name="stopDone" scoped="" ref="0x413b91f0"/>
        <function-ref name="start" scoped="" ref="0x413b92d0"/>
        <function-ref name="stop" scoped="" ref="0x413b93b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413b9810" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413b9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413b99e8"/>
        <function-ref name="getPayload" scoped="" ref="0x413b9ac8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413b9ba8"/>
        <function-ref name="cancel" scoped="" ref="0x413b9c88"/>
        <function-ref name="sendDone" scoped="" ref="0x413b9d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x413b8550" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x413b8550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413b8728"/>
        <function-ref name="payloadLength" scoped="" ref="0x413b8808"/>
        <function-ref name="getPayload" scoped="" ref="0x413b88e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413b89c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413b8aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x413b81f8" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x413b81f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413b83d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x413b7e68" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x413b7e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x413fb050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x413fb130"/>
        <function-ref name="led1On" scoped="" ref="0x413fb210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x413fb2f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x413fb3d0"/>
        <function-ref name="get" scoped="" ref="0x413fb4b0"/>
        <function-ref name="led1Off" scoped="" ref="0x413fb590"/>
        <function-ref name="led2Off" scoped="" ref="0x413fb910"/>
        <function-ref name="set" scoped="" ref="0x413fb670"/>
        <function-ref name="led0On" scoped="" ref="0x413fb750"/>
        <function-ref name="led2On" scoped="" ref="0x413fb830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x413b7930" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x413b7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x413b7b08"/>
        <function-ref name="noAck" scoped="" ref="0x413b7be8"/>
        <function-ref name="wasAcked" scoped="" ref="0x413b7cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x413b8c40" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413b8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413b8e18"/>
        <function-ref name="source" scoped="" ref="0x413b8ef8"/>
        <function-ref name="address" scoped="" ref="0x413b7010"/>
        <function-ref name="destination" scoped="" ref="0x413b70f0"/>
        <function-ref name="setSource" scoped="" ref="0x413b71d0"/>
        <function-ref name="setDestination" scoped="" ref="0x413b72b0"/>
        <function-ref name="type" scoped="" ref="0x413b7390"/>
        <function-ref name="setType" scoped="" ref="0x413b7470"/>
        <function-ref name="isForMe" scoped="" ref="0x413b7550"/>
        <function-ref name="setGroup" scoped="" ref="0x413b7630"/>
        <function-ref name="localGroup" scoped="" ref="0x413b7710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4140e430" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4140e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4140e608"/>
        <function-ref name="getPayload" scoped="" ref="0x4140e6e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4140e7c8"/>
        <function-ref name="cancel" scoped="" ref="0x4140e8a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4140e988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4140eae8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4140eae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4140ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413fa180" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413fa180"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413fa368"/>
        <function-ref name="getPayload" scoped="" ref="0x413fa448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413fa528"/>
        <function-ref name="cancel" scoped="" ref="0x413fa608"/>
        <function-ref name="sendDone" scoped="" ref="0x413fa6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x413f9850" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x413f9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413f9a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x413f9b08"/>
        <function-ref name="getPayload" scoped="" ref="0x413f9be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413f9cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413f9da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x413fa8c0" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x413fa8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413faaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x413f9ee8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x413f9ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4140e0e0"/>
        <function-ref name="noAck" scoped="" ref="0x4140e1c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4140e2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x413fabe8" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413fabe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413fadc0"/>
        <function-ref name="source" scoped="" ref="0x413faea0"/>
        <function-ref name="address" scoped="" ref="0x413f9010"/>
        <function-ref name="destination" scoped="" ref="0x413f90f0"/>
        <function-ref name="setSource" scoped="" ref="0x413f91d0"/>
        <function-ref name="setDestination" scoped="" ref="0x413f92b0"/>
        <function-ref name="type" scoped="" ref="0x413f9390"/>
        <function-ref name="setType" scoped="" ref="0x413f9470"/>
        <function-ref name="isForMe" scoped="" ref="0x413f9550"/>
        <function-ref name="setGroup" scoped="" ref="0x413f9630"/>
        <function-ref name="localGroup" scoped="" ref="0x413f9710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4140a3a8" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4140a3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4140a580"/>
        <function-ref name="stopDone" scoped="" ref="0x4140a660"/>
        <function-ref name="start" scoped="" ref="0x4140a740"/>
        <function-ref name="stop" scoped="" ref="0x4140a820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41408288" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41408288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404f17f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41408460"/>
        <function-ref name="getPayload" scoped="" ref="0x41408540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41408620"/>
        <function-ref name="cancel" scoped="" ref="0x41408700"/>
        <function-ref name="sendDone" scoped="" ref="0x414087e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4140a010" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4140a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4140a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4140ac68" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4140ac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404f17f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4140ae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41404e80" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41404e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41407070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41407150"/>
        <function-ref name="led1On" scoped="" ref="0x41407230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41407310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x414073f0"/>
        <function-ref name="get" scoped="" ref="0x414074d0"/>
        <function-ref name="led1Off" scoped="" ref="0x414075b0"/>
        <function-ref name="led2Off" scoped="" ref="0x41407930"/>
        <function-ref name="set" scoped="" ref="0x41407690"/>
        <function-ref name="led0On" scoped="" ref="0x41407770"/>
        <function-ref name="led2On" scoped="" ref="0x41407850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x41404978" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x41404978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404f17f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x41404b50"/>
        <function-ref name="offset" scoped="" ref="0x41404c30"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x41404d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x414022c8" loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x414022c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x414024a0"/>
        <function-ref name="stopDone" scoped="" ref="0x41402580"/>
        <function-ref name="start" scoped="" ref="0x41402660"/>
        <function-ref name="stop" scoped="" ref="0x41402740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x414537a0" loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x414537a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41453978"/>
        <function-ref name="runTask" scoped="" ref="0x41453a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x41440500" loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x41440500"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x414406d8"/>
        <function-ref name="stop" scoped="" ref="0x414407b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x4142da18" loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x4142da18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4142dbf0"/>
        <function-ref name="runTask" scoped="" ref="0x4142dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41407f18" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41407f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41402108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x4143a560" loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x4143a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x4143a738"/>
        <function-ref name="flush" scoped="" ref="0x4143a818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x41454010" loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x41454010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414541e8"/>
        <function-ref name="runTask" scoped="" ref="0x414542c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x4143ef10" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x4143ef10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x413fc108"/>
        <function-ref name="resetSend" scoped="" ref="0x413fc1e8"/>
        <function-ref name="dataReceived" scoped="" ref="0x413fc2c8"/>
        <function-ref name="resetReceive" scoped="" ref="0x413fc3a8"/>
        <function-ref name="putData" scoped="" ref="0x413fc488"/>
        <function-ref name="putDone" scoped="" ref="0x413fc568"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x413fc648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x413fc7b8" loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x413fc7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x413fc990"/>
        <function-ref name="led0Toggle" scoped="" ref="0x413fca70"/>
        <function-ref name="led1On" scoped="" ref="0x413fcb50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x413fcc30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x413fcd10"/>
        <function-ref name="get" scoped="" ref="0x413fcdf0"/>
        <function-ref name="led1Off" scoped="" ref="0x413fced0"/>
        <function-ref name="led2Off" scoped="" ref="0x414402b0"/>
        <function-ref name="set" scoped="" ref="0x41440010"/>
        <function-ref name="led0On" scoped="" ref="0x414400f0"/>
        <function-ref name="led2On" scoped="" ref="0x414401d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x41451428" loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x41451428"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41451600"/>
        <function-ref name="runTask" scoped="" ref="0x414516e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x413fda80" loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x413fda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x413fdc58"/>
        <function-ref name="nextByte" scoped="" ref="0x413fdd38"/>
        <function-ref name="startSend" scoped="" ref="0x413fde18"/>
        <function-ref name="sendCompleted" scoped="" ref="0x413fdef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x41441bd8" loc="68:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x41441bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x41441db0"/>
        <function-ref name="byteReceived" scoped="" ref="0x41441e90"/>
        <function-ref name="endPacket" scoped="" ref="0x41400010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x414b5970" loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x414b5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414b5b48"/>
        <function-ref name="runTask" scoped="" ref="0x414b5c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x414b84f8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x414b84f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404f17f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414b86e0"/>
        <function-ref name="getPayload" scoped="" ref="0x414b87c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414b88a0"/>
        <function-ref name="cancel" scoped="" ref="0x414b8980"/>
        <function-ref name="sendDone" scoped="" ref="0x414b8a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x414b5da8" loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x414b5da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414b4010"/>
        <function-ref name="runTask" scoped="" ref="0x414b40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x414b8138" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x414b8138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404f17f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414b8320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x414b8c88" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x414b8c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404f17f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x414b8e70"/>
        <function-ref name="offset" scoped="" ref="0x414b7010"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x414b70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x414b7cc0" loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x414b7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x414b7e98"/>
        <function-ref name="led0Toggle" scoped="" ref="0x414b5010"/>
        <function-ref name="led1On" scoped="" ref="0x414b50f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x414b51d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x414b52b0"/>
        <function-ref name="get" scoped="" ref="0x414b5390"/>
        <function-ref name="led1Off" scoped="" ref="0x414b5470"/>
        <function-ref name="led2On" scoped="" ref="0x414b57f0"/>
        <function-ref name="set" scoped="" ref="0x414b5630"/>
        <function-ref name="led2Off" scoped="" ref="0x414b5550"/>
        <function-ref name="led0On" scoped="" ref="0x414b5710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x414b7708" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x414b7708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x414b78e0"/>
        <function-ref name="nextByte" scoped="" ref="0x414b79c0"/>
        <function-ref name="startSend" scoped="" ref="0x414b7aa0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x414b7b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x414b7230" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x414b7230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x414b7408"/>
        <function-ref name="byteReceived" scoped="" ref="0x414b74e8"/>
        <function-ref name="endPacket" scoped="" ref="0x414b75c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x414f2630" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x414f2630"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414f2808"/>
        <function-ref name="receivedByte" scoped="" ref="0x414f28e8"/>
        <function-ref name="receive" scoped="" ref="0x414f29c8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x414f2aa8"/>
        <function-ref name="receiveDone" scoped="" ref="0x414f2b88"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x414f2c68"/>
        <function-ref name="sendDone" scoped="" ref="0x414f2d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x414b1238" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x414b1238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x414b1410"/>
        <function-ref name="resetSend" scoped="" ref="0x414b14f0"/>
        <function-ref name="dataReceived" scoped="" ref="0x414b15d0"/>
        <function-ref name="resetReceive" scoped="" ref="0x414b16b0"/>
        <function-ref name="putData" scoped="" ref="0x414b1790"/>
        <function-ref name="putDone" scoped="" ref="0x414b1870"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x414b1950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x414f2eb8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x414f2eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x414b00c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x414b01a0"/>
        <function-ref name="led1On" scoped="" ref="0x414b0280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x414b0360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x414b0440"/>
        <function-ref name="get" scoped="" ref="0x414b0520"/>
        <function-ref name="led1Off" scoped="" ref="0x414b0600"/>
        <function-ref name="led2Off" scoped="" ref="0x414b0980"/>
        <function-ref name="set" scoped="" ref="0x414b06e0"/>
        <function-ref name="led0On" scoped="" ref="0x414b07c0"/>
        <function-ref name="led2On" scoped="" ref="0x414b08a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x414de110" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x414de110"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414de2e8"/>
        <function-ref name="receive" scoped="" ref="0x414de3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x414e32f8" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x414e32f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414e34d0"/>
        <function-ref name="receivedByte" scoped="" ref="0x414e35b0"/>
        <function-ref name="receive" scoped="" ref="0x414e3690"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x414e3770"/>
        <function-ref name="receiveDone" scoped="" ref="0x414e3850"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x414e3930"/>
        <function-ref name="sendDone" scoped="" ref="0x414e3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x414b3e48" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x414b3e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x414e3050"/>
        <function-ref name="stop" scoped="" ref="0x414e3130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x414df010" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x414df010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414df1e8"/>
        <function-ref name="receive" scoped="" ref="0x414df2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x414df490" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x414df490"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414df668"/>
        <function-ref name="receivedByte" scoped="" ref="0x414df748"/>
        <function-ref name="receive" scoped="" ref="0x414df828"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x414df908"/>
        <function-ref name="receiveDone" scoped="" ref="0x414df9e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x414dfac8"/>
        <function-ref name="sendDone" scoped="" ref="0x414dfba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x414dff08" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x414dff08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404711a8"/>
            <typename><typedef-ref name="TMicro" ref="0x40471370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414dd680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x414ddb70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x414dd8f8"/>
        <function-ref name="overflow" scoped="" ref="0x414ddde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x414deb10" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x414deb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x414dece8"/>
        <function-ref name="stop" scoped="" ref="0x414dedc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x414da7b0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x414da7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414da988"/>
        <function-ref name="receive" scoped="" ref="0x414daa68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x414d9510" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x414d9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x414d96e8"/>
        <function-ref name="stop" scoped="" ref="0x414d97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414da060" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414da238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x414dabc8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x414dabc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414dada0"/>
        <function-ref name="receivedByte" scoped="" ref="0x414dae80"/>
        <function-ref name="receive" scoped="" ref="0x414d9010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x414d90f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x414d91d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x414d92b0"/>
        <function-ref name="sendDone" scoped="" ref="0x414d9390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x414fca70" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x414fca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404711a8"/>
            <typename><typedef-ref name="TMicro" ref="0x40471370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414fb200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x414fb6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x414fb478"/>
        <function-ref name="overflow" scoped="" ref="0x414fb968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x414d9d80" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x414d9d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x414fc010"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x414fc0f0"/>
        <function-ref name="rxDone" scoped="" ref="0x414fc1d0"/>
        <function-ref name="txDone" scoped="" ref="0x414fc2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x414fc390"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x414fc470"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x414fc550"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x414fc630"/>
        <function-ref name="tx" scoped="" ref="0x414fc710"/>
        <function-ref name="rx" scoped="" ref="0x414fc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x414da398" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x414da398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x414da570"/>
        <function-ref name="stop" scoped="" ref="0x414da650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x414d9948" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x414d9948"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x414d9b20"/>
        <function-ref name="stop" scoped="" ref="0x414d9c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x41532088" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x41532088"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41532260"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41532340"/>
        <function-ref name="rxDone" scoped="" ref="0x41532420"/>
        <function-ref name="txDone" scoped="" ref="0x41532500"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x415325e0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x415326c0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x415327a0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41532880"/>
        <function-ref name="tx" scoped="" ref="0x41532960"/>
        <function-ref name="rx" scoped="" ref="0x41532a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x41531760" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x41531760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41531938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41531a18"/>
        <function-ref name="rxDone" scoped="" ref="0x41531af8"/>
        <function-ref name="txDone" scoped="" ref="0x41531bd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x41531cb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x41531d98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41531e78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41530010"/>
        <function-ref name="tx" scoped="" ref="0x415300f0"/>
        <function-ref name="rx" scoped="" ref="0x415301d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x41533b50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x41533b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41533d28"/>
        <function-ref name="stop" scoped="" ref="0x41533e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x41532c98" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x41532c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41532e70"/>
        <function-ref name="stop" scoped="" ref="0x41531010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x41531268" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x41531268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41531440"/>
        <function-ref name="stop" scoped="" ref="0x41531520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x41533640" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x41533640"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41533818"/>
        <function-ref name="stop" scoped="" ref="0x415338f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x415309b0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x415309b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41530b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x4152d880" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x4152d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x4152da58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x4152db38"/>
        <function-ref name="rxDone" scoped="" ref="0x4152dc18"/>
        <function-ref name="txDone" scoped="" ref="0x4152dcf8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x4152ddd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x4152deb8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x4152b010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x4152b0f0"/>
        <function-ref name="tx" scoped="" ref="0x4152b1d0"/>
        <function-ref name="rx" scoped="" ref="0x4152b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x4152b4c0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x4152b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4152b698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x4152a390" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x4152a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x4152a568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x4152a648"/>
        <function-ref name="rxDone" scoped="" ref="0x4152a728"/>
        <function-ref name="txDone" scoped="" ref="0x4152a808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x4152a8e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x4152a9c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x4152aaa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x4152ab88"/>
        <function-ref name="tx" scoped="" ref="0x4152ac68"/>
        <function-ref name="rx" scoped="" ref="0x4152ad48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x4152d368" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x4152d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4152d540"/>
        <function-ref name="stop" scoped="" ref="0x4152d620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x4152b910" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x4152b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4152bae8"/>
        <function-ref name="stop" scoped="" ref="0x4152bbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x4152be40" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x4152be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4152a050"/>
        <function-ref name="stop" scoped="" ref="0x4152a130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x41529010" loc="90:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x41529010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x415291e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x415292c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x415293a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x41529488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x41529568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x41529750" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x41529750"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x41529928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x41530e00" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x41530e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4152d010"/>
        <function-ref name="stop" scoped="" ref="0x4152d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4158a610" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4158a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404711a8"/>
            <typename><typedef-ref name="TMicro" ref="0x40471370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4158ad60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41587288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41587010"/>
        <function-ref name="overflow" scoped="" ref="0x41587500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41584088" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41584088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404711a8"/>
            <typename><typedef-ref name="TThree" ref="0x40492bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x415847d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41584cc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41584a50"/>
        <function-ref name="overflow" scoped="" ref="0x41583010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4157ed78" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4157ed78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4157d010"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x4157d0f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4157d1d0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x4157d2b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4157d390"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4157d470"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x4157d550"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x4157d630"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x4157d710"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x4157d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4157db28" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4157db28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4157b640"/>
        <function-ref name="test" scoped="" ref="0x4157b150"/>
        <function-ref name="get" scoped="" ref="0x4157c200"/>
        <function-ref name="captured" scoped="" ref="0x4157c718"/>
        <function-ref name="reset" scoped="" ref="0x4157c9b8"/>
        <function-ref name="isOn" scoped="" ref="0x4157b3c8"/>
        <function-ref name="set" scoped="" ref="0x4157c478"/>
        <function-ref name="start" scoped="" ref="0x4157cc30"/>
        <function-ref name="stop" scoped="" ref="0x4157cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4157bd50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4157bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41578300"/>
        <function-ref name="fired" scoped="" ref="0x415798f8"/>
        <function-ref name="get" scoped="" ref="0x415793e0"/>
        <function-ref name="reset" scoped="" ref="0x41579b70"/>
        <function-ref name="isOn" scoped="" ref="0x41578578"/>
        <function-ref name="set" scoped="" ref="0x41579658"/>
        <function-ref name="start" scoped="" ref="0x41579de8"/>
        <function-ref name="stop" scoped="" ref="0x41578088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41583a58" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41583a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4157e500"/>
        <function-ref name="test" scoped="" ref="0x4157e010"/>
        <function-ref name="get" scoped="" ref="0x415800b8"/>
        <function-ref name="setScale" scoped="" ref="0x4157e778"/>
        <function-ref name="getScale" scoped="" ref="0x4157ea18"/>
        <function-ref name="reset" scoped="" ref="0x41580848"/>
        <function-ref name="overflow" scoped="" ref="0x415805d0"/>
        <function-ref name="isOn" scoped="" ref="0x4157e288"/>
        <function-ref name="set" scoped="" ref="0x41580330"/>
        <function-ref name="start" scoped="" ref="0x41580ac0"/>
        <function-ref name="stop" scoped="" ref="0x41580d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x41572370" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41572370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41572548"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x41572628"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41572708"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x415727e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x415728c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x415729a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x41572a88"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x41572b68"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x41572c48"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x41572d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x4156e010" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x4156e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4156d578"/>
        <function-ref name="fired" scoped="" ref="0x4156eb70"/>
        <function-ref name="get" scoped="" ref="0x4156e658"/>
        <function-ref name="reset" scoped="" ref="0x4156ede8"/>
        <function-ref name="isOn" scoped="" ref="0x4156d7f0"/>
        <function-ref name="set" scoped="" ref="0x4156e8d0"/>
        <function-ref name="start" scoped="" ref="0x4156d088"/>
        <function-ref name="stop" scoped="" ref="0x4156d300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x41571078" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x41571078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x41570af0"/>
        <function-ref name="test" scoped="" ref="0x41570600"/>
        <function-ref name="get" scoped="" ref="0x415716c0"/>
        <function-ref name="captured" scoped="" ref="0x41571bd8"/>
        <function-ref name="reset" scoped="" ref="0x41571e78"/>
        <function-ref name="isOn" scoped="" ref="0x41570878"/>
        <function-ref name="set" scoped="" ref="0x41571938"/>
        <function-ref name="start" scoped="" ref="0x41570110"/>
        <function-ref name="stop" scoped="" ref="0x41570388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x4156dc08" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x4156dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4156a1a0"/>
        <function-ref name="fired" scoped="" ref="0x4156c790"/>
        <function-ref name="get" scoped="" ref="0x4156c278"/>
        <function-ref name="reset" scoped="" ref="0x4156ca08"/>
        <function-ref name="isOn" scoped="" ref="0x4156a418"/>
        <function-ref name="set" scoped="" ref="0x4156c4f0"/>
        <function-ref name="start" scoped="" ref="0x4156cc80"/>
        <function-ref name="stop" scoped="" ref="0x4156cef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x4156a830" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x4156a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41569d90"/>
        <function-ref name="fired" scoped="" ref="0x415693b0"/>
        <function-ref name="get" scoped="" ref="0x4156ae78"/>
        <function-ref name="reset" scoped="" ref="0x41569628"/>
        <function-ref name="isOn" scoped="" ref="0x41568048"/>
        <function-ref name="set" scoped="" ref="0x41569110"/>
        <function-ref name="start" scoped="" ref="0x415698a0"/>
        <function-ref name="stop" scoped="" ref="0x41569b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41575010" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41575010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41573a68"/>
        <function-ref name="test" scoped="" ref="0x41573578"/>
        <function-ref name="get" scoped="" ref="0x41575658"/>
        <function-ref name="setScale" scoped="" ref="0x41573ce0"/>
        <function-ref name="getScale" scoped="" ref="0x41572010"/>
        <function-ref name="reset" scoped="" ref="0x41575de8"/>
        <function-ref name="overflow" scoped="" ref="0x41575b70"/>
        <function-ref name="isOn" scoped="" ref="0x415737f0"/>
        <function-ref name="set" scoped="" ref="0x415758d0"/>
        <function-ref name="start" scoped="" ref="0x41573088"/>
        <function-ref name="stop" scoped="" ref="0x41573300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415b6a78" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415b6a78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x404195d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x404195d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415b6c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x415b6e60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x415b6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x415b38d8"/>
        <function-ref name="test" scoped="" ref="0x415b33e8"/>
        <function-ref name="get" scoped="" ref="0x415b44d8"/>
        <function-ref name="setScale" scoped="" ref="0x415b3b50"/>
        <function-ref name="getScale" scoped="" ref="0x415b3df0"/>
        <function-ref name="reset" scoped="" ref="0x415b4c68"/>
        <function-ref name="overflow" scoped="" ref="0x415b49f0"/>
        <function-ref name="isOn" scoped="" ref="0x415b3660"/>
        <function-ref name="set" scoped="" ref="0x415b4750"/>
        <function-ref name="start" scoped="" ref="0x415b4ee0"/>
        <function-ref name="stop" scoped="" ref="0x415b3170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x415b70c0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x415b70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404711a8"/>
            <typename><typedef-ref name="TThree" ref="0x40492bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x415b7810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x415b7d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x415b7a88"/>
        <function-ref name="overflow" scoped="" ref="0x415fd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x415fd2f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x415fd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x415fcd30"/>
        <function-ref name="test" scoped="" ref="0x415fc840"/>
        <function-ref name="get" scoped="" ref="0x415fd938"/>
        <function-ref name="setScale" scoped="" ref="0x415fb010"/>
        <function-ref name="getScale" scoped="" ref="0x415fb2b0"/>
        <function-ref name="reset" scoped="" ref="0x415fc0d8"/>
        <function-ref name="overflow" scoped="" ref="0x415fde50"/>
        <function-ref name="isOn" scoped="" ref="0x415fcab8"/>
        <function-ref name="set" scoped="" ref="0x415fdbb0"/>
        <function-ref name="start" scoped="" ref="0x415fc350"/>
        <function-ref name="stop" scoped="" ref="0x415fc5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x415f83b8" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x415f83b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404711a8"/>
            <typename><typedef-ref name="TThree" ref="0x40492bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x415f8b08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x415f6010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x415f8d80"/>
        <function-ref name="overflow" scoped="" ref="0x415f6288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x415f9170" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x415f9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404711a8"/>
            <typename><typedef-ref name="TMicro" ref="0x40471370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x415f98c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x415f9db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x415f9b38"/>
        <function-ref name="overflow" scoped="" ref="0x415f8048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x415f5ad8" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x415f5ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x415f5cb0"/>
        <function-ref name="offset" scoped="" ref="0x415f5d90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x415f5e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x415ede88" loc="39:../../Deluge/AutoStarterC.nc">
      <component-ref qname="AutoStarterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x415ede88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x415ea070"/>
        <function-ref name="stopDone" scoped="" ref="0x415ea150"/>
        <function-ref name="start" scoped="" ref="0x415ea230"/>
        <function-ref name="stop" scoped="" ref="0x415ea310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x415eaeb8" loc="41:../../Deluge/AutoStarterP.nc">
      <component-ref qname="AutoStarterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x415eaeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x415e70c0"/>
        <function-ref name="stopDone" scoped="" ref="0x415e71a0"/>
        <function-ref name="start" scoped="" ref="0x415e7280"/>
        <function-ref name="stop" scoped="" ref="0x415e7360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x415eab20" loc="40:../../Deluge/AutoStarterP.nc">
      <component-ref qname="AutoStarterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x415eab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x415eacf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41c89aa8" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41c89aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41c89c80"/>
        <function-ref name="getPayload" scoped="" ref="0x41c89d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c89e40"/>
        <function-ref name="cancel" scoped="" ref="0x41c89f20"/>
        <function-ref name="sendDone" scoped="" ref="0x41c88018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41c88158" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41c88158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41c88330"/>
        <function-ref name="payloadLength" scoped="" ref="0x41c88410"/>
        <function-ref name="getPayload" scoped="" ref="0x41c884f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c885d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41c886b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41c887f0" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41c887f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41c889c8"/>
        <function-ref name="source" scoped="" ref="0x41c88aa8"/>
        <function-ref name="address" scoped="" ref="0x41c88b88"/>
        <function-ref name="destination" scoped="" ref="0x41c88c68"/>
        <function-ref name="setSource" scoped="" ref="0x41c88d48"/>
        <function-ref name="setDestination" scoped="" ref="0x41c88e28"/>
        <function-ref name="type" scoped="" ref="0x41c88f08"/>
        <function-ref name="setType" scoped="" ref="0x41c87010"/>
        <function-ref name="isForMe" scoped="" ref="0x41c870f0"/>
        <function-ref name="setGroup" scoped="" ref="0x41c871d0"/>
        <function-ref name="localGroup" scoped="" ref="0x41c872b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41c87410" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41c87410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41c875e8"/>
        <function-ref name="noAck" scoped="" ref="0x41c876c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41c877a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41cc7690" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41cc7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41cc7868"/>
        <function-ref name="getPayload" scoped="" ref="0x41cc7948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41cc7a28"/>
        <function-ref name="cancel" scoped="" ref="0x41cc7b08"/>
        <function-ref name="sendDone" scoped="" ref="0x41cc7be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41cc7d58" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41cc7d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41cc6010"/>
        <function-ref name="getPayload" scoped="" ref="0x41cc60f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41cc61d0"/>
        <function-ref name="cancel" scoped="" ref="0x41cc62b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41cc6390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41cc64d0" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41cc64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41cc66a8"/>
        <function-ref name="source" scoped="" ref="0x41cc6788"/>
        <function-ref name="address" scoped="" ref="0x41cc6868"/>
        <function-ref name="destination" scoped="" ref="0x41cc6948"/>
        <function-ref name="setSource" scoped="" ref="0x41cc6a28"/>
        <function-ref name="setDestination" scoped="" ref="0x41cc6b08"/>
        <function-ref name="type" scoped="" ref="0x41cc6be8"/>
        <function-ref name="setType" scoped="" ref="0x41cc6cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x41cc6da8"/>
        <function-ref name="setGroup" scoped="" ref="0x41cc6e88"/>
        <function-ref name="localGroup" scoped="" ref="0x41cc4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x415dc448" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x415dc448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415dc620"/>
        <function-ref name="getPayload" scoped="" ref="0x415dc700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415dc7e0"/>
        <function-ref name="cancel" scoped="" ref="0x415dc8c0"/>
        <function-ref name="sendDone" scoped="" ref="0x415dc9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x415d92f8" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415d92f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415d94e0"/>
        <function-ref name="getPayload" scoped="" ref="0x415d95c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415d96a0"/>
        <function-ref name="cancel" scoped="" ref="0x415d9780"/>
        <function-ref name="sendDone" scoped="" ref="0x415d9860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x415dab10" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x415dab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415dacf8"/>
        <function-ref name="getPayload" scoped="" ref="0x415dadd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415daeb8"/>
        <function-ref name="cancel" scoped="" ref="0x415d9010"/>
        <function-ref name="sendDone" scoped="" ref="0x415d90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x415d85b0" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x415d85b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x415d8788"/>
        <function-ref name="payloadLength" scoped="" ref="0x415d8868"/>
        <function-ref name="getPayload" scoped="" ref="0x415d8948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415d8a28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x415d8b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x415d8c88" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x415d8c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x415d8e60"/>
        <function-ref name="runTask" scoped="" ref="0x415d7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x415d7190" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x415d7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x415d7368"/>
        <function-ref name="runTask" scoped="" ref="0x415d7448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x415d99a0" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415d99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415d9b78"/>
        <function-ref name="source" scoped="" ref="0x415d9c58"/>
        <function-ref name="address" scoped="" ref="0x415d9d38"/>
        <function-ref name="destination" scoped="" ref="0x415d9e18"/>
        <function-ref name="setSource" scoped="" ref="0x415d9ef8"/>
        <function-ref name="setDestination" scoped="" ref="0x415d8010"/>
        <function-ref name="type" scoped="" ref="0x415d80f0"/>
        <function-ref name="setType" scoped="" ref="0x415d81d0"/>
        <function-ref name="isForMe" scoped="" ref="0x415d82b0"/>
        <function-ref name="setGroup" scoped="" ref="0x415d8390"/>
        <function-ref name="localGroup" scoped="" ref="0x415d8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41c86ad8" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41c86ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41c86cb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41c86d90"/>
        <function-ref name="getPayload" scoped="" ref="0x41c86e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c84010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41c840f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41c867c0" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41c867c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41c86998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41c84230" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41c84230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41c84408"/>
        <function-ref name="source" scoped="" ref="0x41c844e8"/>
        <function-ref name="address" scoped="" ref="0x41c845c8"/>
        <function-ref name="destination" scoped="" ref="0x41c846a8"/>
        <function-ref name="setSource" scoped="" ref="0x41c84788"/>
        <function-ref name="setDestination" scoped="" ref="0x41c84868"/>
        <function-ref name="type" scoped="" ref="0x41c84948"/>
        <function-ref name="setType" scoped="" ref="0x41c84a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41c84b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41c84be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41c84cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeoutTimer" ref="0x41c80010" loc="48:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeoutTimer" scoped="" ref="0x41c80010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41c7fb00"/>
        <function-ref name="fired" scoped="" ref="0x41c80d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41c7f4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41c7f268"/>
        <function-ref name="getdt" scoped="" ref="0x41c7e010"/>
        <function-ref name="gett0" scoped="" ref="0x41c7fd58"/>
        <function-ref name="isRunning" scoped="" ref="0x41c7f010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41c80638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41c7f7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x41c808b8"/>
        <function-ref name="stop" scoped="" ref="0x41c80b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMSender" ref="0x41c81568" loc="46:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMSender" scoped="" ref="0x41c81568"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41c81740"/>
        <function-ref name="getPayload" scoped="" ref="0x41c81820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c81900"/>
        <function-ref name="cancel" scoped="" ref="0x41c819e0"/>
        <function-ref name="sendDone" scoped="" ref="0x41c81ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x41c83b08" loc="42:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41c83b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41c83cf0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41c83dd0"/>
        <function-ref name="computeCrc" scoped="" ref="0x41c83eb0"/>
        <function-ref name="getSize" scoped="" ref="0x41c82010"/>
        <function-ref name="readDone" scoped="" ref="0x41c820f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x41c822c8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41c822c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41c824b0"/>
        <function-ref name="writeDone" scoped="" ref="0x41c82590"/>
        <function-ref name="erase" scoped="" ref="0x41c82670"/>
        <function-ref name="eraseDone" scoped="" ref="0x41c82750"/>
        <function-ref name="write" scoped="" ref="0x41c82830"/>
        <function-ref name="sync" scoped="" ref="0x41c82910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMReceiver" ref="0x41c81c20" loc="47:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMReceiver" scoped="" ref="0x41c81c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41c81df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41c7e220" loc="49:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41c7e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41c7e3f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41c7e4d8"/>
        <function-ref name="led1On" scoped="" ref="0x41c7e5b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41c7e698"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41c7e778"/>
        <function-ref name="get" scoped="" ref="0x41c7e858"/>
        <function-ref name="led1Off" scoped="" ref="0x41c7e938"/>
        <function-ref name="led0On" scoped="" ref="0x41c7ecb8"/>
        <function-ref name="set" scoped="" ref="0x41c7eaf8"/>
        <function-ref name="led2On" scoped="" ref="0x41c7ea18"/>
        <function-ref name="led2Off" scoped="" ref="0x41c7ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41c82a50" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c82a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c82c28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c82d08"/>
        <function-ref name="request" scoped="" ref="0x41c82de8"/>
        <function-ref name="granted" scoped="" ref="0x41c82ec8"/>
        <function-ref name="isOwner" scoped="" ref="0x41c81010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41c81150" loc="45:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41c81150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41c81328"/>
        <function-ref name="userId" scoped="" ref="0x41c81408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41ce3238" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.TimeoutTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41ce3238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41ce2d58"/>
        <function-ref name="fired" scoped="" ref="0x41ce2010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41ce2718"/>
        <function-ref name="isOneShot" scoped="" ref="0x41ce24c0"/>
        <function-ref name="getdt" scoped="" ref="0x41ce1268"/>
        <function-ref name="gett0" scoped="" ref="0x41ce1010"/>
        <function-ref name="isRunning" scoped="" ref="0x41ce2268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41ce3860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41ce2a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x41ce3ae0"/>
        <function-ref name="stop" scoped="" ref="0x41ce3d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41ce1f20" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41ce1f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41ce0110"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41ce01f0"/>
        <function-ref name="request" scoped="" ref="0x41ce02d0"/>
        <function-ref name="granted" scoped="" ref="0x41ce03b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41ce0490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41cdf010" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41cdf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41cdf1e8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41cdf2c8"/>
        <function-ref name="computeCrc" scoped="" ref="0x41cdf3a8"/>
        <function-ref name="getSize" scoped="" ref="0x41cdf488"/>
        <function-ref name="readDone" scoped="" ref="0x41cdf568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41cdf6a8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41cdf6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41cdf880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41cdf960"/>
        <function-ref name="request" scoped="" ref="0x41cdfa40"/>
        <function-ref name="granted" scoped="" ref="0x41cdfb20"/>
        <function-ref name="isOwner" scoped="" ref="0x41cdfc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41d483c8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41d483c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41d485a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41d48ed8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41d48ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41d470c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41d471a0"/>
        <function-ref name="request" scoped="" ref="0x41d47280"/>
        <function-ref name="granted" scoped="" ref="0x41d47360"/>
        <function-ref name="isOwner" scoped="" ref="0x41d47440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41cde8b8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41cde8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41cdea90"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41cdeb70"/>
        <function-ref name="computeCrc" scoped="" ref="0x41cdec50"/>
        <function-ref name="getSize" scoped="" ref="0x41cded30"/>
        <function-ref name="readDone" scoped="" ref="0x41cdee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41cdd010" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41cdd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41cdd1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41cdd2c8"/>
        <function-ref name="request" scoped="" ref="0x41cdd3a8"/>
        <function-ref name="granted" scoped="" ref="0x41cdd488"/>
        <function-ref name="isOwner" scoped="" ref="0x41cdd568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41d43828" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41d43828"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41d43a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41d42358" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41d42358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41d42530"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41d42610"/>
        <function-ref name="request" scoped="" ref="0x41d426f0"/>
        <function-ref name="granted" scoped="" ref="0x41d427d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41d428b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41cdc230" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41cdc230"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41cdc408"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41cdc4e8"/>
        <function-ref name="computeCrc" scoped="" ref="0x41cdc5c8"/>
        <function-ref name="getSize" scoped="" ref="0x41cdc6a8"/>
        <function-ref name="readDone" scoped="" ref="0x41cdc788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41cdc8c8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41cdc8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41cdcaa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41cdcb80"/>
        <function-ref name="request" scoped="" ref="0x41cdcc60"/>
        <function-ref name="granted" scoped="" ref="0x41cdcd40"/>
        <function-ref name="isOwner" scoped="" ref="0x41cdce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41d3ec70" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41d3ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41d3ee48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41d3d820" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41d3d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41d3d9f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41d3dad8"/>
        <function-ref name="request" scoped="" ref="0x41d3dbb8"/>
        <function-ref name="granted" scoped="" ref="0x41d3dc98"/>
        <function-ref name="isOwner" scoped="" ref="0x41d3dd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41cdab88" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41cdab88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41cdad60"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41cdae40"/>
        <function-ref name="computeCrc" scoped="" ref="0x41cdaf20"/>
        <function-ref name="getSize" scoped="" ref="0x41cd9018"/>
        <function-ref name="readDone" scoped="" ref="0x41cd90f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41cd9238" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41cd9238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41cd9410"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41cd94f0"/>
        <function-ref name="request" scoped="" ref="0x41cd95d0"/>
        <function-ref name="granted" scoped="" ref="0x41cd96b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41cd9790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41d371e8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41d371e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41d373c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41d37cf8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41d37cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41d37ed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41d36010"/>
        <function-ref name="request" scoped="" ref="0x41d360f0"/>
        <function-ref name="granted" scoped="" ref="0x41d361d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41d362b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41cd8448" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41cd8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41cd8620"/>
        <function-ref name="writeDone" scoped="" ref="0x41cd8700"/>
        <function-ref name="erase" scoped="" ref="0x41cd87e0"/>
        <function-ref name="eraseDone" scoped="" ref="0x41cd88c0"/>
        <function-ref name="write" scoped="" ref="0x41cd89a0"/>
        <function-ref name="sync" scoped="" ref="0x41cd8a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41cd8bc0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41cd8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41cd8d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41cd8e78"/>
        <function-ref name="request" scoped="" ref="0x41cd7010"/>
        <function-ref name="granted" scoped="" ref="0x41cd70f0"/>
        <function-ref name="isOwner" scoped="" ref="0x41cd71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41d32690" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41d32690"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41d32868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41d311b8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41d311b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41d31390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41d31470"/>
        <function-ref name="request" scoped="" ref="0x41d31550"/>
        <function-ref name="granted" scoped="" ref="0x41d31630"/>
        <function-ref name="isOwner" scoped="" ref="0x41d31710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41cd7ea8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41cd7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41cd60c0"/>
        <function-ref name="writeDone" scoped="" ref="0x41cd61a0"/>
        <function-ref name="erase" scoped="" ref="0x41cd6280"/>
        <function-ref name="eraseDone" scoped="" ref="0x41cd6360"/>
        <function-ref name="write" scoped="" ref="0x41cd6440"/>
        <function-ref name="sync" scoped="" ref="0x41cd6520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41cd6660" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41cd6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41cd6838"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41cd6918"/>
        <function-ref name="request" scoped="" ref="0x41cd69f8"/>
        <function-ref name="granted" scoped="" ref="0x41cd6ad8"/>
        <function-ref name="isOwner" scoped="" ref="0x41cd6bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41d2dbd0" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41d2dbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41d2dda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41d2b6f8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41d2b6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41d2b8d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41d2b9b0"/>
        <function-ref name="request" scoped="" ref="0x41d2ba90"/>
        <function-ref name="granted" scoped="" ref="0x41d2bb70"/>
        <function-ref name="isOwner" scoped="" ref="0x41d2bc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41cd58b8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41cd58b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41cd5a90"/>
        <function-ref name="writeDone" scoped="" ref="0x41cd5b70"/>
        <function-ref name="erase" scoped="" ref="0x41cd5c50"/>
        <function-ref name="eraseDone" scoped="" ref="0x41cd5d30"/>
        <function-ref name="write" scoped="" ref="0x41cd5e10"/>
        <function-ref name="sync" scoped="" ref="0x41cd5ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41cd4070" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41cd4070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41cd4248"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41cd4328"/>
        <function-ref name="request" scoped="" ref="0x41cd4408"/>
        <function-ref name="granted" scoped="" ref="0x41cd44e8"/>
        <function-ref name="isOwner" scoped="" ref="0x41cd45c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41d261e8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41d261e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41d263c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41d26cf8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41d26cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41d26ed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41d25010"/>
        <function-ref name="request" scoped="" ref="0x41d250f0"/>
        <function-ref name="granted" scoped="" ref="0x41d251d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41d252b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41cd32c0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41cd32c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41cd3498"/>
        <function-ref name="writeDone" scoped="" ref="0x41cd3578"/>
        <function-ref name="erase" scoped="" ref="0x41cd3658"/>
        <function-ref name="eraseDone" scoped="" ref="0x41cd3738"/>
        <function-ref name="write" scoped="" ref="0x41cd3818"/>
        <function-ref name="sync" scoped="" ref="0x41cd38f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41cd3a38" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41cd3a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41cd3c10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41cd3cf0"/>
        <function-ref name="request" scoped="" ref="0x41cd3dd0"/>
        <function-ref name="granted" scoped="" ref="0x41cd3eb0"/>
        <function-ref name="isOwner" scoped="" ref="0x41cd2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41d21828" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41d21828"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41d21a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41d1f358" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41d1f358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41d1f530"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41d1f610"/>
        <function-ref name="request" scoped="" ref="0x41d1f6f0"/>
        <function-ref name="granted" scoped="" ref="0x41d1f7d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41d1f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationUpdate" ref="0x416c1538" loc="41:../../Deluge/DelugeManagerC.nc">
      <component-ref qname="DelugeC.DelugeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x416c1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x406738b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40672188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x416c1b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41d1c900" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41d1c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41d1cad8"/>
        <function-ref name="getPayload" scoped="" ref="0x41d1cbb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41d1cc98"/>
        <function-ref name="cancel" scoped="" ref="0x41d1cd78"/>
        <function-ref name="sendDone" scoped="" ref="0x41d1ce58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41d1b010" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41d1b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41d1b1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41d1b2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x41d1b3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41d1b488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41d1b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41d1b6a8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41d1b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41d1b880"/>
        <function-ref name="source" scoped="" ref="0x41d1b960"/>
        <function-ref name="address" scoped="" ref="0x41d1ba40"/>
        <function-ref name="destination" scoped="" ref="0x41d1bb20"/>
        <function-ref name="setSource" scoped="" ref="0x41d1bc00"/>
        <function-ref name="setDestination" scoped="" ref="0x41d1bce0"/>
        <function-ref name="type" scoped="" ref="0x41d1bdc0"/>
        <function-ref name="setType" scoped="" ref="0x41d1bea0"/>
        <function-ref name="isForMe" scoped="" ref="0x41d1a010"/>
        <function-ref name="setGroup" scoped="" ref="0x41d1a0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x41d1a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41d1a330" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41d1a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41d1a508"/>
        <function-ref name="noAck" scoped="" ref="0x41d1a5e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41d1a6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41d6b060" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41d6b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41d6b238"/>
        <function-ref name="getPayload" scoped="" ref="0x41d6b318"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41d6b3f8"/>
        <function-ref name="cancel" scoped="" ref="0x41d6b4d8"/>
        <function-ref name="sendDone" scoped="" ref="0x41d6b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41d6b728" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41d6b728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41d6b900"/>
        <function-ref name="getPayload" scoped="" ref="0x41d6b9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41d6bac0"/>
        <function-ref name="cancel" scoped="" ref="0x41d6bba0"/>
        <function-ref name="sendDone" scoped="" ref="0x41d6bc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41d6bdc0" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41d6bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41d6a010"/>
        <function-ref name="source" scoped="" ref="0x41d6a0f0"/>
        <function-ref name="address" scoped="" ref="0x41d6a1d0"/>
        <function-ref name="destination" scoped="" ref="0x41d6a2b0"/>
        <function-ref name="setSource" scoped="" ref="0x41d6a390"/>
        <function-ref name="setDestination" scoped="" ref="0x41d6a470"/>
        <function-ref name="type" scoped="" ref="0x41d6a550"/>
        <function-ref name="setType" scoped="" ref="0x41d6a630"/>
        <function-ref name="isForMe" scoped="" ref="0x41d6a710"/>
        <function-ref name="setGroup" scoped="" ref="0x41d6a7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x41d6a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41d849f8" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41d849f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41d84bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41d84cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x41d84d90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41d84e70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41d82010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41d846e0" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41d846e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41d848b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41d82150" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41d82150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41d82328"/>
        <function-ref name="source" scoped="" ref="0x41d82408"/>
        <function-ref name="address" scoped="" ref="0x41d824e8"/>
        <function-ref name="destination" scoped="" ref="0x41d825c8"/>
        <function-ref name="setSource" scoped="" ref="0x41d826a8"/>
        <function-ref name="setDestination" scoped="" ref="0x41d82788"/>
        <function-ref name="type" scoped="" ref="0x41d82868"/>
        <function-ref name="setType" scoped="" ref="0x41d82948"/>
        <function-ref name="isForMe" scoped="" ref="0x41d82a28"/>
        <function-ref name="setGroup" scoped="" ref="0x41d82b08"/>
        <function-ref name="localGroup" scoped="" ref="0x41d82be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41d81940" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41d81940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41d7f4c8"/>
        <function-ref name="fired" scoped="" ref="0x41d80768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41d80e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x41d80c18"/>
        <function-ref name="getdt" scoped="" ref="0x41d7f978"/>
        <function-ref name="gett0" scoped="" ref="0x41d7f720"/>
        <function-ref name="isRunning" scoped="" ref="0x41d809c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41d80010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41d7f1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x41d80290"/>
        <function-ref name="stop" scoped="" ref="0x41d80510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NetProg" ref="0x41d7ad10" loc="46:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x41d7ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x41d7aee8"/>
        <function-ref name="reboot" scoped="" ref="0x41d79010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41d78ef8" loc="52:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41d78ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41d770e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41d771c0"/>
        <function-ref name="request" scoped="" ref="0x41d772a0"/>
        <function-ref name="granted" scoped="" ref="0x41d77380"/>
        <function-ref name="isOwner" scoped="" ref="0x41d77460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x41d7da90" loc="45:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x41d7da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41d7a650"/>
        <function-ref name="fired" scoped="" ref="0x41d7c830"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41d7a010"/>
        <function-ref name="isOneShot" scoped="" ref="0x41d7cce0"/>
        <function-ref name="getdt" scoped="" ref="0x41d7ab00"/>
        <function-ref name="gett0" scoped="" ref="0x41d7a8a8"/>
        <function-ref name="isRunning" scoped="" ref="0x41d7ca88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41d7c0d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41d7a330"/>
        <function-ref name="startOneShot" scoped="" ref="0x41d7c358"/>
        <function-ref name="stop" scoped="" ref="0x41d7c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMSender" ref="0x41d7d010" loc="43:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMSender" scoped="" ref="0x41d7d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41d7d1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x41d7d2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41d7d3a8"/>
        <function-ref name="cancel" scoped="" ref="0x41d7d488"/>
        <function-ref name="sendDone" scoped="" ref="0x41d7d568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x41d79dc0" loc="48:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x41d79dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x41d78010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationUpdate" ref="0x41d7e678" loc="42:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x41d7e678"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x406738b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40672188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x41d7eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMReceiver" ref="0x41d7d6c8" loc="44:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMReceiver" scoped="" ref="0x41d7d6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41d7d8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41d79150" loc="47:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41d79150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41d79328"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41d79408"/>
        <function-ref name="led1On" scoped="" ref="0x41d794e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41d795c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41d796a8"/>
        <function-ref name="get" scoped="" ref="0x41d79788"/>
        <function-ref name="led1Off" scoped="" ref="0x41d79868"/>
        <function-ref name="led0On" scoped="" ref="0x41d79be8"/>
        <function-ref name="set" scoped="" ref="0x41d79a28"/>
        <function-ref name="led2On" scoped="" ref="0x41d79948"/>
        <function-ref name="led2Off" scoped="" ref="0x41d79b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeMetadata" ref="0x41d78150" loc="49:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x41d78150"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41d78328"/>
        <function-ref name="readDone" scoped="" ref="0x41d78408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeVolumeManager" ref="0x41d78b00" loc="51:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41d78b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x41d78cd8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41d78db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ObjectTransfer" ref="0x41d78548" loc="50:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x41d78548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41d78720"/>
        <function-ref name="receiveDone" scoped="" ref="0x41d78800"/>
        <function-ref name="publish" scoped="" ref="0x41d788e0"/>
        <function-ref name="stop" scoped="" ref="0x41d789c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x41d76cc0" loc="39:../../Deluge/DelugeMetadataClientC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeMetadataClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x41d76cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41d76e98"/>
        <function-ref name="readDone" scoped="" ref="0x41d74010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x41d748d0" loc="39:../../Deluge/DelugeVolumeManagerClientC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeVolumeManagerClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41d748d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x41d74aa8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41d74b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41d73458" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41d73458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41d73630"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41d73710"/>
        <function-ref name="request" scoped="" ref="0x41d737f0"/>
        <function-ref name="granted" scoped="" ref="0x41d738d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41d739b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416bcce8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416bcce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416bcec0"/>
        <function-ref name="getPayload" scoped="" ref="0x416bb010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416bb0f0"/>
        <function-ref name="cancel" scoped="" ref="0x416bb1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x416bb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x416bb3f0" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x416bb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416bb5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x416bb6a8"/>
        <function-ref name="getPayload" scoped="" ref="0x416bb788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416bb868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x416bb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x416bba88" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416bba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416bbc60"/>
        <function-ref name="source" scoped="" ref="0x416bbd40"/>
        <function-ref name="address" scoped="" ref="0x416bbe20"/>
        <function-ref name="destination" scoped="" ref="0x416bbf00"/>
        <function-ref name="setSource" scoped="" ref="0x416ba010"/>
        <function-ref name="setDestination" scoped="" ref="0x416ba0f0"/>
        <function-ref name="type" scoped="" ref="0x416ba1d0"/>
        <function-ref name="setType" scoped="" ref="0x416ba2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x416ba390"/>
        <function-ref name="setGroup" scoped="" ref="0x416ba470"/>
        <function-ref name="localGroup" scoped="" ref="0x416ba550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x416ba6b0" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x416ba6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x416ba888"/>
        <function-ref name="noAck" scoped="" ref="0x416ba968"/>
        <function-ref name="wasAcked" scoped="" ref="0x416baa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41db5f28" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41db5f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41db2110"/>
        <function-ref name="getPayload" scoped="" ref="0x41db21f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41db22d0"/>
        <function-ref name="cancel" scoped="" ref="0x41db23b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41db2490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41db25d0" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41db25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41db27a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41db2888"/>
        <function-ref name="getPayload" scoped="" ref="0x41db2968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41db2a48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41db2b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41db2c68" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41db2c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41db2e40"/>
        <function-ref name="source" scoped="" ref="0x41db2f20"/>
        <function-ref name="address" scoped="" ref="0x41db1018"/>
        <function-ref name="destination" scoped="" ref="0x41db10f8"/>
        <function-ref name="setSource" scoped="" ref="0x41db11d8"/>
        <function-ref name="setDestination" scoped="" ref="0x41db12b8"/>
        <function-ref name="type" scoped="" ref="0x41db1398"/>
        <function-ref name="setType" scoped="" ref="0x41db1478"/>
        <function-ref name="isForMe" scoped="" ref="0x41db1558"/>
        <function-ref name="setGroup" scoped="" ref="0x41db1638"/>
        <function-ref name="localGroup" scoped="" ref="0x41db1718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41db1878" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41db1878"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41db1a50"/>
        <function-ref name="noAck" scoped="" ref="0x41db1b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x41db1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41dad860" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41dad860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41dada38"/>
        <function-ref name="getPayload" scoped="" ref="0x41dadb18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41dadbf8"/>
        <function-ref name="cancel" scoped="" ref="0x41dadcd8"/>
        <function-ref name="sendDone" scoped="" ref="0x41daddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41dadef8" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41dadef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41daa0e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41daa1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x41daa2a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41daa380"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41daa460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41daa5a0" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41daa5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41daa778"/>
        <function-ref name="source" scoped="" ref="0x41daa858"/>
        <function-ref name="address" scoped="" ref="0x41daa938"/>
        <function-ref name="destination" scoped="" ref="0x41daaa18"/>
        <function-ref name="setSource" scoped="" ref="0x41daaaf8"/>
        <function-ref name="setDestination" scoped="" ref="0x41daabd8"/>
        <function-ref name="type" scoped="" ref="0x41daacb8"/>
        <function-ref name="setType" scoped="" ref="0x41daad98"/>
        <function-ref name="isForMe" scoped="" ref="0x41daae78"/>
        <function-ref name="setGroup" scoped="" ref="0x41da9010"/>
        <function-ref name="localGroup" scoped="" ref="0x41da90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41da9250" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41da9250"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41da9428"/>
        <function-ref name="noAck" scoped="" ref="0x41da9508"/>
        <function-ref name="wasAcked" scoped="" ref="0x41da95e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41da38d0" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41da38d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41da3aa8"/>
        <function-ref name="getPayload" scoped="" ref="0x41da3b88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41da3c68"/>
        <function-ref name="cancel" scoped="" ref="0x41da3d48"/>
        <function-ref name="sendDone" scoped="" ref="0x41da3e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41da0010" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41da0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41da01e8"/>
        <function-ref name="getPayload" scoped="" ref="0x41da02c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41da03a8"/>
        <function-ref name="cancel" scoped="" ref="0x41da0488"/>
        <function-ref name="sendDone" scoped="" ref="0x41da0568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41da06a8" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41da06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41da0880"/>
        <function-ref name="source" scoped="" ref="0x41da0960"/>
        <function-ref name="address" scoped="" ref="0x41da0a40"/>
        <function-ref name="destination" scoped="" ref="0x41da0b20"/>
        <function-ref name="setSource" scoped="" ref="0x41da0c00"/>
        <function-ref name="setDestination" scoped="" ref="0x41da0ce0"/>
        <function-ref name="type" scoped="" ref="0x41da0dc0"/>
        <function-ref name="setType" scoped="" ref="0x41da0ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x41d9f010"/>
        <function-ref name="setGroup" scoped="" ref="0x41d9f0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x41d9f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x41da8b60" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x41da8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41da8d38"/>
        <function-ref name="getPayload" scoped="" ref="0x41da8e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41da8ef8"/>
        <function-ref name="cancel" scoped="" ref="0x41da7010"/>
        <function-ref name="sendDone" scoped="" ref="0x41da70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x41da7808" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41da7808"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x41da79e0"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x41da7ac0"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x41da7ba0"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x41da7c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41da8478" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41da8478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41da8650"/>
        <function-ref name="getPayload" scoped="" ref="0x41da8730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41da8810"/>
        <function-ref name="cancel" scoped="" ref="0x41da88f0"/>
        <function-ref name="sendDone" scoped="" ref="0x41da89d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x41da7250" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x41da7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41da7428"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41da7508"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41da75e8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41da76c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x416b8510" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ReprogrammerBaseC.ReplyReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x416b8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416b86e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x416b87c8"/>
        <function-ref name="getPayload" scoped="" ref="0x416b88a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416b8988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x416b8a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x416b81f8" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ReprogrammerBaseC.ReplyReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x416b81f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x416b83d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x416b8ba8" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ReprogrammerBaseC.ReplyReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416b8ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416b8d80"/>
        <function-ref name="source" scoped="" ref="0x416b8e60"/>
        <function-ref name="address" scoped="" ref="0x416b7010"/>
        <function-ref name="destination" scoped="" ref="0x416b70f0"/>
        <function-ref name="setSource" scoped="" ref="0x416b71d0"/>
        <function-ref name="setDestination" scoped="" ref="0x416b72b0"/>
        <function-ref name="type" scoped="" ref="0x416b7390"/>
        <function-ref name="setType" scoped="" ref="0x416b7470"/>
        <function-ref name="isForMe" scoped="" ref="0x416b7550"/>
        <function-ref name="setGroup" scoped="" ref="0x416b7630"/>
        <function-ref name="localGroup" scoped="" ref="0x416b7710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x416b68e0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="ReprogrammerBaseC.RetxTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x416b68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x416b33d8"/>
        <function-ref name="fired" scoped="" ref="0x416b4678"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x416b4d80"/>
        <function-ref name="isOneShot" scoped="" ref="0x416b4b28"/>
        <function-ref name="getdt" scoped="" ref="0x416b3888"/>
        <function-ref name="gett0" scoped="" ref="0x416b3630"/>
        <function-ref name="isRunning" scoped="" ref="0x416b48d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x416b6f08"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x416b30b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x416b41a0"/>
        <function-ref name="stop" scoped="" ref="0x416b4420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x416b2688" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="ReprogrammerBaseC.ReplyTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x416b2688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x416af248"/>
        <function-ref name="fired" scoped="" ref="0x416b14e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x416b1bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x416b1998"/>
        <function-ref name="getdt" scoped="" ref="0x416af6f8"/>
        <function-ref name="gett0" scoped="" ref="0x416af4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x416b1740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x416b2cb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x416b1f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x416b1010"/>
        <function-ref name="stop" scoped="" ref="0x416b1290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x416aed98" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x416aed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40472900"/>
            <typename><typedef-ref name="TMilli" ref="0x40472ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416aa400"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405160c0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405160c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40513820" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40515668" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40514800" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405144b8" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x405146a0" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40514010" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4051b1a8" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40513c68" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40515af8" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40516718" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405165c0" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40513200" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40514ea0" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x405130a0" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40516db0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40516c58" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405152a0" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x404c8648" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemLowPowerListening" loc="1:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
      <function command="" provided="0" name="setDefaultRemoteWakeupInterval" ref="0x40517ba0" loc="3:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40517a48" loc="3:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRemoteWakeupInterval" ref="0x4052e698" loc="6:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDelayAfterReceive" ref="0x4052eb10" loc="7:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDelayAfterReceive" ref="0x4052e1c0" loc="4:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x4052e068" loc="4:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40533310" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40533310"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405337f0" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x404d2ab0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d2958" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x405084a8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40508350" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405104a8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40510148" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40510328" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40511b08" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40511170" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40508dc8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40511010" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40520db8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40520910" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40423b68" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40422090" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x4052f898" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4052f898"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x4052fee8" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4052f898"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4052fd90" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4052f898"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x405076f8" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f2cb0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40507198" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f2cb0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405073b0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40507590" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40503370" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40503010" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405031f0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40505a78" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405063b8" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40506260" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40505170" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40506d50" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40505010" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x4050b010" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
              <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c6a48" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404c6c28" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404c6e08" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <function command="" provided="0" name="setAutoAck" ref="0x40527508" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x405271a0" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x405273a8" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x405297c8" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x405291e8" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x4052add0" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x40529088" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x40522640" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405224e8" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x40529ce0" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x40521ec0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x40521d68" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40521010" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40522e80" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x40526010" loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x4052a8c0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x4052a768" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x40527b28" loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x40521458" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x4051f1f8"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x4051f688"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x405218e8" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x40522038" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40522a50" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x4052a310" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
          <long>&#10; Change the PAN address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x404cde98" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x404cc2f8" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x404cc778" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x404cb010" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x404cbd00" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404ca1c8" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x404ccba0" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404ca908" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x404ca7b0" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x404cda70" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x404cb490" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x404cb8b8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4056c938" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4056cd20" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4056c1a8" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4056b530" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4056c568" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4056b138" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40564a48" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x40564dd8" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x405622a8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x40659710" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x406595b8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4064eca0" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4064b318" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4064b1c0" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4064b9e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4064b888" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40659010" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4041c390" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4041cc98" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x4041c7d0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x404957e0" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x404aabb0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4045b340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40496e70" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockRead" loc="42:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
      <function command="" provided="0" name="read" ref="0x406987c0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a read operation within a given volume.</short>
          <long>&#10; Initiate a read operation within a given volume. On SUCCESS, the&#10; &#60;code>readDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#10; @param addr starting address to begin reading.&#10; @param 'void* COUNT(len) buf' buffer to place read data.&#10; @param len number of bytes to read.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068e4f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40698280" loc="56:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40698438" loc="56:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40698658" loc="56:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068e4f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x40695578" loc="95:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a crc computation.</short>
          <long>&#10; Signals the completion of a crc computation.&#10;&#10; @param addr stating address.&#10; @param len number of bytes the crc was computed over.&#10; @param crc the resulting crc value.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068e4f8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40696db0" loc="95:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x40695010" loc="95:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068e4f8"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x40695210" loc="96:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40695408" loc="96:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x406967a0" loc="83:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a crc computation.</short>
          <long>&#10; Initiate a crc computation. On SUCCESS, the&#10; &#60;code>computeCrcDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @param addr starting address.&#10; @param len the number of bytes to compute the crc over.&#10; @parm crc initial CRC value&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068e4f8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40696218" loc="83:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x40696438" loc="83:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068e4f8"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x40696638" loc="84:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0x40695ad0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).</short>
          <long>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).&#10; @return Volume size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_len_t" ref="0x4068e4f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x406978b8" loc="67:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param addr starting address of read.&#10; @param 'void* COUNT(len) buf' buffer where read data was placed.&#10; @param len number of bytes read.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068e4f8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40697168" loc="67:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40697320" loc="67:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40697540" loc="67:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068e4f8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40697748" loc="68:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockWrite" loc="42:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <short>&#10; Write interface for the block storage abstraction described in&#10; TEP103.</short>
        <long>&#10; Write interface for the block storage abstraction described in&#10; TEP103.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-06-04 03:00:25 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x4069d168" loc="112:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a sync operation.</short>
          <long>&#10; Signals the completion of a sync operation. All written data is&#10; flushed to non-volatile storage after this event.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4069d010" loc="112:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x406a15a8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation. However, data is not&#10; guaranteed to survive a power-cycle unless a sync operation has&#10; been completed.&#10;&#10; @param addr starting address of write.&#10; @param 'void* COUNT(len) buf' buffer that written data was read from.&#10; @param len number of bytes written.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068e4f8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40692db8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x406a1010" loc="71:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406a1230" loc="71:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068e4f8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x406a1438" loc="72:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x406a1e98" loc="83:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate an erase operation.</short>
          <long>&#10; Initiate an erase operation. On SUCCESS, the&#10; &#60;code>eraseDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x4069e560" loc="91:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of an erase operation.</short>
          <long>&#10; Signals the completion of an erase operation.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4069e408" loc="91:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x406923f0" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a write operation within a given volume.</short>
          <long>&#10; Initiate a write operation within a given volume. On SUCCESS, the&#10; &#60;code>writeDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#60;p>&#10; Between two erases, no byte may be written more than once.&#10; &#10; @param addr starting address to begin write.&#10; @param 'void* COUNT(len) buf' buffer to write data from.&#10; @param len number of bytes to write.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068e4f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40682e90" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40692068" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40692288" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068e4f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x4069e9e8" loc="103:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a sync operation to finalize writes to the volume.</short>
          <long>&#10; Initiate a sync operation to finalize writes to the volume. A&#10; sync operation must be issued to ensure that data is stored in&#10; non-volatile storage. On SUCCES, the &#60;code>syncDone&#60;/code> event&#10; will signal completion of the operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ObjectTransfer" loc="39:../../Deluge/ObjectTransfer.nc">
      <documentation loc="36:../../Deluge/DelugePageTransfer.h">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="receive" ref="0x40690a38" loc="42:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x4067d6b0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x4067dc18"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40690470" loc="42:../../Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x4067d6b0"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x406906c8" loc="42:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x4067dc18"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x406908d0" loc="42:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x4068f010" loc="43:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40690e28" loc="43:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="publish" ref="0x40690010" loc="41:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x4067d6b0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x4067dc18"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x406839e8" loc="41:../../Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x4067d6b0"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x40683c40" loc="41:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x4067dc18"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x40683e48" loc="41:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4068f3d8" loc="45:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugePageTransfer" loc="44:../../Deluge/DelugePageTransfer.nc">
      <documentation loc="36:../../Deluge/DelugePageTransfer.h">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x406ae010" loc="51:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataAvailable" ref="0x406b1480" loc="46:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sourceAddr" ref="0x406b1328" loc="46:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="suppressMsgs" ref="0x406b1e38" loc="48:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x4067d6b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x406b1ce0" loc="48:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x4067d6b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedPage" ref="0x406af6b0" loc="49:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x4067d6b0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x4067c158"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x406af310" loc="49:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x4067d6b0"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x406af550" loc="49:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x4067c158"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setImgNum" ref="0x406afc20" loc="50:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_img_num" ref="0x406afac8" loc="50:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransferring" ref="0x406b1890" loc="47:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWorkingPage" ref="0x406a4e78" loc="45:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x4067d6b0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x4067c158"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x406a4ad8" loc="45:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x4067d6b0"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x406a4d18" loc="45:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x4067c158"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Crc" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
        <short>&#10; Compute the CRC-16 value of a byte array.</short>
        <long>&#10; Compute the CRC-16 value of a byte array.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="seededCrc16" ref="0x406ac198" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
          <short>&#10; Compute a generic CRC-16 using a given seed.</short>
          <long>&#10; Compute a generic CRC-16 using a given seed.  Used to compute CRC's&#10; of discontinuous data.&#10; &#10; @param startCrc An initial CRC value to begin with&#10; @param 'void* COUNT(len) buf' A pointer to a buffer of data&#10; @param len The length of the buffer&#10; @return The CRC-16 value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="startCrc" ref="0x406adc70" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x406ade28" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406ac030" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc16" ref="0x406ad350" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
          <short>&#10; Compute the CRC-16 value of a byte array.</short>
          <long>&#10; Compute the CRC-16 value of a byte array.&#10;&#10; @param   'void* COUNT(len) buf' A pointer to the buffer over which to compute CRC.&#10; @param   len The length of the buffer over which to compute CRC.&#10; @return  The CRC-16 value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406ad010" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406ad1f0" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x406fb710" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406fb5b8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x406fa220" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406fa0c8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x406faca8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406fab50" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x406ff9e8" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f2a50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406ff890" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x406f2200" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f2cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406f20a8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x406f4158" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f2cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x406f47f0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f2cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406f4698" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x406f1bd8" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f2cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406f1870" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406f1a78" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f2cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x406f2de8" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f2cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406f2a80" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406f2c88" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f2cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x406ee310" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406ee1b8" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x406eee48" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406eeb18" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x406eece8" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f27f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x406ef7c0" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406ef668" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x406fe688" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f2a50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406fe328" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x406fe528" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f2a50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x406fef00" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f2a50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVecUtils" loc="39:../../Deluge/BitVecUtils.nc">
      <documentation loc="33:../../Deluge/BitVecUtils.nc">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="indexOf" ref="0x407052b0" loc="50:../../Deluge/BitVecUtils.nc">
        <documentation loc="40:../../Deluge/BitVecUtils.nc">
          <short>&#10; Locates the index of the first '1' bit in a bit vector.</short>
          <long>&#10; Locates the index of the first '1' bit in a bit vector.&#10;&#10; @param result     the location of the '1' bit&#10; @param fromIndex  the index to start search for '1' bit&#10; @param bitVec     the bit vector&#10; @param length     the length of the bit vector in bits&#10; @return           &#60;code>SUCCESS&#60;/code> if a '1' bit was found;&#10;                   &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x406f7aa8" loc="50:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="fromIndex" ref="0x406f7cd8" loc="50:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="bitVec" ref="0x406f7f08" loc="51:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40705140" loc="51:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="printBitVec" ref="0x407049b8" loc="72:../../Deluge/BitVecUtils.nc">
        <documentation loc="65:../../Deluge/BitVecUtils.nc">
          <short>&#10; Generates an ASCII representation of the bit vector.</short>
          <long>&#10; Generates an ASCII representation of the bit vector.&#10;&#10; @param buf     the character array to place the ASCII string&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40704420" loc="72:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x40704640" loc="72:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40704850" loc="72:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="countOnes" ref="0x40705e80" loc="62:../../Deluge/BitVecUtils.nc">
        <documentation loc="53:../../Deluge/BitVecUtils.nc">
          <short>&#10; Counts the number of '1' bits in a bit vector.</short>
          <long>&#10; Counts the number of '1' bits in a bit vector.&#10;&#10; @param result  the number of '1' bits&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10; @return        &#60;code>SUCCESS&#60;/code> if the operation completed successfully;&#10;                &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x407058d8" loc="62:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x40705af8" loc="62:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40705d18" loc="63:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4078aec0" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4078aec0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40796038" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40796038"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40796520" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40796038"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40795010" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40796a48" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40795438" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40789010" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40789010"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40789178" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40789178"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40786548" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40789178"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40788138" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40788e00" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40789178"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40789178"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40788ab0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40789178"/></type-var>
          </variable>
          <variable name="dt" ref="0x40788ca0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40789178"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x407885a8" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x407869d8" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40789178"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407897a8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40789178"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40789650" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40789178"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40789c88" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x407a4560" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4047cb80"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4047cda8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x407a3b28" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4047ec80"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4047eea8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x407a3070" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4047f560"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4047f788"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x407a3678" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4047f560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4047f788"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x407a3520" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4047f560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4047f788"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x407b5168" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4047ec80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4047eea8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x407b5010" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4047ec80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4047eea8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x407a4b80" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4047cb80"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4047cda8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407a4a28" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4047cb80"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4047cda8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x407ae700" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x407aebd0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x407ae2e8" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x407ad0c8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x407b17f8" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40479d10"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x40480010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x407b1de8" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40479d10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40480010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x407b1c90" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40479d10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40480010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x407b4010" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407b4010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x407b3f20" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407b4ed0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407b4508" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407b4010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407b32f8" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x407b2398" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407b4a90" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407b4010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x407b4938" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407b4010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407b3700" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407b3af8" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x4079a610" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4079a610"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x407a9db0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x407a9520" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4079ab00" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4079a610"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x407a8350" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x407a81f8" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x407a87e0" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407aa8e0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x407aa4c0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x407a9988" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407aa090" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4079a610"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4079af20" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4079a610"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407aace8" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407a90f8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4089a4c8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4089a188" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4089a368" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40897190" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40898d78" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40897010" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40898818" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40899168" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40899010" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40899e00" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40899aa8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40899ca0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x408d29e8" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408d2890" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x408eb768" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408eb610" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x408d21a8" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408d2ef8" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x408e83e0" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408e83e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x408e8548" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408e8548"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x408e4748" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408e8548"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e45f0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x408e5200" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e50a8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x408e8bd0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e8a78" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408e5cc0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408e8548"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e5950" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x408e5b60" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408e8548"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x408f7de0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f7a48" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x408f7c80" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x408f6978" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f6820" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x408f7570" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x408e0dd8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x408e0c80" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x408fe168" loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408fe010" loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x408ff010" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40900e78" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x40900168" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x40900010" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x408efa10" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x408ef8b8" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x40900760" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x40900608" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x408ff8c0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ff768" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x40902b38" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f2cb0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x409027c0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f2cb0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x409029d8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x408eed90" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x408eea38" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x408eec30" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x40905d48" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x409059c8" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x40905be8" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x408ed438" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x4012a638"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x408ed2e0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x409053d0" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40905278" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x408ee570" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x408ee418" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x408edb00" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x408ed9a8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x408faab8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408fa960" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x40904e20" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40904a88" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x40904cc0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x408fa168" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408fa010" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x408fbab8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408fb720" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x408fb958" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x408f9438" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f92e0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x40903510" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409033b8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4090b480" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4090cac8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4090c4c8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4090b010" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4090bb78" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4092a358" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4092a010" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x4092a1f8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4092ae80" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x40927598" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40929d98" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40927250" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40927430" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x409298a8" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40929550" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40929748" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x4092a9a8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x4092a850" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4092c638" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4092cb00" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x409233d8" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40923260" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x40926d68" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x404d0060"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x404cf068"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40926bd0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x40923ea0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x404cf728"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x404ce670"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40923d08" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x40915010" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x409132d0" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x40915e58" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x409160c8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x40916a60" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x40915528" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x409159e8" loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x409165d0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
          <long>&#10; Signals that the voltage regulator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x40939648" loc="71:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x409207d8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x409391e0" loc="66:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x40939088" loc="66:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x40920bf0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x40921cd8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x40921b80" loc="45:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x40920350" loc="51:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x409201f8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40959270" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40959270"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40959720" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40959ed0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40959270"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40959ba0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40959d70" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40959270"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x4097a168" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404c7d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4097a010" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x4097a800" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404c7d10"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4097a6a8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x4096fed8" loc="48:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x4051f1f8"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x4051f688"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40964cc8" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f2cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40963558" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40963158" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f2a50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x409647d8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f2a50"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f2cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40964470" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f2a50"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40964678" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f2cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x40979ac8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404c7d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x4097ec78" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404c7d10"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x4097e438" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4097e910" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4097eb10" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x4097da88" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404c7d10"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x4097d248" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4097d720" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4097d920" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40966470" loc="68:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40966010" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x40969b58" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x409695f0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x409d32d8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404948e0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40494b08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x409d5ca0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40486c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40486e58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x409d5b48" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40486c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40486e58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x409d47e8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4048d398"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4048d5c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x409d75c0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40482aa8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40482cd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x409d4df8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4048d398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4048d5c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x409d4ca0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4048d398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4048d5c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x409d38e8" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404948e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40494b08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x409d3790" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404948e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40494b08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x409d5010" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4048b2c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4048b4e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x409d7ae0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40486c30"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40486e58"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x409d5658" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40482aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40482cd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x409d5500" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40482aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40482cd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x409d4328" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4048b2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4048b4e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x409d41d0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4048b2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4048b4e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x409d9af8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409d9af8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x409ec650" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x409ec4f8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x409edc30" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x409ef010" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409d9af8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x409efb60" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409d9af8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x409efa08" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409d9af8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x409ed010" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x409ec0c8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x409ef588" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409d9af8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x409ef430" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409d9af8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x409ed418" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x409ed810" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40adbe20" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40ad57e8" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40ad53a0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40ad5248" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40adb918" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40ae5c58" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40ae3ba0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40ae5860" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x40ae36d8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x40ae3580" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40ae5458" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40ae30c8" loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40af6a70" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x40b3fdb8" loc="24:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x40b3c2d0" loc="31:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x40b3c7b0" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x40b4c7a8" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b4c448" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40b4c648" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40b4aef0" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b4a990" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40b4ab90" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40b4ad88" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40b4a170" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404c7d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b4bdb8" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40b4a010" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x40b4db88" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404c7d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b4d828" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40b4da28" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40b4b570" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b4b010" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40b4b210" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40b4b408" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40b5cc08" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40b5c698" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40b5c8b0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40b5caa0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40b5a298" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40b59ae0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40b59cf8" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40b59ee8" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40b5a128" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40b5f848" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40b5f6f0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x40bbeab0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40bbe958" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x40bbb6e8" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40bbb590" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40bbb010" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40bbbd30" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40bbbbd8" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40bae548" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40bcdc38" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40bd0dd8" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40bcc288" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40bcc130" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40bae0f8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40bced48" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40bcebf0" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40bd0010" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40bade48" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40baedd8" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40bc9318" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40bc91c0" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40bd0468" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40bccc10" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40bccab8" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40bcb4b0" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40bcd7f0" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40bcd698" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40bcbd78" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40bce380" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40bce228" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40bad390" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40bad238" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40bd09b8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40bd0860" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40bcd210" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40bcc6b0" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40bcb038" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40bcb908" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40bce7b8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40bae970" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40bad958" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40bad800" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40bc6070" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40bc6570" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40c068f8" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40c06de0" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40c22010" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40c225e8" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40c1f2c0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40c24dd8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40c40ca8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40c215d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40c40b50" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40c215d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40c1d8b8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40c40010" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40c215d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40c1de20" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40c215d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40c405c0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40c215d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x40cbc650" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40cf3750" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40cf31d0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x40cf35f0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x40cf6cf8" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x40cf6878" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40cf6720" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x40cd5918" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cd57c0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40cd5010" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cd9e70" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40cd4b08" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cd49b0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40cd4220" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cd40c8" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerCycle" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PowerCycle.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PowerCycle.nc">
        <short>&#10; Manage the CC2420's duty cycle and power management&#10; </short>
        <long>&#10; Manage the CC2420's duty cycle and power management&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSleepInterval" ref="0x40e7b778" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; </short>
          <long>&#10; @return the sleep interval in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="detected" ref="0x40e7bb60" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; </short>
          <long>&#10; @deprecated Should be removed in the future when the PowerCycle&#10;     component does packet-level detects and is in full control of radio&#10;     power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSleepInterval" ref="0x40e7b278" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; Set the sleep interval, in binary milliseconds&#10; </short>
          <long>&#10; Set the sleep interval, in binary milliseconds&#10; @param sleepIntervalMs the sleep interval in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x40e7b120" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PowerCycle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="VolumeId" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x40fa7390" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
        <interfacedef-ref qname="VolumeId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068fe90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StorageMap" loc="39:../../Deluge/StorageMap.nc">
      <documentation loc="32:../../Deluge/StorageMap.nc">
        <short>&#10; An abstraction to map volume addresses to physical addresses.</short>
        <long>&#10; An abstraction to map volume addresses to physical addresses.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-01-25 00:50:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPhysicalAddress" ref="0x40fa3628" loc="47:../../Deluge/StorageMap.nc">
        <documentation loc="41:../../Deluge/StorageMap.nc">
          <short>&#10; Get the physical address of a volume address.</short>
          <long>&#10; Get the physical address of a volume address.&#10;&#10; @param addr the volume addres.&#10; @return the physical address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="StorageMap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40fa34d0" loc="47:../../Deluge/StorageMap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068e270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbVolume" loc="18:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
        <short>&#10; AT45DB interface for managing flash volumes.</short>
        <long>&#10; AT45DB interface for managing flash volumes.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="volumeSize" ref="0x40fceca0" loc="30:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Find the flash volume size&#10; </short>
          <long>&#10; Find the flash volume size&#10; @return Flash volume size in pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remap" ref="0x40fce788" loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="19:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Map a volume page to the corresponding page in the whole flash&#10; </short>
          <long>&#10; Map a volume page to the corresponding page in the whole flash&#10; @return What flash page this volume page maps to, or &#10;   AT45_MAX_PAGES for invalid volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="volumePage" ref="0x40fce630" loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45db" loc="63:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. This provides&#10; reasonably high-level operations on AT45DB pages, including automatic&#10; buffer management. Writes are only guaranteed to happen after a flush,&#10; flushAll, sync or syncAll.&#10; &#60;p>&#10; When buffers are flushed to the flash (either explicitly or implicitly),&#10; their contents are checked to ensure the write was succesful. If this&#10; check fails, the flush is retried some number of times. If this fails&#10; more than some number of times, all access to the flash is disabled&#10; (all requests will report FAIL in their completion event).&#10; &#60;p>&#10; This interface only supports one operation at a time - components offering&#10; At45db should use the &#60;code>Resource&#60;/code> interface for resource sharing.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x40ff4910" loc="173:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="168:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a read operation.</short>
          <long>&#10; Signal completion of a read operation. The buffer passed to read&#10; is implictly returned.&#10; @param error SUCCESS for a successful read, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40ff47b8" loc="173:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x40ff6188" loc="136:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a sync or syncAll operation.</short>
          <long>&#10; Signal completion of a sync or syncAll operation. &#10; @param error SUCCESS if the sync was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40ff6030" loc="136:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x40ff5280" loc="154:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="150:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an flush or flushAll operation.</short>
          <long>&#10; Signal completion of an flush or flushAll operation. &#10; @param error SUCCESS if the flush was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40ff5128" loc="154:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40ff4180" loc="166:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="156:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Read some data from an AT45DB page.</short>
          <long>&#10; Read some data from an AT45DB page. readDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40ff5710" loc="166:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40ff5970" loc="166:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40ff5db8" loc="167:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40ff4010" loc="167:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40ffa010" loc="80:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a write operation.</short>
          <long>&#10; Signal completion of a write operation. The buffer passed to write&#10; is implictly returned.&#10; @param error SUCCESS for a successful write, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40ffbdf8" loc="80:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copyPage" ref="0x40ffa838" loc="91:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Copy one flash page to another.</short>
          <long>&#10; Copy one flash page to another. copyDone will be signaled. If page&#10; from had been modified, it is first flushed to flash. Page&#10; &#60;code>to&#60;/code> will only actually be written when the buffer holding&#10; it is flushed (see flush, flushAll, sync, syncAll).&#10;&#10; @param from Flash page to copy. Must be less than AT45_MAX_PAGES.&#10; @param to Flash page to overwrite. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="from" ref="0x40ffa4e0" loc="91:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
          <variable name="to" ref="0x40ffa6d8" loc="91:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x40ff9810" loc="111:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Erase an AT45DB page.</short>
          <long>&#10; Erase an AT45DB page. eraseDone will be signaled.&#10; @param page Flash page to erase. Must be less than AT45_MAX_PAGES.&#10; @param eraseKind How to handle the erase:&#10;   &#60;br>&#60;code>AT45_ERASE&#60;/code>: actually erase the page in the flash chip&#10;   &#60;br>&#60;code>AT45_DONT_ERASE&#60;/code>: don't erase the page in the flash &#10;     chip, but reserve a buffer for this page - subsequent writes to this&#10;     page will be faster because the old contents need not be read&#10;   &#60;br>&#60;code>AT45_PREVIOUSLY_ERASED&#60;/code>: assume the page was previously&#10;     erased in the flash and reserve a buffer for this page - subsequent&#10;     writes to page will be faster because the old contents need not be &#10;     read and the write itself will be faster&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40ff9490" loc="111:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
          <variable name="eraseKind" ref="0x40ff96b0" loc="111:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x40ff8058" loc="116:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an erase operation.</short>
          <long>&#10; Signal completion of an erase operation. &#10; @param error SUCCESS if the erase was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40ff9ee8" loc="116:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x40ff1060" loc="194:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a CRC computation.</short>
          <long>&#10; Signal completion of a CRC computation.&#10; @param error SUCCESS if the CRC was successfully computed, FAIL otherwise&#10; @param crc CRC value (valid only if error == SUCCESS)&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40ff2cd0" loc="194:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x40ff2ec0" loc="194:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40ff6770" loc="144:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. flushDone&#10; will be signaled once the flush has been initiated. If the page is not&#10; in the buffers, flushDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40ff6618" loc="144:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="syncAll" ref="0x40ff8b58" loc="131:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flushAll" ref="0x40ff6c78" loc="149:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="145:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. flushDone&#10; will be signaled once the flushes have been initiated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40ffb850" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Write some data to an AT45DB page.</short>
          <long>&#10; Write some data to an AT45DB page. writeDone will be signaled.&#10; @param page Flash page to write to. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40ffedd0" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40ffb068" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40ffb4b0" loc="74:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40ffb6e0" loc="74:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x40ff8628" loc="125:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. If the page is not&#10; in the buffers, syncDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40ff84d0" loc="125:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x40ff2630" loc="187:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h).</short>
          <long>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h). computeCrcDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous computeCrc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40ff4de8" loc="187:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40ff2068" loc="187:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x40ff22a8" loc="188:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x40ff24c0" loc="188:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="copyPageDone" ref="0x40ff9010" loc="96:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a copyPage operation.</short>
          <long>&#10; Signal completion of a copyPage operation. &#10; @param error SUCCESS if the copy was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40ffadf8" loc="96:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbBlockConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <short>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; </short>
        <long>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <function event="" provided="0" name="npages" ref="0x40fed070" loc="50:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Return size of a config volume in pages (half of the actual block)&#10; </short>
          <long>&#10; Return size of a config volume in pages (half of the actual block)&#10; @return Config volume size&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flipped" ref="0x40fee038" loc="30:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Query which half of the block is used by the current config state&#10; </short>
          <long>&#10; Query which half of the block is used by the current config state&#10; @return TRUE for 2nd half, FALSE for 1st half&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isConfig" ref="0x40ffcbd8" loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Check if this block is a config volumes&#10; </short>
          <long>&#10; Check if this block is a config volumes&#10; @return TRUE for config volumes, FALSE for block volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeHook" ref="0x40fee4b8" loc="37:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Hook called by block storage just before the start of each write&#10; </short>
          <long>&#10; Hook called by block storage just before the start of each write&#10; @return TRUE to delay the write until &#60;code>writeContinue&#60;/code>&#10;    is called, FALSE to proceed immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="remap" ref="0x40fed6c0" loc="58:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; </short>
          <long>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; @param page Volume-relative page&#10; @return Actual flash page for &#60;code>page&#60;/code>&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40fed568" loc="58:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeContinue" ref="0x40feeb28" loc="44:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; </short>
          <long>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; @param error SUCCESS to continue write, anything else to abort write &#10;   returning that error code&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40fee9d0" loc="44:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4103f340" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x4103fd28" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x41043df8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4103f850" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4103e328" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45db" loc="23:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <short>&#10; HPL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HPL for Atmel's AT45DB family of serial dataflash chips. &#10; Provides access to all basic AT45DB operations plus operations to &#10; wait for the flash to go idle or finish a comparison. See the AT45DB&#10; family datasheets for full details on these operations.&#10; &#60;p>&#10; This interface only supports one operation at a time.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x41068eb8" loc="141:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="137:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been read from the buffer.</short>
          <long>&#10; Signaled when data has been read from the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitCompare" ref="0x41070d98" loc="41:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a buffer-flash comparison to complete.</short>
          <long>&#10; Wait for a buffer-flash comparison to complete. waitCompareDone will&#10; be signaled when that occurs.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="crcDone" ref="0x41066708" loc="163:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="159:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when CRC has been computed.</short>
          <long>&#10; Signaled when CRC has been computed.&#10; @param computedCrc CRC value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="computedCrc" ref="0x410665b0" loc="163:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x4106de28" loc="79:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when flush command sent (use waitIdle to detect when&#10; flush command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x410688c8" loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read directly from flash.</short>
          <long>&#10; Read directly from flash. readDone will be signaled.&#10; @param cmd AT45_C_READ_CONTINUOUS or AT45_C_READ_PAGE. When the end of&#10;   a page is read, AT45_C_READ_CONTINUOUS continues on the next page,&#10;   while AT45_C_READ_PAGE continues at the start of the same page.&#10; @param page Page to read from&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x4106abd0" loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x4106ade0" loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x41068068" loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x41068520" loc="135:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x41068750" loc="135:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x4106b2a0" loc="100:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="95:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Erase a flash page.</short>
          <long>&#10; Erase a flash page. eraseDone will be signaled.&#10; @param cmd must be AT45_C_ERASE_PAGE&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x4106cf10" loc="100:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x4106b140" loc="100:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x41065ed0" loc="185:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="181:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been written to the buffer.</short>
          <long>&#10; Signaled when data has been written to the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitIdleDone" ref="0x41070978" loc="35:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the flash is idle.</short>
          <long>&#10; Signaled when the flash is idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitCompareDone" ref="0x4106f440" loc="47:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the buffer-flash comparison is complete.</short>
          <long>&#10; Signaled when the buffer-flash comparison is complete.&#10; @param compareOk TRUE if the comparison succeeded, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="compareOk" ref="0x4106f2e8" loc="47:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x4106b718" loc="106:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when erase command sent (use waitIdle to detect when&#10; erase command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x41070458" loc="30:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations).</short>
          <long>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations). You should use waitComapre if you are waiting for a&#10; comparison to complete. waitIdleDone will be signaled when the operation&#10; is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x4106d878" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write a buffer to a flash page.</short>
          <long>&#10; Write a buffer to a flash page. flushDone will be signaled.&#10; @param cmd AT45_C_FLUSH_BUFFER1 to write buffer 1 to flash,&#10;   AT45_C_FLUSH_BUFFER2 to write buffer 2 to flash,&#10;   AT45_C_QFLUSH_BUFFER1 to write buffer 1 to flash w/o erase&#10;   (page must have been previously erased),&#10;   AT45_C_QFLUSH_BUFFER2 to write buffer 2 to flash w/o erase&#10;   (page must have been previously erased),&#10; @param page Page to write (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x4106d508" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x4106d718" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x41065870" loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="165:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write some data to a flash buffer, and optionally the flash itself.</short>
          <long>&#10; Write some data to a flash buffer, and optionally the flash itself. &#10; writeDone will be signaled.&#10; @param cmd One of AT45_C_WRITE_BUFFER1/2 or AT45_C_WRITE_MEM_BUFFER1/2&#10;   to write respectively to buffer 1/2, or to buffer 1/2 and the &#10;   specified main memory page.&#10; @param page Page to write when cmd is AT45_C_WRITE_MEM_BUFFER1/2&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x41066b28" loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x41066d38" loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x41065010" loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x410654c8" loc="179:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x410656f8" loc="179:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="compareDone" ref="0x4106cad8" loc="93:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when compare command sent (use waitCompare to detect when&#10; compare command completes and find out comparison result)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compare" ref="0x4106c5e0" loc="87:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compare a page from flash with a buffer.</short>
          <long>&#10; Compare a page from flash with a buffer. compareDone will be signaled.&#10; @param cmd AT45_C_COMPARE_BUFFER1 to compare buffer 1, &#10;   AT45_C_COMPARE_BUFFER2 to compare buffer 2&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x4106c270" loc="87:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x4106c480" loc="87:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc" ref="0x41067d60" loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).</short>
          <long>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).&#10; crcDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to compute CRC from buffer 1,&#10;   AT45_C_READ_BUFFER2 to compute CRC from buffer 2&#10; @param page ignored (reserved for future use)&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous crc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x41067320" loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x41067530" loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x41067790" loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x410679d0" loc="158:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x41067be8" loc="158:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readBuffer" ref="0x4106a5d0" loc="119:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="108:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read from a flash buffer.</short>
          <long>&#10; Read from a flash buffer. readDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to read from buffer 1,&#10;   AT45_C_READ_BUFFER2 to read from buffer 2&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x4106bb58" loc="119:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x4106bdb8" loc="119:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x4068c818"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4106a280" loc="120:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x4106a460" loc="120:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fillDone" ref="0x4106d0f8" loc="61:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when fill command sent (use waitIdle to detect when&#10; fill command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x4106fc18" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read a page from flash into a buffer.</short>
          <long>&#10; Read a page from flash into a buffer. fillDone will be signaled.&#10; @param cmd AT45_C_FILL_BUFFER1 to read into buffer 1, &#10;   AT45_C_FILL_BUFFER2 to read into buffer 2&#10; @param page Page to read (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x4106f8a8" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x4106fab8" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x4068c570"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x41072bb0" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x41072bb0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x41072d18" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x41072d18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x41061348" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x41072d18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x410611f0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x41072d18"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45dbByte" loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <short>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.</short>
        <long>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.&#10; &#60;p>&#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this directory provides a generic HPL&#10; implementation (HplAt45dbByteC) which can easily be used to build an&#10; AT45DB HPL by connecting it to a byte-at-a-time SPI interface, and an&#10; implementation of the operations of this interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCompareStatus" ref="0x410b3a68" loc="42:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; This command may be called immediately after idle is signaled.</short>
          <long>&#10; This command may be called immediately after idle is signaled. It&#10; must report the flash's current compare status.&#10; @return TRUE if the last compare succeeded, FALSE if it failed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x410b3138" loc="31:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Wait for the flash chip to report that it is idle.</short>
          <long>&#10; Wait for the flash chip to report that it is idle. This command is&#10; called immediately after sending a status request command to the&#10; flash, so it is sufficient to wait for the flash's data pin to go&#10; high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idle" ref="0x410b35d8" loc="35:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Signaled when the flash chip is idle.</short>
          <long>&#10; Signaled when the flash chip is idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="select" ref="0x410b3f08" loc="47:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Assert the flash's select pin.</short>
          <long>&#10; Assert the flash's select pin.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="deselect" ref="0x410b2338" loc="52:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Deassert the flash's select pin.</short>
          <long>&#10; Deassert the flash's select pin.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x411893e0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411893e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x41189b88" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411893e0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x41189a30" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411893e0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4118de40" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4118de40"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x4118ae20" loc="69:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4118a320" loc="55:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4118de40"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4118a960" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4118de40"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x4118a808" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4118de40"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x4117f980" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x4117f808" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x4117e570" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4117e010" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x4117e200" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x4117e408" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x4117ed30" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x4117f038" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x4117e998" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x4117f400" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x4119fb40" loc="90:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x4119f740" loc="85:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4119f298" loc="80:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x411a2988" loc="68:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x411a2e78" loc="74:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x411fd630" loc="45:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x411f9b70" loc="69:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x411f9a18" loc="69:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x411f8168" loc="75:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x411f8010" loc="75:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x411f9010" loc="57:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x411fde90" loc="57:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x411f8910" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x411f85d0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x411f87b0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x411fda38" loc="50:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x411f95c0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x411f9468" loc="63:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x411f8d90" loc="88:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NetProg" loc="45:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
        <short>&#10; Top level interface for network programming integration with&#10; applications.</short>
        <long>&#10; Top level interface for network programming integration with&#10; applications.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="programImageAndReboot" ref="0x412605a0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot into the image specified by &#60;code>imageAddr&#60;/code>.</short>
          <long>&#10; Reboot into the image specified by &#60;code>imageAddr&#60;/code>. This&#10; assumes that an image is present into the external flash&#10; at the &#60;code>imageAddr&#60;/code> address.&#10;&#10; @param imageAddr  Address in external flash&#10; @return        &#60;code>FAIL&#60;/code> if the reboot command fails to &#10;                complete, does not return, otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imageAddr" ref="0x41260448" loc="64:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4012b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reboot" ref="0x41261ef8" loc="53:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot the node.</short>
          <long>&#10; Reboot the node.&#10;&#10; @return  Does not return.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="InternalFlash" loc="43:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
        <short>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.</short>
        <long>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Prabal Dutta &#60;prabal@cs.berkeley.edu> (Port to T2)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x41251010" loc="56:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
          <short>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.</short>
          <long>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address from which to read.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer into which read bytes are&#10;               placed.&#10; @param   size The number of bytes to read.&#10; @return  SUCCESS if the bytes were successfully read.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x41254a30" loc="56:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x41254be8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x41254de8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x41251ea0" loc="68:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
          <short>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.</short>
          <long>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address to which to write.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer from which bytes are read.&#10; @param   size The number of bytes to write.&#10; @return  SUCCESS if the bytes were successfully written.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x41251980" loc="68:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x41251b38" loc="68:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x41251d38" loc="68:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReprogramGuard" loc="1:../../Deluge/ReprogramGuard.nc">
      <function event="" provided="0" name="okToProgramDone" ref="0x412853f8" loc="4:../../Deluge/ReprogramGuard.nc">
        <interfacedef-ref qname="ReprogramGuard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ok" ref="0x412852a0" loc="4:../../Deluge/ReprogramGuard.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="okToProgram" ref="0x41288ea8" loc="3:../../Deluge/ReprogramGuard.nc">
        <interfacedef-ref qname="ReprogramGuard"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x412a9828" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x412a9330" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x412a9d18" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x412a43a8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x412a43a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x412a4878" loc="58:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x412a3060" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x412a43a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x412a4d18" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x412a4ee8" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x412a43a8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x41298258" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x41299a38" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x41299c60" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x41299e88" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x412980e8" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x41297648" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41298b78" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x41298d68" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x41297010" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x41297268" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x412974d0" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x4129c5c8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4129fd08" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x4129c010" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x4129c238" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x4129c458" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4129b618" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x4129b090" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4129cd28" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x4129cf18" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x4128d290" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x412949a8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x404706b0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x40470938"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x412cb738" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x412cb5e0" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x4128d750" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x4128f470" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x41291010" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x404706b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40470938"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x41294e68" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x404706b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40470938"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x4128fcc0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x412cb090" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x412cbbe0" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x4128f870" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x4128e568" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x4128e138" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x4128e9a0" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x4128dbc0" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x41291b28" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40474900"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40474ca8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x412919d0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40474900"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40474ca8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x4128ee68" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x412914f8" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40474900"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40474ca8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x4128f010" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x412ca358" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x412ca200" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x412ef850" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeMetadata" loc="10:../../Deluge/DelugeMetadata.nc">
      <documentation loc="1:../../Deluge/DelugeMetadata.nc">
        <short>&#10;  An interface for obtaining the identification data of an&#10;  image.</short>
        <long>&#10;  An interface for obtaining the identification data of an&#10;  image. The pointer returned by readDone will be destroyed by the&#10;  next read.&#10;&#10;  @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;  @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x413719a0" loc="12:../../Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x41371848" loc="12:../../Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4136e370" loc="13:../../Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:84" alignment="I:1"><nx_struct-ref name="DelugeIdent" ref="0x406461a0"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x406768e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x41371d80" loc="13:../../Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
          <variable name="ident" ref="0x4136e010" loc="13:../../Deluge/DelugeMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:84" alignment="I:1"><nx_struct-ref name="DelugeIdent" ref="0x406461a0"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x406768e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4136e208" loc="13:../../Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeVolumeManager" loc="37:../../Deluge/DelugeVolumeManager.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManager.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="erase" ref="0x4136d168" loc="39:../../Deluge/DelugeVolumeManager.nc">
        <interfacedef-ref qname="DelugeVolumeManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x4136d010" loc="39:../../Deluge/DelugeVolumeManager.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x4136d6a8" loc="40:../../Deluge/DelugeVolumeManager.nc">
        <interfacedef-ref qname="DelugeVolumeManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x4136d550" loc="40:../../Deluge/DelugeVolumeManager.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x414043a0" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41404010" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x41404240" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x414050c8" loc="15:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x41405998" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41405620" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40501f20"/>
                <typename><typedef-ref name="message_t" ref="0x404ffcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x41405838" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x4143a368" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x41440ed0" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x414009b0" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x4143f698" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x4143e790" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4143e638" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x4143fbc0" loc="79:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x4143f168" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4143f010" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x4143ec98" loc="100:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x4143e138" loc="85:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x413ff970" loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x413fd010" loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x413ff360" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x413ff208" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x413fd748" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x413fd5f0" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x414018d0" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x41441168" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41441010" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x41441800" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x414416a8" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x414ae480" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x414ae130" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x414ae320" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x414f5908" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x414f57b0" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x414f3170" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x414f5dc0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x414f3010" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x414adcc0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x414f2010" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x414f3a98" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x414f3c88" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x414f3e80" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x414f52f8" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x414ad370" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x414aed90" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x414ad010" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4012b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x414ad208" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x414e02d8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x414e0180" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x414e0b70" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x414e0808" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x414e0a10" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x414d2210" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x414d39b0" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x414d17e0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x414d1688" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x414d2ec8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x414d3138" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x414d3578" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x414d3df0" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4041e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x414d2610" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4041a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x414d2b18" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x414d29c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x414d12b0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4012ab70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
